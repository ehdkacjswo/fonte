is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,15, limitations under the License.
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,18,ackage org.apache.commons.math.linear;
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,20,** Class representing a union of Gershgorin circles.
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,21, <p>Gershgorin circles are bounding areas where eigenvalues must lie.
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,22, They are used as starting values for eigen decomposition algorithms.
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,23," In the real case, Gershgorin circles are simple intervals.</p>"
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,24, @see EigenDecompositionImpl
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,25, @version $Revision$ $Date$
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,26, @since 2.0
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,28,lass GershgorinCirclesUnion implements Comparable<GershgorinCirclesUnion> {
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,30,** Lower bound of the interval. */
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,31,rivate double low;
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,33,** Higher bound of the interval. */
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,34,rivate double high;
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,36,** Create a simple Gershgorin circle.
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,37, @param d diagonal element of the current row
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,38, @param sum sum of the absolute values of the off-diagonal elements
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,39, of the current row
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,41,"ublic GershgorinCirclesUnion(final double d, final double sum) {"
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,42,ow  = d - sum;
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,43,igh = d + sum;
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,47, Get the lower bound of the interval.
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,48, @return lower bound of the interval
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,50,ublic double getLow() {
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,51,eturn low;
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,55, Get the higher bound of the interval.
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,56, @return higher bound of the interval
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,58,ublic double getHigh() {
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,59,eturn high;
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,63, Check if a Gershgorin circles union intersects instance.
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,64, @param other Gershgorin circles union to test against instance
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,65, @return true if the other Gershgorin circles union intersects instance
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,67,ublic boolean intersects(final GershgorinCirclesUnion other) {
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,68,eturn (other.low <= this.high) && (other.high >= this.low);
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,72, Swallow another Gershgorin circles union.
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,73, <p>Swallowing another Gershgorin circles union changes the
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,74, instance such that it contains everything that was formerly in
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,75, either circles union. It is mainly intended for circles unions
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,76, that {@link #intersects(GershgorinCirclesUnion) intersect}
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,77, each other beforehand.</p>
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,78, @param other Gershgorin circles union to swallow
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,80,ublic void swallow(final GershgorinCirclesUnion other) {
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,81,"ow  = Math.min(low,  other.low);"
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,82,"igh = Math.max(high, other.high);"
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,85,** Compare another Gershgorin circles union in interval start order.
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,86, @param other Gershgorin circles union to compare to instance
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,87," @return a negative, zero or positive value depending on the other"
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,88," union starting before, at same location or after instance"
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,90,ublic int compareTo(GershgorinCirclesUnion other) {
False,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,src/java/org/apache/commons/math/linear/GershgorinCirclesUnion.java,91,"eturn Double.compare(low, other.low);"
