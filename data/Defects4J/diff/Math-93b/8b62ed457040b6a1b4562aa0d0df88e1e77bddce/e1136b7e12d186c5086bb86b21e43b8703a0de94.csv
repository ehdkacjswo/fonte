is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,59, An array of double primitives which can expand as needed.
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,59,* <p>
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,60,* A variable length double array implementation and extension of
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,61,* ExpandableDoubleArray which automatically handles expanding and
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,62,* contracting double arrays.
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,63,* </p>
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,65,* <p>
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,66,* This class extends the functionality of ExpandableDoubleArray and
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,67,* inherits the expansion parameters from that class.  If a developer
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,68,* instantiates a ContractableDoubleArray and only adds values to
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,69,"* that instance, the behavior of this class is no different from"
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,70,"* the behavior of the super-class ExpandableDoubleArray.  If, on the"
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,71,"* other hand, elements are removed from the array, this implementation"
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,72,* tests an additional parameter <code>contractionCriteria</code>.  The
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,73,* <code>contractionCriteria</code> dictates when this implementation
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,74,* will contract the size of the internal storage array to
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,75,* the number of elements + 1.  This check is performed after every
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,76,* operation that alters the number of elements in the array.
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,77,* </p>
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,79,* <p>
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,80,* Note that the contractionCriteria must always be greater than the
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,81,* expansionFactor.  If this were not the case (assume a
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,82,* contractionCriteria of 1.5f and a expansionFactor of 2.0f) an
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,83,* endless series of expansions and contractions would occur.  If the
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,84,* length of this array is highly varied over time it is a good idea
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,85,* to trade efficient memory usage for performance.  Each time an array
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,86,* is expanded or contracted the meaningful portions of the internal
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,87,* storage array are copied to a new array and the reference to the
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,88,* internal storage array is swapped.
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,89,* </p>
False,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,153, Adds an element to the end of this expandable array
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,183,* <p>
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,184,* Adds an element to the end of this expandable array and
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,185,* discards a value from the front of the array.  This method
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,186,* has the effect of adding a value to the end of the list
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,187,* and discarded an element from the front of the list.
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,188,* </p>
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,190,* <p>
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,191,"* When an array rolls it actually ""scrolls"" the element array in"
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,192,* the internal storage array.  An element is added to the end of the
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,193,"* array, and the first element of the array is discard by incrementing"
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,194,* the starting index of the element array within the internal
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,195,* storage array.  Over time this will create an orphaned prefix
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,196,* to the element array within the internal storage array.  If this
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,197,"* function is called frequently, this orphaned prefix list will"
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,198,* gradually push the internal storage vs. element storage to
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,199,* the contractionCriteria.
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,200,* </p>
False,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,193,* (non-Javadoc)
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,241,* Method invokes the super class' setExpansionFactor but first it
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,242,* must validate the combination of expansionFactor and
True,src/java/org/apache/commons/math/ContractableDoubleArray.java,src/java/org/apache/commons/math/ContractableDoubleArray.java,243,* contractionCriteria.
