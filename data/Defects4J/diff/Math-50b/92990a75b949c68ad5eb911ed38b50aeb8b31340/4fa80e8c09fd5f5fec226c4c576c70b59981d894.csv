is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,64,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,65,public void setSeed(int seed) {
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,66,setSeed((long) seed);
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,69,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,70,public void setSeed(int[] seed) {
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,71,// the following number is the largest prime that fits in 32 bits (it is 2^32 - 5)
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,72,final long prime = 4294967291l;
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,74,long combined = 0l;
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,75,for (int s : seed) {
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,76,combined = combined * prime + s;
True,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/java/org/apache/commons/math/random/AbstractRandomGenerator.java,78,setSeed(combined);
False,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,29,** Serializable version identifier */
False,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,30,rivate static final long serialVersionUID = -3561898582944940550L;
True,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,30,/** Serializable version identifier. */
True,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,31,private static final long serialVersionUID = -7745277476784028798L;
True,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,33,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,34,public void setSeed(int seed) {
True,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,35,setSeed((long) seed);
True,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,38,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,39,public void setSeed(int[] seed) {
True,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,40,// the following number is the largest prime that fits in 32 bits (it is 2^32 - 5)
True,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,41,final long prime = 4294967291l;
True,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,43,long combined = 0l;
True,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,44,for (int s : seed) {
True,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,45,combined = combined * prime + s;
True,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,src/java/org/apache/commons/math/random/JDKRandomGenerator.java,47,setSeed(combined);
False,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,30,** Serializable version identifier */
False,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,31,rivate static final long serialVersionUID = 2570805822599485047L;
True,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,30,/** Serializable version identifier. */
True,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,31,private static final long serialVersionUID = 2306581345647615033L;
False,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,177, Sets the seed of the underyling random number generator using a
False,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,178, <code>long</code> seed.  Sequences of values generated starting with the
False,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,179, same seeds should be identical.
False,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,181, @param seed the seed value
True,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,176,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,177,public void setSeed(int seed) {
True,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,178,if (randomGenerator != null) {  // required to avoid NPE in constructor
True,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,179,randomGenerator.setSeed(seed);
True,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,183,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,184,public void setSeed(int[] seed) {
True,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,185,if (randomGenerator != null) {  // required to avoid NPE in constructor
True,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,186,randomGenerator.setSeed(seed);
True,src/java/org/apache/commons/math/random/RandomAdaptor.java,src/java/org/apache/commons/math/random/RandomAdaptor.java,190,/** {@inheritDoc} */
False,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,30, Sets the seed of the underyling random number generator using a
False,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,31, <code>long</code> seed.  Sequences of values generated starting with the
False,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,32, same seeds should be identical.
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,30,* Sets the seed of the underyling random number generator using an
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,31,* <code>int</code> seed.
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,32,* <p>Sequences of values generated starting with the same seeds
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,33,* should be identical.
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,34,* </p>
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,35,* @param seed the seed value
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,37,void setSeed(int seed);
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,40,* Sets the seed of the underyling random number generator using an
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,41,* <code>int</code> array seed.
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,42,* <p>Sequences of values generated starting with the same seeds
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,43,* should be identical.
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,44,* </p>
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,45,* @param seed the seed value
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,47,void setSeed(int[] seed);
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,50,* Sets the seed of the underyling random number generator using a
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,51,* <code>long</code> seed.
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,52,* <p>Sequences of values generated starting with the same seeds
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,53,* should be identical.
True,src/java/org/apache/commons/math/random/RandomGenerator.java,src/java/org/apache/commons/math/random/RandomGenerator.java,54,* </p>
True,src/test/org/apache/commons/math/random/RandomAdaptorTest.java,src/test/org/apache/commons/math/random/RandomAdaptorTest.java,101,public void setSeed(int seed) {
True,src/test/org/apache/commons/math/random/RandomAdaptorTest.java,src/test/org/apache/commons/math/random/RandomAdaptorTest.java,104,public void setSeed(int[] seed) {
