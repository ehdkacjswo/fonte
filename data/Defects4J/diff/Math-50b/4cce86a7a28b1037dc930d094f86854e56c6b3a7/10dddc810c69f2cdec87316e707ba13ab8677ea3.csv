is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,24, eigen decomposition of a real symmetric matrix.
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,24,* eigen decomposition of a real matrix.
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,33,   <li>a {@link #getEigenvalue(int) getEigenvalue} method to pick up a single
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,34,"   eigenvalue has been added,</li>"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,33,*   <li>two {@link #getRealEigenvalue(int) getRealEigenvalue} and {@link #getImagEigenvalue(int)
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,34,"*   getImagEigenvalue} methods to pick up a single eigenvalue have been added,</li>"
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,37,   <li>the <code>getRealEigenvalues</code> method has been renamed as {@link
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,38,"   #getEigenValues() getEigenValues},</li>"
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,39,   <li>the <code>getImagEigenvalues</code> method has been removed</li>
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,59, Returns the diagonal matrix D of the decomposition.
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,60, <p>D is a diagonal matrix.</p>
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,61, <p>The values on the diagonal are the eigenvalues of the original matrix.</p>
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,56,* Returns the block diagonal matrix D of the decomposition.
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,57,* <p>D is a block diagonal matrix.</p>
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,58,* <p>Real eigenvalues are on the diagonal while complex values are on
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,59,"* 2x2 blocks { {real +imaginary}, {-imaginary, real} }.</p>"
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,76, Returns a copy of the eigenvalues of the original matrix.
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,77, @return a copy of the eigenvalues of the original matrix
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,74,* Returns a copy of the real parts of the eigenvalues of the original matrix.
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,75,* @return a copy of the real parts of the eigenvalues of the original matrix
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,77,* @see #getRealEigenvalue(int)
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,78,* @see #getImagEigenvalues()
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,80,ouble[] getEigenvalues();
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,80,double[] getRealEigenvalues();
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,83, Returns the i<sup>th</sup> eigenvalue of the original matrix.
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,83,* Returns the real part of the i<sup>th</sup> eigenvalue of the original matrix.
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,85, @return i<sup>th</sup> eigenvalue of the original matrix
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,85,* @return real part of the i<sup>th</sup> eigenvalue of the original matrix
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,87,* @see #getRealEigenvalues()
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,88,* @see #getImagEigenvalue(int)
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,88,ouble getEigenvalue(int i);
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,90,double getRealEigenvalue(int i);
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,93,* Returns a copy of the imaginary parts of the eigenvalues of the original matrix.
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,94,* @return a copy of the imaginary parts of the eigenvalues of the original matrix
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,95,* @see #getD()
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,96,* @see #getImagEigenvalue(int)
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,97,* @see #getRealEigenvalues()
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,99,double[] getImagEigenvalues();
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,102,* Returns the imaginary part of the i<sup>th</sup> eigenvalue of the original matrix.
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,103,* @param i index of the eigenvalue (counting from 0)
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,104,* @return imaginary part of the i<sup>th</sup> eigenvalue of the original matrix
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,105,* @see #getD()
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,106,* @see #getImagEigenvalues()
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,107,* @see #getRealEigenvalue(int)
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,109,double getImagEigenvalue(int i);
False,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,105, Get a solver for A &times; X = B.
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,126,* Get a solver for finding the A &times; X = B solution in exact linear sense.
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,30, <p>The eigen decomposition of symmetric matrix A is a set of two matrices:
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,30,* <p>The eigen decomposition of matrix A is a set of two matrices:
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,33,"* <p>As of 2.0, this class supports only <strong>symmetric</strong> matrices,"
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,34,* and hence computes only real realEigenvalues. This implies the D matrix returned by
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,35,* {@link #getD()} is always diagonal and the imaginary values returned {@link
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,36,* #getImagEigenvalue(int)} and {@link #getImagEigenvalues()} are always null.</p>
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,135,** Eigenvalues. */
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,136,rivate double[] eigenvalues;
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,139,/** Real part of the realEigenvalues. */
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,140,private double[] realEigenvalues;
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,142,/** Imaginary part of the realEigenvalues. */
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,143,private double[] imagEigenvalues;
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,166,his.splitTolerance = splitTolerance;
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,167,ransformToTridiagonal(matrix);
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,168,ecompose();
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,173,if (isSymmetric(matrix)) {
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,174,this.splitTolerance = splitTolerance;
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,175,transformToTridiagonal(matrix);
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,176,decompose();
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,177,} else {
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,178,"// as of 2.0, non-symmetric matrices (i.e. complex eigenvalues) are NOT supported"
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,179,// see issue https://issues.apache.org/jira/browse/MATH-235
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,180,"throw new InvalidMatrixException(""eigen decomposition of assymetric matrices not supported yet"","
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,181,null);
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,218,* Check if a matrix is symmetric.
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,219,* @param matrix matrix to check
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,220,* @return true if matrix is symmetric
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,222,private boolean isSymmetric(final RealMatrix matrix) {
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,223,final int rows    = matrix.getRowDimension();
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,224,final int columns = matrix.getColumnDimension();
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,225,final double eps  = 10 * rows * columns * MathUtils.EPSILON;
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,226,for (int i = 0; i < rows; ++i) {
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,227,for (int j = i + 1; j < columns; ++j) {
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,228,"final double mij = matrix.getEntry(i, j);"
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,229,"final double mji = matrix.getEntry(j, i);"
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,230,"if (Math.abs(mij - mji) > (Math.max(Math.abs(mij), Math.abs(mji)) * eps)) {"
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,231,return false;
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,235,return true;
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,218,/ find all the eigenvalues
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,253,// find all the realEigenvalues
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,254,achedD = MatrixUtils.createRealDiagonalMatrix(eigenvalues);
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,289,cachedD = MatrixUtils.createRealDiagonalMatrix(realEigenvalues);
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,283,ublic double[] getEigenvalues()
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,318,public double[] getRealEigenvalues()
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,319,throws InvalidMatrixException {
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,320,return realEigenvalues.clone();
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,323,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,324,public double getRealEigenvalue(final int i)
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,325,"throws InvalidMatrixException, ArrayIndexOutOfBoundsException {"
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,326,return realEigenvalues[i];
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,329,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,330,public double[] getImagEigenvalues()
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,285,eturn eigenvalues.clone();
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,332,return imagEigenvalues.clone();
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,289,ublic double getEigenvalue(final int i)
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,336,public double getImagEigenvalue(final int i)
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,291,eturn eigenvalues[i];
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,338,return imagEigenvalues[i];
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,310,or (double lambda : eigenvalues) {
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,357,for (double lambda : realEigenvalues) {
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,321,"eturn new Solver(eigenvalues, eigenvectors);"
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,368,"return new Solver(realEigenvalues, eigenvectors);"
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,338, @param eigenvalues eigenvalues
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,385,* @param realEigenvalues realEigenvalues
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,558, Find the eigenvalues.
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,605,* Find the realEigenvalues.
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,567,/ find eigenvalues in each block
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,568,igenvalues = new double[main.length];
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,614,// find realEigenvalues in each block
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,615,realEigenvalues = new double[main.length];
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,616,imagEigenvalues = new double[main.length];
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,608,/ extract eigenvalues
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,656,// extract realEigenvalues
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,611,igenvalues[begin + i] = lambda + work[4 * i];
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,659,realEigenvalues[begin + i] = lambda + work[4 * i];
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,615,igenvalues[begin + i] = lambda - work[4 * i];
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,663,realEigenvalues[begin + i] = lambda - work[4 * i];
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,623,/ sort the eigenvalues in decreasing order
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,624,rrays.sort(eigenvalues);
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,625,"or (int i = 0, j = eigenvalues.length - 1; i < j; ++i, --j) {"
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,626,inal double tmp = eigenvalues[i];
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,627,igenvalues[i] = eigenvalues[j];
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,628,igenvalues[j] = tmp;
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,671,// sort the realEigenvalues in decreasing order
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,672,Arrays.sort(realEigenvalues);
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,673,"for (int i = 0, j = realEigenvalues.length - 1; i < j; ++i, --j) {"
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,674,final double tmp = realEigenvalues[i];
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,675,realEigenvalues[i] = realEigenvalues[j];
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,676,realEigenvalues[j] = tmp;
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,665,igenvalues[index] = main[index];
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,713,realEigenvalues[index] = main[index];
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,669, Find eigenvalues in a block with 2 rows.
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,717,* Find realEigenvalues in a block with 2 rows.
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,691,igenvalues[index]     = largestRoot;
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,692,igenvalues[index + 1] = p / largestRoot;
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,739,realEigenvalues[index]     = largestRoot;
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,740,realEigenvalues[index + 1] = p / largestRoot;
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,697, Find eigenvalues in a block with 3 rows.
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,745,* Find realEigenvalues in a block with 3 rows.
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,725,"/ of symmetric eigenvalues problem, there should be three distinct"
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,773,"// of symmetric realEigenvalues problem, there should be three distinct"
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,752,igenvalues[index]     = z0;
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,753,igenvalues[index + 1] = z1;
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,754,igenvalues[index + 2] = z2;
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,800,realEigenvalues[index]     = z0;
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,801,realEigenvalues[index + 1] = z1;
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,802,realEigenvalues[index + 2] = z2;
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,759, Find eigenvalues using dqd/dqds algorithms.
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,807,* Find realEigenvalues using dqd/dqds algorithms.
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,947,/ step 1: accepting eigenvalues
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,995,// step 1: accepting realEigenvalues
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,971,"/ two eigenvalues found, deflate array"
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1019,"// two realEigenvalues found, deflate array"
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,995,"/ no more eigenvalues found, we need to iterate"
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1043,"// no more realEigenvalues found, we need to iterate"
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1100, Compute an interval containing all eigenvalues of a block.
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1148,* Compute an interval containing all realEigenvalues of a block.
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1103, @return an interval containing the eigenvalues
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1151,* @return an interval containing the realEigenvalues
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1174, Count the number of eigenvalues below a point.
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1175, @param t value below which we must count the number of eigenvalues
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1222,* Count the number of realEigenvalues below a point.
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1223,* @param t value below which we must count the number of realEigenvalues
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1178, @return number of eigenvalues smaller than t
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1226,* @return number of realEigenvalues smaller than t
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1379, @param deflated number of eigenvalues just deflated
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1427,* @param deflated number of realEigenvalues just deflated
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1398,ase 0 : // no eigenvalues deflated.
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1446,case 0 : // no realEigenvalues deflated.
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1580,"ase 2 : // two eigenvalues deflated. use dMin2, dN2 for dMin and dN."
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1628,"case 2 : // two realEigenvalues deflated. use dMin2, dN2 for dMin and dN."
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1618,"efault : // case 12, more than two eigenvalues deflated. no information."
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1666,"default : // case 12, more than two realEigenvalues deflated. no information."
False,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1668,"igenvectors[i] = findEigenvector(eigenvalues[i], d, l);"
True,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1716,"eigenvectors[i] = findEigenvector(realEigenvalues[i], d, l);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,48,"ssertEquals(1.5, ed.getEigenvalue(0), 1.0e-15);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,48,"assertEquals(1.5, ed.getRealEigenvalue(0), 1.0e-15);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,54,"       59.0, 12.0 },"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,55," Double.NaN, 66.0 }"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,54,"{ 59.0, 12.0 },"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,55,"{ 12.0, 66.0 }"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,58,"ssertEquals(75.0, ed.getEigenvalue(0), 1.0e-15);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,59,"ssertEquals(50.0, ed.getEigenvalue(1), 1.0e-15);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,58,"assertEquals(75.0, ed.getRealEigenvalue(0), 1.0e-15);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,59,"assertEquals(50.0, ed.getRealEigenvalue(1), 1.0e-15);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,65,"    39632.0,    -4824.0, -16560.0 },"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,66," Double.NaN,     8693.0,   7920.0 },"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,67," Double.NaN, Double.NaN,  17300.0 }"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,65,"{  39632.0, -4824.0, -16560.0 },"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,66,"{  -4824.0,  8693.0,   7920.0 },"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,67,"{ -16560.0,  7920.0,  17300.0 }"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,70,"ssertEquals(50000.0, ed.getEigenvalue(0), 3.0e-11);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,71,"ssertEquals(12500.0, ed.getEigenvalue(1), 3.0e-11);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,72,"ssertEquals( 3125.0, ed.getEigenvalue(2), 3.0e-11);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,70,"assertEquals(50000.0, ed.getRealEigenvalue(0), 3.0e-11);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,71,"assertEquals(12500.0, ed.getRealEigenvalue(1), 3.0e-11);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,72,"assertEquals( 3125.0, ed.getRealEigenvalue(2), 3.0e-11);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,78,"      0.784,     -0.288,       0.000,  0.000 },"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,79," Double.NaN,      0.616,       0.000,  0.000 },"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,80," Double.NaN, Double.NaN,       0.164, -0.048 },"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,81," Double.NaN, Double.NaN,  Double.NaN,  0.136 }"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,78,"{  0.784, -0.288,  0.000,  0.000 },"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,79,"{ -0.288,  0.616,  0.000,  0.000 },"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,80,"{  0.000,  0.000,  0.164, -0.048 },"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,81,"{  0.000,  0.000, -0.048,  0.136 }"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,84,"ssertEquals(1.0, ed.getEigenvalue(0), 1.0e-15);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,85,"ssertEquals(0.4, ed.getEigenvalue(1), 1.0e-15);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,86,"ssertEquals(0.2, ed.getEigenvalue(2), 1.0e-15);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,87,"ssertEquals(0.1, ed.getEigenvalue(3), 1.0e-15);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,84,"assertEquals(1.0, ed.getRealEigenvalue(0), 1.0e-15);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,85,"assertEquals(0.4, ed.getRealEigenvalue(1), 1.0e-15);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,86,"assertEquals(0.2, ed.getRealEigenvalue(2), 1.0e-15);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,87,"assertEquals(0.1, ed.getRealEigenvalue(3), 1.0e-15);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,99,"ssertEquals(1.0, ed.getEigenvalue(0), 1.0e-15);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,100,"ssertEquals(0.4, ed.getEigenvalue(1), 1.0e-15);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,101,"ssertEquals(0.2, ed.getEigenvalue(2), 1.0e-15);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,102,"ssertEquals(0.1, ed.getEigenvalue(3), 1.0e-15);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,99,"assertEquals(1.0, ed.getRealEigenvalue(0), 1.0e-15);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,100,"assertEquals(0.4, ed.getRealEigenvalue(1), 1.0e-15);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,101,"assertEquals(0.2, ed.getRealEigenvalue(2), 1.0e-15);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,102,"assertEquals(0.1, ed.getRealEigenvalue(3), 1.0e-15);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,123,ouble[] eigenValues = ed.getEigenvalues();
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,123,double[] eigenValues = ed.getRealEigenvalues();
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,146,ouble[] eigenValues = ed.getEigenvalues();
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,146,double[] eigenValues = ed.getRealEigenvalues();
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,163,ouble[] eigenValues = ed.getEigenvalues();
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,163,double[] eigenValues = ed.getRealEigenvalues();
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,174,ouble lambda = ed.getEigenvalue(i);
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,174,double lambda = ed.getRealEigenvalue(i);
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,204,"ssertEquals(diagonal[0], ed.getEigenvalue(3), 2.0e-15);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,205,"ssertEquals(diagonal[1], ed.getEigenvalue(2), 2.0e-15);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,206,"ssertEquals(diagonal[2], ed.getEigenvalue(1), 2.0e-15);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,207,"ssertEquals(diagonal[3], ed.getEigenvalue(0), 2.0e-15);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,204,"assertEquals(diagonal[0], ed.getRealEigenvalue(3), 2.0e-15);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,205,"assertEquals(diagonal[1], ed.getRealEigenvalue(2), 2.0e-15);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,206,"assertEquals(diagonal[2], ed.getRealEigenvalue(1), 2.0e-15);"
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,207,"assertEquals(diagonal[3], ed.getRealEigenvalue(0), 2.0e-15);"
False,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,247,ouble[] observed = ed.getEigenvalues();
True,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java,247,double[] observed = ed.getRealEigenvalues();
