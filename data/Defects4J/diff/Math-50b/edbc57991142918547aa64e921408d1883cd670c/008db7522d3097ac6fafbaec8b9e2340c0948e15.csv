is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,74, @version $Revision: 1.11 $ $Date: 2003/06/18 13:57:24 $
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,74,* @version $Revision: 1.12 $ $Date: 2003/06/21 02:08:23 $
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,109,rivate double s2 = Double.NaN;
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,109,private double m2 = Double.NaN;
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,112,rivate double s3 = Double.NaN;
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,112,private double m3 = Double.NaN;
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,115,rivate double s4 = Double.NaN;
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,115,private double m4 = Double.NaN;
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,310,ariance = s2 = 0.0;
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,310,variance = m2 = 0.0;
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,312,m2 = m3 = m4 = 0.0;
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,324,ouble n1 = ((double) n - 1);
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,326,4 += v
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,328, 4.0 * s3
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,329, v
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,330, (6.0 * s2
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,331," n1 * (1 + Math.pow((double) n, 3)) * v2));"
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,325,double n0 = (double) n;
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,326,double n1 = (double) (n - 1);
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,327,double n2 = (double) (n - 2);
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,328,double n3 = (double) (n - 3);
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,330,m4 =
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,331,m4
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,332,- (4.0 * v * m3)
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,333,+ (6.0 * v2 * m2)
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,334,+ ((n0 * n0) - 3 * n1) * (v2 * v2 * n1 * n0);
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,336,m3 = m3 - (3.0 * v * m2) + (n0 * n1 * n2 * v2 * v);
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,333,3 += v
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,334," (-3.0 * s2 + (double) n * n1 * (n - 2) * Math.pow(v, 2));"
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,335,2 += n1 * dev * v;
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,338,m2 += n1 * dev * v;
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,338,ariance = (n <= 1) ? 0.0 : s2 / n1;
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,342,variance = (n <= 1) ? 0.0 : m2 / n1;
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,340,n <= 2)
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,345,(n <= 2 || variance < 10E-20)
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,342, s3 / ((double) n * Math.sqrt(variance) * variance);
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,347,: (n0 * m3) / (n1 * n2 * Math.sqrt(variance) * variance);
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,344,n <= 3)
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,350,(n <= 3 || variance < 10E-20)
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,346," s4 / ((double) n * Math.pow(variance, 2)) - 3;"
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,352,: (n0 * (n0 + 1) * m4 - 3 * m2 * m2 * n1)
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,353,/ (n1 * n2 * n3 * variance * variance);
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,378,his.s2 = this.s3 = this.s4 = Double.NaN;
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,385,this.m2 = this.m3 = this.m4 = Double.NaN;
False,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,65, @version $Revision: 1.1 $ $Date: 2003/05/29 20:35:46 $
True,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,65,* @version $Revision: 1.2 $ $Date: 2003/06/21 02:08:23 $
True,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,238,public void testSkewAndKurtosis() {
True,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,239,Univariate u = new UnivariateImpl();
True,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,241,double[] testArray =
True,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,242,"{ 12.5, 12, 11.8, 14.2, 14.9, 14.5, 21, 8.2, 10.3, 11.3, 14.1,"
True,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,243,"9.9, 12.2, 12, 12.1, 11, 19.8, 11, 10, 8.8, 9, 12.3 };"
True,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,244,for( int i = 0; i < testArray.length; i++) {
True,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,245,u.addValue( testArray[i]);
True,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,248,"assertEquals(""mean"", 12.40455, u.getMean(), 0.0001);"
True,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,249,"assertEquals(""variance"", 10.00236, u.getVariance(), 0.0001);"
True,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,250,"assertEquals(""skewness"", 1.437424, u.getSkewness(), 0.0001);"
True,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,251,"assertEquals(""kurtosis"", 2.37719, u.getKurtosis(), 0.0001);"
