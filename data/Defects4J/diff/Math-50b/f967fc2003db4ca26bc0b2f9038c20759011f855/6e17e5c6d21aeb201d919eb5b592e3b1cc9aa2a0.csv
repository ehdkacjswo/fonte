is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,147,f (value.length != k) {
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,148,"hrow new DimensionMismatchException(value.length, k);"
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,147,checkDimension(value.length);
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,403,* Sets statistics implementations.
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,404,* @param newImpl new implementations for statistics
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,405,* @param oldImpl old implementations for statistics
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,406,* @throws DimensionMismatchException if the array dimension
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,407,* does not match the one used at construction
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,408,* @throws IllegalStateException if data has already been added
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,409,*  (i.e if n > 0)
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,411,"private void setImpl(StorelessUnivariateStatistic[] newImpl,"
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,412,StorelessUnivariateStatistic[] oldImpl)
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,413,"throws DimensionMismatchException, IllegalStateException {"
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,414,checkEmpty();
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,415,checkDimension(newImpl.length);
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,416,"System.arraycopy(newImpl, 0, oldImpl, 0, newImpl.length);"
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,411,eturn sumImpl;
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,425,return (StorelessUnivariateStatistic[]) sumImpl.clone();
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,422, @throws IllegalArgumentException if the array dimension
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,436,* @throws DimensionMismatchException if the array dimension
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,427,ublic void setSumImpl(StorelessUnivariateStatistic[] sumImpl) {
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,428,heckEmpty();
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,429,his.sumImpl = sumImpl;
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,441,public void setSumImpl(StorelessUnivariateStatistic[] sumImpl)
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,442,throws DimensionMismatchException {
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,443,"setImpl(sumImpl, this.sumImpl);"
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,438,eturn sumSqImpl;
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,452,return (StorelessUnivariateStatistic[]) sumSqImpl.clone();
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,463,* @throws DimensionMismatchException if the array dimension
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,464,* does not match the one used at construction
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,452,ublic void setSumsqImpl(StorelessUnivariateStatistic[] sumsqImpl) {
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,453,heckEmpty();
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,454,his.sumSqImpl = sumsqImpl;
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,468,public void setSumsqImpl(StorelessUnivariateStatistic[] sumsqImpl)
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,469,throws DimensionMismatchException {
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,470,"setImpl(sumsqImpl, this.sumSqImpl);"
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,463,eturn minImpl;
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,479,return (StorelessUnivariateStatistic[]) minImpl.clone();
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,490,* @throws DimensionMismatchException if the array dimension
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,491,* does not match the one used at construction
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,477,ublic void setMinImpl(StorelessUnivariateStatistic[] minImpl) {
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,478,heckEmpty();
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,479,his.minImpl = minImpl;
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,495,public void setMinImpl(StorelessUnivariateStatistic[] minImpl)
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,496,throws DimensionMismatchException {
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,497,"setImpl(minImpl, this.minImpl);"
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,488,eturn maxImpl;
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,506,return (StorelessUnivariateStatistic[]) maxImpl.clone();
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,517,* @throws DimensionMismatchException if the array dimension
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,518,* does not match the one used at construction
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,502,ublic void setMaxImpl(StorelessUnivariateStatistic[] maxImpl) {
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,503,heckEmpty();
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,504,his.maxImpl = maxImpl;
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,522,public void setMaxImpl(StorelessUnivariateStatistic[] maxImpl)
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,523,throws DimensionMismatchException {
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,524,"setImpl(maxImpl, this.maxImpl);"
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,513,eturn sumLogImpl;
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,533,return (StorelessUnivariateStatistic[]) sumLogImpl.clone();
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,544,* @throws DimensionMismatchException if the array dimension
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,545,* does not match the one used at construction
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,527,ublic void setSumLogImpl(StorelessUnivariateStatistic[] sumLogImpl) {
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,528,heckEmpty();
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,529,his.sumLogImpl = sumLogImpl;
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,549,public void setSumLogImpl(StorelessUnivariateStatistic[] sumLogImpl)
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,550,throws DimensionMismatchException {
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,551,"setImpl(sumLogImpl, this.sumLogImpl);"
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,538,eturn geoMeanImpl;
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,560,return (StorelessUnivariateStatistic[]) geoMeanImpl.clone();
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,571,* @throws DimensionMismatchException if the array dimension
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,572,* does not match the one used at construction
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,552,ublic void setGeoMeanImpl(StorelessUnivariateStatistic[] geoMeanImpl) {
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,553,heckEmpty();
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,554,his.geoMeanImpl = geoMeanImpl;
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,576,public void setGeoMeanImpl(StorelessUnivariateStatistic[] geoMeanImpl)
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,577,throws DimensionMismatchException {
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,578,"setImpl(geoMeanImpl, this.geoMeanImpl);"
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,563,eturn meanImpl;
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,587,return (StorelessUnivariateStatistic[]) meanImpl.clone();
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,598,* @throws DimensionMismatchException if the array dimension
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,599,* does not match the one used at construction
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,577,ublic void setMeanImpl(StorelessUnivariateStatistic[] meanImpl) {
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,578,heckEmpty();
False,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,579,his.meanImpl = meanImpl;
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,603,public void setMeanImpl(StorelessUnivariateStatistic[] meanImpl)
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,604,throws DimensionMismatchException {
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,605,"setImpl(meanImpl, this.meanImpl);"
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,619,* Throws DimensionMismatchException if dimension != k.
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,620,* @param dimension dimension to check
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,621,* @throws DimensionMismatchException if dimension != k
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,623,private void checkDimension(int dimension)
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,624,throws DimensionMismatchException {
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,625,if (dimension != k) {
True,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,626,"throw new DimensionMismatchException(dimension, k);"
False,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,86,his.mean = mean;
True,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,86,this.mean = (double[]) mean.clone();
False,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,88,his.stdev = stdev;
True,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,88,this.stdev = (double[]) stdev.clone();
False,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,90,his.max = max;
False,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,91,his.min = min;
False,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,92,his.sum = sum;
False,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,93,his.sumSq = sumSq;
False,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,94,his.sumLog = sumLog;
True,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,90,this.max = (double[]) max.clone();
True,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,91,this.min = (double[]) min.clone();
True,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,92,this.sum = (double[]) sum.clone();
True,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,93,this.sumSq = (double[]) sumSq.clone();
True,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,94,this.sumLog = (double[]) sumLog.clone();
False,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,109,eturn max;
True,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,109,return (double[]) max.clone();
False,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,116,eturn mean;
True,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,116,return (double[]) mean.clone();
False,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,123,eturn min;
True,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,123,return (double[]) min.clone();
False,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,137,eturn sum;
True,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,137,return (double[]) sum.clone();
False,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,144,eturn sumSq;
True,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,144,return (double[]) sumSq.clone();
False,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,151,eturn sumLog;
True,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,151,return (double[]) sumLog.clone();
False,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,158,eturn stdev;
True,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummaryValues.java,158,return (double[]) stdev.clone();
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,181,ublic synchronized void setSumImpl(StorelessUnivariateStatistic[] sumImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,181,public synchronized void setSumImpl(StorelessUnivariateStatistic[] sumImpl)
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,182,throws DimensionMismatchException {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,195,ublic synchronized void setSumsqImpl(StorelessUnivariateStatistic[] sumsqImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,196,public synchronized void setSumsqImpl(StorelessUnivariateStatistic[] sumsqImpl)
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,197,throws DimensionMismatchException {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,209,ublic synchronized void setMinImpl(StorelessUnivariateStatistic[] minImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,211,public synchronized void setMinImpl(StorelessUnivariateStatistic[] minImpl)
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,212,throws DimensionMismatchException {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,223,ublic synchronized void setMaxImpl(StorelessUnivariateStatistic[] maxImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,226,public synchronized void setMaxImpl(StorelessUnivariateStatistic[] maxImpl)
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,227,throws DimensionMismatchException {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,237,ublic synchronized void setSumLogImpl(StorelessUnivariateStatistic[] sumLogImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,241,public synchronized void setSumLogImpl(StorelessUnivariateStatistic[] sumLogImpl)
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,242,throws DimensionMismatchException {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,251,ublic synchronized void setGeoMeanImpl(StorelessUnivariateStatistic[] geoMeanImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,256,public synchronized void setGeoMeanImpl(StorelessUnivariateStatistic[] geoMeanImpl)
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,257,throws DimensionMismatchException {
False,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,265,ublic synchronized void setMeanImpl(StorelessUnivariateStatistic[] meanImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,271,public synchronized void setMeanImpl(StorelessUnivariateStatistic[] meanImpl)
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,272,throws DimensionMismatchException {
