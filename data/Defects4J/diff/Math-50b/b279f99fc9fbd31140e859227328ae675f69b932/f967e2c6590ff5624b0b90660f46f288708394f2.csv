is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,46,/** number of variables in regression */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,48,/** diagonals of cross products matrix */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,50,/** the elements of the R`Y */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,52,/** the off diagonal portion of the R matrix */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,54,/** the tolerance for each of the variables */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,56,/** residual sum of squares for all nested regressions */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,58,/** order of the regressors */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,60,/** scratch space for tolerance calc */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,62,/** number of observations entered */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,64,/** sum of squared errors of largest regression */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,66,/** has rss been called? */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,68,/** has the tolerance setting method been called */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,70,/** flags for variables with linear dependency problems */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,72,/** singular x values */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,74,/** workspace for singularity method */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,76,/** summation of Y variable */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,78,/** summation of squared Y values */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,80,/** boolean flag whether a regression constant is added */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,82,/** zero tolerance */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,84,/** error message */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,85,"private String nvarsMessage = ""Attempting to include more variables in regression than exist in model"";"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,86,/** error message */
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,87,"private String nobsVsNvarsMessage = ""Number of observations not greater than the number of number of variables"";"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,117,* This is the augmented constructor for the MillerUpdatingRegression class
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,119,"* @param numberOfVariables number of regressors to expect, not including constant"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,120,* @param includeConstant include a constant automatically
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,121,"* @param errorTolerance  zero tolerance, how machine zero is determined"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,156,* Primary constructor for the MillerUpdatingRegression
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,158,* @param numberOfVariables maximum number of potential regressors
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,159,* @param includeConstant include a constant automatically
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,166,* A getter method which determines whether a constant is included
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,167,"* @return true regression has an intercept, false no intercept"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,174,* Gets the number of observations added to the regression model
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,175,* @return number of observations
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,182,* Adds an observation to the regression model
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,183,* @param x the array with regressor values
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,184,* @param y  the value of dependent variable given these regressors
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,206,* Adds multiplier observations to the model
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,207,* @param x observations on the regressors
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,208,* @param y observations on the regressand
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,172," this method differs slighlty from gentleman's method, in that the assumption is"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,226,"* this method differs slightly from Gentleman's method, in that the assumption is"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,230,* @param x observations on the regressors
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,231,"* @param wi weight of the this observation (-1,1)"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,232,* @param yi observation on the regressand
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,294,* Adds to number a and b such that the contamination due to
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,295,* numerical smallness of one addend does not corrupt the sum
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,296,* @param a - an addend
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,297,* @param b - an addend
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,298,* @return the sum of the a and b
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,255," As the name suggest clear, wipes the internals and reoders everything in the"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,319,"* As the name suggests,  clear wipes the internals and reorders everything in the"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,259,"rrays.fill(d, 0.0);"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,260,"rrays.fill(rhs, 0.0);"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,261,"rrays.fill(r, 0.0);"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,262,"rrays.fill(tol, 0.0);"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,263,"rrays.fill(rss, 0.0);"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,323,"Arrays.fill(this.d, 0.0);"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,324,"Arrays.fill(this.rhs, 0.0);"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,325,"Arrays.fill(this.r, 0.0);"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,326,"Arrays.fill(this.tol, 0.0);"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,327,"Arrays.fill(this.rss, 0.0);"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,267,"rrays.fill(lindep, false);"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,331,"Arrays.fill(this.lindep, false);"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,269,order[i] = i;
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,333,this.vorder[i] = i;
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,272,obs = 0;
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,273,serr = 0.0;
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,274,umy = 0.0;
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,275,umsqy = 0.0;
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,276,ss_set = false;
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,277,ol_set = false;
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,335,this.nobs = 0;
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,336,this.sserr = 0.0;
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,337,this.sumy = 0.0;
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,338,this.sumsqy = 0.0;
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,339,this.rss_set = false;
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,340,this.tol_set = false;
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,282, This sets up tolerances for singularity testing
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,345,* This sets up tolerances for singularity testing.
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,306, The regcf methods conducts the linear regression and extracts the
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,369,* The regcf method conducts the linear regression and extracts the
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,373,* @param nreq how many of the regressors to include (either in canonical
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,374,"* order, or in the current reordered state)"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,375,* @return an array with the estimated slope coefficients
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,348, columns
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,413,* columns.
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,400, and all subsets in the following manner:
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,463,* and all subsets in the following manner: <pre>
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,405," ..., ResidualSumOfSquares_FirstVariable}"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,468,"* ..., ResidualSumOfSquares_FirstVariable} </pre>"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,422, ( nreq + 1 ) * nreq / 2 elements. For illustration
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,485,* ( nreq + 1 ) * nreq / 2 elements. For illustration <pre>
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,492,* } </pre>
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,494,* @param nreq how many of the regressors to include (either in canonical
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,495,"* order, or in the current reordered state)"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,496,* @return an array with the variance covariance of the included
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,497,* regressors in lower triangular form
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,550,* @param rinv  the storage for the inverse of r
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,551,* @param nreq how many of the regressors to include (either in canonical
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,552,"* order, or in the current reordered state)"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,515, In the original algorithm only the partial correlations of the regressors
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,516," is returned to the user. In this implementation, we have"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,586,* <p>In the original algorithm only the partial correlations of the regressors
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,587,"* is returned to the user. In this implementation, we have <pre>"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,593,* Replaces subroutines PCORR and COR of:
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,594,"* ALGORITHM AS274  APPL. STATIST. (1992) VOL.41, NO. 2 </pre></p>"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,596,* <p>Calculate partial correlations after the variables in rows
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,597,"* 1, 2, ..., IN have been forced into the regression."
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,598,"* If IN = 1, and the first row of R represents a constant in the"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,599,"* model, then the usual simple correlations are returned.</p>"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,601,"* <p>If IN = 0, the value returned in array CORMAT for the correlation"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,602,* of variables Xi & Xj is: <pre>
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,603,* sum ( Xi.Xj ) / Sqrt ( sum (Xi^2) . sum (Xj^2) )</pre></p>
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,605,"* <p>On return, array CORMAT contains the upper triangle of the matrix of"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,606,"* partial correlations stored by rows, excluding the 1's on the diagonal."
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,607,"* e.g. if IN = 2, the consecutive elements returned are:"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,608,"* (3,4) (3,5) ... (3,ncol), (4,5) (4,6) ... (4,ncol), etc."
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,609,* Array YCORR stores the partial correlations with the Y-variable
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,610,* starting with YCORR(IN+1) = partial correlation with the variable in
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,611,* position (IN+1). </p>
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,613,* @param in how many of the regressors to include (either in canonical
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,614,"* order, or in the current reordered state)"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,615,* @return an array with the partial correlations of the remainder of
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,616,"* regressors with each other and the regressand, in lower triangular form"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,525,eplaces subroutines PCORR and COR of:
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,526,"LGORITHM AS274  APPL. STATIST. (1992) VOL.41, NO. 2"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,528,alculate partial correlations after the variables in rows
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,529,", 2, ..., IN have been forced into the regression."
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,530,"f IN = 1, and the first row of R represents a constant in the"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,531,"odel, then the usual simple correlations are returned."
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,533,"f IN = 0, the value returned in array CORMAT for the correlation"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,534,f variables Xi & Xj is:
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,535,um ( Xi.Xj ) / Sqrt ( sum (Xi^2) . sum (Xj^2) )
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,537,"n return, array CORMAT contains the upper triangle of the matrix of"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,538,"artial correlations stored by rows, excluding the 1's on the diagonal."
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,539,".g. if IN = 2, the consecutive elements returned are:"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,540,"3,4) (3,5) ... (3,ncol), (4,5) (4,6) ... (4,ncol), etc."
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,541,rray YCORR stores the partial correlations with the Y-variable
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,542,tarting with YCORR(IN+1) = partial correlation with the variable in
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,543,osition (IN+1).
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,617," ALGORITHM AS274 APPL. STATIST. (1992) VOL.41, NO. 2"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,690,"* ALGORITHM AS274 APPL. STATIST. (1992) VOL.41, NO. 2."
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,816,"* <p>ALGORITHM AS274  APPL. STATIST. (1992) VOL.41, NO. 2</p>"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,818,* <p> Re-order the variables in an orthogonal reduction produced by
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,819,"* AS75.1 so that the N variables in LIST start at position POS1,"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,820,* though will not necessarily be in the same order as in LIST.
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,821,* Any variables in VORDER before position POS1 are not moved.
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,822,* Auxiliary routine called: VMOVE. </p>
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,824,* <p>This internal method reorders the regressors.</p>
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,826,* @param list the regressors to move
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,827,* @param pos1 where the list will be placed
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,828,"* @return -1 error, 0 everything ok"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,744,"/     ALGORITHM AS274  APPL. STATIST. (1992) VOL.41, NO. 2"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,746,/     Re-order the variables in an orthogonal reduction produced by
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,747,"/     AS75.1 so that the N variables in LIST start at position POS1,"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,748,/     though will not necessarily be in the same order as in LIST.
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,749,/     Any variables in VORDER before position POS1 are not moved.
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,751,/     Auxiliary routine called: VMOVE
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,784, Gets the diagonal of the Hat matrix also known as the leverage matrix
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,860,* Gets the diagonal of the Hat matrix also known as the leverage matrix.
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,787, @returns the diagonal element of the hatmatrix
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,862,* @param  row_data returns the diagonal of the hat matrix for this observation
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,863,* @return the diagonal element of the hatmatrix
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,824," Gets the order of the regressors, useful if sometype of reording"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,900,"* Gets the order of the regressors, useful if some type of reordering"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,826, a reordering
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,827, @returns int[] with the current order of the regressors
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,902,* a reordering.
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,904,* @return int[] with the current order of the regressors
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,829,ublic int[] getOrderOfRegressors() {
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,906,public int[] getOrderOfRegressors(){
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,911,"* Conducts a regression on the data in the model, using all regressors."
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,913,* @return RegressionResults the structure holding all regression results
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,914,* @exception  MathException - thrown if number of observations is
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,915,* less than the number of variables
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,838,ublic RegressionResults regress(int numberOfRegressors) throws MathException {
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,922,"* Conducts a regression on the data in the model, using a subset of regressors."
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,924,* @param numberOfRegressors many of the regressors to include (either in canonical
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,925,"* order, or in the current reordered state)"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,926,* @return RegressionResults the structure holding all regression results
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,927,* @exception  MathException - thrown if number of observations is
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,928,* less than the number of variables or number of regressors requested
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,929,* is greater than the regressors in the model
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,931,public RegressionResults regress(int numberOfRegressors) throws MathException{
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,840,"ocalizable outMsg = new DummyLocalizable(""Number of observations not "" +"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,841,"greater than the number of number of variables"");"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,933,Localizable outMsg = new DummyLocalizable(nobsVsNvarsMessage);
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,845,"ocalizable outMsg = new DummyLocalizable(""Number of variables requested "" +"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,846,"in regression greater than the number of number of variables"");"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,937,Localizable outMsg = new DummyLocalizable(nvarsMessage);
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,1005,"* Conducts a regression on the data in the model, using regressors in array"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,1006,* Calling this method will change the internal order of the regressors
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,1007,* and care is required in interpreting the hatmatrix.
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,1009,* @param  variablesToInclude array of variables to include in regression
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,1010,* @return RegressionResults the structure holding all regression results
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,1011,* @exception  MathException - thrown if number of observations is
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,1012,* less than the number of variables or
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,1013,* number of regressors requested
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,1014,* is greater than the regressors in the model or
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,1015,* a regress or index in regressor array does not exist
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,915,"ocalizable outMsg = new DummyLocalizable(""Number of variables in included list "" +"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,916,"greater than the number of number of variables"");"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,1019,Localizable outMsg = new DummyLocalizable(nvarsMessage);
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,920,"ocalizable outMsg = new DummyLocalizable(""Number of observations not "" +"
False,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,921,"greater than the number of number of variables"");"
True,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java,1023,Localizable outMsg = new DummyLocalizable(nobsVsNvarsMessage);
