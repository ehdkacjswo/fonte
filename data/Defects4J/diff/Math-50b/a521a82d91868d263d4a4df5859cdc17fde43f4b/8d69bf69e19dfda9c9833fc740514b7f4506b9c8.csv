is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,15,* limitations under the License.
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,17,package org.apache.commons.math.stat.correlation;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,19,import org.apache.commons.math.MathException;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,20,import org.apache.commons.math.MathRuntimeException;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,21,import org.apache.commons.math.distribution.TDistribution;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,22,import org.apache.commons.math.distribution.TDistributionImpl;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,23,import org.apache.commons.math.linear.RealMatrix;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,24,import org.apache.commons.math.linear.DenseRealMatrix;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,25,import org.apache.commons.math.stat.regression.SimpleRegression;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,28,* Computes Pearson's product-moment correlation coefficients for pairs of arrays
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,29,* or columns of a matrix.
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,31,* <p>The constructors that take <code>RealMatrix</code> or
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,32,* <code>double[][]</code> arguments generate correlation matrices.  The
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,33,* columns of the input matrices are assumed to represent variable values.
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,34,* Correlations are given by the formula</p>
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,35,"* <code>cor(X, Y) = &Sigma;[(x<sub>i</sub> - E(X))(y<sub>i</sub> - E(Y))] / [(n - 1)s(X)s(Y)]</code>"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,36,"* where <code>E(X)</code> is the mean of <code>X</code>, <code>E(Y)</code>"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,37,"* is the mean of the <code>Y</code> values and s(X), s(Y) are standard deviations."
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,39,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,40,* @since 2.0
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,42,public class PearsonsCorrelation {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,44,/** correlation matrix */
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,45,private final RealMatrix correlationMatrix;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,47,/** number of observations */
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,48,private final int nObs;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,51,* Create a PearsonsCorrelation instance without data
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,53,public PearsonsCorrelation() {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,54,super();
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,55,correlationMatrix = null;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,56,nObs = 0;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,60,* Create a PearsonsCorrelation from a rectangular array
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,61,* whose columns represent values of variables to be correlated.
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,63,* @param data rectangular array with columns representing variables
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,64,* @throws IllegalArgumentException if the input data array is not
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,65,* rectangular with at least two rows and two columns.
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,67,public PearsonsCorrelation(double[][] data) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,68,this(new DenseRealMatrix(data));
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,72,* Create a PearsonsCorrelation from a RealMatrix whose columns
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,73,* represent variables to be correlated.
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,75,* @param matrix matrix with columns representing variables to correlate
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,77,public PearsonsCorrelation(RealMatrix matrix) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,78,checkSufficientData(matrix);
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,79,nObs = matrix.getRowDimension();
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,80,correlationMatrix = computeCorrelation(matrix);
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,84,* Create a PearsonsCorrelation from a {@link Covariance}.  The correlation
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,85,* matrix is computed by scaling the Covariance's covariance matrix.
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,86,* The Covariance instance must have been created from a data matrix with
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,87,* columns representing variable values.
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,89,* @param covariance Covariance instance
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,91,public PearsonsCorrelation(Covariance covariance) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,92,RealMatrix covarianceMatrix = covariance.getCovarianceMatrix();
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,93,if (covarianceMatrix == null) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,94,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,95,"""Covariance matrix is null"", null);"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,97,nObs = covariance.getN();
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,98,correlationMatrix = covarianceToCorrelation(covarianceMatrix);
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,102,* Create a PearsonsCorrelation from a covariance matrix.  The correlation
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,103,* matrix is computed by scaling the covariance matrix.
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,105,* @param covarianceMatrix covariance matrix
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,106,* @param numberOfObservations the number of observations in the dataset used to compute
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,107,* the covariance matrix
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,109,"public PearsonsCorrelation(RealMatrix covarianceMatrix, int numberOfObservations) {"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,110,nObs = numberOfObservations;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,111,correlationMatrix = covarianceToCorrelation(covarianceMatrix);
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,116,* Returns the correlation matrix
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,118,* @return correlation matrix
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,120,public RealMatrix getCorrelationMatrix() {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,121,return correlationMatrix;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,125,* Returns a matrix of standard errors associated with the estimates
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,126,* in the correlation matrix.<br/>
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,127,"* <code>getCorrelationStandardErrors().getEntry(i,j)</code> is the standard"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,128,"* error associated with <code>getCorrelationMatrix.getEntry(i,j)</code>"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,129,* <p>The formula used to compute the standard error is <br/>
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,130,* <code>SE<sub>r</sub> = ((1 - r<sup>2</sup>) / (n - 2))<sup>1/2</sup></code>
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,131,* where <code>r</code> is the estimated correlation coefficient and
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,132,* <code>n</code> is the number of observations in the source dataset.</p>
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,134,* @return matrix of correlation standard errors
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,136,public RealMatrix getCorrelationStandardErrors() {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,137,int nVars = correlationMatrix.getColumnDimension();
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,138,double[][] out = new double[nVars][nVars];
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,139,for (int i = 0; i < nVars; i++) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,140,for (int j = 0; j < nVars; j++) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,141,"double r = correlationMatrix.getEntry(i, j);"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,142,out[i][j] = Math.sqrt((1 - r * r) /(nObs - 2));
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,145,return new DenseRealMatrix(out);
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,149,* Returns a matrix of p-values associated with the (two-sided) null
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,150,* hypothesis that the corresponding correlation coefficient is zero.
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,151,"* <p><code>getCorrelationPValues().getEntry(i,j)</code> is the probability"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,152,* that a random variable distributed as <code>t<sub>n-2</sub></code> takes
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,153,* a value with absolute value greater than or equal to <br>
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,154,* <code>|r|((n - 2) / (1 - r<sup>2</sup>))<sup>1/2</sup></code></p>
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,155,* <p>The values in the matrix are sometimes referred to as the
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,156,* <i>significance</i> of the corresponding correlation coefficients.</p>
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,158,* @return matrix of p-values
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,159,* @throws MathException if an error occurs estimating probabilities
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,161,public RealMatrix getCorrelationPValues() throws MathException {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,162,TDistribution tDistribution = new TDistributionImpl(nObs - 2);
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,163,int nVars = correlationMatrix.getColumnDimension();
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,164,double[][] out = new double[nVars][nVars];
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,165,for (int i = 0; i < nVars; i++) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,166,for (int j = 0; j < nVars; j++) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,167,if (i == j) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,168,out[i][j] = 0d;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,169,} else {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,170,"double r = correlationMatrix.getEntry(i, j);"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,171,double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,172,out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,176,return new DenseRealMatrix(out);
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,181,* Computes the correlation matrix for the columns of the
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,182,* input matrix.
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,184,* @param matrix matrix with columns representing variables to correlate
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,185,* @return correlation matrix
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,187,public RealMatrix computeCorrelation(RealMatrix matrix) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,188,int nVars = matrix.getColumnDimension();
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,189,"RealMatrix outMatrix = new DenseRealMatrix(nVars, nVars);"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,190,for (int i = 0; i < nVars; i++) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,191,for (int j = 0; j < i; j++) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,192,"double corr = correlation(matrix.getColumn(i), matrix.getColumn(j));"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,193,"outMatrix.setEntry(i, j, corr);"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,194,"outMatrix.setEntry(j, i, corr);"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,196,"outMatrix.setEntry(i, i, 1d);"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,198,return outMatrix;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,202,* Computes the Pearson's product-moment correlation coefficient between the two arrays.
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,204,* </p>Throws IllegalArgumentException if the arrays do not have the same length
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,205,* or their common length is less than 2</p>
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,207,* @param xArray first data array
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,208,* @param yArray second data array
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,209,* @return Returns Pearson's correlation coefficient for the two arrays
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,210,* @throws  IllegalArgumentException if the arrays lengths do not match or
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,211,* there is insufficient data
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,213,"public double correlation(final double[] xArray, final double[] yArray) throws IllegalArgumentException {"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,214,SimpleRegression regression = new SimpleRegression();
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,215,if(xArray.length == yArray.length && xArray.length > 1) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,216,for(int i=0; i<xArray.length; i++) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,217,"regression.addData(xArray[i], yArray[i]);"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,219,return regression.getR();
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,221,else {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,222,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,223,"""Invalid array dimensions. xArray has size {0}; yArray has {1} elements"","
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,224,"new Object[] {xArray.length, yArray.length});"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,229,* Derives a correlation matrix from a covariance matrix.
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,231,* <p>Uses the formula <br/>
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,232,"* <code>r(X,Y) = cov(X,Y)/s(X)s(Y)</code> where"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,233,"* <code>r(&middot,&middot;)</code> is the correlation coefficient and"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,234,* <code>s(&middot;)</code> means standard deviation.</p>
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,236,* @param covarianceMatrix the covariance matrix
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,237,* @return correlation matrix
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,239,public RealMatrix covarianceToCorrelation(RealMatrix covarianceMatrix) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,240,int nVars = covarianceMatrix.getColumnDimension();
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,241,"RealMatrix outMatrix = new DenseRealMatrix(nVars, nVars);"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,242,for (int i = 0; i < nVars; i++) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,243,"double sigma = Math.sqrt(covarianceMatrix.getEntry(i, i));"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,244,"outMatrix.setEntry(i, i, 1d);"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,245,for (int j = 0; j < i; j++) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,246,"double entry = covarianceMatrix.getEntry(i, j) /"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,247,"(sigma * Math.sqrt(covarianceMatrix.getEntry(j, j)));"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,248,"outMatrix.setEntry(i, j, entry);"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,249,"outMatrix.setEntry(j, i, entry);"
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,252,return outMatrix;
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,256,* Throws IllegalArgumentException of the matrix does not have at least
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,257,* two columns and two rows
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,259,* @param matrix matrix to check for sufficiency
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,261,private void checkSufficientData(final RealMatrix matrix) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,262,int nRows = matrix.getRowDimension();
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,263,int nCols = matrix.getColumnDimension();
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,264,if (nRows < 2 || nCols < 2) {
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,265,throw MathRuntimeException.createIllegalArgumentException(
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,266,"""Insufficient data: only {0} rows and {1} columns."","
True,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,267,"new Object[]{nRows, nCols});"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,17,package org.apache.commons.math.stat.correlation;
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,19,import org.apache.commons.math.TestUtils;
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,20,import org.apache.commons.math.distribution.TDistribution;
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,21,import org.apache.commons.math.distribution.TDistributionImpl;
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,22,import org.apache.commons.math.linear.RealMatrix;
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,23,import org.apache.commons.math.linear.DenseRealMatrix;
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,25,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,27,public class PearsonsCorrelationTest extends TestCase {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,29,protected final double[] longleyData = new double[] {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,30,"60323,83.0,234289,2356,1590,107608,1947,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,31,"61122,88.5,259426,2325,1456,108632,1948,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,32,"60171,88.2,258054,3682,1616,109773,1949,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,33,"61187,89.5,284599,3351,1650,110929,1950,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,34,"63221,96.2,328975,2099,3099,112075,1951,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,35,"63639,98.1,346999,1932,3594,113270,1952,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,36,"64989,99.0,365385,1870,3547,115094,1953,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,37,"63761,100.0,363112,3578,3350,116219,1954,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,38,"66019,101.2,397469,2904,3048,117388,1955,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,39,"67857,104.6,419180,2822,2857,118734,1956,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,40,"68169,108.4,442769,2936,2798,120445,1957,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,41,"66513,110.8,444546,4681,2637,121950,1958,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,42,"68655,112.6,482704,3813,2552,123366,1959,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,43,"69564,114.2,502601,3931,2514,125368,1960,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,44,"69331,115.7,518173,4806,2572,127852,1961,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,45,"70551,116.9,554894,4007,2827,130081,1962"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,48,protected final double[] swissData = new double[] {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,49,"80.2,17.0,15,12,9.96,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,50,"83.1,45.1,6,9,84.84,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,51,"92.5,39.7,5,5,93.40,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,52,"85.8,36.5,12,7,33.77,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,53,"76.9,43.5,17,15,5.16,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,54,"76.1,35.3,9,7,90.57,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,55,"83.8,70.2,16,7,92.85,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,56,"92.4,67.8,14,8,97.16,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,57,"82.4,53.3,12,7,97.67,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,58,"82.9,45.2,16,13,91.38,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,59,"87.1,64.5,14,6,98.61,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,60,"64.1,62.0,21,12,8.52,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,61,"66.9,67.5,14,7,2.27,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,62,"68.9,60.7,19,12,4.43,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,63,"61.7,69.3,22,5,2.82,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,64,"68.3,72.6,18,2,24.20,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,65,"71.7,34.0,17,8,3.30,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,66,"55.7,19.4,26,28,12.11,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,67,"54.3,15.2,31,20,2.15,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,68,"65.1,73.0,19,9,2.84,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,69,"65.5,59.8,22,10,5.23,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,70,"65.0,55.1,14,3,4.52,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,71,"56.6,50.9,22,12,15.14,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,72,"57.4,54.1,20,6,4.20,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,73,"72.5,71.2,12,1,2.40,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,74,"74.2,58.1,14,8,5.23,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,75,"72.0,63.5,6,3,2.56,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,76,"60.5,60.8,16,10,7.72,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,77,"58.3,26.8,25,19,18.46,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,78,"65.4,49.5,15,8,6.10,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,79,"75.5,85.9,3,2,99.71,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,80,"69.3,84.9,7,6,99.68,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,81,"77.3,89.7,5,2,100.00,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,82,"70.5,78.2,12,6,98.96,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,83,"79.4,64.9,7,3,98.22,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,84,"65.0,75.9,9,9,99.06,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,85,"92.2,84.6,3,3,99.46,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,86,"79.3,63.1,13,13,96.83,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,87,"70.4,38.4,26,12,5.62,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,88,"65.7,7.7,29,11,13.79,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,89,"72.7,16.7,22,13,11.22,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,90,"64.4,17.6,35,32,16.92,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,91,"77.6,37.6,15,7,4.97,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,92,"67.6,18.7,25,7,8.65,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,93,"35.0,1.2,37,53,42.34,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,94,"44.7,46.6,16,29,50.43,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,95,"42.8,27.7,22,29,58.33"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,100,* Test Longley dataset against R.
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,102,public void testLongly() throws Exception {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,103,"RealMatrix matrix = createRealMatrix(longleyData, 16, 7);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,104,PearsonsCorrelation corrInstance = new PearsonsCorrelation(matrix);
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,105,RealMatrix correlationMatrix = corrInstance.getCorrelationMatrix();
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,106,double[] rData = new double[] {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,107,"1.000000000000000, 0.9708985250610560, 0.9835516111796693, 0.5024980838759942,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,108,"0.4573073999764817, 0.960390571594376, 0.9713294591921188,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,109,"0.970898525061056, 1.0000000000000000, 0.9915891780247822, 0.6206333925590966,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,110,"0.4647441876006747, 0.979163432977498, 0.9911491900672053,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,111,"0.983551611179669, 0.9915891780247822, 1.0000000000000000, 0.6042609398895580,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,112,"0.4464367918926265, 0.991090069458478, 0.9952734837647849,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,113,"0.502498083875994, 0.6206333925590966, 0.6042609398895580, 1.0000000000000000,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,114,"-0.1774206295018783, 0.686551516365312, 0.6682566045621746,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,115,"0.457307399976482, 0.4647441876006747, 0.4464367918926265, -0.1774206295018783,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,116,"1.0000000000000000, 0.364416267189032, 0.4172451498349454,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,117,"0.960390571594376, 0.9791634329774981, 0.9910900694584777, 0.6865515163653120,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,118,"0.3644162671890320, 1.000000000000000, 0.9939528462329257,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,119,"0.971329459192119, 0.9911491900672053, 0.9952734837647849, 0.6682566045621746,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,120,"0.4172451498349454, 0.993952846232926, 1.0000000000000000"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,122,"TestUtils.assertEquals(""correlation matrix"", createRealMatrix(rData, 7, 7), correlationMatrix, 10E-15);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,124,double[] rPvalues = new double[] {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,125,"4.38904690369668e-10,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,126,"8.36353208910623e-12, 7.8159700933611e-14,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,127,"0.0472894097790304, 0.01030636128354301, 0.01316878049026582,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,128,"0.0749178049642416, 0.06971758330341182, 0.0830166169296545, 0.510948586323452,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,129,"3.693245043123738e-09, 4.327782576751815e-11, 1.167954621905665e-13, 0.00331028281967516, 0.1652293725106684,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,130,"3.95834476307755e-10, 1.114663916723657e-13, 1.332267629550188e-15, 0.00466039138541463, 0.1078477071581498, 7.771561172376096e-15"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,132,"RealMatrix rPMatrix = createLowerTriangularRealMatrix(rPvalues, 7);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,133,"fillUpper(rPMatrix, 0d);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,134,"TestUtils.assertEquals(""correlation p values"", rPMatrix, corrInstance.getCorrelationPValues(), 10E-15);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,138,* Test R Swiss fertility dataset against R.
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,140,public void testSwissFertility() throws Exception {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,141,"RealMatrix matrix = createRealMatrix(swissData, 47, 5);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,142,PearsonsCorrelation corrInstance = new PearsonsCorrelation(matrix);
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,143,RealMatrix correlationMatrix = corrInstance.getCorrelationMatrix();
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,144,double[] rData = new double[] {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,145,"1.0000000000000000, 0.3530791836199747, -0.6458827064572875, -0.6637888570350691,  0.4636847006517939,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,146,"0.3530791836199747, 1.0000000000000000,-0.6865422086171366, -0.6395225189483201, 0.4010950530487398,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,147,"-0.6458827064572875, -0.6865422086171366, 1.0000000000000000, 0.6984152962884830, -0.5727418060641666,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,148,"-0.6637888570350691, -0.6395225189483201, 0.6984152962884830, 1.0000000000000000, -0.1538589170909148,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,149,"0.4636847006517939, 0.4010950530487398, -0.5727418060641666, -0.1538589170909148, 1.0000000000000000"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,151,"TestUtils.assertEquals(""correlation matrix"", createRealMatrix(rData, 5, 5), correlationMatrix, 10E-15);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,153,double[] rPvalues = new double[] {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,154,"0.01491720061472623,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,155,"9.45043734069043e-07, 9.95151527133974e-08,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,156,"3.658616965962355e-07, 1.304590105694471e-06, 4.811397236181847e-08,"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,157,"0.001028523190118147, 0.005204433539191644, 2.588307925380906e-05, 0.301807756132683"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,159,"RealMatrix rPMatrix = createLowerTriangularRealMatrix(rPvalues, 5);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,160,"fillUpper(rPMatrix, 0d);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,161,"TestUtils.assertEquals(""correlation p values"", rPMatrix, corrInstance.getCorrelationPValues(), 10E-15);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,165,* Constant column
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,167,public void testConstant() {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,168,"double[] noVariance = new double[] {1, 1, 1, 1};"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,169,"double[] values = new double[] {1, 2, 3, 4};"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,170,"assertTrue(Double.isNaN(new PearsonsCorrelation().correlation(noVariance, values)));"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,171,"assertTrue(Double.isNaN(new PearsonsCorrelation().correlation(noVariance, values)));"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,176,* Insufficient data
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,179,public void testInsufficientData() {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,180,double[] one = new double[] {1};
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,181,double[] two = new double[] {2};
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,182,try {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,183,"new PearsonsCorrelation().correlation(one, two);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,184,"fail(""Expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,185,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,186,// Expected
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,188,"RealMatrix matrix = new DenseRealMatrix(new double[][] {{0},{1}});"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,189,try {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,190,new PearsonsCorrelation(matrix);
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,191,"fail(""Expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,192,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,193,// Expected
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,198,* Verify that direct t-tests using standard error estimates are consistent
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,199,* with reported p-values
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,201,public void testStdErrorConsistency() throws Exception {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,202,TDistribution tDistribution = new TDistributionImpl(45);
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,203,"RealMatrix matrix = createRealMatrix(swissData, 47, 5);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,204,PearsonsCorrelation corrInstance = new PearsonsCorrelation(matrix);
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,205,RealMatrix rValues = corrInstance.getCorrelationMatrix();
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,206,RealMatrix pValues = corrInstance.getCorrelationPValues();
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,207,RealMatrix stdErrors = corrInstance.getCorrelationStandardErrors();
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,208,for (int i = 0; i < 5; i++) {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,209,for (int j = 0; j < i; j++) {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,210,"double t = Math.abs(rValues.getEntry(i, j)) / stdErrors.getEntry(i, j);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,211,double p = 2 * (1 - tDistribution.cumulativeProbability(t));
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,212,"assertEquals(p, pValues.getEntry(i, j), 10E-15);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,218,* Verify that creating correlation from covariance gives same results as
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,219,* direct computation from the original matrix
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,221,public void testCovarianceConsistency() throws Exception {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,222,"RealMatrix matrix = createRealMatrix(longleyData, 16, 7);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,223,PearsonsCorrelation corrInstance = new PearsonsCorrelation(matrix);
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,224,Covariance covInstance = new Covariance(matrix);
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,225,PearsonsCorrelation corrFromCovInstance = new PearsonsCorrelation(covInstance);
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,226,"TestUtils.assertEquals(""correlation values"", corrInstance.getCorrelationMatrix(),"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,227,"corrFromCovInstance.getCorrelationMatrix(), 10E-15);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,228,"TestUtils.assertEquals(""p values"", corrInstance.getCorrelationPValues(),"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,229,"corrFromCovInstance.getCorrelationPValues(), 10E-15);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,230,"TestUtils.assertEquals(""standard errors"", corrInstance.getCorrelationStandardErrors(),"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,231,"corrFromCovInstance.getCorrelationStandardErrors(), 10E-15);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,233,PearsonsCorrelation corrFromCovInstance2 =
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,234,"new PearsonsCorrelation(covInstance.getCovarianceMatrix(), 16);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,235,"TestUtils.assertEquals(""correlation values"", corrInstance.getCorrelationMatrix(),"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,236,"corrFromCovInstance2.getCorrelationMatrix(), 10E-15);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,237,"TestUtils.assertEquals(""p values"", corrInstance.getCorrelationPValues(),"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,238,"corrFromCovInstance2.getCorrelationPValues(), 10E-15);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,239,"TestUtils.assertEquals(""standard errors"", corrInstance.getCorrelationStandardErrors(),"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,240,"corrFromCovInstance2.getCorrelationStandardErrors(), 10E-15);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,243,"protected RealMatrix createRealMatrix(double[] data, int nRows, int nCols) {"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,244,double[][] matrixData = new double[nRows][nCols];
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,245,int ptr = 0;
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,246,for (int i = 0; i < nRows; i++) {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,247,"System.arraycopy(data, ptr, matrixData[i], 0, nCols);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,248,ptr += nCols;
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,250,return new DenseRealMatrix(matrixData);
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,253,"protected RealMatrix createLowerTriangularRealMatrix(double[] data, int dimension) {"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,254,int ptr = 0;
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,255,"RealMatrix result = new DenseRealMatrix(dimension, dimension);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,256,for (int i = 1; i < dimension; i++) {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,257,for (int j = 0; j < i; j++) {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,258,"result.setEntry(i, j, data[ptr]);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,259,ptr++;
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,262,return result;
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,265,"protected void fillUpper(RealMatrix matrix, double diagonalValue) {"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,266,int dimension = matrix.getColumnDimension();
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,267,for (int i = 0; i < dimension; i++) {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,268,"matrix.setEntry(i, i, diagonalValue);"
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,269,for (int j = i+1; j < dimension; j++) {
True,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,270,"matrix.setEntry(i, j, matrix.getEntry(j, i));"
