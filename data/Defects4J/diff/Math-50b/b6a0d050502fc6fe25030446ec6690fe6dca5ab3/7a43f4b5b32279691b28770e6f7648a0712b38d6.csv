is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,15,* limitations under the License.
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,18,package org.apache.commons.math.ode;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,20,import java.util.Collection;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,22,import org.apache.commons.math.ode.events.CombinedEventsManager;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,23,import org.apache.commons.math.ode.events.EventHandler;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,24,import org.apache.commons.math.ode.sampling.DummyStepHandler;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,25,import org.apache.commons.math.ode.sampling.StepHandler;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,28,* Base class managing common boilerplate for all integrators.
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,29,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,30,* @since 2.0
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,32,public abstract class AbstractIntegrator implements FirstOrderIntegrator {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,34,/** Name of the method. */
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,35,private final String name;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,37,/** Step handler. */
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,38,protected StepHandler handler;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,40,/** Current step start time. */
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,41,protected double stepStart;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,43,/** Current stepsize. */
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,44,protected double stepSize;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,46,/** Events handlers manager. */
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,47,protected CombinedEventsManager eventsHandlersManager;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,49,/** Build an instance.
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,50,* @param name name of the method
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,52,public AbstractIntegrator(final String name) {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,53,this.name = name;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,54,handler = DummyStepHandler.getInstance();
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,55,stepStart = Double.NaN;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,56,stepSize  = Double.NaN;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,57,eventsHandlersManager = new CombinedEventsManager();
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,60,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,61,public String getName() {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,62,return name;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,65,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,66,public void setStepHandler(final StepHandler handler) {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,67,this.handler = handler;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,70,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,71,public StepHandler getStepHandler() {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,72,return handler;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,75,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,76,"public void addEventHandler(final EventHandler function,"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,77,"final double maxCheckInterval,"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,78,"final double convergence,"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,79,final int maxIterationCount) {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,80,"eventsHandlersManager.addEventHandler(function, maxCheckInterval,"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,81,"convergence, maxIterationCount);"
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,84,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,85,public Collection<EventHandler> getEventsHandlers() {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,86,return eventsHandlersManager.getEventsHandlers();
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,89,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,90,public void clearEventsHandlers() {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,91,eventsHandlersManager.clearEventsHandlers();
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,94,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,95,public double getCurrentStepStart() {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,96,return stepStart;
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,99,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,100,public double getCurrentSignedStepsize() {
True,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/java/org/apache/commons/math/ode/AbstractIntegrator.java,101,return stepSize;
True,src/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/java/org/apache/commons/math/ode/ContinuousOutputModel.java,24,import org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator;
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,18,ackage org.apache.commons.math.ode;
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,18,package org.apache.commons.math.ode.nonstiff;
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,20,mport java.util.Collection;
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,22,mport org.apache.commons.math.ode.events.EventHandler;
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,23,mport org.apache.commons.math.ode.events.CombinedEventsManager;
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,24,mport org.apache.commons.math.ode.sampling.DummyStepHandler;
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,25,mport org.apache.commons.math.ode.sampling.StepHandler;
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,20,import org.apache.commons.math.ode.AbstractIntegrator;
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,21,import org.apache.commons.math.ode.DerivativeException;
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,22,import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,23,import org.apache.commons.math.ode.IntegratorException;
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,57,mplements FirstOrderIntegrator {
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,55,extends AbstractIntegrator {
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,59,* @param name name of the method
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,68,"ublic AdaptiveStepsizeIntegrator(final double minStep, final double maxStep,"
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,67,"public AdaptiveStepsizeIntegrator(final String name,"
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,68,"final double minStep, final double maxStep,"
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,72,super(name);
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,81,/ set the default step handler
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,82,andler = DummyStepHandler.getInstance();
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,84,ventsHandlersManager = new CombinedEventsManager();
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,89,* @param name name of the method
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,99,"ublic AdaptiveStepsizeIntegrator(final double minStep, final double maxStep,"
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,97,"public AdaptiveStepsizeIntegrator(final String name,"
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,98,"final double minStep, final double maxStep,"
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,102,super(name);
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,112,/ set the default step handler
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,113,andler = DummyStepHandler.getInstance();
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,115,ventsHandlersManager = new CombinedEventsManager();
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,140,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,141,ublic void setStepHandler (final StepHandler handler) {
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,142,his.handler = handler;
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,145,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,146,ublic StepHandler getStepHandler() {
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,147,eturn handler;
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,150,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,151,"ublic void addEventHandler(final EventHandler function,"
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,152,"inal double maxCheckInterval,"
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,153,"inal double convergence,"
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,154,inal int maxIterationCount) {
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,155,"ventsHandlersManager.addEventHandler(function, maxCheckInterval, convergence, maxIterationCount);"
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,158,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,159,ublic Collection<EventHandler> getEventsHandlers() {
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,160,eturn eventsHandlersManager.getEventsHandlers();
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,163,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,164,ublic void clearEventsHandlers() {
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,165,ventsHandlersManager.clearEventsHandlers();
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,343,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,344,ublic double getCurrentSignedStepsize() {
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,345,eturn stepSize;
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,389,** Step handler. */
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,390,rotected StepHandler handler;
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,392,** Events handlers manager. */
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,393,rotected CombinedEventsManager eventsHandlersManager;
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,395,** Current step start time. */
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,396,rotected double stepStart;
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,398,** Current stepsize. */
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,399,rotected double stepSize;
False,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,49,rivate static final long serialVersionUID = -8987762131146169612L;
False,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,51,** Integrator method name. */
False,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,52,"rivate static final String methodName = ""classical Runge-Kutta"";"
True,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,49,private static final long serialVersionUID = 3710070023793519840L;
False,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,77,"uper(c, a, b, new ClassicalRungeKuttaStepInterpolator(), step);"
False,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,80,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,81,ublic String getName() {
False,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,82,eturn methodName;
True,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,74,"super(""classical Runge-Kutta"", c, a, b,"
True,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java,75,"new ClassicalRungeKuttaStepInterpolator(), step);"
False,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,50,rivate static final long serialVersionUID = -5346655668732043826L;
True,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,50,private static final long serialVersionUID = -7932553613600031791L;
False,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,53,"rivate static final String methodName = ""Dormand-Prince 5(4)"";"
True,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,53,"private static final String METHOD_NAME = ""Dormand-Prince 5(4)"";"
False,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,107,"uper(true, staticC, staticA, staticB, new DormandPrince54StepInterpolator(),"
True,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,107,"super(METHOD_NAME, true, staticC, staticA, staticB, new DormandPrince54StepInterpolator(),"
False,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,123,"uper(true, staticC, staticA, staticB, new DormandPrince54StepInterpolator(),"
True,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,123,"super(METHOD_NAME, true, staticC, staticA, staticB, new DormandPrince54StepInterpolator(),"
False,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,127,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,128,ublic String getName() {
False,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,129,eturn methodName;
False,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,58,rivate static final long serialVersionUID = 6175337145090754336L;
True,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,58,private static final long serialVersionUID = -8627142100635188441L;
False,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,61,"rivate static final String methodName = ""Dormand-Prince 8 (5, 3)"";"
True,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,61,"private static final String METHOD_NAME = ""Dormand-Prince 8 (5, 3)"";"
False,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,219,"uper(true, staticC, staticA, staticB,"
True,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,219,"super(METHOD_NAME, true, staticC, staticA, staticB,"
False,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,236,"uper(true, staticC, staticA, staticB,"
True,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,236,"super(METHOD_NAME, true, staticC, staticA, staticB,"
False,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,241,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,242,ublic String getName() {
False,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,243,eturn methodName;
False,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,20,mport org.apache.commons.math.ode.AdaptiveStepsizeIntegrator;
True,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,67,* @param name name of the method
False,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,80,"rotected EmbeddedRungeKuttaIntegrator(final boolean fsal,"
True,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,80,"protected EmbeddedRungeKuttaIntegrator(final String name, final boolean fsal,"
False,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,87,"uper(minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance);"
True,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,87,"super(name, minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance);"
True,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,105,* @param name name of the method
False,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,117,"rotected EmbeddedRungeKuttaIntegrator(final boolean fsal,"
True,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,118,"protected EmbeddedRungeKuttaIntegrator(final String name, final boolean fsal,"
False,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,124,"uper(minStep, maxStep, vecAbsoluteTolerance, vecRelativeTolerance);"
True,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,125,"super(name, minStep, maxStep, vecAbsoluteTolerance, vecRelativeTolerance);"
False,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,141,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,142,ublic abstract String getName();
False,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,52,rivate static final long serialVersionUID = -3378479003330094013L;
False,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,54,** Integrator method name. */
False,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,55,"rivate static final String methodName = ""Euler"";"
True,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,52,private static final long serialVersionUID = 1828811360890387657L;
False,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,75,"uper(c, a, b, new EulerStepInterpolator(), step);"
False,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,78,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,79,ublic String getName() {
False,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,80,eturn methodName;
True,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java,72,"super(""Euler"", c, a, b, new EulerStepInterpolator(), step);"
False,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,48,rivate static final long serialVersionUID = -3270987073897562791L;
False,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,50,** Integrator method name. */
False,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,51,"rivate static final String methodName = ""Gill"";"
True,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,48,private static final long serialVersionUID = 5566682259665027132L;
False,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,75,"uper(c, a, b, new GillStepInterpolator(), step);"
False,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,78,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,79,ublic String getName() {
False,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,80,eturn methodName;
True,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java,72,"super(""Gill"", c, a, b, new GillStepInterpolator(), step);"
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,20,mport org.apache.commons.math.ode.AdaptiveStepsizeIntegrator;
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,100,rivate static final long serialVersionUID = -1263159462413447366L;
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,99,private static final long serialVersionUID = 7364884082146325264L;
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,103,"rivate static final String methodName = ""Gragg-Bulirsch-Stoer"";"
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,102,"private static final String METHOD_NAME = ""Gragg-Bulirsch-Stoer"";"
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,119,"uper(minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance);"
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,118,"super(METHOD_NAME, minStep, maxStep,"
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,119,"scalAbsoluteTolerance, scalRelativeTolerance);"
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,141,"uper(minStep, maxStep, vecAbsoluteTolerance, vecRelativeTolerance);"
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,141,"super(METHOD_NAME, minStep, maxStep,"
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,142,"vecAbsoluteTolerance, vecRelativeTolerance);"
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,378,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,379,ublic String getName() {
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,380,eturn methodName;
False,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,38,rivate static final long serialVersionUID = -1499486749907617454L;
True,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,38,private static final long serialVersionUID = 1462328766749870097L;
False,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,41,"rivate static final String methodName = ""Higham-Hall 5(4)"";"
True,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,41,"private static final String METHOD_NAME = ""Higham-Hall 5(4)"";"
False,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,80,"uper(false, staticC, staticA, staticB, new HighamHall54StepInterpolator(),"
True,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,80,"super(METHOD_NAME, false, staticC, staticA, staticB, new HighamHall54StepInterpolator(),"
False,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,96,"uper(false, staticC, staticA, staticB, new HighamHall54StepInterpolator(),"
True,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,96,"super(METHOD_NAME, false, staticC, staticA, staticB, new HighamHall54StepInterpolator(),"
False,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,100,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,101,ublic String getName() {
False,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,102,eturn methodName;
False,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,46,rivate static final long serialVersionUID = 1871083451154005310L;
False,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,48,** Integrator method name. */
False,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,49,"rivate static final String methodName = ""midpoint"";"
True,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,46,private static final long serialVersionUID = -7690774342890000483L;
False,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,71,"uper(c, a, b, new MidpointStepInterpolator(), step);"
False,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,74,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,75,ublic String getName() {
False,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,76,eturn methodName;
True,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java,68,"super(""midpoint"", c, a, b, new MidpointStepInterpolator(), step);"
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,20,mport java.util.Collection;
True,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,21,import org.apache.commons.math.ode.AbstractIntegrator;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,24,mport org.apache.commons.math.ode.FirstOrderIntegrator;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,26,mport org.apache.commons.math.ode.events.EventHandler;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,27,mport org.apache.commons.math.ode.events.CombinedEventsManager;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,29,mport org.apache.commons.math.ode.sampling.DummyStepHandler;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,31,mport org.apache.commons.math.ode.sampling.StepHandler;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,58,ublic abstract class RungeKuttaIntegrator
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,59,mplements FirstOrderIntegrator {
True,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,53,public abstract class RungeKuttaIntegrator extends AbstractIntegrator {
True,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,58,* @param name name of the method
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,70,"rotected RungeKuttaIntegrator(final double[] c, final double[][] a, final double[] b,"
True,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,65,"protected RungeKuttaIntegrator(final String name,"
True,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,66,"final double[] c, final double[][] a, final double[] b,"
True,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,69,super(name);
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,78,andler         = DummyStepHandler.getInstance();
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,79,ventsHandlersManager = new CombinedEventsManager();
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,80,esetInternalState();
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,83,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,84,ublic abstract String getName();
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,86,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,87,ublic void setStepHandler (final StepHandler handler) {
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,88,his.handler = handler;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,91,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,92,ublic StepHandler getStepHandler() {
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,93,eturn handler;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,96,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,97,"ublic void addEventHandler(final EventHandler function,"
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,98,"inal double maxCheckInterval,"
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,99,"inal double convergence,"
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,100,inal int maxIterationCount) {
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,101,"ventsHandlersManager.addEventHandler(function, maxCheckInterval, convergence, maxIterationCount);"
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,104,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,105,ublic Collection<EventHandler> getEventsHandlers() {
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,106,eturn eventsHandlersManager.getEventsHandlers();
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,109,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,110,ublic void clearEventsHandlers() {
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,111,ventsHandlersManager.clearEventsHandlers();
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,261,esetInternalState();
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,262,eturn stopTime;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,266,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,267,ublic double getCurrentStepStart() {
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,268,eturn stepStart;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,271,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,272,ublic double getCurrentSignedStepsize() {
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,273,eturn stepSize;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,276,** Reset internal state to dummy values. */
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,277,rivate void resetInternalState() {
True,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,226,return stopTime;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,297,** Step handler. */
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,298,rivate StepHandler handler;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,300,** Events handlers manager. */
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,301,rotected CombinedEventsManager eventsHandlersManager;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,303,** Current step start time. */
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,304,rivate double stepStart;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,306,** Current stepsize. */
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,307,rivate double stepSize;
False,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,48,rivate static final long serialVersionUID = -5738562635641912717L;
False,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,50,** Integrator method name. */
False,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,51,"rivate static final String methodName = ""3/8"";"
True,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,48,private static final long serialVersionUID = -2480984691453028021L;
False,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,75,"uper(c, a, b, new ThreeEighthesStepInterpolator(), step);"
False,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,78,** {@inheritDoc} */
False,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,79,ublic String getName() {
False,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,80,eturn methodName;
True,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java,72,"super(""3/8"", c, a, b, new ThreeEighthesStepInterpolator(), step);"
False,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java,20,mport org.apache.commons.math.ode.AdaptiveStepsizeIntegrator;
False,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,20,mport org.apache.commons.math.ode.AdaptiveStepsizeIntegrator;
