is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,105,* Builds a message string by from a pattern and its arguments.
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,106,* @param pattern format specifier
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,107,* @param arguments format arguments
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,108,* @param locale Locale in which the message should be translated
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,109,* @return a message string
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,111,"private static String buildMessage(String pattern, Object[] arguments, Locale locale) {"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,112,"// do it the hard way, for Java 1.3. compatibility"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,113,"MessageFormat mf = new MessageFormat(translate(pattern, locale));"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,114,mf.setLocale(locale);
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,115,return mf.format(arguments);
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,137,"uper(new MessageFormat(pattern, Locale.US).format(arguments));"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,151,"super(buildMessage(pattern, arguments, Locale.US));"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,183,"uper(new MessageFormat(pattern, Locale.US).format(arguments));"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,197,"super(buildMessage(pattern, arguments, Locale.US));"
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,212,f (pattern == null) {
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,213,eturn null;
False,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,215,"eturn new MessageFormat(translate(pattern, locale), locale).format(arguments);"
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,226,"return (pattern == null) ? null : buildMessage(pattern, arguments, locale);"
