is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,164,"ssert.assertEquals(dfdx.value(x), chain.value(x), 1e-13);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,164,final double r = dfdx.value(x);
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,165,"Assert.assertEquals(r, chain.value(x), r * 1e-15);"
False,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,167,"ssert.assertEquals(dfdx.value(lo), chain.value(lo), EPS);"
False,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,168,"ssert.assertEquals(dfdx.value(hi), chain.value(hi), EPS);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,168,"Assert.assertEquals(dfdx.value(lo), chain.value(lo), 0); // -inf"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,169,"Assert.assertEquals(dfdx.value(hi), chain.value(hi), 0); // +inf"
