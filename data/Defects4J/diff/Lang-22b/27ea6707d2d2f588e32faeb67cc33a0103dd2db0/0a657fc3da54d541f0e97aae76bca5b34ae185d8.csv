is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,39,* Originally org.apache.commons.digester.substitution.MultiVariableExpander
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,55,+nEntries;
True,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,57,nEntries++;
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,68,or(int i=0; i<nEntries; ++i) {
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,69,aram = format(
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,70,"aram,"
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,71,"String) markers.get(i),"
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,72,Map) sources.get(i));
True,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,70,for(int i=0; i<nEntries; i++) {
True,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,71,"param = format( param, (String) markers.get(i), (Map) sources.get(i));"
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,97,or(;;)
True,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,96,while(true) {
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,100,f (index == -1)
True,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,98,if (index == -1) {
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,106,f (startIndex > str.length())
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,108,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,109,"var expression starts at end of string"");"
True,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,103,if (startIndex > str.length()) {
True,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,104,"throw new IllegalArgumentException(""var expression starts at end of string"");"
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,113,f (endIndex == -1)
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,115,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,116,"var expression starts but does not end"");"
True,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,108,if (endIndex == -1) {
True,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,109,"throw new IllegalArgumentException(""var expression starts but does not end"");"
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,122,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,123,"parameter ["" + key + ""] is not defined."");"
True,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,115,"throw new IllegalArgumentException(""parameter ["" + key + ""] is not defined."");"
