is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,72,      - compares two Strings and reports on their differences</li>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,72,*      - compares Strings and reports on their differences</li>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,119,* @author Scott Johnson
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5012,* <p>Compares all Strings in an array and returns the index at which the
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5013,* Strings begin to differ.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5015,"* <p>For example,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5016,"* <code>indexOfDifference(new String[] {""i am a machine"", ""i am a robot""}) -> 7</code></p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5018,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5019,* StringUtils.indexOfDifference(null) = -1
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5020,* StringUtils.indexOfDifference(new String[] {}) = -1
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5021,"* StringUtils.indexOfDifference(new String[] {""abc""}) = -1"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5022,"* StringUtils.indexOfDifference(new String[] {null, null}) = -1"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5023,"* StringUtils.indexOfDifference(new String[] {"""", """"}) = -1"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5024,"* StringUtils.indexOfDifference(new String[] {"""", null}) = 0"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5025,"* StringUtils.indexOfDifference(new String[] {""abc"", null, null}) = 0"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5026,"* StringUtils.indexOfDifference(new String[] {null, null, ""abc""}) = 0"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5027,"* StringUtils.indexOfDifference(new String[] {"""", ""abc""}) = 0"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5028,"* StringUtils.indexOfDifference(new String[] {""abc"", """"}) = 0"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5029,"* StringUtils.indexOfDifference(new String[] {""abc"", ""abc""}) = -1"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5030,"* StringUtils.indexOfDifference(new String[] {""abc"", ""a""}) = 1"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5031,"* StringUtils.indexOfDifference(new String[] {""ab"", ""abxyz""}) = 2"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5032,"* StringUtils.indexOfDifference(new String[] {""abcde"", ""abxyz""}) = 2"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5033,"* StringUtils.indexOfDifference(new String[] {""abcde"", ""xyz""}) = 0"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5034,"* StringUtils.indexOfDifference(new String[] {""xyz"", ""abcde""}) = 0"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5035,"* StringUtils.indexOfDifference(new String[] {""i am a machine"", ""i am a robot""}) = 7"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5036,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5038,"* @param strs  array of strings, entries may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5039,* @return the index where the strings begin to differ; -1 if they are all equal
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5041,public static int indexOfDifference(String[] strs) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5042,if (strs == null || strs.length <= 1) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5043,return -1;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5045,boolean anyStringNull = false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5046,boolean allStringsNull = true;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5047,int arrayLen = strs.length;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5048,int shortestStrLen = Integer.MAX_VALUE;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5049,int longestStrLen = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5051,// find the min and max string lengths; this avoids checking to make
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5052,// sure we are not exceeding the length of the string each time through
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5053,// the bottom loop.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5054,for (int i=0; i<arrayLen; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5055,if (strs[i] == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5056,anyStringNull = true;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5057,shortestStrLen = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5058,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5059,allStringsNull = false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5060,"shortestStrLen = Math.min(strs[i].length(), shortestStrLen);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5061,"longestStrLen = Math.max(strs[i].length(), longestStrLen);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5065,// handle lists containing all nulls or all empty strings
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5066,if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5067,return -1;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5070,// handle lists containing some nulls or some empty strings
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5071,if (shortestStrLen == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5072,return 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5075,// find the position with the first difference across all strings
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5076,int firstDiff = -1;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5077,for (int stringPos = 0; stringPos<shortestStrLen; stringPos++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5078,char comparisonChar = strs[0].charAt(stringPos);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5079,for (int arrayPos = 1; arrayPos<arrayLen; arrayPos++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5080,if (strs[arrayPos].charAt(stringPos) != comparisonChar) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5081,firstDiff = stringPos;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5082,break;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5085,if (firstDiff != -1) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5086,break;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5090,if (firstDiff == -1 && shortestStrLen != longestStrLen) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5091,// we compared all of the characters up to the length of the
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5092,"// shortest string and didn't find a match, but the string lengths"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5093,"// vary, so return the length of the shortest string."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5094,return shortestStrLen;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5095,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5096,return firstDiff;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5101,* <p>Compares all Strings in an array and returns the initial sequence of
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5102,* characters that is common to all of them.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5104,"* <p>For example,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5105,"* <code>getCommonPrefix(new String[] {""i am a machine"", ""i am a robot""}) -> ""i am a ""</code></p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5107,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5108,"* StringUtils.getCommonPrefix(null) = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5109,"* StringUtils.getCommonPrefix(new String[] {}) = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5110,"* StringUtils.getCommonPrefix(new String[] {""abc""}) = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5111,"* StringUtils.getCommonPrefix(new String[] {null, null}) = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5112,"* StringUtils.getCommonPrefix(new String[] {"""", """"}) = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5113,"* StringUtils.getCommonPrefix(new String[] {"""", null}) = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5114,"* StringUtils.getCommonPrefix(new String[] {""abc"", null, null}) = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5115,"* StringUtils.getCommonPrefix(new String[] {null, null, ""abc""}) = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5116,"* StringUtils.getCommonPrefix(new String[] {"""", ""abc""}) = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5117,"* StringUtils.getCommonPrefix(new String[] {""abc"", """"}) = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5118,"* StringUtils.getCommonPrefix(new String[] {""abc"", ""abc""}) = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5119,"* StringUtils.getCommonPrefix(new String[] {""abc"", ""a""}) = ""a"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5120,"* StringUtils.getCommonPrefix(new String[] {""ab"", ""abxyz""}) = ""ab"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5121,"* StringUtils.getCommonPrefix(new String[] {""abcde"", ""abxyz""}) = ""ab"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5122,"* StringUtils.getCommonPrefix(new String[] {""abcde"", ""xyz""}) = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5123,"* StringUtils.getCommonPrefix(new String[] {""xyz"", ""abcde""}) = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5124,"* StringUtils.getCommonPrefix(new String[] {""i am a machine"", ""i am a robot""}) = ""i am a """
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5125,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5127,"* @param strs  array of String objects, entries may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5128,* @return the initial sequence of characters that are common to all Strings
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5129,* in the array; empty String if the array is null or the strings in the
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5130,* array are all null; -1 if all Strings are equal
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5132,public static String getCommonPrefix(String[] strs) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5133,if (strs == null || strs.length == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5134,return EMPTY;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5136,int smallestIndexOfDiff = indexOfDifference(strs);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5137,if (smallestIndexOfDiff == -1) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5138,// all strings were identical
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5139,if (strs[0] == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5140,return EMPTY;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5141,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5142,return strs[0];
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5144,} else if (smallestIndexOfDiff == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5145,// there were no common initial characters
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5146,return EMPTY;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5147,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5148,// we found a common initial character sequence
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5149,"return strs[0].substring(0, smallestIndexOfDiff);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,42,* @author Scott Johnson
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1624,public void testDifferenceAt_StringArray(){
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1625,"assertEquals(-1, StringUtils.indexOfDifference(null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1626,"assertEquals(-1, StringUtils.indexOfDifference(new String[] {}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1627,"assertEquals(-1, StringUtils.indexOfDifference(new String[] {""abc""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1628,"assertEquals(-1, StringUtils.indexOfDifference(new String[] {null, null}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1629,"assertEquals(-1, StringUtils.indexOfDifference(new String[] {"""", """"}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1630,"assertEquals(0, StringUtils.indexOfDifference(new String[] {"""", null}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1631,"assertEquals(0, StringUtils.indexOfDifference(new String[] {""abc"", null, null}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1632,"assertEquals(0, StringUtils.indexOfDifference(new String[] {null, null, ""abc""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1633,"assertEquals(0, StringUtils.indexOfDifference(new String[] {"""", ""abc""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1634,"assertEquals(0, StringUtils.indexOfDifference(new String[] {""abc"", """"}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1635,"assertEquals(-1, StringUtils.indexOfDifference(new String[] {""abc"", ""abc""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1636,"assertEquals(1, StringUtils.indexOfDifference(new String[] {""abc"", ""a""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1637,"assertEquals(2, StringUtils.indexOfDifference(new String[] {""ab"", ""abxyz""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1638,"assertEquals(2, StringUtils.indexOfDifference(new String[] {""abcde"", ""abxyz""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1639,"assertEquals(0, StringUtils.indexOfDifference(new String[] {""abcde"", ""xyz""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1640,"assertEquals(0, StringUtils.indexOfDifference(new String[] {""xyz"", ""abcde""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1641,"assertEquals(7, StringUtils.indexOfDifference(new String[] {""i am a machine"", ""i am a robot""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1644,public void testGetCommonPrefix_StringArray(){
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1645,"assertEquals("""", StringUtils.getCommonPrefix(null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1646,"assertEquals("""", StringUtils.getCommonPrefix(new String[] {}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1647,"assertEquals(""abc"", StringUtils.getCommonPrefix(new String[] {""abc""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1648,"assertEquals("""", StringUtils.getCommonPrefix(new String[] {null, null}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1649,"assertEquals("""", StringUtils.getCommonPrefix(new String[] {"""", """"}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1650,"assertEquals("""", StringUtils.getCommonPrefix(new String[] {"""", null}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1651,"assertEquals("""", StringUtils.getCommonPrefix(new String[] {""abc"", null, null}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1652,"assertEquals("""", StringUtils.getCommonPrefix(new String[] {null, null, ""abc""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1653,"assertEquals("""", StringUtils.getCommonPrefix(new String[] {"""", ""abc""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1654,"assertEquals("""", StringUtils.getCommonPrefix(new String[] {""abc"", """"}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1655,"assertEquals(""abc"", StringUtils.getCommonPrefix(new String[] {""abc"", ""abc""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1656,"assertEquals(""a"", StringUtils.getCommonPrefix(new String[] {""abc"", ""a""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1657,"assertEquals(""ab"", StringUtils.getCommonPrefix(new String[] {""ab"", ""abxyz""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1658,"assertEquals(""ab"", StringUtils.getCommonPrefix(new String[] {""abcde"", ""abxyz""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1659,"assertEquals("""", StringUtils.getCommonPrefix(new String[] {""abcde"", ""xyz""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1660,"assertEquals("""", StringUtils.getCommonPrefix(new String[] {""xyz"", ""abcde""}));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1661,"assertEquals(""i am a "", StringUtils.getCommonPrefix(new String[] {""i am a machine"", ""i am a robot""}));"
