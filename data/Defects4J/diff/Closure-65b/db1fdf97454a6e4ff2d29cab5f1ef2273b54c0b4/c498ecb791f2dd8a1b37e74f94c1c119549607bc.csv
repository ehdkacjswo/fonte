is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,38, There are two parts to this pass:
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,39, 1) JSDoc Inference: Attaching the appropriate JSDoc to
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,40,    all programmer-defined types and properties.
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,41, 2) Access Control Enforcement: Emitting warnings when the code does not
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,42,    obey the restrictions attached to JSTypes in step 1.
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,45," it's important that TypeCheck runs before this pass, so that all types"
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,46, are correctly resolved and propagated before this pass runs.
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,39,"* it's important that TypedScopeCreator, TypeInference, and InferJSDocInfo"
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,40,"* all run before this pass. TypedScopeCreator creates and resolves types,"
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,41,"* TypeInference propagates those types across the AST, and InferJSDocInfo"
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,42,* propagates JSDoc across the types.
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,420,oolean isOverride = t.inGlobalScope() &&
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,416,boolean isOverride = parent.getJSDocInfo() != null &&
False,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,408,", null, PRIVATE_OVERRIDE);"
True,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,408,"}, null, BAD_PRIVATE_PROPERTY_ACCESS);"
True,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,424,public void testNoPrivateAccessForProperties8() {
True,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,425,test(new String[] {
True,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,426,"""/** @constructor */ function Foo() { /** @private */ this.bar_ = 3; }"","
True,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,427,"""/** @constructor \n * @extends {Foo} */ "" +"
True,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,428,"""function SubFoo() { /** @private */ this.bar_ = 3; };"""
True,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,429,"}, null, PRIVATE_OVERRIDE);"
