is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,83,private final String meaning;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,97,* @param meaning The user-specified meaning of the message. May be null if
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,98,*     the user did not specify an explicit meaning.
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,100,"tring desc, boolean hidden) {"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,103,"String desc, boolean hidden, String meaning) {"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,114,this.meaning = meaning;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,159,"* Gets the meaning annotated to the message, intended to force different"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,160,* translations.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,162,String getMeaning() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,163,return meaning;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,217,(meaning == null ? m.meaning == null : meaning.equals(m.meaning)) &&
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,307,private String meaning;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,378,"* Sets the programmer-specified meaning of this message, which"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,379,* forces this message to translate differently.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,381,public Builder setMeaning(String meaning) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,382,this.meaning = meaning;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,383,return this;
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,401,"d = idGenerator == null ? key : idGenerator.generateId(key, parts);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,426,String defactoMeaning = meaning != null ? meaning : key;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,427,id = idGenerator == null ? defactoMeaning :
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,428,"idGenerator.generateId(defactoMeaning, parts);"
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,405,"laceholders, desc, hidden);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,432,"placeholders, desc, hidden, meaning);"
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,645,"tring generateId(String key, List<CharSequence> messageParts);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,672,* Generate the ID for the message. Messages with the same messageParts
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,673,* and meaning will get the same id. Messages with the same id
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,674,* will get the same translation.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,676,* @param meaning The programmer-specified meaning. If no {@code @meaning}
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,677,"*     annotation appears, we will use the name of the variable it's"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,678,"*     assigned to. If the variable is unnamed, then we will just"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,679,*     use a fingerprint of the message.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,680,"* @param messageParts The parts of the message, including the main"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,681,*     message text.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,683,"String generateId(String meaning, List<CharSequence> messageParts);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,437,if (info.getMeaning() != null) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,438,builder.setMeaning(info.getMeaning());
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,22,import com.google.common.collect.Lists;
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,29,import java.util.List;
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,198,public void testMeaningAnnotation() {
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,199,List<JsMessage> msgs = Lists.newArrayList(
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,200,extractMessages(
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,201,"""var MSG_UNNAMED_1 = goog.getMsg('foo');"","
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,202,"""var MSG_UNNAMED_2 = goog.getMsg('foo');""));"
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,203,"assertEquals(2, msgs.size());"
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,204,assertTrue(msgs.get(0).getId().equals(msgs.get(1).getId()));
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,205,"assertEquals(msgs.get(0), msgs.get(1));"
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,207,msgs = Lists.newArrayList(
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,208,extractMessages(
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,209,"""var MSG_UNNAMED_1 = goog.getMsg('foo');"","
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,210,"""/** @meaning bar */ var MSG_UNNAMED_2 = goog.getMsg('foo');""));"
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,211,"assertEquals(2, msgs.size());"
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,212,assertFalse(msgs.get(0).getId().equals(msgs.get(1).getId()));
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,216,"assertEquals(expected.getId(), actual.getId());"
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,222,"assertEquals(expected.getMeaning(), actual.getMeaning());"
True,test/com/google/javascript/jscomp/JsMessageTest.java,test/com/google/javascript/jscomp/JsMessageTest.java,37,public void testMeaningChangesId() {
True,test/com/google/javascript/jscomp/JsMessageTest.java,test/com/google/javascript/jscomp/JsMessageTest.java,38,String id1 = new JsMessage.Builder()
True,test/com/google/javascript/jscomp/JsMessageTest.java,test/com/google/javascript/jscomp/JsMessageTest.java,39,".appendStringPart(""foo"").build().getId();"
True,test/com/google/javascript/jscomp/JsMessageTest.java,test/com/google/javascript/jscomp/JsMessageTest.java,40,String id2 = new JsMessage.Builder()
True,test/com/google/javascript/jscomp/JsMessageTest.java,test/com/google/javascript/jscomp/JsMessageTest.java,41,".appendStringPart(""foo"").setMeaning(""bar"").build().getId();"
True,test/com/google/javascript/jscomp/JsMessageTest.java,test/com/google/javascript/jscomp/JsMessageTest.java,42,assertFalse(id1.equals(id2));
