is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CheckSideEffects.java,src/com/google/javascript/jscomp/CheckSideEffects.java,64,Node gramps = parent.getParent();
True,src/com/google/javascript/jscomp/CheckSideEffects.java,src/com/google/javascript/jscomp/CheckSideEffects.java,65,if (gramps.getType() == Token.CALL &&
True,src/com/google/javascript/jscomp/CheckSideEffects.java,src/com/google/javascript/jscomp/CheckSideEffects.java,66,parent == gramps.getFirstChild()) {
True,src/com/google/javascript/jscomp/CheckSideEffects.java,src/com/google/javascript/jscomp/CheckSideEffects.java,67,"// Semantically, a direct call to eval is different from an indirect"
True,src/com/google/javascript/jscomp/CheckSideEffects.java,src/com/google/javascript/jscomp/CheckSideEffects.java,68,// call to an eval. See Ecma-262 S15.1.2.1. So it's ok for the first
True,src/com/google/javascript/jscomp/CheckSideEffects.java,src/com/google/javascript/jscomp/CheckSideEffects.java,69,// expression to a comma to be a no-op if it's used to indirect
True,src/com/google/javascript/jscomp/CheckSideEffects.java,src/com/google/javascript/jscomp/CheckSideEffects.java,70,// an eval.
True,src/com/google/javascript/jscomp/CheckSideEffects.java,src/com/google/javascript/jscomp/CheckSideEffects.java,71,if (n == parent.getFirstChild() &&
True,src/com/google/javascript/jscomp/CheckSideEffects.java,src/com/google/javascript/jscomp/CheckSideEffects.java,72,parent.getChildCount() == 2 &&
True,src/com/google/javascript/jscomp/CheckSideEffects.java,src/com/google/javascript/jscomp/CheckSideEffects.java,73,n.getNext().getType() == Token.NAME &&
True,src/com/google/javascript/jscomp/CheckSideEffects.java,src/com/google/javascript/jscomp/CheckSideEffects.java,74,"""eval"".equals(n.getNext().getString())) {"
True,src/com/google/javascript/jscomp/CheckSideEffects.java,src/com/google/javascript/jscomp/CheckSideEffects.java,75,return;
True,test/com/google/javascript/jscomp/CheckSideEffectsTest.java,test/com/google/javascript/jscomp/CheckSideEffectsTest.java,90,public void testIssue80() {
True,test/com/google/javascript/jscomp/CheckSideEffectsTest.java,test/com/google/javascript/jscomp/CheckSideEffectsTest.java,91,"test(""(0, eval)('alert');"", ok);"
True,test/com/google/javascript/jscomp/CheckSideEffectsTest.java,test/com/google/javascript/jscomp/CheckSideEffectsTest.java,92,"test(""(0, foo)('alert');"", e);"
