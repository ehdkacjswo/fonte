is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,25,mport com.google.javascript.rhino.FunctionNode;
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,416,"ode functionName = Node.newString(Token.NAME,"
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,417,etMutatorFor(propName));
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,415,String functionName = getMutatorFor(propName);
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,424,"ode args = new Node(Token.LP, hasPropNode, propValueNode);"
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,422,"List<Node> args = Lists.newArrayList(hasPropNode, propValueNode);"
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,433,"ode functionBlock = new Node(Token.BLOCK, returnNode);"
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,431,"Node functionBody = new Node(Token.BLOCK, returnNode);"
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,436,unctionNode fnNode = new FunctionNode(functionName.getString());
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,437,/ A hack to preserve the existing Compiler code that depends on
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,438,/ having the first child node being a NAME node.
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,439,/ TODO(user): Remove this for the final merge with Rhino and adjust the
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,440,/ rest of Compiler to know about the new location of function names.
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,441,nNode.addChildToBack(functionName);
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,442,nNode.addChildToBack(args);
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,443,nNode.addChildToBack(functionBlock);
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,434,Node fnNode = NodeUtil.newFunctionNode(
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,435,"functionName, args, functionBody, -1, -1);"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,274,if (n.getClass() != Node.class) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,275,"throw new Error(""Unexpected Node subclass."");"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,297,if (n.getClass() != Node.class) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,298,"throw new Error(""Unexpected Node subclass."");"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,531,"ode stubVar = new Node(Token.VAR, nameNode.cloneTree());"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,531,"Node stubVar = new Node(Token.VAR, nameNode.cloneTree())"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,532,.copyInformationFrom(nameNode);
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,766,"ode newVar = new Node(Token.VAR, nameNode);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,767,"Node newVar = new Node(Token.VAR, nameNode)"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,768,.copyInformationFromForTree(key);
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,819,Preconditions.checkNotNull(addAfter);
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,823,"ode newVar = new Node(Token.VAR, nameNode);"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,824,f (addAfter == null) {
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,825,arent.addChildToFront(newVar);
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,826, else {
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,827,"arent.addChildAfter(newVar, addAfter);"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,828,ddAfter = newVar;
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,826,"Node newVar = new Node(Token.VAR, nameNode)"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,827,.copyInformationFromForTree(addAfter);
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,828,"parent.addChildAfter(newVar, addAfter);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,829,addAfter = newVar;
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,281,"arent.addChildToFront(Node.newString(Token.NAME, newMethodName));"
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,281,parent.addChildToFront(
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,282,"Node.newString(Token.NAME, newMethodName)"
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,283,.copyInformationFrom(node));
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,302,"ode newNameNode = Node.newString(Token.NAME, newMethodName);"
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,304,"Node newNameNode = Node.newString(Token.NAME, newMethodName)"
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,305,.copyInformationFrom(parent.getFirstChild());
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,310,"rgList.addChildToFront(Node.newString(Token.NAME, self));"
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,313,"argList.addChildToFront(Node.newString(Token.NAME, self)"
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,314,.copyInformationFrom(functionNode));
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,587,ode not = new Node(Token.NOT);
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,587,Node not = new Node(Token.NOT).copyInformationFrom(cond);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,595,"ew Node(Token.BLOCK, NodeUtil.newExpr(elseBody)));"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,595,"new Node(Token.BLOCK, NodeUtil.newExpr(elseBody))"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,596,.copyInformationFrom(elseBody));
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,607,"ew Node(Token.BLOCK, NodeUtil.newExpr(thenBody)));"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,608,"new Node(Token.BLOCK, NodeUtil.newExpr(thenBody))"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,609,.copyInformationFrom(thenBody));
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,710,xpr.removeFirstChild());
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,712,expr.removeFirstChild()).copyInformationFrom(n);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,727,"ode and = new Node(Token.AND, cond, expr.removeFirstChild());"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,729,"Node and = new Node(Token.AND, cond, expr.removeFirstChild())"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,730,.copyInformationFrom(n);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,759,"ode hookNode = new Node(Token.HOOK, cond, thenExpr, elseExpr);"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,762,"Node hookNode = new Node(Token.HOOK, cond, thenExpr, elseExpr)"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,763,.copyInformationFrom(n);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,789,"ode hookNode = new Node(Token.HOOK, cond, thenExpr,"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,790,lseExpr);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,791,"ode assign = new Node(thenOp.getType(), assignName,"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,792,ookNode);
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,793,"Node hookNode = new Node(Token.HOOK, cond, thenExpr, elseExpr)"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,794,.copyInformationFrom(n);
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,795,"Node assign = new Node(thenOp.getType(), assignName, hookNode)"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,796,.copyInformationFrom(thenOp);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,802,"ode hookNode = new Node(Token.HOOK, cond, thenOp, elseOp);"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,806,"Node hookNode = new Node(Token.HOOK, cond, thenOp, elseOp)"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,807,.copyInformationFrom(n);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,830,"ode hookNode = new Node(Token.HOOK, cond, thenExpr, elseExpr);"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,835,"Node hookNode = new Node(Token.HOOK, cond, thenExpr, elseExpr)"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,836,.copyInformationFrom(n);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,853,"ode hookNode = new Node(Token.HOOK, cond, thenExpr, elseExpr);"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,859,"Node hookNode = new Node(Token.HOOK, cond, thenExpr, elseExpr)"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,860,.copyInformationFrom(n);
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1520,Node prev = null;
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1533,Preconditions.checkNotNull(prev);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1527,rrayFoldedChildren.add(Node.newString(sb.toString()));
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1536,arrayFoldedChildren.add(
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1537,Node.newString(sb.toString()).copyInformationFrom(prev));
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1543,prev = elem;
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1548,Preconditions.checkNotNull(prev);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1539,rrayFoldedChildren.add(Node.newString(sb.toString()));
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1551,arrayFoldedChildren.add(
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1552,Node.newString(sb.toString()).copyInformationFrom(prev));
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1561,"ode.newString(""""), foldedStringNode);"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1574,"Node.newString("""").copyInformationFrom(right),"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1575,foldedStringNode);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1767,eturn Node.newString(sb.toString());
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1781,return Node.newString(sb.toString()).copyInformationFrom(n);
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,480,"nType = new FunctionType(typeRegistry, fnName, sourceNode,"
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,480,fnType = typeRegistry.createMethodTypeWithTypeTemplate(
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,481,"fnName, sourceNode,"
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,148,"ype, condition.cloneTree(), simplifyShortCircuitBranch(body));"
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,148,"type, condition.cloneTree(), simplifyShortCircuitBranch(body))"
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,149,.copyInformationFrom(hook);
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,167,"et = new Node(Token.COMMA, ret, part);"
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,168,"ret = new Node(Token.COMMA, ret, part).copyInformationFrom(node);"
False,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,204,eturn;
False,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,209," the end of a block removes them by moving the if node's siblings, if any,"
False,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,210, into the opposite condition block.
True,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,207,"* the end of a block and removes them by moving the if node's siblings,"
True,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,208,"* if any, into the opposite condition block."
False,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,247,ode newDestBlock = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,245,Node newDestBlock = new Node(Token.BLOCK).copyInformationFrom(ifNode);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,24,mport com.google.javascript.rhino.FunctionNode;
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,327,"ode expr = new Node(Token.EXPR_RESULT, child);"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,328,xpr.copyInformationFrom(child);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,326,"Node expr = new Node(Token.EXPR_RESULT, child)"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,327,.copyInformationFrom(child);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1463,"oken.VAR, Node.newString(Token.NAME, nameNode.getString()));"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1462,"Token.VAR,"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1463,"Node.newString(Token.NAME, nameNode.getString())"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1464,.copyInformationFrom(nameNode))
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1465,.copyInformationFrom(nameNode);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1507,"ublic static FunctionNode newFunctionNode(String name, List<Node> params,"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1509,"public static Node newFunctionNode(String name, List<Node> params,"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1513,"unctionNode function = new FunctionNode(name, lineno, charno);"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1515,"Node function = new Node(Token.FUNCTION, lineno, charno);"
False,src/com/google/javascript/jscomp/RemoveConstantExpressions.java,src/com/google/javascript/jscomp/RemoveConstantExpressions.java,111,"eplacements.add(new Node(Token.EXPR_RESULT, subexpression));"
True,src/com/google/javascript/jscomp/RemoveConstantExpressions.java,src/com/google/javascript/jscomp/RemoveConstantExpressions.java,111,replacements.add(NodeUtil.newExpr(subexpression));
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,874,ew FunctionType(
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,875,"egistry, jArgumentFnType.getReferenceName(),"
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,876,"ArgumentFnType.getSource(),"
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,877,"ArgumentFnType.getParametersNode(),"
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,878,"ArgumentFnType.getReturnType(),"
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,879,ObjectType) iArgumentType));
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,874,registry.createFunctionTypeWithNewThisType(
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,875,"jArgumentFnType, (ObjectType) iArgumentType));"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,827,unctionType getterType = new FunctionType(
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,828,"ypeRegistry, null, null,"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,829,"ew FunctionParamBuilder(typeRegistry).build(),"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,830,"bjectType, null);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,827,FunctionType getterType =
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,828,typeRegistry.createFunctionType(objectType);
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,862,unctionType findDelegate = new FunctionType(
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,863,"ypeRegistry, null, null, functionParamBuilder.build(),"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,860,FunctionType findDelegate = typeRegistry.createFunctionType(
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,865,"elegateBaseObject), null);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,862,"delegateBaseObject),"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,863,functionParamBuilder.build());
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,70,mport com.google.javascript.rhino.ScriptOrFnNode;
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,348,ode node = new ScriptOrFnNode(Token.SCRIPT);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,347,Node node = new Node(Token.SCRIPT);
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,521,ode node = new com.google.javascript.rhino.FunctionNode(
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,522,ame.getIdentifier());
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,520,Node node = new Node(Token.FUNCTION);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,62,"ublic class Node implements Cloneable, Serializable"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,65,rivate static final long serialVersionUID = 1L;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,67,ublic static final int
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,68,/ Rhino's AST captures data flow. These are the annotations
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,69,/ it used. We've mostly torn them out.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,70,"OCAL_BLOCK_PROP  = -3,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,71,"BJECT_IDS_PROP   = -2,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,72,"ATCH_SCOPE_PROP  = -1,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,73,"ABEL_ID_PROP     =  0,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,75,"ARGET_PROP       =  1,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,76,"REAK_PROP        =  2,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,77,"ONTINUE_PROP     =  3,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,78,"NUM_PROP         =  4,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,79,"UNCTION_PROP     =  5,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,80,"EMP_PROP         =  6,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,81,"OCAL_PROP        =  7,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,82,"ODEOFFSET_PROP   =  8,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,83,"IXUPS_PROP       =  9,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,84,"ARS_PROP         = 10,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,85,"SES_PROP         = 11,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,86,"EGEXP_PROP       = 12,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,87,"ASES_PROP        = 13,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,88,"EFAULT_PROP      = 14,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,89,"ASEARRAY_PROP    = 15,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,90,"OURCENAME_PROP   = 16,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,91,"YPE_PROP         = 17,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,92,"PECIAL_PROP_PROP = 18,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,93,"ABEL_PROP        = 19,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,94,"INALLY_PROP      = 20,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,95,"OCALCOUNT_PROP   = 21,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,97,he following properties are defined and manipulated by the
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,98,ptimizer -
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,99,ARGETBLOCK_PROP - the block referenced by a branch node
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,100,ARIABLE_PROP - the variable referenced by a BIND or NAME node
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,101,ASTUSE_PROP - that variable node is the last reference before
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,102, new def or the end of the block
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,103,SNUMBER_PROP - this node generates code on Number children and
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,104,elivers a Number result (as opposed to Objects)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,105,IRECTCALL_PROP - this call node should emit code to test the function
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,106,bject against the known class and call diret if it
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,107,atches.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,110,"ARGETBLOCK_PROP  = 22,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,111,"ARIABLE_PROP     = 23,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,112,"ASTUSE_PROP      = 24,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,113,"SNUMBER_PROP     = 25,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,114,"IRECTCALL_PROP   = 26,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,116,"PECIALCALL_PROP  = 27,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,117,"EBUGSOURCE_PROP  = 28,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,118,"SDOC_INFO_PROP   = 29,     // contains a TokenStream.JSDocInfo object"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,119,"AR_ARGS_NAME     = 29,     // the name node is a variable length"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,120,/ argument placeholder. It can never be
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,121,/ used in conjunction with JSDOC_INFO_PROP.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,122,"KIP_INDEXES_PROP  = 30,    // array of skipped indexes of array literal"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,123,"NCRDECR_PROP      = 31,    // pre or post type of increment/decrement"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,124,"EMBER_TYPE_PROP   = 32,    // type of element access operation"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,125,"AME_PROP          = 33,    // property name"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,126,"ARENTHESIZED_PROP = 34,    // expression is parenthesized"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,127,"UOTED_PROP        = 35,    // set to indicate a quoted object lit key"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,128,"PT_ARG_NAME       = 36,    // The name node is an optional argument."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,129,"YNTHETIC_BLOCK_PROP = 37,  // A synthetic block. Used to make"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,130,"/ processing simpler, and does not"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,131,/ represent a real block in the source.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,132,"OURCEFILE_PROP    = 38,    // Contains the path of the source file"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,133,/ from which the current node was parsed.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,134,"MPTY_BLOCK        = 39,    // Used to indicate BLOCK that replaced"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,135,/ EMPTY nodes.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,136,"RIGINALNAME_PROP  = 40,    // The original name of the node, before"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,137,/ renaming.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,138,"RACELESS_TYPE     = 41,    // The type syntax without curly braces."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,139,"O_SIDE_EFFECTS_CALL = 42,  // Function or constructor call has no"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,140,/ side effects.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,141,/ Coding convention props
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,142,"S_CONSTANT_NAME   = 43,    // The variable or property is constant."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,143,"S_OPTIONAL_PARAM  = 44,    // The parameter is optional."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,144,"S_VAR_ARGS_PARAM  = 45,    // The parameter is a var_args."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,145,"S_NAMESPACE       = 46,    // The variable creates a namespace."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,146,"S_DISPATCHER      = 47,    // The function is a dispatcher function,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,147,"/ probably generated from Java code, and"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,148,/ should be resolved to the proper
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,149,/ overload if possible.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,150,"IRECTIVES         = 48,    // The ES5 directives on this node."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,151,"IRECT_EVAL        = 49,    // ES5 distinguishes between direct and"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,152,/ indirect calls to eval.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,153,AST_PROP          = 49;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,155,/ values of ISNUMBER_PROP to specify
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,156,/ which of the children are Number types
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,157,ublic static final int
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,158,"OTH = 0,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,159,"EFT = 1,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,160,IGHT = 2;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,162,ublic static final int    // values for SPECIALCALL_PROP
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,163,"ON_SPECIALCALL  = 0,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,164,"PECIALCALL_EVAL = 1,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,165,PECIALCALL_WITH = 2;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,167,ublic static final int   // flags for INCRDECR_PROP
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,168,"ECR_FLAG = 0x1,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,169,OST_FLAG = 0x2;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,171,ublic static final int   // flags for MEMBER_TYPE_PROP
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,172,"ROPERTY_FLAG    = 0x1, // property access: element is valid name"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,173,"TTRIBUTE_FLAG   = 0x2, // x.@y or x..@y"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,174,ESCENDANTS_FLAG = 0x4; // x..y or x..@i
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,176,rivate static final String propToString(int propType) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,177,witch (propType) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,178,"ase LOCAL_BLOCK_PROP:   return ""local_block"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,179,"ase OBJECT_IDS_PROP:    return ""object_ids_prop"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,180,"ase CATCH_SCOPE_PROP:   return ""catch_scope_prop"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,181,"ase LABEL_ID_PROP:      return ""label_id_prop"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,182,"ase TARGET_PROP:        return ""target"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,183,"ase BREAK_PROP:         return ""break"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,184,"ase CONTINUE_PROP:      return ""continue"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,185,"ase ENUM_PROP:          return ""enum"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,186,"ase FUNCTION_PROP:      return ""function"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,187,"ase TEMP_PROP:          return ""temp"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,188,"ase LOCAL_PROP:         return ""local"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,189,"ase CODEOFFSET_PROP:    return ""codeoffset"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,190,"ase FIXUPS_PROP:        return ""fixups"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,191,"ase VARS_PROP:          return ""vars"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,192,"ase USES_PROP:          return ""uses"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,193,"ase REGEXP_PROP:        return ""regexp"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,194,"ase CASES_PROP:         return ""cases"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,195,"ase DEFAULT_PROP:       return ""default"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,196,"ase CASEARRAY_PROP:     return ""casearray"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,197,"ase SOURCENAME_PROP:    return ""sourcename"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,198,"ase TYPE_PROP:          return ""type"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,199,"ase SPECIAL_PROP_PROP:  return ""special_prop"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,200,"ase LABEL_PROP:         return ""label"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,201,"ase FINALLY_PROP:       return ""finally"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,202,"ase LOCALCOUNT_PROP:    return ""localcount"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,204,"ase TARGETBLOCK_PROP:   return ""targetblock"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,205,"ase VARIABLE_PROP:      return ""variable"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,206,"ase LASTUSE_PROP:       return ""lastuse"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,207,"ase ISNUMBER_PROP:      return ""isnumber"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,208,"ase DIRECTCALL_PROP:    return ""directcall"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,210,"ase SPECIALCALL_PROP:   return ""specialcall"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,211,"ase DEBUGSOURCE_PROP:   return ""debugsource"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,213,"ase JSDOC_INFO_PROP:    return ""jsdoc_info"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,215,"ase SKIP_INDEXES_PROP:  return ""skip_indexes"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,216,"ase INCRDECR_PROP:      return ""incrdecr"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,217,"ase MEMBER_TYPE_PROP:   return ""member_type"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,218,"ase NAME_PROP:          return ""name"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,219,"ase PARENTHESIZED_PROP: return ""parenthesized"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,220,"ase QUOTED_PROP:        return ""quoted"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,222,"ase SYNTHETIC_BLOCK_PROP: return ""synthetic"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,223,"ase SOURCEFILE_PROP: return ""sourcefile"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,224,"ase EMPTY_BLOCK: return ""empty_block"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,225,"ase ORIGINALNAME_PROP: return ""originalname"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,226,"ase NO_SIDE_EFFECTS_CALL: return ""no_side_effects_call"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,228,"ase IS_CONSTANT_NAME:   return ""is_constant_name"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,229,"ase IS_OPTIONAL_PARAM:  return ""is_optional_param"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,230,"ase IS_VAR_ARGS_PARAM:  return ""is_var_args_param"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,231,"ase IS_NAMESPACE:       return ""is_namespace"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,232,"ase IS_DISPATCHER:      return ""is_dispatcher"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,233,"ase DIRECTIVES:         return ""directives"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,234,"ase DIRECT_EVAL:        return ""direct_eval"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,235,efault:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,236,it.codeBug();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,240,eturn null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,243,rivate static class NumberNode extends Node {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,245,rivate static final long serialVersionUID = 1L;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,247,umberNode(double number) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,248,uper(Token.NUMBER);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,249,his.number = number;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,252,"ublic NumberNode(double number, int lineno, int charno) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,253,"uper(Token.NUMBER, lineno, charno);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,254,his.number = number;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,257,Override public double getDouble() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,258,eturn this.number;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,261,Override public void setDouble(double d) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,262,his.number = d;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,265,Override public boolean isEquivalentTo(Node node) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,266,eturn (node instanceof NumberNode
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,267,& getDouble() == ((NumberNode) node).getDouble());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,270,rivate double number;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,273,rivate static class StringNode extends Node {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,275,rivate static final long serialVersionUID = 1L;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,277,"tringNode(int type, String str) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,278,uper(type);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,279,f (null == str) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,280,"hrow new IllegalArgumentException(""StringNode: str is null"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,282,his.str = str;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,285,"tringNode(int type, String str, int lineno, int charno) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,286,"uper(type, lineno, charno);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,287,f (null == str) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,288,"hrow new IllegalArgumentException(""StringNode: str is null"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,290,his.str = str;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,293,** returns the string content.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,294, @return non null.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,296,Override public String getString() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,297,eturn this.str;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,300,** sets the string content.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,301, @param str the new value.  Non null.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,303,Override public void setString(String str) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,304,f (null == str) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,305,"hrow new IllegalArgumentException(""StringNode: str is null"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,307,his.str = str;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,310,Override public boolean isEquivalentTo(Node node) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,311,eturn (node instanceof StringNode &&
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,312,his.str.equals(((StringNode) node).str));
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,316," If the property is not defined, this was not a quoted key.  The"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,317, QUOTED_PROP int property is only assigned to STRING tokens used as
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,318, object lit keys.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,319, @return true if this was a quoted string key in an object literal.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,321,Override public boolean isQuotedString() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,322,eturn getBooleanProp(QUOTED_PROP);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,326, This should only be called for STRING nodes created in object lits.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,328,Override public void setQuotedString() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,329,"utBooleanProp(QUOTED_PROP, true);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,332,rivate String str;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,335,rivate static class PropListItem implements Serializable
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,337,rivate static final long serialVersionUID = 1L;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,339,ropListItem next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,340,nt type;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,341,nt intValue;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,342,bject objectValue;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,346,ublic Node(int nodeType) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,347,ype = nodeType;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,348,arent = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,349,ourcePosition = -1;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,352,"ublic Node(int nodeType, Node child) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,353,"reconditions.checkArgument(child.parent == null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,354,"new child has existing parent"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,355,"reconditions.checkArgument(child.next == null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,356,"new child has existing sibling"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,358,ype = nodeType;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,359,arent = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,360,irst = last = child;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,361,hild.next = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,362,hild.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,363,ourcePosition = -1;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,366,"ublic Node(int nodeType, Node left, Node right) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,367,"reconditions.checkArgument(left.parent == null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,368,"first new child has existing parent"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,369,"reconditions.checkArgument(left.next == null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,370,"first new child has existing sibling"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,371,"reconditions.checkArgument(right.parent == null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,372,"second new child has existing parent"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,373,"reconditions.checkArgument(right.next == null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,374,"second new child has existing sibling"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,375,ype = nodeType;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,376,arent = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,377,irst = left;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,378,ast = right;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,379,eft.next = right;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,380,eft.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,381,ight.next = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,382,ight.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,383,ourcePosition = -1;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,386,"ublic Node(int nodeType, Node left, Node mid, Node right) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,387,reconditions.checkArgument(left.parent == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,388,reconditions.checkArgument(left.next == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,389,reconditions.checkArgument(mid.parent == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,390,reconditions.checkArgument(mid.next == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,391,reconditions.checkArgument(right.parent == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,392,reconditions.checkArgument(right.next == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,393,ype = nodeType;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,394,arent = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,395,irst = left;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,396,ast = right;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,397,eft.next = mid;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,398,eft.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,399,id.next = right;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,400,id.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,401,ight.next = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,402,ight.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,403,ourcePosition = -1;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,406,"ublic Node(int nodeType, Node left, Node mid, Node mid2, Node right) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,407,reconditions.checkArgument(left.parent == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,408,reconditions.checkArgument(left.next == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,409,reconditions.checkArgument(mid.parent == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,410,reconditions.checkArgument(mid.next == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,411,reconditions.checkArgument(mid2.parent == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,412,reconditions.checkArgument(mid2.next == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,413,reconditions.checkArgument(right.parent == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,414,reconditions.checkArgument(right.next == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,415,ype = nodeType;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,416,arent = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,417,irst = left;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,418,ast = right;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,419,eft.next = mid;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,420,eft.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,421,id.next = mid2;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,422,id.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,423,id2.next = right;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,424,id2.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,425,ight.next = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,426,ight.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,427,ourcePosition = -1;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,430,"ublic Node(int nodeType, int lineno, int charno) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,431,ype = nodeType;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,432,arent = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,433,"ourcePosition = mergeLineCharNo(lineno, charno);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,436,"ublic Node(int nodeType, Node child, int lineno, int charno) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,437,"his(nodeType, child);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,438,"ourcePosition = mergeLineCharNo(lineno, charno);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,441,"ublic Node(int nodeType, Node left, Node right, int lineno, int charno) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,442,"his(nodeType, left, right);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,443,"ourcePosition = mergeLineCharNo(lineno, charno);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,446,"ublic Node(int nodeType, Node left, Node mid, Node right,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,447,"nt lineno, int charno) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,448,"his(nodeType, left, mid, right);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,449,"ourcePosition = mergeLineCharNo(lineno, charno);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,452,"ublic Node(int nodeType, Node left, Node mid, Node mid2, Node right,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,453,"nt lineno, int charno) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,454,"his(nodeType, left, mid, mid2, right);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,455,"ourcePosition = mergeLineCharNo(lineno, charno);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,458,"ublic Node(int nodeType, Node[] children, int lineno, int charno) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,459,"his(nodeType, children);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,460,"ourcePosition = mergeLineCharNo(lineno, charno);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,463,"ublic Node(int nodeType, Node[] children) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,464,his.type = nodeType;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,465,arent = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,466,f (children.length != 0) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,467,his.first = children[0];
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,468,his.last = children[children.length - 1];
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,470,or (int i = 1; i < children.length; i++) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,471,f (null != children[i - 1].next) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,472,/ fail early on loops.  implies same node in array twice
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,473,"hrow new IllegalArgumentException(""duplicate child"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,475,hildren[i - 1].next = children[i];
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,476,reconditions.checkArgument(children[i - 1].parent == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,477,hildren[i - 1].parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,479,reconditions.checkArgument(
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,480,hildren[children.length - 1].parent == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,481,hildren[children.length - 1].parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,483,f (null != this.last.next) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,484,/ fail early on loops.  implies same node in array twice
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,485,"hrow new IllegalArgumentException(""duplicate child"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,490,ublic static Node newNumber(double number) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,491,eturn new NumberNode(number);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,494,"ublic static Node newNumber(double number, int lineno, int charno) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,495,"eturn new NumberNode(number, lineno, charno);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,62,"public class Node implements Cloneable, Serializable {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,64,private static final long serialVersionUID = 1L;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,66,public static final int
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,67,// Rhino's AST captures data flow. These are the annotations
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,68,// it used. We've mostly torn them out.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,69,"LOCAL_BLOCK_PROP  = -3,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,70,"OBJECT_IDS_PROP   = -2,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,71,"CATCH_SCOPE_PROP  = -1,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,72,"LABEL_ID_PROP     =  0,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,74,"TARGET_PROP       =  1,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,75,"BREAK_PROP        =  2,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,76,"CONTINUE_PROP     =  3,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,77,"ENUM_PROP         =  4,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,78,"FUNCTION_PROP     =  5,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,79,"TEMP_PROP         =  6,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,80,"LOCAL_PROP        =  7,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,81,"CODEOFFSET_PROP   =  8,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,82,"FIXUPS_PROP       =  9,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,83,"VARS_PROP         = 10,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,84,"USES_PROP         = 11,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,85,"REGEXP_PROP       = 12,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,86,"CASES_PROP        = 13,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,87,"DEFAULT_PROP      = 14,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,88,"CASEARRAY_PROP    = 15,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,89,"SOURCENAME_PROP   = 16,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,90,"TYPE_PROP         = 17,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,91,"SPECIAL_PROP_PROP = 18,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,92,"LABEL_PROP        = 19,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,93,"FINALLY_PROP      = 20,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,94,"LOCALCOUNT_PROP   = 21,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,96,the following properties are defined and manipulated by the
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,97,optimizer -
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,98,TARGETBLOCK_PROP - the block referenced by a branch node
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,99,VARIABLE_PROP - the variable referenced by a BIND or NAME node
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,100,LASTUSE_PROP - that variable node is the last reference before
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,101,a new def or the end of the block
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,102,ISNUMBER_PROP - this node generates code on Number children and
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,103,delivers a Number result (as opposed to Objects)
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,104,DIRECTCALL_PROP - this call node should emit code to test the function
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,105,object against the known class and call diret if it
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,106,matches.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,109,"TARGETBLOCK_PROP  = 22,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,110,"VARIABLE_PROP     = 23,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,111,"LASTUSE_PROP      = 24,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,112,"ISNUMBER_PROP     = 25,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,113,"DIRECTCALL_PROP   = 26,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,115,"SPECIALCALL_PROP  = 27,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,116,"DEBUGSOURCE_PROP  = 28,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,117,"JSDOC_INFO_PROP   = 29,     // contains a TokenStream.JSDocInfo object"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,118,"VAR_ARGS_NAME     = 29,     // the name node is a variable length"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,119,// argument placeholder. It can never be
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,120,// used in conjunction with JSDOC_INFO_PROP.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,121,"SKIP_INDEXES_PROP  = 30,    // array of skipped indexes of array literal"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,122,"INCRDECR_PROP      = 31,    // pre or post type of increment/decrement"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,123,"MEMBER_TYPE_PROP   = 32,    // type of element access operation"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,124,"NAME_PROP          = 33,    // property name"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,125,"PARENTHESIZED_PROP = 34,    // expression is parenthesized"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,126,"QUOTED_PROP        = 35,    // set to indicate a quoted object lit key"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,127,"OPT_ARG_NAME       = 36,    // The name node is an optional argument."
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,128,"SYNTHETIC_BLOCK_PROP = 37,  // A synthetic block. Used to make"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,129,"// processing simpler, and does not"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,130,// represent a real block in the source.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,131,"SOURCEFILE_PROP    = 38,    // Contains the path of the source file"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,132,// from which the current node was parsed.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,133,"EMPTY_BLOCK        = 39,    // Used to indicate BLOCK that replaced"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,134,// EMPTY nodes.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,135,"ORIGINALNAME_PROP  = 40,    // The original name of the node, before"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,136,// renaming.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,137,"BRACELESS_TYPE     = 41,    // The type syntax without curly braces."
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,138,"NO_SIDE_EFFECTS_CALL = 42,  // Function or constructor call has no"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,139,// side effects.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,140,// Coding convention props
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,141,"IS_CONSTANT_NAME   = 43,    // The variable or property is constant."
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,142,"IS_OPTIONAL_PARAM  = 44,    // The parameter is optional."
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,143,"IS_VAR_ARGS_PARAM  = 45,    // The parameter is a var_args."
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,144,"IS_NAMESPACE       = 46,    // The variable creates a namespace."
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,145,"IS_DISPATCHER      = 47,    // The function is a dispatcher function,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,146,"// probably generated from Java code, and"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,147,// should be resolved to the proper
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,148,// overload if possible.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,149,"DIRECTIVES         = 48,    // The ES5 directives on this node."
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,150,"DIRECT_EVAL        = 49,    // ES5 distinguishes between direct and"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,151,// indirect calls to eval.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,152,LAST_PROP          = 49;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,154,// values of ISNUMBER_PROP to specify
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,155,// which of the children are Number types
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,156,public static final int
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,157,"BOTH = 0,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,158,"LEFT = 1,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,159,RIGHT = 2;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,161,public static final int    // values for SPECIALCALL_PROP
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,162,"NON_SPECIALCALL  = 0,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,163,"SPECIALCALL_EVAL = 1,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,164,SPECIALCALL_WITH = 2;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,166,public static final int   // flags for INCRDECR_PROP
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,167,"DECR_FLAG = 0x1,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,168,POST_FLAG = 0x2;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,170,public static final int   // flags for MEMBER_TYPE_PROP
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,171,"PROPERTY_FLAG    = 0x1, // property access: element is valid name"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,172,"ATTRIBUTE_FLAG   = 0x2, // x.@y or x..@y"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,173,DESCENDANTS_FLAG = 0x4; // x..y or x..@i
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,175,private static final String propToString(int propType) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,176,switch (propType) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,177,"case LOCAL_BLOCK_PROP:   return ""local_block"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,178,"case OBJECT_IDS_PROP:    return ""object_ids_prop"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,179,"case CATCH_SCOPE_PROP:   return ""catch_scope_prop"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,180,"case LABEL_ID_PROP:      return ""label_id_prop"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,181,"case TARGET_PROP:        return ""target"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,182,"case BREAK_PROP:         return ""break"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,183,"case CONTINUE_PROP:      return ""continue"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,184,"case ENUM_PROP:          return ""enum"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,185,"case FUNCTION_PROP:      return ""function"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,186,"case TEMP_PROP:          return ""temp"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,187,"case LOCAL_PROP:         return ""local"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,188,"case CODEOFFSET_PROP:    return ""codeoffset"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,189,"case FIXUPS_PROP:        return ""fixups"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,190,"case VARS_PROP:          return ""vars"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,191,"case USES_PROP:          return ""uses"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,192,"case REGEXP_PROP:        return ""regexp"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,193,"case CASES_PROP:         return ""cases"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,194,"case DEFAULT_PROP:       return ""default"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,195,"case CASEARRAY_PROP:     return ""casearray"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,196,"case SOURCENAME_PROP:    return ""sourcename"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,197,"case TYPE_PROP:          return ""type"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,198,"case SPECIAL_PROP_PROP:  return ""special_prop"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,199,"case LABEL_PROP:         return ""label"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,200,"case FINALLY_PROP:       return ""finally"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,201,"case LOCALCOUNT_PROP:    return ""localcount"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,203,"case TARGETBLOCK_PROP:   return ""targetblock"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,204,"case VARIABLE_PROP:      return ""variable"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,205,"case LASTUSE_PROP:       return ""lastuse"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,206,"case ISNUMBER_PROP:      return ""isnumber"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,207,"case DIRECTCALL_PROP:    return ""directcall"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,209,"case SPECIALCALL_PROP:   return ""specialcall"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,210,"case DEBUGSOURCE_PROP:   return ""debugsource"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,212,"case JSDOC_INFO_PROP:    return ""jsdoc_info"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,214,"case SKIP_INDEXES_PROP:  return ""skip_indexes"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,215,"case INCRDECR_PROP:      return ""incrdecr"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,216,"case MEMBER_TYPE_PROP:   return ""member_type"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,217,"case NAME_PROP:          return ""name"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,218,"case PARENTHESIZED_PROP: return ""parenthesized"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,219,"case QUOTED_PROP:        return ""quoted"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,221,"case SYNTHETIC_BLOCK_PROP: return ""synthetic"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,222,"case SOURCEFILE_PROP: return ""sourcefile"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,223,"case EMPTY_BLOCK: return ""empty_block"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,224,"case ORIGINALNAME_PROP: return ""originalname"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,225,"case NO_SIDE_EFFECTS_CALL: return ""no_side_effects_call"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,227,"case IS_CONSTANT_NAME:   return ""is_constant_name"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,228,"case IS_OPTIONAL_PARAM:  return ""is_optional_param"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,229,"case IS_VAR_ARGS_PARAM:  return ""is_var_args_param"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,230,"case IS_NAMESPACE:       return ""is_namespace"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,231,"case IS_DISPATCHER:      return ""is_dispatcher"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,232,"case DIRECTIVES:         return ""directives"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,233,"case DIRECT_EVAL:        return ""direct_eval"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,234,default:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,235,Kit.codeBug();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,237,return null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,498,ublic static Node newString(String str) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,499,"eturn new StringNode(Token.STRING, str);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,240,private static class NumberNode extends Node {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,502,"ublic static Node newString(int type, String str) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,503,"eturn new StringNode(type, str);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,506,"ublic static Node newString(String str, int lineno, int charno) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,507,"eturn new StringNode(Token.STRING, str, lineno, charno);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,242,private static final long serialVersionUID = 1L;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,510,"ublic static Node newString(int type, String str, int lineno, int charno) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,511,"eturn new StringNode(type, str, lineno, charno);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,244,NumberNode(double number) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,245,super(Token.NUMBER);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,246,this.number = number;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,514,ublic int getType() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,515,eturn type;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,249,"public NumberNode(double number, int lineno, int charno) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,250,"super(Token.NUMBER, lineno, charno);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,251,this.number = number;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,518,ublic void setType(int type) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,519,his.type = type;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,254,@Override
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,255,public double getDouble() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,256,return this.number;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,522,ublic boolean hasChildren() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,523,eturn first != null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,259,@Override
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,260,public void setDouble(double d) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,261,this.number = d;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,526,ublic Node getFirstChild() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,527,eturn first;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,264,@Override
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,265,public boolean isEquivalentTo(Node node) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,266,return (node instanceof NumberNode
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,267,&& getDouble() == ((NumberNode) node).getDouble());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,530,ublic Node getLastChild() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,531,eturn last;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,270,private double number;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,534,ublic Node getNext() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,535,eturn next;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,273,private static class StringNode extends Node {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,538,ublic Node getChildBefore(Node child) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,539,f (child == first)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,540,eturn null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,541,ode n = first;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,542,hile (n.next != child) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,543, = n.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,544,f (n == null)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,545,"hrow new RuntimeException(""node is not a child"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,547,eturn n;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,275,private static final long serialVersionUID = 1L;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,550,ublic Node getChildAtIndex(int i) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,551,ode n = first;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,552,hile (i > 0) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,553, = n.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,554,--;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,277,"StringNode(int type, String str) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,278,super(type);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,279,if (null == str) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,280,"throw new IllegalArgumentException(""StringNode: str is null"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,556,eturn n;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,559,ublic Node getLastSibling() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,560,ode n = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,561,hile (n.next != null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,562, = n.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,564,eturn n;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,567,ublic void addChildToFront(Node child) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,568,reconditions.checkArgument(child.parent == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,569,reconditions.checkArgument(child.next == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,570,hild.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,571,hild.next = first;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,572,irst = child;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,573,f (last == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,574,ast = child;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,578,ublic void addChildToBack(Node child) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,579,reconditions.checkArgument(child.parent == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,580,reconditions.checkArgument(child.next == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,581,hild.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,582,hild.next = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,583,f (last == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,584,irst = last = child;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,585,eturn;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,587,ast.next = child;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,588,ast = child;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,282,this.str = str;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,591,ublic void addChildrenToFront(Node children) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,592,or (Node child = children; child != null; child = child.next) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,593,reconditions.checkArgument(child.parent == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,594,hild.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,596,ode lastSib = children.getLastSibling();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,597,astSib.next = first;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,598,irst = children;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,599,f (last == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,600,ast = lastSib;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,604,ublic void addChildrenToBack(Node children) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,605,or (Node child = children; child != null; child = child.next) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,606,reconditions.checkArgument(child.parent == null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,607,hild.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,609,f (last != null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,610,ast.next = children;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,612,ast = children.getLastSibling();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,613,f (first == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,614,irst = children;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,285,"StringNode(int type, String str, int lineno, int charno) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,286,"super(type, lineno, charno);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,287,if (null == str) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,288,"throw new IllegalArgumentException(""StringNode: str is null"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,290,this.str = str;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,619, Add 'child' before 'node'.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,294,* returns the string content.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,295,* @return non null.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,621,"ublic void addChildBefore(Node newChild, Node node) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,622,"reconditions.checkArgument(node != null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,623,"The existing child node of the parent should not be null."");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,624,"reconditions.checkArgument(newChild.next == null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,625,"The new child node has siblings."");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,626,"reconditions.checkArgument(newChild.parent == null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,627,"The new child node already has a parent."");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,628,f (first == node) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,629,ewChild.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,630,ewChild.next = first;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,631,irst = newChild;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,632,eturn;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,634,ode prev = getChildBefore(node);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,635,"ddChildAfter(newChild, prev);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,297,@Override
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,298,public String getString() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,299,return this.str;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,639, Add 'child' after 'node'.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,303,* sets the string content.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,304,* @param str the new value.  Non null.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,641,"ublic void addChildAfter(Node newChild, Node node) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,642,"reconditions.checkArgument(newChild.next == null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,643,"The new child node has siblings."");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,644,"reconditions.checkArgument(newChild.parent == null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,645,"The new child node already has a parent."");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,646,ewChild.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,647,ewChild.next = node.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,648,ode.next = newChild;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,649,f (last == node) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,650,ast = newChild;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,306,@Override
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,307,public void setString(String str) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,308,if (null == str) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,309,"throw new IllegalArgumentException(""StringNode: str is null"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,311,this.str = str;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,655, Detach a child from its parent and siblings.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,657,ublic void removeChild(Node child) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,658,ode prev = getChildBefore(child);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,659,f (prev == null)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,660,irst = first.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,661,lse
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,662,rev.next = child.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,663,f (child == last) last = prev;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,664,hild.next = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,665,hild.parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,314,@Override
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,315,public boolean isEquivalentTo(Node node) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,316,return (node instanceof StringNode &&
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,317,this.str.equals(((StringNode) node).str));
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,669, Detaches child from Node and replaces it with newChild.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,321,"* If the property is not defined, this was not a quoted key.  The"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,322,* QUOTED_PROP int property is only assigned to STRING tokens used as
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,323,* object lit keys.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,324,* @return true if this was a quoted string key in an object literal.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,671,"ublic void replaceChild(Node child, Node newChild) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,672,"reconditions.checkArgument(newChild.next == null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,673,"The new child node has siblings."");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,674,"reconditions.checkArgument(newChild.parent == null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,675,"The new child node already has a parent."");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,677,/ Copy over important information.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,678,ewChild.copyInformationFrom(child);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,680,ewChild.next = child.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,681,ewChild.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,682,f (child == first) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,683,irst = newChild;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,684, else {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,685,ode prev = getChildBefore(child);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,686,rev.next = newChild;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,688,f (child == last)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,689,ast = newChild;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,690,hild.next = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,691,hild.parent = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,694,"ublic void replaceChildAfter(Node prevChild, Node newChild) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,695,"reconditions.checkArgument(prevChild.parent == this,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,696,"prev is not a child of this node."");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,698,"reconditions.checkArgument(newChild.next == null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,699,"The new child node has siblings."");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,700,"reconditions.checkArgument(newChild.parent == null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,701,"The new child node already has a parent."");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,703,/ Copy over important information.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,704,ewChild.copyInformationFrom(prevChild);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,706,ode child = prevChild.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,707,ewChild.next = child.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,708,ewChild.parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,709,revChild.next = newChild;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,710,f (child == last)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,711,ast = newChild;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,712,hild.next = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,713,hild.parent = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,716,rivate PropListItem lookupProperty(int propType)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,718,ropListItem x = propListHead;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,719,hile (x != null && propType != x.type) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,720, = x.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,722,eturn x;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,725,rivate PropListItem ensureProperty(int propType)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,727,ropListItem item = lookupProperty(propType);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,728,f (item == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,729,tem = new PropListItem();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,730,tem.type = propType;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,731,tem.next = propListHead;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,732,ropListHead = item;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,734,eturn item;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,737,ublic void removeProp(int propType)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,739,ropListItem x = propListHead;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,740,f (x != null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,741,ropListItem prev = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,742,hile (x.type != propType) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,743,rev = x;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,744, = x.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,745,f (x == null) { return; }
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,747,f (prev == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,748,ropListHead = x.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,749, else {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,750,rev.next = x.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,755,ublic Object getProp(int propType)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,757,ropListItem item = lookupProperty(propType);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,758,f (item == null) { return null; }
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,759,eturn item.objectValue;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,762,ublic boolean getBooleanProp(int propType) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,763,"eturn getIntProp(propType, 0) != 0;"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,766,"ublic int getIntProp(int propType, int defaultValue)"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,768,ropListItem item = lookupProperty(propType);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,769,f (item == null) { return defaultValue; }
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,770,eturn item.intValue;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,773,ublic int getExistingIntProp(int propType)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,775,ropListItem item = lookupProperty(propType);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,776,f (item == null) { Kit.codeBug(); }
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,777,eturn item.intValue;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,780,"ublic void putProp(int propType, Object prop)"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,782,f (prop == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,783,emoveProp(propType);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,784, else {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,785,ropListItem item = ensureProperty(propType);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,786,tem.objectValue = prop;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,790,"ublic void putBooleanProp(int propType, boolean prop) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,791,"utIntProp(propType, prop ? 1 : 0);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,794,"ublic void putIntProp(int propType, int prop)"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,796,ropListItem item = ensureProperty(propType);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,797,tem.intValue = prop;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,800,"/ Gets all the property types, in sorted order."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,801,rivate int[] getSortedPropTypes() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,802,nt count = 0;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,803,or (PropListItem x = propListHead; x != null; x = x.next) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,804,ount++;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,807,nt[] keys = new int[count];
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,808,or (PropListItem x = propListHead; x != null; x = x.next) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,809,ount--;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,810,eys[count] = x.type;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,813,rrays.sort(keys);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,814,eturn keys;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,817,ublic int getLineno() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,818,eturn extractLineno(sourcePosition);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,821,ublic int getCharno() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,822,eturn extractCharno(sourcePosition);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,825,** Can only be called when <tt>getType() == TokenStream.NUMBER</tt> */
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,826,ublic double getDouble() throws UnsupportedOperationException {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,827,f (this.getType() == Token.NUMBER) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,828,hrow new IllegalStateException(
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,829,"Number node not created with Node.newNumber"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,830, else {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,831,hrow new UnsupportedOperationException(
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,832,"his + "" is not a number node"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,836,** Can only be called when <tt>getType() == TokenStream.NUMBER</tt> */
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,837,ublic void setDouble(double s) throws UnsupportedOperationException {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,838,f (this.getType() == Token.NUMBER) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,839,hrow new IllegalStateException(
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,840,"Number node not created with Node.newNumber"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,841, else {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,842,hrow new UnsupportedOperationException(
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,843,"his + "" is not a string node"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,847,** Can only be called when node has String context. */
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,848,ublic String getString() throws UnsupportedOperationException {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,849,f (this.getType() == Token.STRING) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,850,hrow new IllegalStateException(
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,851,"String node not created with Node.newString"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,852, else {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,853,hrow new UnsupportedOperationException(
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,854,"his + "" is not a string node"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,326,@Override
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,327,public boolean isQuotedString() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,328,return getBooleanProp(QUOTED_PROP);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,858,** Can only be called when node has String context. */
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,859,ublic void setString(String s) throws UnsupportedOperationException {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,860,f (this.getType() == Token.STRING) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,861,hrow new IllegalStateException(
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,862,"String node not created with Node.newString"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,863, else {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,864,hrow new UnsupportedOperationException(
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,865,"his + "" is not a string node"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,332,* This should only be called for STRING nodes created in object lits.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,334,@Override
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,335,public void setQuotedString() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,336,"putBooleanProp(QUOTED_PROP, true);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,869,Override public String toString()
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,871,"eturn toString(true, true, true);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,339,private String str;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,874,ublic String toString(
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,875,"oolean printSource,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,876,"oolean printAnnotations,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,877,oolean printType)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,879,f (Token.printTrees) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,880,tringBuilder sb = new StringBuilder();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,881,"oString(sb, printSource, printAnnotations, printType);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,882,eturn sb.toString();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,884,eturn String.valueOf(type);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,887,rivate void toString(
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,888,"tringBuilder sb,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,889,"oolean printSource,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,890,"oolean printAnnotations,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,891,oolean printType)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,893,f (Token.printTrees) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,894,b.append(Token.name(type));
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,895,f (this instanceof StringNode) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,896,b.append(' ');
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,897,b.append(getString());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,898, else if (type == Token.FUNCTION) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,899,b.append(' ');
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,900,b.append(first.getString());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,901, else if (this instanceof ScriptOrFnNode) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,902,criptOrFnNode sof = (ScriptOrFnNode)this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,903,f (this instanceof FunctionNode) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,904,unctionNode fn = (FunctionNode)this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,905,b.append(' ');
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,906,b.append(fn.getFunctionName());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,908,f (printSource) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,909,"b.append("" [source name: "");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,910,b.append(sof.getSourceName());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,911,"b.append(""] [encoded source length: "");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,912,b.append(sof.getEncodedSourceEnd()
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,913, sof.getEncodedSourceStart());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,914,"b.append(""] [base line: "");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,915,b.append(sof.getBaseLineno());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,916,"b.append(""] [end line: "");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,917,b.append(sof.getEndLineno());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,918,b.append(']');
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,920, else if (type == Token.NUMBER) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,921,b.append(' ');
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,922,b.append(getDouble());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,924,f (printSource) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,925,nt lineno = getLineno();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,926,f (lineno != -1) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,927,b.append(' ');
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,928,b.append(lineno);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,342,private static class PropListItem implements Serializable {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,343,private static final long serialVersionUID = 1L;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,932,f (printAnnotations) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,933,nt[] keys = getSortedPropTypes();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,934,or (int i = 0; i < keys.length; i++) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,935,nt type = keys[i];
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,936,ropListItem x = lookupProperty(type);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,937,"b.append("" ["");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,938,b.append(propToString(type));
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,939,"b.append("": "");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,940,tring value;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,941,witch (type) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,942,ase TARGETBLOCK_PROP : // can't add this as it recurses
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,943,"alue = ""target block property"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,944,reak;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,945,ase LOCAL_BLOCK_PROP :     // can't add this as it is dull
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,946,"alue = ""last local block"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,947,reak;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,948,ase ISNUMBER_PROP:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,949,witch (x.intValue) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,950,ase BOTH:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,951,"alue = ""both"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,952,reak;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,953,ase RIGHT:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,954,"alue = ""right"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,955,reak;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,956,ase LEFT:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,957,"alue = ""left"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,958,reak;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,959,efault:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,960,hrow Kit.codeBug();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,962,reak;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,963,ase SPECIALCALL_PROP:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,964,witch (x.intValue) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,965,ase SPECIALCALL_EVAL:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,966,"alue = ""eval"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,967,reak;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,968,ase SPECIALCALL_WITH:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,969,"alue = ""with"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,970,reak;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,971,efault:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,972,/ NON_SPECIALCALL should not be stored
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,973,hrow Kit.codeBug();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,975,reak;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,976,efault :
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,977,bject obj = x.objectValue;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,978,f (obj != null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,979,alue = obj.toString();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,980, else {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,981,alue = String.valueOf(x.intValue);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,983,reak;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,985,b.append(value);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,986,b.append(']');
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,345,PropListItem next;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,346,int type;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,347,int intValue;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,348,Object objectValue;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,352,public Node(int nodeType) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,353,type = nodeType;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,354,parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,355,sourcePosition = -1;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,358,"public Node(int nodeType, Node child) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,359,"Preconditions.checkArgument(child.parent == null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,360,"""new child has existing parent"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,361,"Preconditions.checkArgument(child.next == null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,362,"""new child has existing sibling"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,364,type = nodeType;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,365,parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,366,first = last = child;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,367,child.next = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,368,child.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,369,sourcePosition = -1;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,372,"public Node(int nodeType, Node left, Node right) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,373,"Preconditions.checkArgument(left.parent == null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,374,"""first new child has existing parent"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,375,"Preconditions.checkArgument(left.next == null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,376,"""first new child has existing sibling"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,377,"Preconditions.checkArgument(right.parent == null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,378,"""second new child has existing parent"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,379,"Preconditions.checkArgument(right.next == null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,380,"""second new child has existing sibling"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,381,type = nodeType;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,382,parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,383,first = left;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,384,last = right;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,385,left.next = right;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,386,left.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,387,right.next = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,388,right.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,389,sourcePosition = -1;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,392,"public Node(int nodeType, Node left, Node mid, Node right) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,393,Preconditions.checkArgument(left.parent == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,394,Preconditions.checkArgument(left.next == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,395,Preconditions.checkArgument(mid.parent == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,396,Preconditions.checkArgument(mid.next == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,397,Preconditions.checkArgument(right.parent == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,398,Preconditions.checkArgument(right.next == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,399,type = nodeType;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,400,parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,401,first = left;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,402,last = right;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,403,left.next = mid;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,404,left.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,405,mid.next = right;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,406,mid.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,407,right.next = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,408,right.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,409,sourcePosition = -1;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,412,"public Node(int nodeType, Node left, Node mid, Node mid2, Node right) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,413,Preconditions.checkArgument(left.parent == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,414,Preconditions.checkArgument(left.next == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,415,Preconditions.checkArgument(mid.parent == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,416,Preconditions.checkArgument(mid.next == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,417,Preconditions.checkArgument(mid2.parent == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,418,Preconditions.checkArgument(mid2.next == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,419,Preconditions.checkArgument(right.parent == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,420,Preconditions.checkArgument(right.next == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,421,type = nodeType;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,422,parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,423,first = left;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,424,last = right;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,425,left.next = mid;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,426,left.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,427,mid.next = mid2;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,428,mid.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,429,mid2.next = right;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,430,mid2.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,431,right.next = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,432,right.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,433,sourcePosition = -1;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,436,"public Node(int nodeType, int lineno, int charno) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,437,type = nodeType;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,438,parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,439,"sourcePosition = mergeLineCharNo(lineno, charno);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,442,"public Node(int nodeType, Node child, int lineno, int charno) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,443,"this(nodeType, child);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,444,"sourcePosition = mergeLineCharNo(lineno, charno);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,447,"public Node(int nodeType, Node left, Node right, int lineno, int charno) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,448,"this(nodeType, left, right);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,449,"sourcePosition = mergeLineCharNo(lineno, charno);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,452,"public Node(int nodeType, Node left, Node mid, Node right,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,453,"int lineno, int charno) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,454,"this(nodeType, left, mid, right);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,455,"sourcePosition = mergeLineCharNo(lineno, charno);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,458,"public Node(int nodeType, Node left, Node mid, Node mid2, Node right,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,459,"int lineno, int charno) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,460,"this(nodeType, left, mid, mid2, right);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,461,"sourcePosition = mergeLineCharNo(lineno, charno);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,464,"public Node(int nodeType, Node[] children, int lineno, int charno) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,465,"this(nodeType, children);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,466,"sourcePosition = mergeLineCharNo(lineno, charno);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,469,"public Node(int nodeType, Node[] children) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,470,this.type = nodeType;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,471,parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,472,if (children.length != 0) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,473,this.first = children[0];
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,474,this.last = children[children.length - 1];
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,476,for (int i = 1; i < children.length; i++) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,477,if (null != children[i - 1].next) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,478,// fail early on loops. implies same node in array twice
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,479,"throw new IllegalArgumentException(""duplicate child"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,481,children[i - 1].next = children[i];
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,482,Preconditions.checkArgument(children[i - 1].parent == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,483,children[i - 1].parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,485,Preconditions.checkArgument(children[children.length - 1].parent == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,486,children[children.length - 1].parent = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,990,f (printType) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,991,f (jsType != null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,992,tring jsTypeString = jsType.toString();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,993,f (jsTypeString != null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,994,"b.append("" : "");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,995,b.append(jsTypeString);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,488,if (null != this.last.next) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,489,// fail early on loops. implies same node in array twice
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,490,"throw new IllegalArgumentException(""duplicate child"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,495,public static Node newNumber(double number) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,496,return new NumberNode(number);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1003,ublic String toStringTree() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1004,eturn toStringTreeImpl();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,499,"public static Node newNumber(double number, int lineno, int charno) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,500,"return new NumberNode(number, lineno, charno);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1007,rivate String toStringTreeImpl() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1008,ry {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1009,tringBuffer s = new StringBuffer();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1010,ppendStringTree(s);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1011,eturn s.toString();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1012, catch (IOException e) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1013,"hrow new RuntimeException(""Should not happen\n"" + e);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,503,public static Node newString(String str) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,504,"return new StringNode(Token.STRING, str);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1017,ublic void appendStringTree(Appendable appendable) throws IOException {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1018,"oStringTreeHelper(this, 0, appendable);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,507,"public static Node newString(int type, String str) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,508,"return new StringNode(type, str);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1021,"rivate static void toStringTreeHelper(Node n, int level, Appendable sb)"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1022,hrows IOException
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1024,f (Token.printTrees) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1025,or (int i = 0; i != level; ++i) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1026,"b.append(""    "");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1028,b.append(n.toString());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1029,b.append('\n');
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1030,or (Node cursor = n.getFirstChild(); cursor != null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1031,ursor = cursor.getNext())
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1033,"oStringTreeHelper(cursor, level + 1, sb);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,511,"public static Node newString(String str, int lineno, int charno) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,512,"return new StringNode(Token.STRING, str, lineno, charno);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1038,nt type;              // type of the node; Token.NAME for example
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1039,ode next;             // next sibling
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1040,rivate Node first;    // first element of a linked list of children
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1041,rivate Node last;     // last element of a linked list of children
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,515,"public static Node newString(int type, String str, int lineno, int charno) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,516,"return new StringNode(type, str, lineno, charno);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1044, Linked list of properties. Since vast majority of nodes would have
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1045," no more then 2 properties, linked list saves memory and provides"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1046," fast lookup. If this does not holds, propListHead can be replaced"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1047, by UintMap.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1049,rivate PropListItem propListHead;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,519,public int getType() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,520,return type;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1052, COLUMN_BITS represents how many of the lower-order bits of
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1053, sourcePosition are reserved for storing the column number.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1054, Bits above these store the line number.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1055, This gives us decent position information for everything except
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1056," files already passed through a minimizer, where lines might"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1057, be longer than 4096 characters.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1059,ublic static final int COLUMN_BITS = 12;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,523,public void setType(int type) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,524,this.type = type;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1062, MAX_COLUMN_NUMBER represents the maximum column number that can
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1063, be represented.  JSCompiler's modifications to Rhino cause all
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1064, tokens located beyond the maximum column to MAX_COLUMN_NUMBER.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1066,ublic static final int MAX_COLUMN_NUMBER = (1 << COLUMN_BITS) - 1;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,527,public boolean hasChildren() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,528,return first != null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1069, COLUMN_MASK stores a value where bits storing the column number
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1070," are set, and bits storing the line are not set.  It's handy for"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1071, separating column number from line number.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1073,ublic static final int COLUMN_MASK = MAX_COLUMN_NUMBER;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,531,public Node getFirstChild() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,532,return first;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1076, Source position of this node. The position is encoded with the
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1077," column number in the low 12 bits of the integer, and the line"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1078, number in the rest.  Create some handy constants so we can change this
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1079, size if we want.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1081,rivate int sourcePosition;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,535,public Node getLastChild() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,536,return last;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1083,rivate JSType jsType;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,539,public Node getNext() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,540,return next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1085,rivate Node parent;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1088,/ Source position management
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1090,ublic void setLineno(int lineno) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1091,nt charno = getCharno();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1092,f (charno == -1) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1093,harno = 0;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1095,"ourcePosition = mergeLineCharNo(lineno, charno);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1098,ublic void setCharno(int charno) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1099,"ourcePosition = mergeLineCharNo(getLineno(), charno);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,543,public Node getChildBefore(Node child) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,544,if (child == first) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,545,return null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1103, Merges the line number and character number in one integer. The Character
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1104, number takes the first 12 bits and the line number takes the rest. If
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1105, the character number is greater than <code>2<sup>12</sup>-1</code> it is
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1106, adjusted to <code>2<sup>12</sup>-1</code>.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1108,"rotected static int mergeLineCharNo(int lineno, int charno) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1109,f (lineno < 0 || charno < 0) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1110,eturn -1;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1111, else if ((charno & ~COLUMN_MASK) != 0) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1112,eturn lineno << COLUMN_BITS | COLUMN_MASK;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1113, else {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1114,eturn lineno << COLUMN_BITS | (charno & COLUMN_MASK);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,547,Node n = first;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,548,while (n.next != child) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,549,n = n.next;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,550,if (n == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,551,"throw new RuntimeException(""node is not a child"");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1119, Extracts the line number and character number from a merged line char
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1120," number (see {@link #mergeLineCharNo(int, int)})."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1122,rotected static int extractLineno(int lineCharNo) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1123,f (lineCharNo == -1) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1124,eturn -1;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1125, else {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1126,eturn lineCharNo >>> COLUMN_BITS;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,554,return n;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,557,public Node getChildAtIndex(int i) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,558,Node n = first;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,559,while (i > 0) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,560,n = n.next;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,561,i--;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,563,return n;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,566,public Node getLastSibling() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,567,Node n = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,568,while (n.next != null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,569,n = n.next;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,571,return n;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,574,public void addChildToFront(Node child) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,575,Preconditions.checkArgument(child.parent == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,576,Preconditions.checkArgument(child.next == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,577,child.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,578,child.next = first;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,579,first = child;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,580,if (last == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,581,last = child;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,585,public void addChildToBack(Node child) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,586,Preconditions.checkArgument(child.parent == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,587,Preconditions.checkArgument(child.next == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,588,child.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,589,child.next = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,590,if (last == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,591,first = last = child;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,592,return;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,594,last.next = child;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,595,last = child;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,598,public void addChildrenToFront(Node children) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,599,for (Node child = children; child != null; child = child.next) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,600,Preconditions.checkArgument(child.parent == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,601,child.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,603,Node lastSib = children.getLastSibling();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,604,lastSib.next = first;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,605,first = children;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,606,if (last == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,607,last = lastSib;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,611,public void addChildrenToBack(Node children) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,612,for (Node child = children; child != null; child = child.next) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,613,Preconditions.checkArgument(child.parent == null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,614,child.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,616,if (last != null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,617,last.next = children;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,619,last = children.getLastSibling();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,620,if (first == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,621,first = children;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,626,* Add 'child' before 'node'.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,628,"public void addChildBefore(Node newChild, Node node) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,629,"Preconditions.checkArgument(node != null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,630,"""The existing child node of the parent should not be null."");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,631,"Preconditions.checkArgument(newChild.next == null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,632,"""The new child node has siblings."");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,633,"Preconditions.checkArgument(newChild.parent == null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,634,"""The new child node already has a parent."");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,635,if (first == node) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,636,newChild.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,637,newChild.next = first;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,638,first = newChild;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,639,return;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,641,Node prev = getChildBefore(node);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,642,"addChildAfter(newChild, prev);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,646,* Add 'child' after 'node'.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,648,"public void addChildAfter(Node newChild, Node node) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,649,"Preconditions.checkArgument(newChild.next == null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,650,"""The new child node has siblings."");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,651,"Preconditions.checkArgument(newChild.parent == null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,652,"""The new child node already has a parent."");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,653,newChild.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,654,newChild.next = node.next;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,655,node.next = newChild;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,656,if (last == node) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,657,last = newChild;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,662,* Detach a child from its parent and siblings.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,664,public void removeChild(Node child) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,665,Node prev = getChildBefore(child);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,666,if (prev == null)
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,667,first = first.next;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,668,else
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,669,prev.next = child.next;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,670,if (child == last) last = prev;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,671,child.next = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,672,child.parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,676,* Detaches child from Node and replaces it with newChild.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,678,"public void replaceChild(Node child, Node newChild) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,679,"Preconditions.checkArgument(newChild.next == null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,680,"""The new child node has siblings."");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,681,"Preconditions.checkArgument(newChild.parent == null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,682,"""The new child node already has a parent."");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,684,// Copy over important information.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,685,newChild.copyInformationFrom(child);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,687,newChild.next = child.next;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,688,newChild.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,689,if (child == first) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,690,first = newChild;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,691,} else {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,692,Node prev = getChildBefore(child);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,693,prev.next = newChild;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,695,if (child == last)
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,696,last = newChild;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,697,child.next = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,698,child.parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,701,"public void replaceChildAfter(Node prevChild, Node newChild) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,702,"Preconditions.checkArgument(prevChild.parent == this,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,703,"""prev is not a child of this node."");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,705,"Preconditions.checkArgument(newChild.next == null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,706,"""The new child node has siblings."");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,707,"Preconditions.checkArgument(newChild.parent == null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,708,"""The new child node already has a parent."");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,710,// Copy over important information.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,711,newChild.copyInformationFrom(prevChild);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,713,Node child = prevChild.next;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,714,newChild.next = child.next;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,715,newChild.parent = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,716,prevChild.next = newChild;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,717,if (child == last)
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,718,last = newChild;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,719,child.next = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,720,child.parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,723,private PropListItem lookupProperty(int propType) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,724,PropListItem x = propListHead;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,725,while (x != null && propType != x.type) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,726,x = x.next;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,728,return x;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,731,private PropListItem ensureProperty(int propType) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,732,PropListItem item = lookupProperty(propType);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,733,if (item == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,734,item = new PropListItem();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,735,item.type = propType;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,736,item.next = propListHead;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,737,propListHead = item;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,739,return item;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,742,public void removeProp(int propType) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,743,PropListItem x = propListHead;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,744,if (x != null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,745,PropListItem prev = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,746,while (x.type != propType) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,747,prev = x;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,748,x = x.next;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,749,if (x == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,750,return;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1131, Extracts the character number and character number from a merged line
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1132," char number (see {@link #mergeLineCharNo(int, int)})."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1134,rotected static int extractCharno(int lineCharNo) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1135,f (lineCharNo == -1) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1136,eturn -1;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,753,if (prev == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,754,propListHead = x.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1138,eturn lineCharNo & COLUMN_MASK;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,756,prev.next = x.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1143,/ Iteration
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,761,public Object getProp(int propType) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,762,PropListItem item = lookupProperty(propType);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,763,if (item == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,764,return null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,766,return item.objectValue;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,769,public boolean getBooleanProp(int propType) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,770,"return getIntProp(propType, 0) != 0;"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1146, <p>Return an iterable object that iterates over this nodes's children.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1147, The iterator does not support the optional operation
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1148, {@link Iterator#remove()}.</p>
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1150," <p>To iterate over a node's siblings, one can write</p>"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1151, <pre>Node n = ...;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1152, for (Node child : n.children()) { ...</pre>
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1154,ublic Iterable<Node> children() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1155,f (first == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1156,eturn Collections.emptySet();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1157, else {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1158,eturn new SiblingNodeIterable(first);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,773,"public int getIntProp(int propType, int defaultValue) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,774,PropListItem item = lookupProperty(propType);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,775,if (item == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,776,return defaultValue;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,778,return item.intValue;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,781,public int getExistingIntProp(int propType) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,782,PropListItem item = lookupProperty(propType);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,783,if (item == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,784,Kit.codeBug();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,786,return item.intValue;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,789,"public void putProp(int propType, Object prop) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,790,if (prop == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,791,removeProp(propType);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,792,} else {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,793,PropListItem item = ensureProperty(propType);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,794,item.objectValue = prop;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,798,"public void putBooleanProp(int propType, boolean prop) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,799,"putIntProp(propType, prop ? 1 : 0);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,802,"public void putIntProp(int propType, int prop) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,803,PropListItem item = ensureProperty(propType);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,804,item.intValue = prop;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,807,"// Gets all the property types, in sorted order."
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,808,private int[] getSortedPropTypes() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,809,int count = 0;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,810,for (PropListItem x = propListHead; x != null; x = x.next) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,811,count++;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,814,int[] keys = new int[count];
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,815,for (PropListItem x = propListHead; x != null; x = x.next) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,816,count--;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,817,keys[count] = x.type;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,820,Arrays.sort(keys);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,821,return keys;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,824,public int getLineno() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,825,return extractLineno(sourcePosition);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,828,public int getCharno() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,829,return extractCharno(sourcePosition);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,832,/** Can only be called when <tt>getType() == TokenStream.NUMBER</tt> */
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,833,public double getDouble() throws UnsupportedOperationException {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,834,if (this.getType() == Token.NUMBER) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,835,throw new IllegalStateException(
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,836,"""Number node not created with Node.newNumber"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,837,} else {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,838,"throw new UnsupportedOperationException(this + "" is not a number node"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,842,/** Can only be called when <tt>getType() == TokenStream.NUMBER</tt> */
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,843,public void setDouble(double s) throws UnsupportedOperationException {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,844,if (this.getType() == Token.NUMBER) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,845,throw new IllegalStateException(
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,846,"""Number node not created with Node.newNumber"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,847,} else {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,848,"throw new UnsupportedOperationException(this + "" is not a string node"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,852,/** Can only be called when node has String context. */
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,853,public String getString() throws UnsupportedOperationException {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,854,if (this.getType() == Token.STRING) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,855,throw new IllegalStateException(
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,856,"""String node not created with Node.newString"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,857,} else {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,858,"throw new UnsupportedOperationException(this + "" is not a string node"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,862,/** Can only be called when node has String context. */
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,863,public void setString(String s) throws UnsupportedOperationException {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,864,if (this.getType() == Token.STRING) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,865,throw new IllegalStateException(
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,866,"""String node not created with Node.newString"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,867,} else {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,868,"throw new UnsupportedOperationException(this + "" is not a string node"");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,872,@Override
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,873,public String toString() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,874,"return toString(true, true, true);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,877,public String toString(
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,878,"boolean printSource,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,879,"boolean printAnnotations,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,880,boolean printType) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,881,if (Token.printTrees) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,882,StringBuilder sb = new StringBuilder();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,883,"toString(sb, printSource, printAnnotations, printType);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,884,return sb.toString();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,886,return String.valueOf(type);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,889,private void toString(
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,890,"StringBuilder sb,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,891,"boolean printSource,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,892,"boolean printAnnotations,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,893,boolean printType) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,894,if (Token.printTrees) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,895,sb.append(Token.name(type));
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,896,if (this instanceof StringNode) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,897,sb.append(' ');
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,898,sb.append(getString());
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,899,} else if (type == Token.FUNCTION) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,900,sb.append(' ');
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,901,sb.append(first.getString());
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,902,} else if (this instanceof ScriptOrFnNode) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,903,ScriptOrFnNode sof = (ScriptOrFnNode) this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,904,if (this instanceof FunctionNode) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,905,FunctionNode fn = (FunctionNode) this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,906,sb.append(' ');
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,907,sb.append(fn.getFunctionName());
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,909,if (printSource) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,910,"sb.append("" [source name: "");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,911,sb.append(sof.getSourceName());
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,912,"sb.append(""] [encoded source length: "");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,913,sb.append(sof.getEncodedSourceEnd() - sof.getEncodedSourceStart());
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,914,"sb.append(""] [base line: "");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,915,sb.append(sof.getBaseLineno());
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,916,"sb.append(""] [end line: "");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,917,sb.append(sof.getEndLineno());
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,918,sb.append(']');
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,920,} else if (type == Token.NUMBER) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,921,sb.append(' ');
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,922,sb.append(getDouble());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1163, <p>Return an iterable object that iterates over this nodes's siblings.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1164, The iterator does not support the optional operation
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1165, {@link Iterator#remove()}.</p>
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1167," <p>To iterate over a node's siblings, one can write</p>"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1168, <pre>Node n = ...;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1169, for (Node sibling : n.siblings()) { ...</pre>
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1171,ublic Iterable<Node> siblings() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1172,eturn new SiblingNodeIterable(this);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1176, @see Node#siblings()
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1178,rivate static final class SiblingNodeIterable
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1179,"mplements Iterable<Node>, Iterator<Node>"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1181,rivate final Node start;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1182,rivate Node current;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1183,rivate boolean used;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1185,iblingNodeIterable(Node start) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1186,his.start = start;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1187,his.current = start;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1188,his.used = false;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,924,if (printSource) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,925,int lineno = getLineno();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,926,if (lineno != -1) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,927,sb.append(' ');
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,928,sb.append(lineno);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1191,ublic Iterator<Node> iterator() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1192,f (!used) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1193,sed = true;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1194,eturn this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1195, else {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1196,/ We have already used the current object as an iterator;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1197,/ we must create a new SiblingNodeIterable based on this
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1198,/ iterable's start node.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1200,/ Since the primary use case for Node.children is in for
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1201,"/ loops, this branch is extremely unlikely."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1202,eturn (new SiblingNodeIterable(start)).iterator();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,932,if (printAnnotations) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,933,int[] keys = getSortedPropTypes();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,934,for (int i = 0; i < keys.length; i++) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,935,int type = keys[i];
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,936,PropListItem x = lookupProperty(type);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,937,"sb.append("" ["");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,938,sb.append(propToString(type));
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,939,"sb.append("": "");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,940,String value;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,941,switch (type) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,942,case TARGETBLOCK_PROP: // can't add this as it recurses
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,943,"value = ""target block property"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,944,break;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,945,case LOCAL_BLOCK_PROP: // can't add this as it is dull
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,946,"value = ""last local block"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,947,break;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,948,case ISNUMBER_PROP:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,949,switch (x.intValue) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,950,case BOTH:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,951,"value = ""both"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,952,break;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,953,case RIGHT:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,954,"value = ""right"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,955,break;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,956,case LEFT:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,957,"value = ""left"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,958,break;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,959,default:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,960,throw Kit.codeBug();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,962,break;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,963,case SPECIALCALL_PROP:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,964,switch (x.intValue) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,965,case SPECIALCALL_EVAL:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,966,"value = ""eval"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,967,break;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,968,case SPECIALCALL_WITH:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,969,"value = ""with"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,970,break;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,971,default:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,972,// NON_SPECIALCALL should not be stored
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,973,throw Kit.codeBug();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,975,break;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,976,default:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,977,Object obj = x.objectValue;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,978,if (obj != null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,979,value = obj.toString();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,980,} else {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,981,value = String.valueOf(x.intValue);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,983,break;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,985,sb.append(value);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,986,sb.append(']');
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1206,ublic boolean hasNext() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1207,eturn current != null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1210,ublic Node next() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1211,f (current == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1212,hrow new NoSuchElementException();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1214,ry {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1215,eturn current;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1216, finally {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1217,urrent = current.getNext();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1221,ublic void remove() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1222,hrow new UnsupportedOperationException();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,990,if (printType) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,991,if (jsType != null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,992,String jsTypeString = jsType.toString();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,993,if (jsTypeString != null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,994,"sb.append("" : "");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,995,sb.append(jsTypeString);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1227,/ Accessors
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1229,ublic Node getParent() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1230,eturn parent;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1003,public String toStringTree() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1004,return toStringTreeImpl();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1234, Gets the ancestor node relative to this.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1235," @param level 0 = this, 1 = the parent, etc."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1237,ublic Node getAncestor(int level) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1238,reconditions.checkArgument(level >= 0);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1239,ode node = this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1240,hile(node != null && level-- > 0) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1241,ode = node.getParent();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1243,eturn node;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1007,private String toStringTreeImpl() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1008,try {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1009,StringBuffer s = new StringBuffer();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1010,appendStringTree(s);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1011,return s.toString();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1012,} catch (IOException e) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1013,"throw new RuntimeException(""Should not happen\n"" + e);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1247, Iterates all of the node's ancestors excluding itself.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1249,ublic AncestorIterable getAncestors() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1250,eturn new AncestorIterable(this.getParent());
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1017,public void appendStringTree(Appendable appendable) throws IOException {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1018,"toStringTreeHelper(this, 0, appendable);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1254, Iterator to go up the ancestor tree.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1256,ublic static class AncestorIterable implements Iterable<Node> {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1257,rivate Node cur;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1260, @param cur The node to start.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1262,ncestorIterable(Node cur) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1263,his.cur = cur;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1021,"private static void toStringTreeHelper(Node n, int level, Appendable sb)"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1022,throws IOException {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1023,if (Token.printTrees) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1024,for (int i = 0; i != level; ++i) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1025,"sb.append(""    "");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1266,ublic Iterator<Node> iterator() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1267,eturn new Iterator<Node>() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1268,ublic boolean hasNext() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1269,eturn cur != null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1272,ublic Node next() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1273,f (!hasNext()) throw new NoSuchElementException();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1274,ode n = cur;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1275,ur = cur.getParent();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1276,eturn n;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1279,ublic void remove() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1280,hrow new UnsupportedOperationException();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1027,sb.append(n.toString());
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1028,sb.append('\n');
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1029,for (Node cursor = n.getFirstChild();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1030,cursor != null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1031,cursor = cursor.getNext()) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1032,"toStringTreeHelper(cursor, level + 1, sb);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1287, Check for one child more efficiently than by iterating over all the
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1288, children as is done with Node.getChildCount().
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1289, @return Whether the node has exactly one child.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1291,ublic boolean hasOneChild() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1292,eturn first != null && first == last;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1296, Check for more than one child more efficiently than by iterating over all
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1297, the children as is done with Node.getChildCount().
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1298, @return Whether the node more than one child.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1300,ublic boolean hasMoreThanOneChild() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1301,eturn first != null && first != last;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1304,ublic int getChildCount() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1305,nt c = 0;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1306,or (Node n = first; n != null; n = n.next)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1307,++;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1309,eturn c;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1312,/ Intended for testing and verification only.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1313,ublic boolean hasChild(Node child) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1314,or (Node n = first; n != null; n = n.getNext()) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1315,f (child == n) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1316,eturn true;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1037,int type;              // type of the node; Token.NAME for example
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1038,Node next;             // next sibling
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1039,private Node first;    // first element of a linked list of children
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1040,private Node last;     // last element of a linked list of children
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1043,* Linked list of properties. Since vast majority of nodes would have
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1044,"* no more then 2 properties, linked list saves memory and provides"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1045,"* fast lookup. If this does not holds, propListHead can be replaced"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1046,* by UintMap.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1048,private PropListItem propListHead;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1051,* COLUMN_BITS represents how many of the lower-order bits of
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1052,* sourcePosition are reserved for storing the column number.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1053,* Bits above these store the line number.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1054,* This gives us decent position information for everything except
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1055,"* files already passed through a minimizer, where lines might"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1056,* be longer than 4096 characters.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1058,public static final int COLUMN_BITS = 12;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1061,* MAX_COLUMN_NUMBER represents the maximum column number that can
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1062,* be represented.  JSCompiler's modifications to Rhino cause all
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1063,* tokens located beyond the maximum column to MAX_COLUMN_NUMBER.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1065,public static final int MAX_COLUMN_NUMBER = (1 << COLUMN_BITS) - 1;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1068,* COLUMN_MASK stores a value where bits storing the column number
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1069,"* are set, and bits storing the line are not set.  It's handy for"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1070,* separating column number from line number.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1072,public static final int COLUMN_MASK = MAX_COLUMN_NUMBER;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1075,* Source position of this node. The position is encoded with the
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1076,"* column number in the low 12 bits of the integer, and the line"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1077,* number in the rest.  Create some handy constants so we can change this
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1078,* size if we want.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1080,private int sourcePosition;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1082,private JSType jsType;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1084,private Node parent;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1087,// Source position management
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1089,public void setLineno(int lineno) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1090,int charno = getCharno();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1091,if (charno == -1) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1092,charno = 0;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1094,"sourcePosition = mergeLineCharNo(lineno, charno);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1097,public void setCharno(int charno) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1098,"sourcePosition = mergeLineCharNo(getLineno(), charno);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1102,* Merges the line number and character number in one integer. The Character
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1103,* number takes the first 12 bits and the line number takes the rest. If
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1104,* the character number is greater than <code>2<sup>12</sup>-1</code> it is
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1105,* adjusted to <code>2<sup>12</sup>-1</code>.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1107,"protected static int mergeLineCharNo(int lineno, int charno) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1108,if (lineno < 0 || charno < 0) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1109,return -1;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1110,} else if ((charno & ~COLUMN_MASK) != 0) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1111,return lineno << COLUMN_BITS | COLUMN_MASK;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1112,} else {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1113,return lineno << COLUMN_BITS | (charno & COLUMN_MASK);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1118,* Extracts the line number and character number from a merged line char
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1119,"* number (see {@link #mergeLineCharNo(int, int)})."
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1121,protected static int extractLineno(int lineCharNo) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1122,if (lineCharNo == -1) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1123,return -1;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1124,} else {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1125,return lineCharNo >>> COLUMN_BITS;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1130,* Extracts the character number and character number from a merged line
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1131,"* char number (see {@link #mergeLineCharNo(int, int)})."
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1133,protected static int extractCharno(int lineCharNo) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1134,if (lineCharNo == -1) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1135,return -1;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1136,} else {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1137,return lineCharNo & COLUMN_MASK;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1142,// Iteration
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1145,* <p>Return an iterable object that iterates over this nodes's children.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1146,* The iterator does not support the optional operation
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1147,* {@link Iterator#remove()}.</p>
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1149,"* <p>To iterate over a node's siblings, one can write</p>"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1150,* <pre>Node n = ...;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1151,* for (Node child : n.children()) { ...</pre>
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1153,public Iterable<Node> children() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1154,if (first == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1155,return Collections.emptySet();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1156,} else {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1157,return new SiblingNodeIterable(first);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1162,* <p>Return an iterable object that iterates over this nodes's siblings.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1163,* The iterator does not support the optional operation
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1164,* {@link Iterator#remove()}.</p>
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1166,"* <p>To iterate over a node's siblings, one can write</p>"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1167,* <pre>Node n = ...;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1168,* for (Node sibling : n.siblings()) { ...</pre>
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1170,public Iterable<Node> siblings() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1171,return new SiblingNodeIterable(this);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1175,* @see Node#siblings()
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1177,private static final class SiblingNodeIterable
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1178,"implements Iterable<Node>, Iterator<Node> {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1179,private final Node start;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1180,private Node current;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1181,private boolean used;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1183,SiblingNodeIterable(Node start) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1184,this.start = start;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1185,this.current = start;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1186,this.used = false;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1189,public Iterator<Node> iterator() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1190,if (!used) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1191,used = true;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1192,return this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1193,} else {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1194,// We have already used the current object as an iterator;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1195,// we must create a new SiblingNodeIterable based on this
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1196,// iterable's start node.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1198,// Since the primary use case for Node.children is in for
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1199,"// loops, this branch is extremely unlikely."
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1200,return (new SiblingNodeIterable(start)).iterator();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1319,eturn false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1323, Checks if the subtree under this node is the same as another subtree.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1324," Returns null if it's equal, or a message describing the differences."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1326,ublic String checkTreeEquals(Node node2) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1327,odeMismatch diff = checkTreeEqualsImpl(node2);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1328,f (diff != null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1329,"eturn ""Node tree inequality:"" +"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1330,"\nTree1:\n"" + toStringTree() +"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1331,"\n\nTree2:\n"" + node2.toStringTree() +"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1332,"\n\nSubtree1: "" + diff.nodeA.toStringTree() +"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1333,"\n\nSubtree2: "" + diff.nodeB.toStringTree();"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1335,eturn null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1339," If this is a compilation pass and not a test, do not construct error"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1340, strings. Instead return true if the trees are equal.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1342,ublic boolean checkTreeEqualsSilent(Node node2) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1343,eturn checkTreeEqualsImpl(node2) == null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1204,public boolean hasNext() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1205,return current != null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1347, Compare this node to node2 recursively and return the first pair
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1348, of nodes that differs doing a preorder depth-first traversal.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1349, Package private for testing. Returns null if the nodes are equivalent.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1351,odeMismatch checkTreeEqualsImpl(Node node2) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1352,oolean eq = false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1354,f (type == node2.getType() &&
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1355,etChildCount() == node2.getChildCount() &&
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1356,etClass() == node2.getClass()) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1358,q = this.isEquivalentTo(node2);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1361,f (!eq) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1362,"eturn new NodeMismatch(this, node2);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1365,odeMismatch res = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1366,"ode n, n2;"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1367,"or (n = first, n2 = node2.first;"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1368,es == null && n != null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1369," = n.next, n2 = n2.next) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1370,es = n.checkTreeEqualsImpl(n2);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1371,f (res != null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1372,eturn res;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1375,eturn res;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1208,public Node next() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1209,if (current == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1210,throw new NoSuchElementException();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1212,try {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1213,return current;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1214,} finally {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1215,current = current.getNext();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1379, Checks if the subtree under this node is the same as another subtree
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1380," including types. Returns null if it's equal, or a message describing the"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1381, differences.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1383,ublic boolean checkTreeTypeAwareEqualsSilent(Node node2) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1384,eturn checkTreeTypeAwareEqualsImpl(node2) == null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1219,public void remove() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1220,throw new UnsupportedOperationException();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1388, Compare this node to node2 recursively and return the first pair
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1389, of nodes that differs doing a preorder depth-first traversal.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1390, Package private for testing. Returns null if the nodes are equivalent.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1392,odeMismatch checkTreeTypeAwareEqualsImpl(Node node2) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1393,oolean eq = false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1395,f (type == node2.getType() &&
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1396,etChildCount() == node2.getChildCount() &&
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1397,etClass() == node2.getClass() &&
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1398,"bjects.equal(jsType, node2.getJSType())) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1400,q = this.isEquivalentTo(node2);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1403,f (!eq) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1404,"eturn new NodeMismatch(this, node2);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1225,// Accessors
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1407,odeMismatch res = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1408,"ode n, n2;"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1409,"or (n = first, n2 = node2.first;"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1410,es == null && n != null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1411," = n.next, n2 = n2.next) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1412,es = n.checkTreeTypeAwareEqualsImpl(n2);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1413,f (res != null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1414,eturn res;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1417,eturn res;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1227,public Node getParent() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1228,return parent;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1420,ublic static String tokenToName(int token) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1421,witch (token) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1422,"ase Token.ERROR:           return ""error"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1423,"ase Token.EOF:             return ""eof"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1424,"ase Token.EOL:             return ""eol"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1425,"ase Token.ENTERWITH:       return ""enterwith"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1426,"ase Token.LEAVEWITH:       return ""leavewith"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1427,"ase Token.RETURN:          return ""return"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1428,"ase Token.GOTO:            return ""goto"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1429,"ase Token.IFEQ:            return ""ifeq"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1430,"ase Token.IFNE:            return ""ifne"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1431,"ase Token.SETNAME:         return ""setname"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1432,"ase Token.BITOR:           return ""bitor"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1433,"ase Token.BITXOR:          return ""bitxor"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1434,"ase Token.BITAND:          return ""bitand"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1435,"ase Token.EQ:              return ""eq"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1436,"ase Token.NE:              return ""ne"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1437,"ase Token.LT:              return ""lt"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1438,"ase Token.LE:              return ""le"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1439,"ase Token.GT:              return ""gt"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1440,"ase Token.GE:              return ""ge"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1441,"ase Token.LSH:             return ""lsh"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1442,"ase Token.RSH:             return ""rsh"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1443,"ase Token.URSH:            return ""ursh"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1444,"ase Token.ADD:             return ""add"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1445,"ase Token.SUB:             return ""sub"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1446,"ase Token.MUL:             return ""mul"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1447,"ase Token.DIV:             return ""div"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1448,"ase Token.MOD:             return ""mod"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1449,"ase Token.BITNOT:          return ""bitnot"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1450,"ase Token.NEG:             return ""neg"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1451,"ase Token.NEW:             return ""new"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1452,"ase Token.DELPROP:         return ""delprop"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1453,"ase Token.TYPEOF:          return ""typeof"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1454,"ase Token.GETPROP:         return ""getprop"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1455,"ase Token.SETPROP:         return ""setprop"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1456,"ase Token.GETELEM:         return ""getelem"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1457,"ase Token.SETELEM:         return ""setelem"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1458,"ase Token.CALL:            return ""call"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1459,"ase Token.NAME:            return ""name"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1460,"ase Token.NUMBER:          return ""number"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1461,"ase Token.STRING:          return ""string"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1462,"ase Token.NULL:            return ""null"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1463,"ase Token.THIS:            return ""this"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1464,"ase Token.FALSE:           return ""false"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1465,"ase Token.TRUE:            return ""true"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1466,"ase Token.SHEQ:            return ""sheq"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1467,"ase Token.SHNE:            return ""shne"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1468,"ase Token.REGEXP:          return ""regexp"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1469,"ase Token.POS:             return ""pos"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1470,"ase Token.BINDNAME:        return ""bindname"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1471,"ase Token.THROW:           return ""throw"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1472,"ase Token.IN:              return ""in"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1473,"ase Token.INSTANCEOF:      return ""instanceof"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1474,"ase Token.GETVAR:          return ""getvar"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1475,"ase Token.SETVAR:          return ""setvar"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1476,"ase Token.TRY:             return ""try"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1477,"ase Token.TYPEOFNAME:      return ""typeofname"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1478,"ase Token.THISFN:          return ""thisfn"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1479,"ase Token.SEMI:            return ""semi"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1480,"ase Token.LB:              return ""lb"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1481,"ase Token.RB:              return ""rb"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1482,"ase Token.LC:              return ""lc"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1483,"ase Token.RC:              return ""rc"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1484,"ase Token.LP:              return ""lp"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1485,"ase Token.RP:              return ""rp"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1486,"ase Token.COMMA:           return ""comma"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1487,"ase Token.ASSIGN:          return ""assign"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1488,"ase Token.ASSIGN_BITOR:    return ""assign_bitor"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1489,"ase Token.ASSIGN_BITXOR:   return ""assign_bitxor"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1490,"ase Token.ASSIGN_BITAND:   return ""assign_bitand"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1491,"ase Token.ASSIGN_LSH:      return ""assign_lsh"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1492,"ase Token.ASSIGN_RSH:      return ""assign_rsh"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1493,"ase Token.ASSIGN_URSH:     return ""assign_ursh"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1494,"ase Token.ASSIGN_ADD:      return ""assign_add"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1495,"ase Token.ASSIGN_SUB:      return ""assign_sub"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1496,"ase Token.ASSIGN_MUL:      return ""assign_mul"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1497,"ase Token.ASSIGN_DIV:      return ""assign_div"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1498,"ase Token.ASSIGN_MOD:      return ""assign_mod"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1499,"ase Token.HOOK:            return ""hook"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1500,"ase Token.COLON:           return ""colon"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1501,"ase Token.OR:              return ""or"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1502,"ase Token.AND:             return ""and"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1503,"ase Token.INC:             return ""inc"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1504,"ase Token.DEC:             return ""dec"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1505,"ase Token.DOT:             return ""dot"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1506,"ase Token.FUNCTION:        return ""function"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1507,"ase Token.EXPORT:          return ""export"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1508,"ase Token.IMPORT:          return ""import"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1509,"ase Token.IF:              return ""if"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1510,"ase Token.ELSE:            return ""else"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1511,"ase Token.SWITCH:          return ""switch"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1512,"ase Token.CASE:            return ""case"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1513,"ase Token.DEFAULT:         return ""default"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1514,"ase Token.WHILE:           return ""while"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1515,"ase Token.DO:              return ""do"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1516,"ase Token.FOR:             return ""for"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1517,"ase Token.BREAK:           return ""break"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1518,"ase Token.CONTINUE:        return ""continue"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1519,"ase Token.VAR:             return ""var"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1520,"ase Token.WITH:            return ""with"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1521,"ase Token.CATCH:           return ""catch"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1522,"ase Token.FINALLY:         return ""finally"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1523,"ase Token.RESERVED:        return ""reserved"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1524,"ase Token.NOT:             return ""not"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1525,"ase Token.VOID:            return ""void"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1526,"ase Token.BLOCK:           return ""block"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1527,"ase Token.ARRAYLIT:        return ""arraylit"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1528,"ase Token.OBJECTLIT:       return ""objectlit"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1529,"ase Token.LABEL:           return ""label"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1530,"ase Token.TARGET:          return ""target"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1531,"ase Token.LOOP:            return ""loop"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1532,"ase Token.EXPR_VOID:       return ""expr_void"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1533,"ase Token.EXPR_RESULT:     return ""expr_result"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1534,"ase Token.JSR:             return ""jsr"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1535,"ase Token.SCRIPT:          return ""script"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1536,"ase Token.EMPTY:           return ""empty"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1537,"ase Token.GET_REF:         return ""get_ref"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1538,"ase Token.REF_SPECIAL:     return ""ref_special"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1540,"eturn ""<unknown=""+token+"">"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1232,* Gets the ancestor node relative to this.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1234,"* @param level 0 = this, 1 = the parent, etc."
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1236,public Node getAncestor(int level) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1237,Preconditions.checkArgument(level >= 0);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1238,Node node = this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1239,while (node != null && level-- > 0) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1240,node = node.getParent();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1242,return node;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1543,** Returns true if this node is equivalent semantically to another */
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1544,ublic boolean isEquivalentTo(Node node) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1545,f (type == Token.ARRAYLIT) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1546,ry {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1547,nt[] indices1 = (int[])getProp(Node.SKIP_INDEXES_PROP);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1548,nt[] indices2 = (int[])node.getProp(Node.SKIP_INDEXES_PROP);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1549,f (indices1 == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1550,f (indices2 != null)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1551,eturn false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1552, else if (indices2 == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1553,eturn false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1554, else if (indices1.length != indices2.length) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1555,eturn false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1556, else {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1557,or (int i = 0; i < indices1.length; i++) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1558,f (indices1[i] != indices2[i])
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1559,eturn false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1562, catch (Exception e) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1563,eturn false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1565, else if (type == Token.INC ||
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1566,ype == Token.DEC) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1567,"nt post1 = this.getIntProp(INCRDECR_PROP, 0);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1568,"nt post2 = node.getIntProp(INCRDECR_PROP, 0);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1569,f (post1 != post2)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1570,eturn false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1571, else if (type == Token.STRING) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1572,"nt quoted1 = this.getIntProp(QUOTED_PROP, 0);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1573,"nt quoted2 = node.getIntProp(QUOTED_PROP, 0);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1574,f (quoted1 != quoted2)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1575,eturn false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1577,eturn true;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1246,* Iterates all of the node's ancestors excluding itself.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1248,public AncestorIterable getAncestors() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1249,return new AncestorIterable(this.getParent());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1580,ublic boolean hasSideEffects()
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1582,witch (type) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1583,ase Token.EXPR_VOID:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1584,ase Token.COMMA:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1585,f (last != null)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1586,eturn last.hasSideEffects();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1587,lse
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1588,eturn true;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1590,ase Token.HOOK:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1591,f (first == null ||
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1592,irst.next == null ||
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1593,irst.next.next == null)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1594,it.codeBug();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1595,eturn first.next.hasSideEffects() &&
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1596,irst.next.next.hasSideEffects();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1598,ase Token.ERROR:         // Avoid cascaded error messages
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1599,ase Token.EXPR_RESULT:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1600,ase Token.ASSIGN:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1601,ase Token.ASSIGN_ADD:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1602,ase Token.ASSIGN_SUB:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1603,ase Token.ASSIGN_MUL:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1604,ase Token.ASSIGN_DIV:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1605,ase Token.ASSIGN_MOD:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1606,ase Token.ASSIGN_BITOR:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1607,ase Token.ASSIGN_BITXOR:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1608,ase Token.ASSIGN_BITAND:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1609,ase Token.ASSIGN_LSH:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1610,ase Token.ASSIGN_RSH:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1611,ase Token.ASSIGN_URSH:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1612,ase Token.ENTERWITH:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1613,ase Token.LEAVEWITH:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1614,ase Token.RETURN:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1615,ase Token.GOTO:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1616,ase Token.IFEQ:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1617,ase Token.IFNE:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1618,ase Token.NEW:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1619,ase Token.DELPROP:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1620,ase Token.SETNAME:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1621,ase Token.SETPROP:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1622,ase Token.SETELEM:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1623,ase Token.CALL:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1624,ase Token.THROW:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1625,ase Token.RETHROW:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1626,ase Token.SETVAR:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1627,ase Token.CATCH_SCOPE:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1628,ase Token.RETURN_RESULT:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1629,ase Token.SET_REF:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1630,ase Token.DEL_REF:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1631,ase Token.REF_CALL:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1632,ase Token.TRY:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1633,ase Token.SEMI:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1634,ase Token.INC:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1635,ase Token.DEC:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1636,ase Token.EXPORT:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1637,ase Token.IMPORT:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1638,ase Token.IF:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1639,ase Token.ELSE:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1640,ase Token.SWITCH:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1641,ase Token.WHILE:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1642,ase Token.DO:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1643,ase Token.FOR:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1644,ase Token.BREAK:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1645,ase Token.CONTINUE:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1646,ase Token.VAR:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1647,ase Token.CONST:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1648,ase Token.WITH:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1649,ase Token.CATCH:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1650,ase Token.FINALLY:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1651,ase Token.BLOCK:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1652,ase Token.LABEL:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1653,ase Token.TARGET:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1654,ase Token.LOOP:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1655,ase Token.JSR:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1656,ase Token.SETPROP_OP:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1657,ase Token.SETELEM_OP:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1658,ase Token.LOCAL_BLOCK:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1659,ase Token.SET_REF_OP:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1660,eturn true;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1662,efault:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1663,eturn false;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1253,* Iterator to go up the ancestor tree.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1255,public static class AncestorIterable implements Iterable<Node> {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1256,private Node cur;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1668, This function takes a set of GETPROP nodes and produces a string that is
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1669, each property separated by dots.  If the node ultimately under the left
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1670," sub-tree is not a simple name, this is not a valid qualified name."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1672," @return a null if this is not a qualified name, or a dot-separated string"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1673, of the name and properties.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1259,* @param cur The node to start.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1675,ublic String getQualifiedName() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1676,f (type == Token.NAME) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1677,eturn getString();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1678, else if (type == Token.GETPROP) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1679,tring left = getFirstChild().getQualifiedName();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1680,f (left == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1681,eturn null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1683,"eturn left + ""."" + getLastChild().getString();"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1684, else if (type == Token.THIS) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1685,"eturn ""this"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1686, else {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1687,eturn null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1261,AncestorIterable(Node cur) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1262,this.cur = cur;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1694," Returns whether a node corresponds to a simple or a qualified name, such"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1695, as <code>x</code> or <code>a.b.c</code> or <code>this.a</code>.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1697,ublic boolean isQualifiedName() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1698,witch (getType()) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1699,ase Token.NAME:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1700,ase Token.THIS:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1701,eturn true;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1702,ase Token.GETPROP:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1703,eturn getFirstChild().isQualifiedName();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1704,efault:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1705,eturn false;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1265,public Iterator<Node> iterator() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1266,return new Iterator<Node>() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1267,public boolean hasNext() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1268,return cur != null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1710, Returns whether a node corresponds to a simple or a qualified name
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1711," without a ""this"" reference, such as <code>a.b.c</code>, but not"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1712, <code>this.a</code>.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1714,ublic boolean isUnscopedQualifiedName() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1715,witch (getType()) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1716,ase Token.NAME:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1717,eturn true;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1718,ase Token.GETPROP:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1719,eturn getFirstChild().isUnscopedQualifiedName();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1720,efault:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1721,eturn false;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1271,public Node next() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1272,if (!hasNext()) throw new NoSuchElementException();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1273,Node n = cur;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1274,cur = cur.getParent();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1275,return n;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1726,/ Mutators
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1729, Removes this node from its parent.  Equivalent to:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1730,     node.getParent().removeChild();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1732,ublic Node detachFromParent() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1733,reconditions.checkState(parent != null);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1734,arent.removeChild(this);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1735,eturn this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1739, Removes the first child of Node.  Equivalent to:
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1740,     node.removeChild(node.getFirstChild());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1741, @return The removed Node.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1743,ublic Node removeFirstChild() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1744,ode child = first;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1745,f (child != null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1746,emoveChild(child);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1278,public void remove() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1279,throw new UnsupportedOperationException();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1286,* Check for one child more efficiently than by iterating over all the
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1287,* children as is done with Node.getChildCount().
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1289,* @return Whether the node has exactly one child.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1291,public boolean hasOneChild() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1292,return first != null && first == last;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1296,* Check for more than one child more efficiently than by iterating over all
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1297,* the children as is done with Node.getChildCount().
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1299,* @return Whether the node more than one child.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1301,public boolean hasMoreThanOneChild() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1302,return first != null && first != last;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1305,public int getChildCount() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1306,int c = 0;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1307,for (Node n = first; n != null; n = n.next)
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1308,c++;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1310,return c;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1313,// Intended for testing and verification only.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1314,public boolean hasChild(Node child) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1315,for (Node n = first; n != null; n = n.getNext()) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1316,if (child == n) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1317,return true;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1748,eturn child;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1752, @return A Node that is the head of the list of children.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1754,ublic Node removeChildren() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1755,ode children = first;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1756,or (Node child = first; child != null; child = child.getNext()) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1757,hild.parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1320,return false;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1324,* Checks if the subtree under this node is the same as another subtree.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1325,"* Returns null if it's equal, or a message describing the differences."
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1327,public String checkTreeEquals(Node node2) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1328,NodeMismatch diff = checkTreeEqualsImpl(node2);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1329,if (diff != null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1330,"return ""Node tree inequality:"" +"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1331,"""\nTree1:\n"" + toStringTree() +"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1332,"""\n\nTree2:\n"" + node2.toStringTree() +"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1333,"""\n\nSubtree1: "" + diff.nodeA.toStringTree() +"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1334,"""\n\nSubtree2: "" + diff.nodeB.toStringTree();"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1759,irst = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1760,ast = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1761,eturn children;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1765, Removes all children from this node and isolates the children from each
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1766, other.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1768,ublic void detachChildren() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1769,or (Node child = first; child != null; ) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1770,ode nextChild = child.getNext();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1771,hild.parent = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1772,hild.next = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1773,hild = nextChild;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1336,return null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1340,"* If this is a compilation pass and not a test, do not construct error"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1341,* strings. Instead return true if the trees are equal.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1343,public boolean checkTreeEqualsSilent(Node node2) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1344,return checkTreeEqualsImpl(node2) == null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1348,* Helper function to ignore differences in Node subclasses that are no longer
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1349,* used.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1351,"@SuppressWarnings(""unchecked"")"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1352,static private Class getNodeClass(Node n) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1353,Class c = n.getClass();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1354,if (c == FunctionNode.class || c == ScriptOrFnNode.class) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1355,return Node.class;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1357,return c;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1361,* Compare this node to node2 recursively and return the first pair of nodes
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1362,* that differs doing a preorder depth-first traversal. Package private for
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1363,* testing. Returns null if the nodes are equivalent.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1365,NodeMismatch checkTreeEqualsImpl(Node node2) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1366,boolean eq = false;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1368,if (type == node2.getType() && getChildCount() == node2.getChildCount()
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1369,&& getNodeClass(this) == getNodeClass(node2)) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1370,eq = this.isEquivalentTo(node2);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1373,if (!eq) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1374,"return new NodeMismatch(this, node2);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1377,NodeMismatch res = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1378,"Node n, n2;"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1379,"for (n = first, n2 = node2.first;"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1380,res == null && n != null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1381,"n = n.next, n2 = n2.next) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1382,res = n.checkTreeEqualsImpl(n2);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1383,if (res != null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1384,return res;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1775,irst = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1776,ast = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1779,ublic Node removeChildAfter(Node prev) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1780,"reconditions.checkArgument(prev.parent == this,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1781,"prev is not a child of this node."");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1782,"reconditions.checkArgument(prev.next != null,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1783,"no next sibling."");"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1785,ode child = prev.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1786,rev.next = child.next;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1787,f (child == last) last = prev;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1788,hild.next = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1789,hild.parent = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1790,eturn child;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1794," @return A detached clone of the Node, specifically excluding its"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1795, children.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1797,ublic Node cloneNode() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1798,ode result;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1799,ry {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1800,esult = (Node) super.clone();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1801,esult.next = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1802,esult.first = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1803,esult.last = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1804,esult.parent = null;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1806,atch (CloneNotSupportedException e) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1807,hrow new RuntimeException(e.getMessage());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1809,eturn result;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1387,return res;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1391,* Checks if the subtree under this node is the same as another subtree
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1392,"* including types. Returns null if it's equal, or a message describing the"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1393,* differences.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1395,public boolean checkTreeTypeAwareEqualsSilent(Node node2) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1396,return checkTreeTypeAwareEqualsImpl(node2) == null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1400,* Compare this node to node2 recursively and return the first pair of nodes
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1401,* that differs doing a preorder depth-first traversal. Package private for
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1402,* testing. Returns null if the nodes are equivalent.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1404,NodeMismatch checkTreeTypeAwareEqualsImpl(Node node2) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1405,boolean eq = false;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1407,if (type == node2.getType()
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1408,&& getChildCount() == node2.getChildCount()
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1409,&& getClass() == node2.getClass()
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1410,"&& Objects.equal(jsType, node2.getJSType())) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1412,eq = this.isEquivalentTo(node2);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1415,if (!eq) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1416,"return new NodeMismatch(this, node2);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1419,NodeMismatch res = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1420,"Node n, n2;"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1421,"for (n = first, n2 = node2.first;"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1422,res == null && n != null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1423,"n = n.next, n2 = n2.next) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1424,res = n.checkTreeTypeAwareEqualsImpl(n2);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1425,if (res != null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1426,return res;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1813, @return A detached clone of the Node and all its children.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1815,ublic Node cloneTree() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1816,ode result = cloneNode();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1817,or (Node n2 = getFirstChild(); n2 != null; n2 = n2.getNext()) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1818,ode n2clone = n2.cloneTree();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1819,2clone.parent = result;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1820,f (result.last != null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1821,esult.last.next = n2clone;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1823,f (result.first == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1824,esult.first = n2clone;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1429,return res;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1432,public static String tokenToName(int token) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1433,switch (token) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1434,"case Token.ERROR:           return ""error"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1435,"case Token.EOF:             return ""eof"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1436,"case Token.EOL:             return ""eol"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1437,"case Token.ENTERWITH:       return ""enterwith"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1438,"case Token.LEAVEWITH:       return ""leavewith"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1439,"case Token.RETURN:          return ""return"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1440,"case Token.GOTO:            return ""goto"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1441,"case Token.IFEQ:            return ""ifeq"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1442,"case Token.IFNE:            return ""ifne"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1443,"case Token.SETNAME:         return ""setname"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1444,"case Token.BITOR:           return ""bitor"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1445,"case Token.BITXOR:          return ""bitxor"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1446,"case Token.BITAND:          return ""bitand"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1447,"case Token.EQ:              return ""eq"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1448,"case Token.NE:              return ""ne"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1449,"case Token.LT:              return ""lt"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1450,"case Token.LE:              return ""le"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1451,"case Token.GT:              return ""gt"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1452,"case Token.GE:              return ""ge"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1453,"case Token.LSH:             return ""lsh"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1454,"case Token.RSH:             return ""rsh"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1455,"case Token.URSH:            return ""ursh"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1456,"case Token.ADD:             return ""add"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1457,"case Token.SUB:             return ""sub"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1458,"case Token.MUL:             return ""mul"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1459,"case Token.DIV:             return ""div"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1460,"case Token.MOD:             return ""mod"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1461,"case Token.BITNOT:          return ""bitnot"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1462,"case Token.NEG:             return ""neg"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1463,"case Token.NEW:             return ""new"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1464,"case Token.DELPROP:         return ""delprop"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1465,"case Token.TYPEOF:          return ""typeof"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1466,"case Token.GETPROP:         return ""getprop"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1467,"case Token.SETPROP:         return ""setprop"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1468,"case Token.GETELEM:         return ""getelem"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1469,"case Token.SETELEM:         return ""setelem"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1470,"case Token.CALL:            return ""call"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1471,"case Token.NAME:            return ""name"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1472,"case Token.NUMBER:          return ""number"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1473,"case Token.STRING:          return ""string"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1474,"case Token.NULL:            return ""null"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1475,"case Token.THIS:            return ""this"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1476,"case Token.FALSE:           return ""false"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1477,"case Token.TRUE:            return ""true"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1478,"case Token.SHEQ:            return ""sheq"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1479,"case Token.SHNE:            return ""shne"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1480,"case Token.REGEXP:          return ""regexp"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1481,"case Token.POS:             return ""pos"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1482,"case Token.BINDNAME:        return ""bindname"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1483,"case Token.THROW:           return ""throw"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1484,"case Token.IN:              return ""in"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1485,"case Token.INSTANCEOF:      return ""instanceof"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1486,"case Token.GETVAR:          return ""getvar"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1487,"case Token.SETVAR:          return ""setvar"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1488,"case Token.TRY:             return ""try"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1489,"case Token.TYPEOFNAME:      return ""typeofname"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1490,"case Token.THISFN:          return ""thisfn"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1491,"case Token.SEMI:            return ""semi"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1492,"case Token.LB:              return ""lb"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1493,"case Token.RB:              return ""rb"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1494,"case Token.LC:              return ""lc"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1495,"case Token.RC:              return ""rc"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1496,"case Token.LP:              return ""lp"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1497,"case Token.RP:              return ""rp"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1498,"case Token.COMMA:           return ""comma"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1499,"case Token.ASSIGN:          return ""assign"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1500,"case Token.ASSIGN_BITOR:    return ""assign_bitor"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1501,"case Token.ASSIGN_BITXOR:   return ""assign_bitxor"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1502,"case Token.ASSIGN_BITAND:   return ""assign_bitand"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1503,"case Token.ASSIGN_LSH:      return ""assign_lsh"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1504,"case Token.ASSIGN_RSH:      return ""assign_rsh"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1505,"case Token.ASSIGN_URSH:     return ""assign_ursh"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1506,"case Token.ASSIGN_ADD:      return ""assign_add"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1507,"case Token.ASSIGN_SUB:      return ""assign_sub"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1508,"case Token.ASSIGN_MUL:      return ""assign_mul"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1509,"case Token.ASSIGN_DIV:      return ""assign_div"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1510,"case Token.ASSIGN_MOD:      return ""assign_mod"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1511,"case Token.HOOK:            return ""hook"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1512,"case Token.COLON:           return ""colon"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1513,"case Token.OR:              return ""or"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1514,"case Token.AND:             return ""and"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1515,"case Token.INC:             return ""inc"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1516,"case Token.DEC:             return ""dec"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1517,"case Token.DOT:             return ""dot"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1518,"case Token.FUNCTION:        return ""function"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1519,"case Token.EXPORT:          return ""export"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1520,"case Token.IMPORT:          return ""import"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1521,"case Token.IF:              return ""if"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1522,"case Token.ELSE:            return ""else"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1523,"case Token.SWITCH:          return ""switch"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1524,"case Token.CASE:            return ""case"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1525,"case Token.DEFAULT:         return ""default"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1526,"case Token.WHILE:           return ""while"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1527,"case Token.DO:              return ""do"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1528,"case Token.FOR:             return ""for"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1529,"case Token.BREAK:           return ""break"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1530,"case Token.CONTINUE:        return ""continue"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1531,"case Token.VAR:             return ""var"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1532,"case Token.WITH:            return ""with"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1533,"case Token.CATCH:           return ""catch"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1534,"case Token.FINALLY:         return ""finally"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1535,"case Token.RESERVED:        return ""reserved"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1536,"case Token.NOT:             return ""not"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1537,"case Token.VOID:            return ""void"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1538,"case Token.BLOCK:           return ""block"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1539,"case Token.ARRAYLIT:        return ""arraylit"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1540,"case Token.OBJECTLIT:       return ""objectlit"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1541,"case Token.LABEL:           return ""label"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1542,"case Token.TARGET:          return ""target"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1543,"case Token.LOOP:            return ""loop"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1544,"case Token.EXPR_VOID:       return ""expr_void"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1545,"case Token.EXPR_RESULT:     return ""expr_result"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1546,"case Token.JSR:             return ""jsr"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1547,"case Token.SCRIPT:          return ""script"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1548,"case Token.EMPTY:           return ""empty"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1549,"case Token.GET_REF:         return ""get_ref"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1550,"case Token.REF_SPECIAL:     return ""ref_special"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1552,"return ""<unknown=""+token+"">"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1555,/** Returns true if this node is equivalent semantically to another */
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1556,public boolean isEquivalentTo(Node node) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1557,if (type == Token.ARRAYLIT) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1558,try {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1559,int[] indices1 = (int[]) getProp(Node.SKIP_INDEXES_PROP);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1560,int[] indices2 = (int[]) node.getProp(Node.SKIP_INDEXES_PROP);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1561,if (indices1 == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1562,if (indices2 != null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1563,return false;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1565,} else if (indices2 == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1566,return false;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1567,} else if (indices1.length != indices2.length) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1568,return false;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1569,} else {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1570,for (int i = 0; i < indices1.length; i++) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1571,if (indices1[i] != indices2[i]) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1572,return false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1826,esult.last = n2clone;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1828,eturn result;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1832," Copies source file, line and column number from the other"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1833, node given to the current node.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1834, @return this
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1836,ublic Node copySourceLocationFrom(Node other) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1837,f (getProp(SOURCEFILE_PROP) == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1838,"utProp(SOURCEFILE_PROP, other.getProp(SOURCEFILE_PROP));"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1839,ourcePosition = other.sourcePosition;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1576,} catch (Exception e) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1577,return false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1842,f (getLineno() == -1 || getCharno() == -1) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1843,etLineno(other.getLineno());
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1844,etCharno(other.getCharno());
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1579,} else if (type == Token.INC || type == Token.DEC) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1580,"int post1 = this.getIntProp(INCRDECR_PROP, 0);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1581,"int post2 = node.getIntProp(INCRDECR_PROP, 0);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1582,if (post1 != post2) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1583,return false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1847,eturn this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1851, Copies source file and name information from the other
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1852, node given to the current node. Used for maintaining
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1853, debug information across node append and remove operations.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1854, @return this
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1856,ublic Node copyInformationFrom(Node other) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1857,f (getProp(ORIGINALNAME_PROP) == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1858,"utProp(ORIGINALNAME_PROP, other.getProp(ORIGINALNAME_PROP));"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1861,f (getProp(SOURCEFILE_PROP) == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1862,"utProp(SOURCEFILE_PROP, other.getProp(SOURCEFILE_PROP));"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1863,ourcePosition = other.sourcePosition;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1866,eturn this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1870, Copies source file and name information from the other node to the
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1871, entire tree rooted at this node.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1872, @return this
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1874,ublic Node copyInformationFromForTree(Node other) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1875,opyInformationFrom(other);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1876,or (Node child = getFirstChild();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1877,hild != null; child = child.getNext()) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1878,hild.copyInformationFromForTree(other);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1585,} else if (type == Token.STRING) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1586,"int quoted1 = this.getIntProp(QUOTED_PROP, 0);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1587,"int quoted2 = node.getIntProp(QUOTED_PROP, 0);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1588,if (quoted1 != quoted2) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1589,return false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1881,eturn this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1592,return true;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1885,/ Custom annotations
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1887,ublic JSType getJSType() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1888,eturn jsType;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1595,public boolean hasSideEffects() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1596,switch (type) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1597,case Token.EXPR_VOID:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1598,case Token.COMMA:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1599,if (last != null)
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1600,return last.hasSideEffects();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1601,else
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1602,return true;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1891,ublic void setJSType(JSType jsType) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1892,his.jsType = jsType;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1604,case Token.HOOK:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1605,if (first == null || first.next == null || first.next.next == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1606,Kit.codeBug();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1608,return first.next.hasSideEffects() && first.next.next.hasSideEffects();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1610,case Token.ERROR: // Avoid cascaded error messages
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1611,case Token.EXPR_RESULT:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1612,case Token.ASSIGN:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1613,case Token.ASSIGN_ADD:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1614,case Token.ASSIGN_SUB:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1615,case Token.ASSIGN_MUL:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1616,case Token.ASSIGN_DIV:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1617,case Token.ASSIGN_MOD:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1618,case Token.ASSIGN_BITOR:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1619,case Token.ASSIGN_BITXOR:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1620,case Token.ASSIGN_BITAND:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1621,case Token.ASSIGN_LSH:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1622,case Token.ASSIGN_RSH:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1623,case Token.ASSIGN_URSH:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1624,case Token.ENTERWITH:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1625,case Token.LEAVEWITH:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1626,case Token.RETURN:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1627,case Token.GOTO:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1628,case Token.IFEQ:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1629,case Token.IFNE:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1630,case Token.NEW:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1631,case Token.DELPROP:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1632,case Token.SETNAME:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1633,case Token.SETPROP:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1634,case Token.SETELEM:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1635,case Token.CALL:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1636,case Token.THROW:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1637,case Token.RETHROW:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1638,case Token.SETVAR:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1639,case Token.CATCH_SCOPE:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1640,case Token.RETURN_RESULT:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1641,case Token.SET_REF:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1642,case Token.DEL_REF:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1643,case Token.REF_CALL:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1644,case Token.TRY:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1645,case Token.SEMI:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1646,case Token.INC:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1647,case Token.DEC:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1648,case Token.EXPORT:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1649,case Token.IMPORT:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1650,case Token.IF:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1651,case Token.ELSE:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1652,case Token.SWITCH:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1653,case Token.WHILE:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1654,case Token.DO:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1655,case Token.FOR:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1656,case Token.BREAK:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1657,case Token.CONTINUE:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1658,case Token.VAR:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1659,case Token.CONST:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1660,case Token.WITH:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1661,case Token.CATCH:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1662,case Token.FINALLY:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1663,case Token.BLOCK:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1664,case Token.LABEL:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1665,case Token.TARGET:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1666,case Token.LOOP:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1667,case Token.JSR:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1668,case Token.SETPROP_OP:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1669,case Token.SETELEM_OP:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1670,case Token.LOCAL_BLOCK:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1671,case Token.SET_REF_OP:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1672,return true;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1895,ublic FileLevelJsDocBuilder getJsDocBuilderForNode() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1896,eturn new FileLevelJsDocBuilder();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1674,default:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1675,return false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1900, An inner class that provides back-door access to the license
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1901, property of the JSDocInfo property for this node. This is only
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1902, meant to be used for top level script nodes where the
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1903, {@link com.google.javascript.jscomp.parsing.JsDocInfoParser} needs to
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1904," be able to append directly to the top level node, not just the"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1905, current node.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1907,ublic class FileLevelJsDocBuilder {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1908,ublic void append(String fileLevelComment) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1909,SDocInfo jsDocInfo = getJSDocInfo();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1910,f (jsDocInfo == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1911,/ TODO(user): Is there a way to determine whether to
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1912,/ parse the JsDoc documentation from here?
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1913,sDocInfo = new JSDocInfo(false);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1915,tring license = jsDocInfo.getLicense();
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1916,f (license == null) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1917,"icense = """";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1919,sDocInfo.setLicense(license + fileLevelComment);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1920,etJSDocInfo(jsDocInfo);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1680,* This function takes a set of GETPROP nodes and produces a string that is
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1681,* each property separated by dots. If the node ultimately under the left
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1682,"* sub-tree is not a simple name, this is not a valid qualified name."
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1684,"* @return a null if this is not a qualified name, or a dot-separated string"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1685,*         of the name and properties.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1687,public String getQualifiedName() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1688,if (type == Token.NAME) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1689,return getString();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1690,} else if (type == Token.GETPROP) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1691,String left = getFirstChild().getQualifiedName();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1692,if (left == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1693,return null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1695,"return left + ""."" + getLastChild().getString();"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1696,} else if (type == Token.THIS) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1697,"return ""this"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1698,} else {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1699,return null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1704,"* Returns whether a node corresponds to a simple or a qualified name, such as"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1705,* <code>x</code> or <code>a.b.c</code> or <code>this.a</code>.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1707,public boolean isQualifiedName() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1708,switch (getType()) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1709,case Token.NAME:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1710,case Token.THIS:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1711,return true;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1712,case Token.GETPROP:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1713,return getFirstChild().isQualifiedName();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1714,default:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1715,return false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1925, Get the {@link JSDocInfo} attached to this node.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1926, @return the information or {@code null} if no JSDoc is attached to this
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1927, node
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1929,ublic JSDocInfo getJSDocInfo()
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1931,eturn (JSDocInfo) getProp(JSDOC_INFO_PROP);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1935, Sets the {@link JSDocInfo} attached to this node.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1937,ublic void setJSDocInfo(JSDocInfo info)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1939,"utProp(JSDOC_INFO_PROP, info);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1943, Sets whether this node is a variable length argument node. This
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1944, method is meaningful only on {@link Token#NAME} nodes
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1945, used to define a {@link Token#FUNCTION}'s argument list.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1947,ublic void setVarArgs(boolean varArgs)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1949,"utBooleanProp(VAR_ARGS_NAME, varArgs);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1953, Returns whether this node is a variable length argument node. This
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1954, method's return value is meaningful only on {@link Token#NAME} nodes
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1955, used to define a {@link Token#FUNCTION}'s argument list.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1957,ublic boolean isVarArgs()
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1959,eturn getBooleanProp(VAR_ARGS_NAME);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1963, Sets whether this node is an optional argument node. This
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1964, method is meaningful only on {@link Token#NAME} nodes
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1965, used to define a {@link Token#FUNCTION}'s argument list.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1967,ublic void setOptionalArg(boolean optionalArg)
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1969,"utBooleanProp(OPT_ARG_NAME, optionalArg);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1973, Returns whether this node is an optional argument node. This
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1974, method's return value is meaningful only on {@link Token#NAME} nodes
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1975, used to define a {@link Token#FUNCTION}'s argument list.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1977,ublic boolean isOptionalArg()
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1979,eturn getBooleanProp(OPT_ARG_NAME);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1983, Sets whether this is a synthetic block that should not be considered
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1984, a real source block.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1986,ublic void setIsSyntheticBlock(boolean val) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1987,"utBooleanProp(SYNTHETIC_BLOCK_PROP, val);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1991, Returns whether this is a synthetic block that should not be considered
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1992, a real source block.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1994,ublic boolean isSyntheticBlock() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1995,eturn getBooleanProp(SYNTHETIC_BLOCK_PROP);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1999, Sets the ES5 directives on this node.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2001,ublic void setDirectives(Set<String> val) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2002,"utProp(DIRECTIVES, val);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2006, Returns the set of ES5 directives for this node.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2008,"SuppressWarnings(""unchecked"")"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2009,ublic Set<String> getDirectives() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2010,eturn (Set<String>) getProp(DIRECTIVES);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2014, Sets whether this is a synthetic block that should not be considered
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2015, a real source block.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2017,ublic void setWasEmptyNode(boolean val) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2018,"utBooleanProp(EMPTY_BLOCK, val);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1720,* Returns whether a node corresponds to a simple or a qualified name without
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1721,"* a ""this"" reference, such as <code>a.b.c</code>, but not <code>this.a</code>"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1724,public boolean isUnscopedQualifiedName() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1725,switch (getType()) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1726,case Token.NAME:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1727,return true;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1728,case Token.GETPROP:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1729,return getFirstChild().isUnscopedQualifiedName();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1730,default:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1731,return false;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2022, Returns whether this is a synthetic block that should not be considered
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2023, a real source block.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2025,ublic boolean wasEmptyNode() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2026,eturn getBooleanProp(EMPTY_BLOCK);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1736,// Mutators
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1739,* Removes this node from its parent. Equivalent to:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1740,* node.getParent().removeChild();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1742,public Node detachFromParent() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1743,Preconditions.checkState(parent != null);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1744,parent.removeChild(this);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1745,return this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1749,* Removes the first child of Node. Equivalent to:
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1750,* node.removeChild(node.getFirstChild());
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1752,* @return The removed Node.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1754,public Node removeFirstChild() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1755,Node child = first;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1756,if (child != null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1757,removeChild(child);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1759,return child;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1763,* @return A Node that is the head of the list of children.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1765,public Node removeChildren() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1766,Node children = first;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1767,for (Node child = first; child != null; child = child.getNext()) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1768,child.parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1770,first = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1771,last = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1772,return children;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1776,* Removes all children from this node and isolates the children from each
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1777,* other.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1779,public void detachChildren() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1780,for (Node child = first; child != null;) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1781,Node nextChild = child.getNext();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1782,child.parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1783,child.next = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1784,child = nextChild;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1786,first = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1787,last = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1790,public Node removeChildAfter(Node prev) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1791,"Preconditions.checkArgument(prev.parent == this,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1792,"""prev is not a child of this node."");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1793,"Preconditions.checkArgument(prev.next != null,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1794,"""no next sibling."");"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1796,Node child = prev.next;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1797,prev.next = child.next;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1798,if (child == last) last = prev;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1799,child.next = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1800,child.parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1801,return child;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1805,"* @return A detached clone of the Node, specifically excluding its children."
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1807,public Node cloneNode() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1808,Node result;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1809,try {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1810,result = (Node) super.clone();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1811,result.next = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1812,result.first = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1813,result.last = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1814,result.parent = null;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1815,} catch (CloneNotSupportedException e) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1816,throw new RuntimeException(e.getMessage());
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1818,return result;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1822,* @return A detached clone of the Node and all its children.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1824,public Node cloneTree() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1825,Node result = cloneNode();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1826,for (Node n2 = getFirstChild(); n2 != null; n2 = n2.getNext()) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1827,Node n2clone = n2.cloneTree();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1828,n2clone.parent = result;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1829,if (result.last != null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1830,result.last.next = n2clone;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1832,if (result.first == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1833,result.first = n2clone;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1835,result.last = n2clone;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1837,return result;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2030, Marks this function or constructor call node as having no side effects.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2031, This property is only meaningful for {@link Token#CALL} and
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2032, {@link Token#NEW} nodes.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2034,ublic void setIsNoSideEffectsCall() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2035,reconditions.checkArgument(
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2036,"etType() == Token.CALL || getType() == Token.NEW,"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2037,"setIsNoSideEffectsCall only supports CALL and NEW nodes, got "" +"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2038,oken.name(getType()));
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2040,"utBooleanProp(NO_SIDE_EFFECTS_CALL, true);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1841,"* Copies source file, line and column number from the other"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1842,* node given to the current node.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1843,* @return this
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1845,public Node copySourceLocationFrom(Node other) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1846,if (getProp(SOURCEFILE_PROP) == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1847,"putProp(SOURCEFILE_PROP, other.getProp(SOURCEFILE_PROP));"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1848,sourcePosition = other.sourcePosition;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2044, Returns true if this node is a function or constructor call that
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2045, has no side effects.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2047,ublic boolean isNoSideEffectsCall() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2048,eturn getBooleanProp(NO_SIDE_EFFECTS_CALL);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1851,if (getLineno() == -1 || getCharno() == -1) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1852,setLineno(other.getLineno());
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1853,setCharno(other.getCharno());
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1855,return this;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2052, This should only be called for STRING nodes created in object lits.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2054,ublic boolean isQuotedString() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2055,eturn false;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1859,* Copies source file and name information from the other
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1860,* node given to the current node. Used for maintaining
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1861,* debug information across node append and remove operations.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1862,* @return this
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1864,public Node copyInformationFrom(Node other) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1865,if (getProp(ORIGINALNAME_PROP) == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1866,"putProp(ORIGINALNAME_PROP, other.getProp(ORIGINALNAME_PROP));"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2059, This should only be called for STRING nodes created in object lits.
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2061,ublic void setQuotedString() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2062,it.codeBug();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1869,if (getProp(SOURCEFILE_PROP) == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1870,"putProp(SOURCEFILE_PROP, other.getProp(SOURCEFILE_PROP));"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1871,sourcePosition = other.sourcePosition;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2065,tatic class NodeMismatch {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2066,inal Node nodeA;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2067,inal Node nodeB;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2069,"odeMismatch(Node nodeA, Node nodeB) {"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2070,his.nodeA = nodeA;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2071,his.nodeB = nodeB;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1874,return this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1878,* Copies source file and name information from the other node to the
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1879,* entire tree rooted at this node.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1880,* @return this
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1882,public Node copyInformationFromForTree(Node other) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1883,copyInformationFrom(other);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1884,for (Node child = getFirstChild();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1885,child != null; child = child.getNext()) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1886,child.copyInformationFromForTree(other);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1889,return this;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1893,// Custom annotations
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1895,public JSType getJSType() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1896,return jsType;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1899,public void setJSType(JSType jsType) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1900,this.jsType = jsType;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1903,public FileLevelJsDocBuilder getJsDocBuilderForNode() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1904,return new FileLevelJsDocBuilder();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1908,* An inner class that provides back-door access to the license
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1909,* property of the JSDocInfo property for this node. This is only
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1910,* meant to be used for top level script nodes where the
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1911,* {@link com.google.javascript.jscomp.parsing.JsDocInfoParser} needs to
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1912,"* be able to append directly to the top level node, not just the"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1913,* current node.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1915,public class FileLevelJsDocBuilder {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1916,public void append(String fileLevelComment) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1917,JSDocInfo jsDocInfo = getJSDocInfo();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1918,if (jsDocInfo == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1919,// TODO(user): Is there a way to determine whether to
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1920,// parse the JsDoc documentation from here?
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1921,jsDocInfo = new JSDocInfo(false);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2074,Override public boolean equals(Object object) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2075,f (object instanceof NodeMismatch) {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2076,odeMismatch that = (NodeMismatch) object;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2077,eturn that.nodeA.equals(this.nodeA) && that.nodeB.equals(this.nodeB);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2079,eturn false;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1923,String license = jsDocInfo.getLicense();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1924,if (license == null) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1925,"license = """";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2082,Override public int hashCode() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2083,"eturn Objects.hashCode(nodeA, nodeB);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1927,jsDocInfo.setLicense(license + fileLevelComment);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1928,setJSDocInfo(jsDocInfo);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1933,* Get the {@link JSDocInfo} attached to this node.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1934,* @return the information or {@code null} if no JSDoc is attached to this
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1935,* node
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1937,public JSDocInfo getJSDocInfo() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1938,return (JSDocInfo) getProp(JSDOC_INFO_PROP);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1942,* Sets the {@link JSDocInfo} attached to this node.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1944,public void setJSDocInfo(JSDocInfo info) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1945,"putProp(JSDOC_INFO_PROP, info);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1949,* Sets whether this node is a variable length argument node. This
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1950,* method is meaningful only on {@link Token#NAME} nodes
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1951,* used to define a {@link Token#FUNCTION}'s argument list.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1953,public void setVarArgs(boolean varArgs) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1954,"putBooleanProp(VAR_ARGS_NAME, varArgs);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1958,* Returns whether this node is a variable length argument node. This
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1959,* method's return value is meaningful only on {@link Token#NAME} nodes
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1960,* used to define a {@link Token#FUNCTION}'s argument list.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1962,public boolean isVarArgs() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1963,return getBooleanProp(VAR_ARGS_NAME);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1967,* Sets whether this node is an optional argument node. This
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1968,* method is meaningful only on {@link Token#NAME} nodes
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1969,* used to define a {@link Token#FUNCTION}'s argument list.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1971,public void setOptionalArg(boolean optionalArg) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1972,"putBooleanProp(OPT_ARG_NAME, optionalArg);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1976,* Returns whether this node is an optional argument node. This
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1977,* method's return value is meaningful only on {@link Token#NAME} nodes
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1978,* used to define a {@link Token#FUNCTION}'s argument list.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1980,public boolean isOptionalArg() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1981,return getBooleanProp(OPT_ARG_NAME);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1985,* Sets whether this is a synthetic block that should not be considered
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1986,* a real source block.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1988,public void setIsSyntheticBlock(boolean val) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1989,"putBooleanProp(SYNTHETIC_BLOCK_PROP, val);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1993,* Returns whether this is a synthetic block that should not be considered
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1994,* a real source block.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1996,public boolean isSyntheticBlock() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1997,return getBooleanProp(SYNTHETIC_BLOCK_PROP);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2001,* Sets the ES5 directives on this node.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2003,public void setDirectives(Set<String> val) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2004,"putProp(DIRECTIVES, val);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2008,* Returns the set of ES5 directives for this node.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2010,"@SuppressWarnings(""unchecked"")"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2011,public Set<String> getDirectives() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2012,return (Set<String>) getProp(DIRECTIVES);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2016,* Sets whether this is a synthetic block that should not be considered
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2017,* a real source block.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2019,public void setWasEmptyNode(boolean val) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2020,"putBooleanProp(EMPTY_BLOCK, val);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2024,* Returns whether this is a synthetic block that should not be considered
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2025,* a real source block.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2027,public boolean wasEmptyNode() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2028,return getBooleanProp(EMPTY_BLOCK);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2032,* Marks this function or constructor call node as having no side effects.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2033,* This property is only meaningful for {@link Token#CALL} and
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2034,* {@link Token#NEW} nodes.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2036,public void setIsNoSideEffectsCall() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2037,Preconditions.checkArgument(
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2038,"getType() == Token.CALL || getType() == Token.NEW,"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2039,"""setIsNoSideEffectsCall only supports CALL and NEW nodes, got "" +"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2040,Token.name(getType()));
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2042,"putBooleanProp(NO_SIDE_EFFECTS_CALL, true);"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2046,* Returns true if this node is a function or constructor call that
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2047,* has no side effects.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2049,public boolean isNoSideEffectsCall() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2050,return getBooleanProp(NO_SIDE_EFFECTS_CALL);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2054,* This should only be called for STRING nodes created in object lits.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2056,public boolean isQuotedString() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2057,return false;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2061,* This should only be called for STRING nodes created in object lits.
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2063,public void setQuotedString() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2064,Kit.codeBug();
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2067,static class NodeMismatch {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2068,final Node nodeA;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2069,final Node nodeB;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2071,"NodeMismatch(Node nodeA, Node nodeB) {"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2072,this.nodeA = nodeA;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2073,this.nodeB = nodeB;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2076,@Override
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2077,public boolean equals(Object object) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2078,if (object instanceof NodeMismatch) {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2079,NodeMismatch that = (NodeMismatch) object;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2080,return that.nodeA.equals(this.nodeA) && that.nodeB.equals(this.nodeB);
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2082,return false;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2085,@Override
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2086,public int hashCode() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2087,"return Objects.hashCode(nodeA, nodeB);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,136,VisibleForTesting
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,137,"ublic FunctionType(JSTypeRegistry registry, String name, Node source,"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,136,"FunctionType(JSTypeRegistry registry, String name, Node source,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,157,"ublic FunctionType(JSTypeRegistry registry, String name, Node source,"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,156,"FunctionType(JSTypeRegistry registry, String name, Node source,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,178,"ublic FunctionType(JSTypeRegistry registry, String name, Node source,"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,177,"FunctionType(JSTypeRegistry registry, String name, Node source,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1038,"** source node */ null,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1038,"existingFunctionType.getSource(),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1046,* Creates a new function type based on an existing function type but
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1047,* with a new {@code this} type.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1048,* @param existingFunctionType the existing function type.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1049,* @param thisType the new this type.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1051,public FunctionType createFunctionTypeWithNewThisType(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1052,"FunctionType existingFunctionType, ObjectType thisType) {"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1053,return new FunctionType(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1054,"this,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1055,"existingFunctionType.getReferenceName(),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1056,"existingFunctionType.getSource(),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1057,"existingFunctionType.getParametersNode(),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1058,"existingFunctionType.getReturnType(),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1059,"thisType,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1060,existingFunctionType.getTemplateTypeName());
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1064,* @param parameters the function's parameters or {@code null}
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1065,*        to indicate that the parameter types are unknown.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1066,* @param returnType the function's return type or {@code null} to indicate
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1067,*        that the return type is unknown.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1069,public FunctionType createFunctionType(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1070,"JSType returnType, Node parameters) {"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1071,"return new FunctionType(this, null, null, parameters, returnType);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1075,* @param name the function's name or {@code null} to indicate that the
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1076,*        function is anonymous.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1077,* @param source the node defining this function. Its type
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1078,*        ({@link Node#getType()}) must be {@link Token#FUNCTION}.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1079,* @param parameters the function's parameters or {@code null}
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1080,*        to indicate that the parameter types are unknown.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1081,* @param returnType the function's return type or {@code null} to indicate
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1082,*        that the return type is unknown.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1083,* @param typeOfThis The type of {@code this} in non-constructors.  May be
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1084,*        {@code null} to indicate that the type of {@code this} is unknown.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1085,* @param templateTypeName The template type name or {@code null}.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1087,"public FunctionType createMethodTypeWithTypeTemplate(String name, Node source,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1088,"Node parameters, JSType returnType, ObjectType typeOfThis,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1089,String templateTypeName) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1090,"return new FunctionType(this, name, source, parameters, returnType,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1091,"typeOfThis, templateTypeName);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1095,* @param name the function's name or {@code null} to indicate that the
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1096,*        function is anonymous.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1097,* @param source the node defining this function. Its type
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1098,*        ({@link Node#getType()}) must be {@link Token#FUNCTION}.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1099,* @param parameters the function's parameters or {@code null}
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1100,*        to indicate that the parameter types are unknown.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1101,* @param returnType the function's return type or {@code null} to indicate
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1102,*        that the return type is unknown.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1103,* @param typeOfThis The type of {@code this} in non-constructors.  May be
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1104,*        {@code null} to indicate that the type of {@code this} is unknown.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1106,"public FunctionType createMethodType(String name, Node source,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1107,"Node parameters, JSType returnType, ObjectType typeOfThis) {"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1108,"return new FunctionType(this, name, source, parameters, returnType,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1109,typeOfThis);
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1113,* @param parameters the function's parameters or {@code null}
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1114,*        to indicate that the parameter types are unknown.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1115,* @param returnType the function's return type or {@code null} to indicate
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1116,*        that the return type is unknown.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1117,* @param typeOfThis The type of {@code this} in non-constructors.  May be
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1118,*        {@code null} to indicate that the type of {@code this} is unknown.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1120,public FunctionType createMethodType(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1121,"JSType returnType, Node parameters, ObjectType typeOfThis) {"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1122,"return new FunctionType(this, null, null, parameters,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1123,"returnType, typeOfThis);"
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,384,"ew FunctionType(registry, null, null, null, returnType), true);"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,384,"registry.createMethodType(returnType, null, null), true);"
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,45,@Override
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,46,public void setUp() {
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,47,super.enableLineNumberCheck(true);
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,54,super.enableLineNumberCheck(true);
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,32,@Override
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,33,public void setUp() {
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,34,super.enableLineNumberCheck(true);
True,test/com/google/javascript/jscomp/MinimizeExitPointsTest.java,test/com/google/javascript/jscomp/MinimizeExitPointsTest.java,26,@Override
True,test/com/google/javascript/jscomp/MinimizeExitPointsTest.java,test/com/google/javascript/jscomp/MinimizeExitPointsTest.java,27,public void setUp() {
True,test/com/google/javascript/jscomp/MinimizeExitPointsTest.java,test/com/google/javascript/jscomp/MinimizeExitPointsTest.java,28,super.enableLineNumberCheck(true);
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,21,mport com.google.javascript.rhino.FunctionNode;
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,23,mport com.google.javascript.rhino.ScriptOrFnNode;
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,384,unctionNode function = NodeUtil.newFunctionNode(
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,382,Node function = NodeUtil.newFunctionNode(
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,386,criptOrFnNode actual = new ScriptOrFnNode(Token.SCRIPT);
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,384,Node actual = new Node(Token.SCRIPT);
True,test/com/google/javascript/jscomp/RemoveConstantExpressionsTest.java,test/com/google/javascript/jscomp/RemoveConstantExpressionsTest.java,31,@Override
True,test/com/google/javascript/jscomp/RemoveConstantExpressionsTest.java,test/com/google/javascript/jscomp/RemoveConstantExpressionsTest.java,32,public void setUp() {
True,test/com/google/javascript/jscomp/RemoveConstantExpressionsTest.java,test/com/google/javascript/jscomp/RemoveConstantExpressionsTest.java,33,super.enableLineNumberCheck(true);
False,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,324,"ew FunctionType(registry, ""x"", null, null,"
False,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,325,"egistry.getNativeType(NUMBER_TYPE), null)));"
True,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,324,registry.createFunctionType(registry.getNativeType(NUMBER_TYPE))));
False,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,24,mport com.google.javascript.rhino.ScriptOrFnNode;
False,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,553,ode script = new ScriptOrFnNode(Token.SCRIPT);
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,552,Node script = new Node(Token.SCRIPT);
