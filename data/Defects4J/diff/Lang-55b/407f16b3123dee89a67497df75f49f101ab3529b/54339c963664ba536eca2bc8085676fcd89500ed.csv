is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,78," <p><em>NOTE:</em>Due to the way in which Java ClassLoaders work, comparing Enum objects"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,79," should always be done using the equals() method, not ==. The equals() method will"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,80, try == first so in most cases the effect is the same.</p>
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,78,"* <p><em>NOTE:</em>Due to the way in which Java ClassLoaders work, comparing"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,79,"* Enum objects should always be done using <code>equals()</code>, not <code>==</code>."
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,80,* The equals() method will try == first so in most cases the effect is the same.</p>
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,82,"* <p>Of course, if you actually want (or don't mind) Enums in different class"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,83,"* loaders being non-equal, then you can use <code>==</code>.</p>"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,128, public class ExtraColorEnum extends ColorEnum {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,131,* public final class ExtraColorEnum extends ColorEnum {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,162, <p>The enums can have functionality by using anonymous inner classes
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,163," [Effective Java, Bloch01]:</p>"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,165,* <p>The enums can have functionality by defining subclasses and
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,166,* changing the <code>super()</code> call:</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,166, public abstract class OperationEnum extends Enum {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,167,"   public static final OperationEnum PLUS = new OperationEnum(""Plus"") {"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,168,"     public double eval(double a, double b) {"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,169,*   public static final OperationEnum PLUS = new PlusOperation();
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,170,*   private static final class PlusOperation extends OperationEnum {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,171,*     private PlusOperation() {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,172,"*       super(""Plus"");"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,174,"*     public int eval(int a, int b) {"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,172,"   public static final OperationEnum MINUS = new OperationEnum(""Minus"") {"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,173,"     public double eval(double a, double b) {"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,178,*   public static final OperationEnum MINUS = new MinusOperation();
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,179,*   private static final class MinusOperation extends OperationEnum {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,180,*     private MinusOperation() {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,181,"*       super(""Minus"");"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,183,"*     public int eval(int a, int b) {"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,179,     super(color);
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,189,"*     super(color, OperationEnum.class);   // NOTE: super() changed!"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,211,"* <p>The code above will work on JDK 1.2. If JDK1.3 and later is used,"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,212,* the subclasses may be defined as anonymous.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,207," @version $Id: Enum.java,v 1.17 2003/07/30 23:17:23 scolebourne Exp $"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,219,"* @version $Id: Enum.java,v 1.18 2003/08/04 23:52:27 scolebourne Exp $"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,212,tatic final long serialVersionUID = -487045951170455942L;
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,224,private static final long serialVersionUID = -487045951170455942L;
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,241,* The Enum class.
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,243,private final Class iEnumClass;
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,283,"init(name, getClass());"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,284,iName = name;
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,285,iEnumClass = getClass();
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,286,iHashCode = 7 + iEnumClass.hashCode() + 3 * name.hashCode();
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,287,// cannot create toString here as subclasses may want to include other data
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,291,* <p>Constructor to add a new named item to the enumeration.</p>
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,293,* <p>This constructor is used when a subclass wants to allow further
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,294,* subclasses to add values to the enumeration. The class specifies
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,295,* which class they are all to be tied to.</p>
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,297,"* @param name  the name of the enum object,"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,298,*  must not be empty or <code>null</code>
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,299,"* @param enumClass  the enum class,"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,300,*  must not be null and must be this class or a superclass
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,301,* @throws IllegalArgumentException if the name is <code>null</code>
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,302,*  or an empty string
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,303,* @throws IllegalArgumentException if the enumClass is <code>null</code>
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,304,*  or invalid
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,306,"protected Enum(String name, Class enumClass) {"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,307,super();
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,308,"init(name, enumClass);"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,309,iName = name;
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,310,iEnumClass = enumClass;
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,311,iHashCode = 7 + enumClass.hashCode() + 3 * name.hashCode();
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,312,// cannot create toString here as subclasses may want to include other data
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,316,* Initializes the enumeration.
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,318,* @param name  the enum name
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,319,* @param enumClass  the enum class
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,320,* @throws IllegalArgumentException if the name is null or empty
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,321,* @throws IllegalArgumentException if the enumClass is null or invalid
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,323,"private void init(String name, Class enumClass) {"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,271,Name = name;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,272,lass enumClass = Enum.getEnumClass(getClass());
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,275,ntry = createEntry(getClass());
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,329,entry = createEntry(enumClass);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,284,HashCode = 7 + enumClass.hashCode() + 3 * name.hashCode();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,285,/ cannot create toString here as subclasses may want to include other data
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,295,ntry entry = (Entry) cEnumClasses.get(Enum.getEnumClass(getClass()));
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,346,Entry entry = (Entry) cEnumClasses.get(iEnumClass);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,426, <p>Convert a class to the actual common enum class.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,428, <p>This accounts for anonymous inner classes.</p>
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,478,"* <p>Retrieve the name of this Enum item, set in the constructor.</p>"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,430, @param cls  the class to get the name for
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,431, @return the class name
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,480,* @return the <code>String</code> name of this Enum item
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,433,rotected static Class getEnumClass(Class cls) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,434,tring className = cls.getName();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,435,nt index = className.lastIndexOf('$');
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,436,f (index > -1) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,437,/ is it an anonymous inner class?
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,438,tring inner = className.substring(index + 1);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,439,f (inner.length() > 0 &&
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,440,nner.charAt(0) >= '0' &&
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,441,nner.charAt(0) < '9') {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,442,eturn cls.getSuperclass();
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,445,eturn cls;
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,482,public final String getName() {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,483,return iName;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,450," <p>Retrieve the name of this Enum item, set in the constructor.</p>"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,487,"* <p>Retrieves the Class of this Enum item, set in the constructor.</p>"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,489,"* <p>This is normally the same as <code>getClass()</code>, but for"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,490,* advanced Enums may be different.</p>
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,454,ublic final String getName() {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,455,eturn iName;
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,494,public final Class getEnumClass() {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,495,return iEnumClass;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,476, else if (getEnumClass(other.getClass()).getName().equals(getEnumClass(this.getClass()).getName())) {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,516,} else if (((Enum) other).iEnumClass.getName().equals(iEnumClass.getName())) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,540,lass cls = Enum.getEnumClass(getClass());
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,541,tring shortName = ClassUtils.getShortClassName(cls);
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,580,String shortName = ClassUtils.getShortClassName(iEnumClass);
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,136," @version $Id: ValuedEnum.java,v 1.10 2003/07/30 23:17:23 scolebourne Exp $"
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,136,"* @version $Id: ValuedEnum.java,v 1.11 2003/08/04 23:52:27 scolebourne Exp $"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,141,tatic final long serialVersionUID = -7129650521543789085L;
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,141,private static final long serialVersionUID = -7129650521543789085L;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,151, @param name the name of enum item.
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,152, @param value the value of enum item.
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,151,* @param name  the name of enum item
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,152,* @param value  the value of enum item
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,160,* Constructor for enum item.
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,162,* @param name  the name of enum item
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,163,* @param enumClass  the enum class
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,164,* @param value  the value of enum item
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,166,"protected ValuedEnum(String name, Class enumClass, int value) {"
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,167,"super(name, enumClass);"
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,168,iValue = value;
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,220,lass cls = Enum.getEnumClass(getClass());
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,221,tring shortName = ClassUtils.getShortClassName(cls);
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,232,String shortName = ClassUtils.getShortClassName(getEnumClass());
False,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,64," @version $Id: OperationEnum.java,v 1.3 2003/08/02 18:38:36 scolebourne Exp $"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,64,"* @version $Id: OperationEnum.java,v 1.4 2003/08/04 23:52:27 scolebourne Exp $"
False,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,67,ublic static final OperationEnum PLUS;
False,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,68,ublic static final OperationEnum MINUS;
False,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,69,tatic {
False,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,70,/ Get around JDK Linux bug
False,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,71,"LUS = new OperationEnum(""Plus"") {"
False,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,72,"ublic int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,73,eturn (a + b);
False,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,76,"INUS = new OperationEnum(""Minus"") {"
False,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,77,"ublic int eval(int a, int b) {"
False,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,78,eturn (a - b);
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,67,// This syntax works for JDK 1.3 and upwards:
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,68,"//    public static final OperationEnum PLUS = new OperationEnum(""Plus"") {"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,69,"//        public int eval(int a, int b) {"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,70,//            return (a + b);
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,73,"//    public static final OperationEnum MINUS = new OperationEnum(""Minus"") {"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,74,"//        public int eval(int a, int b) {"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,75,//            return (a - b);
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,78,// This syntax works for JDK 1.2 and upwards:
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,79,public static final OperationEnum PLUS = new PlusOperation();
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,80,private static class PlusOperation extends OperationEnum {
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,81,private PlusOperation() {
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,82,"super(""Plus"");"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,84,"public int eval(int a, int b) {"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,85,return (a + b);
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,88,public static final OperationEnum MINUS = new MinusOperation();
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,89,private static class MinusOperation extends OperationEnum {
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,90,private MinusOperation() {
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,91,"super(""Minus"");"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,93,"public int eval(int a, int b) {"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,94,return (a - b);
False,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,84,uper(name);
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,99,"super(name, OperationEnum.class);"
