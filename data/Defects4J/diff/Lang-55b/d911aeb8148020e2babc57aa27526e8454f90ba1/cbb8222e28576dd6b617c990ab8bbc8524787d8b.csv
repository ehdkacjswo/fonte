is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,5,* reserved.
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,9,* are met:
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,17,*    distribution.
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,54,package org.apache.commons.lang.functor;
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,59,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,62,* Test suite for the Pattern packages.
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,64,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,65,"* @version $Id: FunctorTestSuite.java,v 1.1 2002/11/05 16:45:13 bayard Exp $"
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,67,public class FunctorTestSuite extends TestCase {
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,70,* Construct a new instance.
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,72,public FunctorTestSuite(String name) {
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,73,super(name);
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,77,* Closure-line interface.
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,79,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,80,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,84,* Get the suite of tests
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,86,public static Test suite() {
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,87,TestSuite suite = new TestSuite();
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,88,suite.addTest(TestClosureUtils.suite());
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,89,suite.addTest(TestFactoryUtils.suite());
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,90,suite.addTest(TestPredicateUtils.suite());
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,91,suite.addTest(TestTransformerUtils.suite());
True,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,92,return suite;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,5,* reserved.
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,9,* are met:
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,17,*    distribution.
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,54,package org.apache.commons.lang.functor;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,56,import java.util.ArrayList;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,57,import java.util.Collection;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,58,import java.util.Collections;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,59,import java.util.HashMap;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,60,import java.util.Map;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,62,import junit.framework.Test;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,63,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,65,import org.apache.commons.lang.functor.Predicate;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,66,import org.apache.commons.lang.functor.PredicateUtils;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,68,* Tests the org.apache.commons.lang.functor.ClosureUtils class.
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,70,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,71,"* @version $Id: TestClosureUtils.java,v 1.1 2002/11/05 16:45:13 bayard Exp $"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,73,public class TestClosureUtils extends junit.framework.TestCase {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,75,private static final Object cObject = new Object();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,76,"private static final Object cString = ""Hello"";"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,77,private static final Object cInteger = new Integer(6);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,80,* Construct
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,82,public TestClosureUtils(String name) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,83,super(name);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,87,* Return class aa a test suite.
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,89,public static Test suite() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,90,return new TestSuite(TestClosureUtils.class);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,94,* Set up instance variables required by this test case.
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,96,public void setUp() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,100,* Tear down instance variables required by this test case.
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,102,public void tearDown() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,105,static class MockClosure implements Closure {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,106,int count = 0;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,109,* @see org.apache.commons.lang.functor.Closure#execute(Object)
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,111,public void execute(Object object) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,112,count++;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,117,// exceptionClosure
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,120,public void testExceptionClosure() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,121,assertNotNull(ClosureUtils.exceptionClosure());
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,122,"assertSame(ClosureUtils.exceptionClosure(), ClosureUtils.exceptionClosure());"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,123,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,124,ClosureUtils.exceptionClosure().execute(null);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,125,} catch (ClosureException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,126,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,127,ClosureUtils.exceptionClosure().execute(cString);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,128,} catch (ClosureException ex2) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,129,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,132,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,135,// nopClosure
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,138,public void testNopClosure() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,139,"StringBuffer buf = new StringBuffer(""Hello"");"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,140,ClosureUtils.nopClosure().execute(null);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,141,"assertEquals(""Hello"", buf.toString());"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,142,"ClosureUtils.nopClosure().execute(""Hello"");"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,143,"assertEquals(""Hello"", buf.toString());"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,146,// invokeClosure
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,149,public void testInvokeClosure() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,150,"StringBuffer buf = new StringBuffer(""Hello"");"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,151,"ClosureUtils.invokerClosure(""reverse"").execute(buf);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,152,"assertEquals(""olleH"", buf.toString());"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,153,"buf = new StringBuffer(""Hello"");"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,154,"ClosureUtils.invokerClosure(""setLength"", new Class[] {Integer.TYPE}, new Object[] {new Integer(2)}).execute(buf);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,155,"assertEquals(""He"", buf.toString());"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,158,// forClosure
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,161,public void testForClosure() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,162,MockClosure cmd = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,163,"ClosureUtils.forClosure(5, cmd).execute(null);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,164,"assertEquals(5, cmd.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,165,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,166,"ClosureUtils.forClosure(-1, new MockClosure());"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,167,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,168,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,170,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,173,// whileClosure
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,176,public void testWhileClosure() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,177,MockClosure cmd = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,178,"ClosureUtils.whileClosure(PredicateUtils.falsePredicate(), cmd).execute(null);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,179,"assertEquals(0, cmd.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,180,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,181,"ClosureUtils.whileClosure(null, null);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,182,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,183,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,185,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,188,// doWhileClosure
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,191,public void testDoWhileClosure() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,192,MockClosure cmd = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,193,"ClosureUtils.doWhileClosure(cmd, PredicateUtils.falsePredicate()).execute(null);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,194,"assertEquals(1, cmd.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,195,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,196,"ClosureUtils.doWhileClosure(null, null);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,197,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,198,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,200,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,203,// chainedClosure
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,206,public void testChainedClosure() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,207,MockClosure a = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,208,MockClosure b = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,209,"ClosureUtils.chainedClosure(a, b).execute(null);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,210,"assertEquals(1, a.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,211,"assertEquals(1, b.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,213,a = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,214,b = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,215,"ClosureUtils.chainedClosure(new Closure[] {a, b, a}).execute(null);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,216,"assertEquals(2, a.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,217,"assertEquals(1, b.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,219,a = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,220,b = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,221,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,222,coll.add(b);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,223,coll.add(a);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,224,coll.add(b);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,225,ClosureUtils.chainedClosure(coll).execute(null);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,226,"assertEquals(1, a.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,227,"assertEquals(2, b.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,230,public void testChainedClosureEx1a() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,231,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,232,"ClosureUtils.chainedClosure(null, null);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,233,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,234,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,236,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,239,public void testChainedClosureEx1b() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,240,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,241,ClosureUtils.chainedClosure((Closure[]) null);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,242,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,243,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,245,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,248,public void testChainedClosureEx1c() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,249,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,250,ClosureUtils.chainedClosure((Collection) null);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,251,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,252,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,254,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,257,public void testChainedClosureEx2() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,258,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,259,ClosureUtils.chainedClosure(new Closure[0]);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,260,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,261,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,263,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,266,public void testChainedClosureEx3() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,267,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,268,"ClosureUtils.chainedClosure(new Closure[] {null, null});"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,269,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,270,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,272,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,275,public void testChainedClosureEx4() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,276,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,277,ClosureUtils.chainedClosure(Collections.EMPTY_LIST);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,278,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,279,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,281,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,284,public void testChainedClosureEx5() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,285,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,286,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,287,coll.add(null);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,288,coll.add(null);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,289,ClosureUtils.chainedClosure(coll);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,290,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,291,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,293,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,296,// switchClosure
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,299,public void testSwitchClosure() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,300,MockClosure a = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,301,MockClosure b = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,302,"ClosureUtils.switchClosure(PredicateUtils.truePredicate(), a, b).execute(null);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,303,"assertEquals(1, a.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,304,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,306,a = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,307,b = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,308,"ClosureUtils.switchClosure(PredicateUtils.falsePredicate(), a, b).execute(null);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,309,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,310,"assertEquals(1, b.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,312,a = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,313,b = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,314,ClosureUtils.switchClosure(
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,315,"new Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,316,"new Closure[] {a, b}).execute(""WELL"");"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,317,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,318,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,320,a = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,321,b = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,322,ClosureUtils.switchClosure(
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,323,"new Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,324,"new Closure[] {a, b}).execute(""HELLO"");"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,325,"assertEquals(1, a.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,326,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,328,a = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,329,b = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,330,MockClosure c = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,331,ClosureUtils.switchClosure(
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,332,"new Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,333,"new Closure[] {a, b}, c).execute(""WELL"");"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,334,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,335,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,336,"assertEquals(1, c.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,338,a = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,339,b = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,340,Map map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,341,"map.put(PredicateUtils.equalPredicate(""HELLO""), a);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,342,"map.put(PredicateUtils.equalPredicate(""THERE""), b);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,343,ClosureUtils.switchClosure(map).execute(null);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,344,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,345,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,347,a = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,348,b = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,349,map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,350,"map.put(PredicateUtils.equalPredicate(""HELLO""), a);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,351,"map.put(PredicateUtils.equalPredicate(""THERE""), b);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,352,"ClosureUtils.switchClosure(map).execute(""THERE"");"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,353,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,354,"assertEquals(1, b.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,356,a = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,357,b = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,358,c = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,359,map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,360,"map.put(PredicateUtils.equalPredicate(""HELLO""), a);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,361,"map.put(PredicateUtils.equalPredicate(""THERE""), b);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,362,"map.put(null, c);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,363,"ClosureUtils.switchClosure(map).execute(""WELL"");"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,364,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,365,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,366,"assertEquals(1, c.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,369,public void testSwitchClosureEx1a() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,370,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,371,"ClosureUtils.switchClosure(null, null);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,372,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,373,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,375,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,378,public void testSwitchClosureEx1b() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,379,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,380,"ClosureUtils.switchClosure((Predicate[]) null, (Closure[]) null);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,381,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,382,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,384,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,387,public void testSwitchClosureEx1c() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,388,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,389,ClosureUtils.switchClosure((Map) null);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,390,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,391,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,393,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,396,public void testSwitchClosureEx2() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,397,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,398,"ClosureUtils.switchClosure(new Predicate[0], new Closure[0]);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,399,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,400,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,402,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,405,public void testSwitchClosureEx3() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,406,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,407,"ClosureUtils.switchClosure(new Predicate[2], new Closure[2]);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,408,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,409,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,411,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,414,public void testSwitchClosureEx4() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,415,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,416,ClosureUtils.switchClosure(Collections.EMPTY_MAP);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,417,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,418,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,420,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,423,public void testSwitchClosureEx5() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,424,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,425,Map map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,426,"map.put(null, null);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,427,"map.put(null, null);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,428,ClosureUtils.switchClosure(map);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,429,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,430,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,432,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,435,public void testSwitchClosureEx6() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,436,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,437,"ClosureUtils.switchClosure(new Predicate[2], new Closure[1]);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,438,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,439,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,441,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,444,// switchMapClosure
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,447,public void testSwitchMapClosure() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,448,MockClosure a = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,449,MockClosure b = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,450,Map map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,451,"map.put(""HELLO"", a);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,452,"map.put(""THERE"", b);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,453,ClosureUtils.switchMapClosure(map).execute(null);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,454,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,455,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,457,a = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,458,b = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,459,map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,460,"map.put(""HELLO"", a);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,461,"map.put(""THERE"", b);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,462,"ClosureUtils.switchMapClosure(map).execute(""THERE"");"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,463,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,464,"assertEquals(1, b.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,466,a = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,467,b = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,468,MockClosure c = new MockClosure();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,469,map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,470,"map.put(""HELLO"", a);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,471,"map.put(""THERE"", b);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,472,"map.put(null, c);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,473,"ClosureUtils.switchMapClosure(map).execute(""WELL"");"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,474,"assertEquals(0, a.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,475,"assertEquals(0, b.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,476,"assertEquals(1, c.count);"
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,479,public void testSwitchMapClosureEx1() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,480,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,481,ClosureUtils.switchMapClosure(null);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,482,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,483,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,485,fail();
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,488,public void testSwitchMapClosureEx2() {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,489,try {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,490,ClosureUtils.switchMapClosure(Collections.EMPTY_MAP);
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,491,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,492,return;
True,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,src/test/org/apache/commons/lang/functor/TestClosureUtils.java,494,fail();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,5,* reserved.
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,9,* are met:
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,17,*    distribution.
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,54,package org.apache.commons.lang.functor;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,56,import java.io.Serializable;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,57,import java.util.Date;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,58,import java.util.TimeZone;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,60,import junit.framework.Test;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,61,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,63,import org.apache.commons.lang.SerializationException;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,65,* Tests the org.apache.commons.lang.functor.FactoryUtils class.
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,67,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,68,"* @version $Id: TestFactoryUtils.java,v 1.1 2002/11/05 16:45:13 bayard Exp $"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,70,public class TestFactoryUtils extends junit.framework.TestCase {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,73,* Construct
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,75,public TestFactoryUtils(String name) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,76,super(name);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,80,* Return class aa a test suite.
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,82,public static Test suite() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,83,return new TestSuite(TestFactoryUtils.class);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,87,* Set up instance variables required by this test case.
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,89,public void setUp() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,93,* Tear down instance variables required by this test case.
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,95,public void tearDown() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,98,// exceptionFactory
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,101,public void testExceptionFactory() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,102,assertNotNull(FactoryUtils.exceptionFactory());
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,103,"assertSame(FactoryUtils.exceptionFactory(), FactoryUtils.exceptionFactory());"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,104,try {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,105,FactoryUtils.exceptionFactory().create();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,106,} catch (FactoryException ex) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,107,try {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,108,FactoryUtils.exceptionFactory().create();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,109,} catch (FactoryException ex2) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,110,return;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,113,fail();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,116,// nullFactory
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,119,public void testNullFactory() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,120,Factory factory = FactoryUtils.nullFactory();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,121,assertNotNull(factory);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,122,Object created = factory.create();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,123,assertNull(created);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,126,// constantFactory
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,129,public void testConstantFactoryNull() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,130,Factory factory = FactoryUtils.constantFactory(null);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,131,assertNotNull(factory);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,132,Object created = factory.create();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,133,assertNull(created);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,136,public void testConstantFactoryConstant() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,137,Integer constant = new Integer(9);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,138,Factory factory = FactoryUtils.constantFactory(constant);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,139,assertNotNull(factory);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,140,Object created = factory.create();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,141,"assertSame(constant, created);"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,144,// prototypeFactory
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,147,public void testPrototypeFactoryNull() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,148,try {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,149,Factory factory = FactoryUtils.prototypeFactory(null);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,151,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,152,return;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,154,fail();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,157,public void testPrototypeFactoryPublicCloneMethod() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,158,Date proto = new Date();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,159,Factory factory = FactoryUtils.prototypeFactory(proto);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,160,assertNotNull(factory);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,161,Object created = factory.create();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,162,assertTrue(proto != created);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,163,"assertEquals(proto, created);"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,166,public void testPrototypeFactoryPublicCopyConstructor() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,167,Mock1 proto = new Mock1(6);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,168,Factory factory = FactoryUtils.prototypeFactory(proto);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,169,assertNotNull(factory);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,170,Object created = factory.create();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,171,assertTrue(proto != created);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,172,"assertEquals(proto, created);"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,175,public void testPrototypeFactoryPublicSerialization() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,176,Integer proto = new Integer(9);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,177,Factory factory = FactoryUtils.prototypeFactory(proto);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,178,assertNotNull(factory);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,179,Object created = factory.create();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,180,assertTrue(proto != created);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,181,"assertEquals(proto, created);"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,184,public void testPrototypeFactoryPublicSerializationError() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,185,Mock2 proto = new Mock2(new Object());
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,186,Factory factory = FactoryUtils.prototypeFactory(proto);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,187,assertNotNull(factory);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,188,try {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,189,Object created = factory.create();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,191,} catch (FactoryException ex) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,192,assertTrue(ex.getCause() instanceof SerializationException);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,193,return;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,195,fail();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,198,public void testPrototypeFactoryPublicBad() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,199,Object proto = new Object();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,200,try {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,201,Factory factory = FactoryUtils.prototypeFactory(proto);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,203,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,204,return;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,206,fail();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,209,public static class Mock1 {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,210,private final int iVal;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,211,public Mock1(int val) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,212,iVal = val;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,214,public Mock1(Mock1 mock) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,215,iVal = mock.iVal;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,217,public boolean equals(Object obj) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,218,if (obj instanceof Mock1) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,219,if (iVal == ((Mock1) obj).iVal) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,220,return true;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,223,return false;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,227,public static class Mock2 implements Serializable {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,228,private final Object iVal;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,229,public Mock2(Object val) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,230,iVal = val;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,232,public boolean equals(Object obj) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,233,if (obj instanceof Mock2) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,234,if (iVal == ((Mock2) obj).iVal) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,235,return true;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,238,return false;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,242,// reflectionFactory
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,245,public void testReflectionFactoryNull() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,246,try {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,247,Factory factory = FactoryUtils.reflectionFactory(null);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,249,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,250,return;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,252,fail();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,255,public void testReflectionFactorySimple() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,256,Factory factory = FactoryUtils.reflectionFactory(Date.class);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,257,assertNotNull(factory);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,258,Object created = factory.create();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,259,assertTrue(created instanceof Date);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,260,"assertEquals((double) System.currentTimeMillis(), (double) ((Date) created).getTime(), 0.01d);"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,263,public void testReflectionFactoryMismatch() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,264,try {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,265,"Factory factory = FactoryUtils.reflectionFactory(Date.class, null, new Object[] {null});"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,267,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,268,return;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,270,fail();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,273,public void testReflectionFactoryNoConstructor() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,274,try {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,275,"Factory factory = FactoryUtils.reflectionFactory(Date.class, new Class[] {Long.class}, new Object[] {null});"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,277,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,278,return;
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,280,fail();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,283,public void testReflectionFactoryComplex() {
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,284,"TimeZone.setDefault(TimeZone.getTimeZone(""GMT""));"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,285,"Factory factory = FactoryUtils.reflectionFactory(Date.class,"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,286,"new Class[] {Integer.TYPE, Integer.TYPE, Integer.TYPE},"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,287,"new Object[] {new Integer(70), new Integer(0), new Integer(2)});"
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,288,assertNotNull(factory);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,289,Object created = factory.create();
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,290,assertTrue(created instanceof Date);
True,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,291,"assertEquals(new Date(1000 * 60 * 60 * 24), created);"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,5,* reserved.
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,9,* are met:
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,17,*    distribution.
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,54,package org.apache.commons.lang.functor;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,56,import java.io.Serializable;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,57,import java.util.ArrayList;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,58,import java.util.Collection;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,59,import java.util.Collections;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,60,import java.util.Date;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,61,import java.util.List;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,63,import junit.framework.Test;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,64,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,66,import org.apache.commons.lang.SerializationException;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,67,import org.apache.commons.lang.functor.TransformerUtils;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,69,* Tests the org.apache.commons.lang.functor.PredicateUtils class.
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,71,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,72,"* @version $Id: TestPredicateUtils.java,v 1.1 2002/11/05 16:45:13 bayard Exp $"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,74,public class TestPredicateUtils extends junit.framework.TestCase {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,76,private static final Object cObject = new Object();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,77,"private static final Object cString = ""Hello"";"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,78,private static final Object cInteger = new Integer(6);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,81,* Construct
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,83,public TestPredicateUtils(String name) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,84,super(name);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,88,* Return class aa a test suite.
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,90,public static Test suite() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,91,return new TestSuite(TestPredicateUtils.class);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,95,* Set up instance variables required by this test case.
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,97,public void setUp() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,101,* Tear down instance variables required by this test case.
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,103,public void tearDown() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,106,// exceptionPredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,109,public void testExceptionPredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,110,assertNotNull(PredicateUtils.exceptionPredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,111,"assertSame(PredicateUtils.exceptionPredicate(), PredicateUtils.exceptionPredicate());"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,112,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,113,PredicateUtils.exceptionPredicate().evaluate(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,114,} catch (PredicateException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,115,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,116,PredicateUtils.exceptionPredicate().evaluate(cString);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,117,} catch (PredicateException ex2) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,118,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,121,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,124,// nullPredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,127,public void testNullPredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,128,assertNotNull(PredicateUtils.nullPredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,129,"assertSame(PredicateUtils.nullPredicate(), PredicateUtils.nullPredicate());"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,130,"assertEquals(true, PredicateUtils.nullPredicate().evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,131,"assertEquals(false, PredicateUtils.nullPredicate().evaluate(cObject));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,132,"assertEquals(false, PredicateUtils.nullPredicate().evaluate(cString));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,133,"assertEquals(false, PredicateUtils.nullPredicate().evaluate(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,136,// notNullPredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,139,public void testIsNotNullPredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,140,assertNotNull(PredicateUtils.notNullPredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,141,"assertSame(PredicateUtils.notNullPredicate(), PredicateUtils.notNullPredicate());"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,142,"assertEquals(false, PredicateUtils.notNullPredicate().evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,143,"assertEquals(true, PredicateUtils.notNullPredicate().evaluate(cObject));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,144,"assertEquals(true, PredicateUtils.notNullPredicate().evaluate(cString));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,145,"assertEquals(true, PredicateUtils.notNullPredicate().evaluate(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,148,// equalPredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,151,public void testEqualPredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,152,"assertSame(PredicateUtils.nullPredicate(), PredicateUtils.equalPredicate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,153,assertNotNull(PredicateUtils.equalPredicate(new Integer(6)));
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,154,"assertEquals(false, PredicateUtils.equalPredicate(new Integer(6)).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,155,"assertEquals(false, PredicateUtils.equalPredicate(new Integer(6)).evaluate(cObject));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,156,"assertEquals(false, PredicateUtils.equalPredicate(new Integer(6)).evaluate(cString));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,157,"assertEquals(true, PredicateUtils.equalPredicate(new Integer(6)).evaluate(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,160,// identityPredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,163,public void testIdentityPredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,164,"assertSame(PredicateUtils.nullPredicate(), PredicateUtils.identityPredicate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,165,assertNotNull(PredicateUtils.identityPredicate(new Integer(6)));
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,166,"assertEquals(false, PredicateUtils.identityPredicate(new Integer(6)).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,167,"assertEquals(false, PredicateUtils.identityPredicate(new Integer(6)).evaluate(cObject));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,168,"assertEquals(false, PredicateUtils.identityPredicate(new Integer(6)).evaluate(cString));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,169,"assertEquals(false, PredicateUtils.identityPredicate(new Integer(6)).evaluate(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,170,"assertEquals(true, PredicateUtils.identityPredicate(cInteger).evaluate(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,173,// truePredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,176,public void testTruePredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,177,assertNotNull(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,178,"assertSame(PredicateUtils.truePredicate(), PredicateUtils.truePredicate());"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,179,"assertEquals(true, PredicateUtils.truePredicate().evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,180,"assertEquals(true, PredicateUtils.truePredicate().evaluate(cObject));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,181,"assertEquals(true, PredicateUtils.truePredicate().evaluate(cString));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,182,"assertEquals(true, PredicateUtils.truePredicate().evaluate(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,185,// falsePredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,188,public void testFalsePredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,189,assertNotNull(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,190,"assertSame(PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate());"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,191,"assertEquals(false, PredicateUtils.falsePredicate().evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,192,"assertEquals(false, PredicateUtils.falsePredicate().evaluate(cObject));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,193,"assertEquals(false, PredicateUtils.falsePredicate().evaluate(cString));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,194,"assertEquals(false, PredicateUtils.falsePredicate().evaluate(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,197,// notPredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,200,public void testNotPredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,201,assertNotNull(PredicateUtils.notPredicate(PredicateUtils.truePredicate()));
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,202,"assertEquals(false, PredicateUtils.notPredicate(PredicateUtils.truePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,203,"assertEquals(false, PredicateUtils.notPredicate(PredicateUtils.truePredicate()).evaluate(cObject));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,204,"assertEquals(false, PredicateUtils.notPredicate(PredicateUtils.truePredicate()).evaluate(cString));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,205,"assertEquals(false, PredicateUtils.notPredicate(PredicateUtils.truePredicate()).evaluate(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,208,public void testNotPredicateEx() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,209,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,210,PredicateUtils.notPredicate(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,211,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,212,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,214,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,217,// andPredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,220,public void testAndPredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,221,"assertEquals(true, PredicateUtils.andPredicate(PredicateUtils.truePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,222,"assertEquals(false, PredicateUtils.andPredicate(PredicateUtils.truePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,223,"assertEquals(false, PredicateUtils.andPredicate(PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,224,"assertEquals(false, PredicateUtils.andPredicate(PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,227,public void testAndPredicateEx() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,228,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,229,"PredicateUtils.andPredicate(null, null);"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,230,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,231,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,233,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,236,// allPredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,239,public void testAllPredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,240,"assertEquals(true, PredicateUtils.allPredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,241,"PredicateUtils.truePredicate(), PredicateUtils.truePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,242,"assertEquals(false, PredicateUtils.allPredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,243,"PredicateUtils.truePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,244,"assertEquals(false, PredicateUtils.allPredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,245,"PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,246,"assertEquals(false, PredicateUtils.allPredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,247,"PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,248,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,249,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,250,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,251,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,252,"assertEquals(true, PredicateUtils.allPredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,253,coll.clear();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,254,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,255,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,256,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,257,"assertEquals(false, PredicateUtils.allPredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,258,coll.clear();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,259,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,260,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,261,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,262,"assertEquals(false, PredicateUtils.allPredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,263,coll.clear();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,264,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,265,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,266,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,267,"assertEquals(false, PredicateUtils.allPredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,270,public void testAllPredicateEx1() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,271,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,272,PredicateUtils.allPredicate((Predicate[]) null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,273,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,274,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,276,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,279,public void testAllPredicateEx2() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,280,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,281,PredicateUtils.allPredicate(new Predicate[] {null});
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,282,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,283,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,285,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,288,public void testAllPredicateEx3() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,289,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,290,"PredicateUtils.allPredicate(new Predicate[] {null, null});"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,291,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,292,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,294,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,297,public void testAllPredicateEx4() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,298,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,299,PredicateUtils.allPredicate((Collection) null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,300,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,301,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,303,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,306,public void testAllPredicateEx5() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,307,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,308,PredicateUtils.allPredicate(Collections.EMPTY_LIST);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,309,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,310,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,312,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,315,public void testAllPredicateEx6() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,316,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,317,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,318,coll.add(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,319,coll.add(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,320,PredicateUtils.allPredicate(coll);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,321,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,322,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,324,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,327,// orPredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,330,public void testOrPredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,331,"assertEquals(true, PredicateUtils.orPredicate(PredicateUtils.truePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,332,"assertEquals(true, PredicateUtils.orPredicate(PredicateUtils.truePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,333,"assertEquals(true, PredicateUtils.orPredicate(PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,334,"assertEquals(false, PredicateUtils.orPredicate(PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,337,public void testOrPredicateEx() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,338,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,339,"PredicateUtils.orPredicate(null, null);"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,340,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,341,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,343,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,346,// anyPredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,349,public void testAnyPredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,350,"assertEquals(true, PredicateUtils.anyPredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,351,"PredicateUtils.truePredicate(), PredicateUtils.truePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,352,"assertEquals(true, PredicateUtils.anyPredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,353,"PredicateUtils.truePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,354,"assertEquals(true, PredicateUtils.anyPredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,355,"PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,356,"assertEquals(false, PredicateUtils.anyPredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,357,"PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,358,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,359,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,360,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,361,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,362,"assertEquals(true, PredicateUtils.anyPredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,363,coll.clear();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,364,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,365,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,366,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,367,"assertEquals(true, PredicateUtils.anyPredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,368,coll.clear();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,369,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,370,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,371,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,372,"assertEquals(true, PredicateUtils.anyPredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,373,coll.clear();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,374,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,375,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,376,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,377,"assertEquals(false, PredicateUtils.anyPredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,380,public void testAnyPredicateEx1() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,381,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,382,PredicateUtils.anyPredicate((Predicate[]) null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,383,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,384,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,386,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,389,public void testAnyPredicateEx2() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,390,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,391,PredicateUtils.anyPredicate(new Predicate[] {null});
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,392,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,393,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,395,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,398,public void testAnyPredicateEx3() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,399,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,400,"PredicateUtils.anyPredicate(new Predicate[] {null, null});"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,401,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,402,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,404,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,407,public void testAnyPredicateEx4() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,408,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,409,PredicateUtils.anyPredicate((Collection) null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,410,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,411,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,413,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,416,public void testAnyPredicateEx5() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,417,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,418,PredicateUtils.anyPredicate(Collections.EMPTY_LIST);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,419,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,420,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,422,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,425,public void testAnyPredicateEx6() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,426,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,427,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,428,coll.add(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,429,coll.add(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,430,PredicateUtils.anyPredicate(coll);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,431,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,432,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,434,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,437,// eitherPredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,440,public void testEitherPredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,441,"assertEquals(false, PredicateUtils.eitherPredicate(PredicateUtils.truePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,442,"assertEquals(true, PredicateUtils.eitherPredicate(PredicateUtils.truePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,443,"assertEquals(true, PredicateUtils.eitherPredicate(PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,444,"assertEquals(false, PredicateUtils.eitherPredicate(PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,447,public void testEitherPredicateEx() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,448,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,449,"PredicateUtils.eitherPredicate(null, null);"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,450,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,451,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,453,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,456,// onePredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,459,public void testOnePredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,460,"assertEquals(false, PredicateUtils.onePredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,461,"PredicateUtils.truePredicate(), PredicateUtils.truePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,462,"assertEquals(false, PredicateUtils.onePredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,463,"PredicateUtils.truePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,464,"assertEquals(true, PredicateUtils.onePredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,465,"PredicateUtils.truePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,466,"assertEquals(true, PredicateUtils.onePredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,467,"PredicateUtils.falsePredicate(), PredicateUtils.truePredicate(), PredicateUtils.falsePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,468,"assertEquals(true, PredicateUtils.onePredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,469,"PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,470,"assertEquals(false, PredicateUtils.onePredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,471,"PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,472,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,473,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,474,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,475,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,476,"assertEquals(false, PredicateUtils.onePredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,477,coll.clear();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,478,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,479,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,480,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,481,"assertEquals(false, PredicateUtils.onePredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,482,coll.clear();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,483,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,484,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,485,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,486,"assertEquals(true, PredicateUtils.onePredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,487,coll.clear();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,488,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,489,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,490,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,491,"assertEquals(false, PredicateUtils.onePredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,494,public void testOnePredicateEx1() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,495,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,496,PredicateUtils.onePredicate((Predicate[]) null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,497,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,498,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,500,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,503,public void testOnePredicateEx2() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,504,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,505,PredicateUtils.onePredicate(new Predicate[] {null});
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,506,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,507,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,509,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,512,public void testOnePredicateEx3() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,513,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,514,"PredicateUtils.onePredicate(new Predicate[] {null, null});"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,515,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,516,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,518,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,521,public void testOnePredicateEx4() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,522,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,523,PredicateUtils.onePredicate((Collection) null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,524,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,525,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,527,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,530,public void testOnePredicateEx5() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,531,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,532,PredicateUtils.onePredicate(Collections.EMPTY_LIST);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,533,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,534,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,536,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,539,public void testOnePredicateEx6() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,540,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,541,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,542,coll.add(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,543,coll.add(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,544,PredicateUtils.onePredicate(coll);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,545,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,546,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,548,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,551,// neitherPredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,554,public void testNeitherPredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,555,"assertEquals(false, PredicateUtils.neitherPredicate(PredicateUtils.truePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,556,"assertEquals(false, PredicateUtils.neitherPredicate(PredicateUtils.truePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,557,"assertEquals(false, PredicateUtils.neitherPredicate(PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,558,"assertEquals(true, PredicateUtils.neitherPredicate(PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,561,public void testNeitherPredicateEx() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,562,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,563,"PredicateUtils.neitherPredicate(null, null);"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,564,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,565,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,567,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,570,// nonePredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,573,public void testNonePredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,574,"assertEquals(false, PredicateUtils.nonePredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,575,"PredicateUtils.truePredicate(), PredicateUtils.truePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,576,"assertEquals(false, PredicateUtils.nonePredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,577,"PredicateUtils.truePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,578,"assertEquals(false, PredicateUtils.nonePredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,579,"PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,580,"assertEquals(true, PredicateUtils.nonePredicate(new Predicate[] {"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,581,"PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()}).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,582,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,583,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,584,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,585,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,586,"assertEquals(false, PredicateUtils.nonePredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,587,coll.clear();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,588,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,589,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,590,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,591,"assertEquals(false, PredicateUtils.nonePredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,592,coll.clear();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,593,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,594,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,595,coll.add(PredicateUtils.truePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,596,"assertEquals(false, PredicateUtils.nonePredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,597,coll.clear();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,598,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,599,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,600,coll.add(PredicateUtils.falsePredicate());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,601,"assertEquals(true, PredicateUtils.nonePredicate(coll).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,604,public void testNonePredicateEx1() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,605,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,606,PredicateUtils.nonePredicate((Predicate[]) null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,607,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,608,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,610,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,613,public void testNonePredicateEx2() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,614,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,615,PredicateUtils.nonePredicate(new Predicate[] {null});
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,616,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,617,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,619,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,622,public void testNonePredicateEx3() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,623,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,624,"PredicateUtils.nonePredicate(new Predicate[] {null, null});"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,625,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,626,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,628,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,631,public void testNonePredicateEx4() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,632,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,633,PredicateUtils.nonePredicate((Collection) null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,634,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,635,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,637,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,640,public void testNonePredicateEx5() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,641,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,642,PredicateUtils.nonePredicate(Collections.EMPTY_LIST);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,643,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,644,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,646,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,649,public void testNonePredicateEx6() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,650,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,651,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,652,coll.add(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,653,coll.add(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,654,PredicateUtils.nonePredicate(coll);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,655,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,656,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,658,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,661,// instanceofPredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,664,public void testInstanceOfPredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,665,assertNotNull(PredicateUtils.instanceofPredicate(String.class));
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,666,"assertEquals(false, PredicateUtils.instanceofPredicate(String.class).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,667,"assertEquals(false, PredicateUtils.instanceofPredicate(String.class).evaluate(cObject));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,668,"assertEquals(true, PredicateUtils.instanceofPredicate(String.class).evaluate(cString));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,669,"assertEquals(false, PredicateUtils.instanceofPredicate(String.class).evaluate(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,672,// uniquePredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,675,public void testUniquePredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,676,Predicate p = PredicateUtils.uniquePredicate();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,677,"assertEquals(true, p.evaluate(new Object()));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,678,"assertEquals(true, p.evaluate(new Object()));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,679,"assertEquals(true, p.evaluate(new Object()));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,680,"assertEquals(true, p.evaluate(cString));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,681,"assertEquals(false, p.evaluate(cString));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,682,"assertEquals(false, p.evaluate(cString));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,685,// asPredicate(Transformer)
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,688,public void testAsPredicateTransformer() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,689,"assertEquals(false, PredicateUtils.asPredicate(TransformerUtils.nopTransformer()).evaluate(Boolean.FALSE));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,690,"assertEquals(true, PredicateUtils.asPredicate(TransformerUtils.nopTransformer()).evaluate(Boolean.TRUE));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,693,public void testAsPredicateTransformerEx1() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,694,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,695,PredicateUtils.asPredicate(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,696,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,697,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,699,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,702,public void testAsPredicateTransformerEx2() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,703,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,704,PredicateUtils.asPredicate(TransformerUtils.nopTransformer()).evaluate(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,705,} catch (PredicateException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,706,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,708,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,711,// invokerPredicate
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,714,public void testInvokerPredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,715,List list = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,716,"assertEquals(true, PredicateUtils.invokerPredicate(""isEmpty"").evaluate(list));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,717,list.add(new Object());
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,718,"assertEquals(false, PredicateUtils.invokerPredicate(""isEmpty"").evaluate(list));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,721,public void testInvokerPredicateEx1() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,722,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,723,PredicateUtils.invokerPredicate(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,724,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,725,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,727,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,730,public void testInvokerPredicateEx2() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,731,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,732,"PredicateUtils.invokerPredicate(""isEmpty"").evaluate(null);"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,733,} catch (PredicateException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,734,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,736,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,739,public void testInvokerPredicateEx3() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,740,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,741,"PredicateUtils.invokerPredicate(""noSuchMethod"").evaluate(new Object());"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,742,} catch (PredicateException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,743,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,745,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,748,// invokerPredicate2
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,751,public void testInvokerPredicate2() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,752,List list = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,753,"assertEquals(false, PredicateUtils.invokerPredicate("
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,754,"""contains"", new Class[] {Object.class}, new Object[] {cString}).evaluate(list));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,755,list.add(cString);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,756,"assertEquals(true, PredicateUtils.invokerPredicate("
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,757,"""contains"", new Class[] {Object.class}, new Object[] {cString}).evaluate(list));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,760,public void testInvokerPredicate2Ex1() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,761,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,762,"PredicateUtils.invokerPredicate(null, null, null);"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,763,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,764,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,766,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,769,public void testInvokerPredicate2Ex2() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,770,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,771,"PredicateUtils.invokerPredicate(""contains"", new Class[] {Object.class}, new Object[] {cString}).evaluate(null);"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,772,} catch (PredicateException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,773,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,775,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,778,public void testInvokerPredicate2Ex3() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,779,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,780,PredicateUtils.invokerPredicate(
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,781,"""noSuchMethod"", new Class[] {Object.class}, new Object[] {cString}).evaluate(new Object());"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,782,} catch (PredicateException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,783,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,785,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,788,// nullIsException
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,791,public void testNullIsExceptionPredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,792,"assertEquals(true, PredicateUtils.nullIsExceptionPredicate(PredicateUtils.truePredicate()).evaluate(new Object()));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,793,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,794,PredicateUtils.nullIsExceptionPredicate(PredicateUtils.truePredicate()).evaluate(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,795,} catch (PredicateException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,796,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,798,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,801,public void testNullIsExceptionPredicateEx1() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,802,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,803,PredicateUtils.nullIsExceptionPredicate(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,804,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,805,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,807,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,810,// nullIsTrue
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,813,public void testNullIsTruePredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,814,"assertEquals(true, PredicateUtils.nullIsTruePredicate(PredicateUtils.truePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,815,"assertEquals(true, PredicateUtils.nullIsTruePredicate(PredicateUtils.truePredicate()).evaluate(new Object()));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,816,"assertEquals(false, PredicateUtils.nullIsTruePredicate(PredicateUtils.falsePredicate()).evaluate(new Object()));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,819,public void testNullIsTruePredicateEx1() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,820,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,821,PredicateUtils.nullIsTruePredicate(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,822,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,823,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,825,fail();
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,828,// nullIsFalse
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,831,public void testNullIsFalsePredicate() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,832,"assertEquals(false, PredicateUtils.nullIsFalsePredicate(PredicateUtils.truePredicate()).evaluate(null));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,833,"assertEquals(true, PredicateUtils.nullIsFalsePredicate(PredicateUtils.truePredicate()).evaluate(new Object()));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,834,"assertEquals(false, PredicateUtils.nullIsFalsePredicate(PredicateUtils.falsePredicate()).evaluate(new Object()));"
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,837,public void testNullIsFalsePredicateEx1() {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,838,try {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,839,PredicateUtils.nullIsFalsePredicate(null);
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,840,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,841,return;
True,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,843,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,5,* reserved.
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,9,* are met:
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,17,*    distribution.
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,54,package org.apache.commons.lang.functor;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,56,import java.io.Serializable;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,57,import java.util.ArrayList;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,58,import java.util.Collection;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,59,import java.util.Collections;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,60,import java.util.Date;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,61,import java.util.HashMap;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,62,import java.util.List;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,63,import java.util.Map;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,65,import junit.framework.Test;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,66,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,68,import org.apache.commons.lang.SerializationException;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,69,import org.apache.commons.lang.functor.Closure;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,70,import org.apache.commons.lang.functor.ClosureUtils;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,71,import org.apache.commons.lang.functor.Factory;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,72,import org.apache.commons.lang.functor.FactoryUtils;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,73,import org.apache.commons.lang.functor.Predicate;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,74,import org.apache.commons.lang.functor.PredicateUtils;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,76,* Tests the org.apache.commons.lang.functor.TransformerUtils class.
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,78,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,79,"* @version $Id: TestTransformerUtils.java,v 1.1 2002/11/05 16:45:13 bayard Exp $"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,81,public class TestTransformerUtils extends junit.framework.TestCase {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,83,private static final Object cObject = new Object();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,84,"private static final Object cString = ""Hello"";"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,85,private static final Object cInteger = new Integer(6);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,88,* Construct
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,90,public TestTransformerUtils(String name) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,91,super(name);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,95,* Return class aa a test suite.
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,97,public static Test suite() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,98,return new TestSuite(TestTransformerUtils.class);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,102,* Set up instance variables required by this test case.
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,104,public void setUp() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,108,* Tear down instance variables required by this test case.
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,110,public void tearDown() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,113,// exceptionTransformer
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,116,public void testExceptionTransformer() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,117,assertNotNull(TransformerUtils.exceptionTransformer());
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,118,"assertSame(TransformerUtils.exceptionTransformer(), TransformerUtils.exceptionTransformer());"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,119,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,120,TransformerUtils.exceptionTransformer().transform(null);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,121,} catch (TransformerException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,122,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,123,TransformerUtils.exceptionTransformer().transform(cString);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,124,} catch (TransformerException ex2) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,125,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,128,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,131,// nullTransformer
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,134,public void testNullTransformer() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,135,assertNotNull(TransformerUtils.nullTransformer());
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,136,"assertSame(TransformerUtils.nullTransformer(), TransformerUtils.nullTransformer());"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,137,"assertEquals(null, TransformerUtils.nullTransformer().transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,138,"assertEquals(null, TransformerUtils.nullTransformer().transform(cObject));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,139,"assertEquals(null, TransformerUtils.nullTransformer().transform(cString));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,140,"assertEquals(null, TransformerUtils.nullTransformer().transform(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,143,// nopTransformer
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,146,public void testNopTransformer() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,147,assertNotNull(TransformerUtils.nullTransformer());
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,148,"assertSame(TransformerUtils.nullTransformer(), TransformerUtils.nullTransformer());"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,149,"assertEquals(null, TransformerUtils.nopTransformer().transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,150,"assertEquals(cObject, TransformerUtils.nopTransformer().transform(cObject));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,151,"assertEquals(cString, TransformerUtils.nopTransformer().transform(cString));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,152,"assertEquals(cInteger, TransformerUtils.nopTransformer().transform(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,155,// constantTransformer
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,158,public void testConstantTransformer() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,159,"assertEquals(cObject, TransformerUtils.constantTransformer(cObject).transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,160,"assertEquals(cObject, TransformerUtils.constantTransformer(cObject).transform(cObject));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,161,"assertEquals(cObject, TransformerUtils.constantTransformer(cObject).transform(cString));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,162,"assertEquals(cObject, TransformerUtils.constantTransformer(cObject).transform(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,165,// cloneTransformer
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,168,public void testCloneTransformer() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,169,"assertEquals(null, TransformerUtils.cloneTransformer().transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,170,"assertEquals(cString, TransformerUtils.cloneTransformer().transform(cString));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,171,"assertEquals(cInteger, TransformerUtils.cloneTransformer().transform(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,172,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,173,"assertEquals(cObject, TransformerUtils.cloneTransformer().transform(cObject));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,174,} catch (TransformerException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,175,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,177,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,180,// mapTransformer
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,183,public void testMapTransformer() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,184,Map map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,185,"map.put(null, new Integer(0));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,186,"map.put(cObject, new Integer(1));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,187,"map.put(cString, new Integer(2));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,188,"assertEquals(new Integer(0), TransformerUtils.mapTransformer(map).transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,189,"assertEquals(new Integer(1), TransformerUtils.mapTransformer(map).transform(cObject));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,190,"assertEquals(new Integer(2), TransformerUtils.mapTransformer(map).transform(cString));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,191,"assertEquals(null, TransformerUtils.mapTransformer(map).transform(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,194,// commandTransformer
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,197,public void testClosureTransformer() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,198,"assertEquals(null, TransformerUtils.asTransformer(ClosureUtils.nopClosure()).transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,199,"assertEquals(cObject, TransformerUtils.asTransformer(ClosureUtils.nopClosure()).transform(cObject));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,200,"assertEquals(cString, TransformerUtils.asTransformer(ClosureUtils.nopClosure()).transform(cString));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,201,"assertEquals(cInteger, TransformerUtils.asTransformer(ClosureUtils.nopClosure()).transform(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,202,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,203,TransformerUtils.asTransformer((Closure) null);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,204,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,205,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,207,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,210,// predicateTransformer
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,213,public void testPredicateTransformer() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,214,"assertEquals(Boolean.TRUE, TransformerUtils.asTransformer(PredicateUtils.truePredicate()).transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,215,"assertEquals(Boolean.TRUE, TransformerUtils.asTransformer(PredicateUtils.truePredicate()).transform(cObject));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,216,"assertEquals(Boolean.TRUE, TransformerUtils.asTransformer(PredicateUtils.truePredicate()).transform(cString));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,217,"assertEquals(Boolean.TRUE, TransformerUtils.asTransformer(PredicateUtils.truePredicate()).transform(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,218,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,219,TransformerUtils.asTransformer((Predicate) null);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,220,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,221,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,223,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,226,// factoryTransformer
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,229,public void testFactoryTransformer() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,230,"assertEquals(null, TransformerUtils.asTransformer(FactoryUtils.nullFactory()).transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,231,"assertEquals(null, TransformerUtils.asTransformer(FactoryUtils.nullFactory()).transform(cObject));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,232,"assertEquals(null, TransformerUtils.asTransformer(FactoryUtils.nullFactory()).transform(cString));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,233,"assertEquals(null, TransformerUtils.asTransformer(FactoryUtils.nullFactory()).transform(cInteger));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,234,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,235,TransformerUtils.asTransformer((Factory) null);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,236,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,237,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,239,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,242,// chainedTransformer
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,245,public void testChainedTransformer() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,246,"Transformer a = TransformerUtils.constantTransformer(""A"");"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,247,"Transformer b = TransformerUtils.constantTransformer(""B"");"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,249,"assertEquals(""A"", TransformerUtils.chainedTransformer(b, a).transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,250,"assertEquals(""B"", TransformerUtils.chainedTransformer(a, b).transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,251,"assertEquals(""A"", TransformerUtils.chainedTransformer(new Transformer[] {b, a}).transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,252,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,253,coll.add(b);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,254,coll.add(a);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,255,"assertEquals(""A"", TransformerUtils.chainedTransformer(coll).transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,258,public void testChainedTransformerEx1a() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,259,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,260,"TransformerUtils.chainedTransformer(null, null);"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,261,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,262,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,264,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,267,public void testChainedTransformerEx1b() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,268,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,269,TransformerUtils.chainedTransformer((Transformer[]) null);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,270,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,271,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,273,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,276,public void testChainedTransformerEx1c() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,277,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,278,TransformerUtils.chainedTransformer((Collection) null);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,279,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,280,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,282,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,285,public void testChainedTransformerEx2() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,286,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,287,TransformerUtils.chainedTransformer(new Transformer[0]);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,288,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,289,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,291,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,294,public void testChainedTransformerEx3() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,295,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,296,"TransformerUtils.chainedTransformer(new Transformer[] {null, null});"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,297,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,298,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,300,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,303,public void testChainedTransformerEx4() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,304,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,305,TransformerUtils.chainedTransformer(Collections.EMPTY_LIST);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,306,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,307,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,309,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,312,public void testChainedTransformerEx5() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,313,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,314,Collection coll = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,315,coll.add(null);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,316,coll.add(null);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,317,TransformerUtils.chainedTransformer(coll);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,318,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,319,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,321,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,324,// switchTransformer
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,327,public void testSwitchTransformer() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,328,"Transformer a = TransformerUtils.constantTransformer(""A"");"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,329,"Transformer b = TransformerUtils.constantTransformer(""B"");"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,330,"Transformer c = TransformerUtils.constantTransformer(""C"");"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,332,"assertEquals(""A"", TransformerUtils.switchTransformer(PredicateUtils.truePredicate(), a, b).transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,333,"assertEquals(""B"", TransformerUtils.switchTransformer(PredicateUtils.falsePredicate(), a, b).transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,335,"assertEquals(null, TransformerUtils.switchTransformer("
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,336,"new Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,337,"new Transformer[] {a, b}).transform(""WELL""));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,338,"assertEquals(""A"", TransformerUtils.switchTransformer("
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,339,"new Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,340,"new Transformer[] {a, b}).transform(""HELLO""));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,341,"assertEquals(""B"", TransformerUtils.switchTransformer("
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,342,"new Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,343,"new Transformer[] {a, b}).transform(""THERE""));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,345,"assertEquals(""C"", TransformerUtils.switchTransformer("
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,346,"new Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,347,"new Transformer[] {a, b}, c).transform(""WELL""));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,349,Map map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,350,"map.put(PredicateUtils.equalPredicate(""HELLO""), a);"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,351,"map.put(PredicateUtils.equalPredicate(""THERE""), b);"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,352,"assertEquals(null, TransformerUtils.switchTransformer(map).transform(""WELL""));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,353,"assertEquals(""A"", TransformerUtils.switchTransformer(map).transform(""HELLO""));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,354,"assertEquals(""B"", TransformerUtils.switchTransformer(map).transform(""THERE""));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,355,"map.put(null, c);"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,356,"assertEquals(""C"", TransformerUtils.switchTransformer(map).transform(""WELL""));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,359,public void testSwitchTransformerEx1a() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,360,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,361,"TransformerUtils.switchTransformer(null, null);"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,362,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,363,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,365,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,368,public void testSwitchTransformerEx1b() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,369,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,370,"TransformerUtils.switchTransformer((Predicate[]) null, (Transformer[]) null);"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,371,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,372,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,374,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,377,public void testSwitchTransformerEx1c() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,378,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,379,TransformerUtils.switchTransformer((Map) null);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,380,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,381,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,383,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,386,public void testSwitchTransformerEx2() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,387,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,388,"TransformerUtils.switchTransformer(new Predicate[0], new Transformer[0]);"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,389,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,390,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,392,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,395,public void testSwitchTransformerEx3() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,396,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,397,"TransformerUtils.switchTransformer(new Predicate[2], new Transformer[2]);"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,398,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,399,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,401,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,404,public void testSwitchTransformerEx4() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,405,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,406,TransformerUtils.switchTransformer(Collections.EMPTY_MAP);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,407,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,408,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,410,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,413,public void testSwitchTransformerEx5() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,414,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,415,Map map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,416,"map.put(null, null);"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,417,"map.put(null, null);"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,418,TransformerUtils.switchTransformer(map);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,419,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,420,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,422,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,425,public void testSwitchTransformerEx6() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,426,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,427,"TransformerUtils.switchTransformer(new Predicate[2], new Transformer[1]);"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,428,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,429,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,431,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,434,// switchMapTransformer
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,437,public void testSwitchMapTransformer() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,438,"Transformer a = TransformerUtils.constantTransformer(""A"");"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,439,"Transformer b = TransformerUtils.constantTransformer(""B"");"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,440,"Transformer c = TransformerUtils.constantTransformer(""C"");"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,442,Map map = new HashMap();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,443,"map.put(""HELLO"", a);"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,444,"map.put(""THERE"", b);"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,445,"assertEquals(null, TransformerUtils.switchMapTransformer(map).transform(""WELL""));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,446,"assertEquals(""A"", TransformerUtils.switchMapTransformer(map).transform(""HELLO""));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,447,"assertEquals(""B"", TransformerUtils.switchMapTransformer(map).transform(""THERE""));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,448,"map.put(null, c);"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,449,"assertEquals(""C"", TransformerUtils.switchMapTransformer(map).transform(""WELL""));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,452,public void testSwitchMapTransformerEx1() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,453,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,454,TransformerUtils.switchMapTransformer(null);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,455,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,456,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,458,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,461,public void testSwitchMapTransformerEx2() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,462,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,463,TransformerUtils.switchMapTransformer(Collections.EMPTY_MAP);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,464,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,465,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,467,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,470,// invokerTransformer
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,473,public void testInvokerTransformer() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,474,List list = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,475,"assertEquals(new Integer(0), TransformerUtils.invokerTransformer(""size"").transform(list));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,476,list.add(new Object());
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,477,"assertEquals(new Integer(1), TransformerUtils.invokerTransformer(""size"").transform(list));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,478,"assertEquals(null, TransformerUtils.invokerTransformer(""size"").transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,481,public void testInvokerTransformerEx1() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,482,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,483,TransformerUtils.invokerTransformer(null);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,484,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,485,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,487,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,490,public void testInvokerTransformerEx3() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,491,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,492,"TransformerUtils.invokerTransformer(""noSuchMethod"").transform(new Object());"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,493,} catch (TransformerException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,494,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,496,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,499,// invokerTransformer2
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,502,public void testInvokerTransformer2() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,503,List list = new ArrayList();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,504,"assertEquals(Boolean.FALSE, TransformerUtils.invokerTransformer("
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,505,"""contains"", new Class[] {Object.class}, new Object[] {cString}).transform(list));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,506,list.add(cString);
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,507,"assertEquals(Boolean.TRUE, TransformerUtils.invokerTransformer("
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,508,"""contains"", new Class[] {Object.class}, new Object[] {cString}).transform(list));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,509,"assertEquals(null, TransformerUtils.invokerTransformer("
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,510,"""contains"", new Class[] {Object.class}, new Object[] {cString}).transform(null));"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,513,public void testInvokerTransformer2Ex1() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,514,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,515,"TransformerUtils.invokerTransformer(null, null, null);"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,516,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,517,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,519,fail();
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,522,public void testInvokerTransformer2Ex3() {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,523,try {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,524,TransformerUtils.invokerTransformer(
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,525,"""noSuchMethod"", new Class[] {Object.class}, new Object[] {cString}).transform(new Object());"
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,526,} catch (TransformerException ex) {
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,527,return;
True,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,529,fail();
