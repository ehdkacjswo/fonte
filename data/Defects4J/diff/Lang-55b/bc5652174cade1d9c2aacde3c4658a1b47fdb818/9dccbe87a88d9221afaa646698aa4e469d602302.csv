is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,21,import java.io.StringWriter;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,26, <p>Provides HTML and XML entity utilities.</p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,28,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,29,* Provides HTML and XML entity utilities.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,30,* </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,41,rivate static final String[][] BASIC_ARRAY = {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,42,"""quot"", ""34""}, // "" - double-quote"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,45,"private static final String[][] BASIC_ARRAY = {{""quot"", ""34""}, // "" - double-quote"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,48,rivate static final String[][] APOS_ARRAY = {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,49,"""apos"", ""39""}, // XML apostrophe"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,51,"private static final String[][] APOS_ARRAY = {{""apos"", ""39""}, // XML apostrophe"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,53,tatic final String[][] ISO8859_1_ARRAY = {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,54,"""nbsp"", ""160""}, // non-breaking space"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,55,"""iexcl"", ""161""}, //inverted exclamation mark"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,56,"""cent"", ""162""}, //cent sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,57,"""pound"", ""163""}, //pound sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,58,"""curren"", ""164""}, //currency sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,59,"""yen"", ""165""}, //yen sign = yuan sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,60,"""brvbar"", ""166""}, //broken bar = broken vertical bar"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,61,"""sect"", ""167""}, //section sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,62,"""uml"", ""168""}, //diaeresis = spacing diaeresis"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,55,"static final String[][] ISO8859_1_ARRAY = {{""nbsp"", ""160""}, // non-breaking space"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,56,"{""iexcl"", ""161""}, // inverted exclamation mark"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,57,"{""cent"", ""162""}, // cent sign"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,58,"{""pound"", ""163""}, // pound sign"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,59,"{""curren"", ""164""}, // currency sign"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,60,"{""yen"", ""165""}, // yen sign = yuan sign"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,61,"{""brvbar"", ""166""}, // broken bar = broken vertical bar"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,62,"{""sect"", ""167""}, // section sign"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,63,"{""uml"", ""168""}, // diaeresis = spacing diaeresis"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,64,"""ordf"", ""170""}, //feminine ordinal indicator"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,65,"""laquo"", ""171""}, //left-pointing double angle quotation mark = left pointing guillemet"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,66,"""not"", ""172""}, //not sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,67,"""shy"", ""173""}, //soft hyphen = discretionary hyphen"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,65,"{""ordf"", ""170""}, // feminine ordinal indicator"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,66,"{""laquo"", ""171""}, // left-pointing double angle quotation mark = left pointing guillemet"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,67,"{""not"", ""172""}, // not sign"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,68,"{""shy"", ""173""}, // soft hyphen = discretionary hyphen"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,69,"""macr"", ""175""}, //macron = spacing macron = overline = APL overbar"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,70,"""deg"", ""176""}, //degree sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,71,"""plusmn"", ""177""}, //plus-minus sign = plus-or-minus sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,72,"""sup2"", ""178""}, //superscript two = superscript digit two = squared"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,73,"""sup3"", ""179""}, //superscript three = superscript digit three = cubed"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,74,"""acute"", ""180""}, //acute accent = spacing acute"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,75,"""micro"", ""181""}, //micro sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,76,"""para"", ""182""}, //pilcrow sign = paragraph sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,77,"""middot"", ""183""}, //middle dot = Georgian comma = Greek middle dot"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,78,"""cedil"", ""184""}, //cedilla = spacing cedilla"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,79,"""sup1"", ""185""}, //superscript one = superscript digit one"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,80,"""ordm"", ""186""}, //masculine ordinal indicator"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,81,"""raquo"", ""187""}, //right-pointing double angle quotation mark = right pointing guillemet"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,82,"""frac14"", ""188""}, //vulgar fraction one quarter = fraction one quarter"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,83,"""frac12"", ""189""}, //vulgar fraction one half = fraction one half"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,84,"""frac34"", ""190""}, //vulgar fraction three quarters = fraction three quarters"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,85,"""iquest"", ""191""}, //inverted question mark = turned question mark"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,70,"{""macr"", ""175""}, // macron = spacing macron = overline = APL overbar"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,71,"{""deg"", ""176""}, // degree sign"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,72,"{""plusmn"", ""177""}, // plus-minus sign = plus-or-minus sign"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,73,"{""sup2"", ""178""}, // superscript two = superscript digit two = squared"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,74,"{""sup3"", ""179""}, // superscript three = superscript digit three = cubed"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,75,"{""acute"", ""180""}, // acute accent = spacing acute"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,76,"{""micro"", ""181""}, // micro sign"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,77,"{""para"", ""182""}, // pilcrow sign = paragraph sign"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,78,"{""middot"", ""183""}, // middle dot = Georgian comma = Greek middle dot"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,79,"{""cedil"", ""184""}, // cedilla = spacing cedilla"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,80,"{""sup1"", ""185""}, // superscript one = superscript digit one"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,81,"{""ordm"", ""186""}, // masculine ordinal indicator"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,82,"{""raquo"", ""187""}, // right-pointing double angle quotation mark = right pointing guillemet"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,83,"{""frac14"", ""188""}, // vulgar fraction one quarter = fraction one quarter"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,84,"{""frac12"", ""189""}, // vulgar fraction one half = fraction one half"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,85,"{""frac34"", ""190""}, // vulgar fraction three quarters = fraction three quarters"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,86,"{""iquest"", ""191""}, // inverted question mark = turned question mark"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,109,"""times"", ""215""}, //multiplication sign"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,110,"{""times"", ""215""}, // multiplication sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,155,/ <!-- Latin Extended-B -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,156,"""fnof"", ""402""}, //latin small f with hook = function= florin, U+0192 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,157,/ <!-- Greek -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,158,"""Alpha"", ""913""}, //greek capital letter alpha, U+0391 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,159,"""Beta"", ""914""}, //greek capital letter beta, U+0392 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,160,"""Gamma"", ""915""}, //greek capital letter gamma,U+0393 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,161,"""Delta"", ""916""}, //greek capital letter delta,U+0394 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,162,"""Epsilon"", ""917""}, //greek capital letter epsilon, U+0395 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,163,"""Zeta"", ""918""}, //greek capital letter zeta, U+0396 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,164,"""Eta"", ""919""}, //greek capital letter eta, U+0397 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,165,"""Theta"", ""920""}, //greek capital letter theta,U+0398 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,166,"""Iota"", ""921""}, //greek capital letter iota, U+0399 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,167,"""Kappa"", ""922""}, //greek capital letter kappa, U+039A -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,168,"""Lambda"", ""923""}, //greek capital letter lambda,U+039B ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,169,"""Mu"", ""924""}, //greek capital letter mu, U+039C -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,170,"""Nu"", ""925""}, //greek capital letter nu, U+039D -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,171,"""Xi"", ""926""}, //greek capital letter xi, U+039E ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,172,"""Omicron"", ""927""}, //greek capital letter omicron, U+039F -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,173,"""Pi"", ""928""}, //greek capital letter pi, U+03A0 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,174,"""Rho"", ""929""}, //greek capital letter rho, U+03A1 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,175,"/ <!-- there is no Sigmaf, and no U+03A2 character either -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,176,"""Sigma"", ""931""}, //greek capital letter sigma,U+03A3 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,177,"""Tau"", ""932""}, //greek capital letter tau, U+03A4 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,178,"""Upsilon"", ""933""}, //greek capital letter upsilon,U+03A5 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,179,"""Phi"", ""934""}, //greek capital letter phi,U+03A6 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,180,"""Chi"", ""935""}, //greek capital letter chi, U+03A7 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,181,"""Psi"", ""936""}, //greek capital letter psi,U+03A8 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,182,"""Omega"", ""937""}, //greek capital letter omega,U+03A9 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,183,"""alpha"", ""945""}, //greek small letter alpha,U+03B1 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,184,"""beta"", ""946""}, //greek small letter beta, U+03B2 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,185,"""gamma"", ""947""}, //greek small letter gamma,U+03B3 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,186,"""delta"", ""948""}, //greek small letter delta,U+03B4 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,187,"""epsilon"", ""949""}, //greek small letter epsilon,U+03B5 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,188,"""zeta"", ""950""}, //greek small letter zeta, U+03B6 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,189,"""eta"", ""951""}, //greek small letter eta, U+03B7 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,190,"""theta"", ""952""}, //greek small letter theta,U+03B8 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,191,"""iota"", ""953""}, //greek small letter iota, U+03B9 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,192,"""kappa"", ""954""}, //greek small letter kappa,U+03BA ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,193,"""lambda"", ""955""}, //greek small letter lambda,U+03BB ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,194,"""mu"", ""956""}, //greek small letter mu, U+03BC ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,195,"""nu"", ""957""}, //greek small letter nu, U+03BD ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,196,"""xi"", ""958""}, //greek small letter xi, U+03BE ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,197,"""omicron"", ""959""}, //greek small letter omicron, U+03BF NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,198,"""pi"", ""960""}, //greek small letter pi, U+03C0 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,199,"""rho"", ""961""}, //greek small letter rho, U+03C1 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,200,"""sigmaf"", ""962""}, //greek small letter final sigma,U+03C2 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,201,"""sigma"", ""963""}, //greek small letter sigma,U+03C3 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,202,"""tau"", ""964""}, //greek small letter tau, U+03C4 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,203,"""upsilon"", ""965""}, //greek small letter upsilon,U+03C5 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,204,"""phi"", ""966""}, //greek small letter phi, U+03C6 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,205,"""chi"", ""967""}, //greek small letter chi, U+03C7 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,206,"""psi"", ""968""}, //greek small letter psi, U+03C8 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,207,"""omega"", ""969""}, //greek small letter omega,U+03C9 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,208,"""thetasym"", ""977""}, //greek small letter theta symbol,U+03D1 NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,209,"""upsih"", ""978""}, //greek upsilon with hook symbol,U+03D2 NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,210,"""piv"", ""982""}, //greek pi symbol, U+03D6 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,211,/ <!-- General Punctuation -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,212,"""bull"", ""8226""}, //bullet = black small circle,U+2022 ISOpub  -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,213,"/ <!-- bullet is NOT the same as bullet operator, U+2219 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,214,"""hellip"", ""8230""}, //horizontal ellipsis = three dot leader,U+2026 ISOpub  -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,215,"""prime"", ""8242""}, //prime = minutes = feet, U+2032 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,216,"""Prime"", ""8243""}, //double prime = seconds = inches,U+2033 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,217,"""oline"", ""8254""}, //overline = spacing overscore,U+203E NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,218,"""frasl"", ""8260""}, //fraction slash, U+2044 NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,219,/ <!-- Letterlike Symbols -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,220,"""weierp"", ""8472""}, //script capital P = power set= Weierstrass p, U+2118 ISOamso -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,221,"""image"", ""8465""}, //blackletter capital I = imaginary part,U+2111 ISOamso -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,222,"""real"", ""8476""}, //blackletter capital R = real part symbol,U+211C ISOamso -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,223,"""trade"", ""8482""}, //trade mark sign, U+2122 ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,224,"""alefsym"", ""8501""}, //alef symbol = first transfinite cardinal,U+2135 NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,225,"/ <!-- alef symbol is NOT the same as hebrew letter alef,U+05D0 although the"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,226,/      same glyph could be used to depict both characters -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,227,/ <!-- Arrows -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,228,"""larr"", ""8592""}, //leftwards arrow, U+2190 ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,229,"""uarr"", ""8593""}, //upwards arrow, U+2191 ISOnum-->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,230,"""rarr"", ""8594""}, //rightwards arrow, U+2192 ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,231,"""darr"", ""8595""}, //downwards arrow, U+2193 ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,232,"""harr"", ""8596""}, //left right arrow, U+2194 ISOamsa -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,233,"""crarr"", ""8629""}, //downwards arrow with corner leftwards= carriage return, U+21B5 NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,234,"""lArr"", ""8656""}, //leftwards double arrow, U+21D0 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,235,/ <!-- ISO 10646 does not say that lArr is the same as the 'is implied by'
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,236,/      arrow but also does not have any other character for that function.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,237,/      So ? lArr canbe used for 'is implied by' as ISOtech suggests -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,238,"""uArr"", ""8657""}, //upwards double arrow, U+21D1 ISOamsa -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,239,"""rArr"", ""8658""}, //rightwards double arrow,U+21D2 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,240,/ <!-- ISO 10646 does not say this is the 'implies' character but does not
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,241,/      have another character with this function so ?rArr can be used for
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,242,/      'implies' as ISOtech suggests -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,243,"""dArr"", ""8659""}, //downwards double arrow, U+21D3 ISOamsa -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,244,"""hArr"", ""8660""}, //left right double arrow,U+21D4 ISOamsa -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,245,/ <!-- Mathematical Operators -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,246,"""forall"", ""8704""}, //for all, U+2200 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,247,"""part"", ""8706""}, //partial differential, U+2202 ISOtech  -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,248,"""exist"", ""8707""}, //there exists, U+2203 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,249,"""empty"", ""8709""}, //empty set = null set = diameter,U+2205 ISOamso -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,250,"""nabla"", ""8711""}, //nabla = backward difference,U+2207 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,251,"""isin"", ""8712""}, //element of, U+2208 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,252,"""notin"", ""8713""}, //not an element of, U+2209 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,253,"""ni"", ""8715""}, //contains as member, U+220B ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,254,/ <!-- should there be a more memorable name than 'ni'? -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,255,"""prod"", ""8719""}, //n-ary product = product sign,U+220F ISOamsb -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,256,/ <!-- prod is NOT the same character as U+03A0 'greek capital letter pi'
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,257,/      though the same glyph might be used for both -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,258,"""sum"", ""8721""}, //n-ary summation, U+2211 ISOamsb -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,259,/ <!-- sum is NOT the same character as U+03A3 'greek capital letter sigma'
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,260,/      though the same glyph might be used for both -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,261,"""minus"", ""8722""}, //minus sign, U+2212 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,262,"""lowast"", ""8727""}, //asterisk operator, U+2217 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,263,"""radic"", ""8730""}, //square root = radical sign,U+221A ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,264,"""prop"", ""8733""}, //proportional to, U+221D ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,265,"""infin"", ""8734""}, //infinity, U+221E ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,266,"""ang"", ""8736""}, //angle, U+2220 ISOamso -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,267,"""and"", ""8743""}, //logical and = wedge, U+2227 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,268,"""or"", ""8744""}, //logical or = vee, U+2228 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,269,"""cap"", ""8745""}, //intersection = cap, U+2229 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,270,"""cup"", ""8746""}, //union = cup, U+222A ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,271,"""int"", ""8747""}, //integral, U+222B ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,272,"""there4"", ""8756""}, //therefore, U+2234 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,273,"""sim"", ""8764""}, //tilde operator = varies with = similar to,U+223C ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,274,"/ <!-- tilde operator is NOT the same character as the tilde, U+007E,although"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,275,/      the same glyph might be used to represent both  -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,276,"""cong"", ""8773""}, //approximately equal to, U+2245 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,277,"""asymp"", ""8776""}, //almost equal to = asymptotic to,U+2248 ISOamsr -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,278,"""ne"", ""8800""}, //not equal to, U+2260 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,279,"""equiv"", ""8801""}, //identical to, U+2261 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,280,"""le"", ""8804""}, //less-than or equal to, U+2264 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,281,"""ge"", ""8805""}, //greater-than or equal to,U+2265 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,282,"""sub"", ""8834""}, //subset of, U+2282 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,283,"""sup"", ""8835""}, //superset of, U+2283 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,284,"/ <!-- note that nsup, 'not a superset of, U+2283' is not covered by the"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,285,"/      Symbol font encoding and is not included. Should it be, for symmetry?"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,286,"/      It is in ISOamsn  --> <!ENTITY nsub"", ""8836""},"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,287,"/      not a subset of, U+2284 ISOamsn -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,288,"""sube"", ""8838""}, //subset of or equal to, U+2286 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,289,"""supe"", ""8839""}, //superset of or equal to,U+2287 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,290,"""oplus"", ""8853""}, //circled plus = direct sum,U+2295 ISOamsb -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,291,"""otimes"", ""8855""}, //circled times = vector product,U+2297 ISOamsb -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,292,"""perp"", ""8869""}, //up tack = orthogonal to = perpendicular,U+22A5 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,293,"""sdot"", ""8901""}, //dot operator, U+22C5 ISOamsb -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,294,/ <!-- dot operator is NOT the same character as U+00B7 middle dot -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,295,/ <!-- Miscellaneous Technical -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,296,"""lceil"", ""8968""}, //left ceiling = apl upstile,U+2308 ISOamsc  -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,297,"""rceil"", ""8969""}, //right ceiling, U+2309 ISOamsc  -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,298,"""lfloor"", ""8970""}, //left floor = apl downstile,U+230A ISOamsc  -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,299,"""rfloor"", ""8971""}, //right floor, U+230B ISOamsc  -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,300,"""lang"", ""9001""}, //left-pointing angle bracket = bra,U+2329 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,301,/ <!-- lang is NOT the same character as U+003C 'less than' or U+2039 'single left-pointing angle quotation mark' -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,302,"""rang"", ""9002""}, //right-pointing angle bracket = ket,U+232A ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,303,/ <!-- rang is NOT the same character as U+003E 'greater than' or U+203A
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,304,/      'single right-pointing angle quotation mark' -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,305,/ <!-- Geometric Shapes -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,306,"""loz"", ""9674""}, //lozenge, U+25CA ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,307,/ <!-- Miscellaneous Symbols -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,308,"""spades"", ""9824""}, //black spade suit, U+2660 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,309,/ <!-- black here seems to mean filled as opposed to hollow -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,310,"""clubs"", ""9827""}, //black club suit = shamrock,U+2663 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,311,"""hearts"", ""9829""}, //black heart suit = valentine,U+2665 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,312,"""diams"", ""9830""}, //black diamond suit, U+2666 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,314,/ <!-- Latin Extended-A -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,315,"""OElig"", ""338""}, //  -- latin capital ligature OE,U+0152 ISOlat2 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,316,"""oelig"", ""339""}, //  -- latin small ligature oe, U+0153 ISOlat2 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,317,"/ <!-- ligature is a misnomer, this is a separate character in some languages -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,318,"""Scaron"", ""352""}, //  -- latin capital letter S with caron,U+0160 ISOlat2 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,319,"""scaron"", ""353""}, //  -- latin small letter s with caron,U+0161 ISOlat2 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,320,"""Yuml"", ""376""}, //  -- latin capital letter Y with diaeresis,U+0178 ISOlat2 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,321,/ <!-- Spacing Modifier Letters -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,322,"""circ"", ""710""}, //  -- modifier letter circumflex accent,U+02C6 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,323,"""tilde"", ""732""}, //small tilde, U+02DC ISOdia -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,324,/ <!-- General Punctuation -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,325,"""ensp"", ""8194""}, //en space, U+2002 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,326,"""emsp"", ""8195""}, //em space, U+2003 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,327,"""thinsp"", ""8201""}, //thin space, U+2009 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,328,"""zwnj"", ""8204""}, //zero width non-joiner,U+200C NEW RFC 2070 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,329,"""zwj"", ""8205""}, //zero width joiner, U+200D NEW RFC 2070 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,330,"""lrm"", ""8206""}, //left-to-right mark, U+200E NEW RFC 2070 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,331,"""rlm"", ""8207""}, //right-to-left mark, U+200F NEW RFC 2070 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,332,"""ndash"", ""8211""}, //en dash, U+2013 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,333,"""mdash"", ""8212""}, //em dash, U+2014 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,334,"""lsquo"", ""8216""}, //left single quotation mark,U+2018 ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,335,"""rsquo"", ""8217""}, //right single quotation mark,U+2019 ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,336,"""sbquo"", ""8218""}, //single low-9 quotation mark, U+201A NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,337,"""ldquo"", ""8220""}, //left double quotation mark,U+201C ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,338,"""rdquo"", ""8221""}, //right double quotation mark,U+201D ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,339,"""bdquo"", ""8222""}, //double low-9 quotation mark, U+201E NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,340,"""dagger"", ""8224""}, //dagger, U+2020 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,341,"""Dagger"", ""8225""}, //double dagger, U+2021 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,342,"""permil"", ""8240""}, //per mille sign, U+2030 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,343,"""lsaquo"", ""8249""}, //single left-pointing angle quotation mark,U+2039 ISO proposed -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,344,/ <!-- lsaquo is proposed but not yet ISO standardized -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,345,"""rsaquo"", ""8250""}, //single right-pointing angle quotation mark,U+203A ISO proposed -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,346,/ <!-- rsaquo is proposed but not yet ISO standardized -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,347,"""euro"", ""8364""}, //  -- euro sign, U+20AC NEW -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,156,// <!-- Latin Extended-B -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,157,"{""fnof"", ""402""}, // latin small f with hook = function= florin, U+0192 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,158,// <!-- Greek -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,159,"{""Alpha"", ""913""}, // greek capital letter alpha, U+0391 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,160,"{""Beta"", ""914""}, // greek capital letter beta, U+0392 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,161,"{""Gamma"", ""915""}, // greek capital letter gamma,U+0393 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,162,"{""Delta"", ""916""}, // greek capital letter delta,U+0394 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,163,"{""Epsilon"", ""917""}, // greek capital letter epsilon, U+0395 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,164,"{""Zeta"", ""918""}, // greek capital letter zeta, U+0396 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,165,"{""Eta"", ""919""}, // greek capital letter eta, U+0397 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,166,"{""Theta"", ""920""}, // greek capital letter theta,U+0398 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,167,"{""Iota"", ""921""}, // greek capital letter iota, U+0399 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,168,"{""Kappa"", ""922""}, // greek capital letter kappa, U+039A -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,169,"{""Lambda"", ""923""}, // greek capital letter lambda,U+039B ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,170,"{""Mu"", ""924""}, // greek capital letter mu, U+039C -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,171,"{""Nu"", ""925""}, // greek capital letter nu, U+039D -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,172,"{""Xi"", ""926""}, // greek capital letter xi, U+039E ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,173,"{""Omicron"", ""927""}, // greek capital letter omicron, U+039F -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,174,"{""Pi"", ""928""}, // greek capital letter pi, U+03A0 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,175,"{""Rho"", ""929""}, // greek capital letter rho, U+03A1 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,176,"// <!-- there is no Sigmaf, and no U+03A2 character either -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,177,"{""Sigma"", ""931""}, // greek capital letter sigma,U+03A3 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,178,"{""Tau"", ""932""}, // greek capital letter tau, U+03A4 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,179,"{""Upsilon"", ""933""}, // greek capital letter upsilon,U+03A5 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,180,"{""Phi"", ""934""}, // greek capital letter phi,U+03A6 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,181,"{""Chi"", ""935""}, // greek capital letter chi, U+03A7 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,182,"{""Psi"", ""936""}, // greek capital letter psi,U+03A8 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,183,"{""Omega"", ""937""}, // greek capital letter omega,U+03A9 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,184,"{""alpha"", ""945""}, // greek small letter alpha,U+03B1 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,185,"{""beta"", ""946""}, // greek small letter beta, U+03B2 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,186,"{""gamma"", ""947""}, // greek small letter gamma,U+03B3 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,187,"{""delta"", ""948""}, // greek small letter delta,U+03B4 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,188,"{""epsilon"", ""949""}, // greek small letter epsilon,U+03B5 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,189,"{""zeta"", ""950""}, // greek small letter zeta, U+03B6 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,190,"{""eta"", ""951""}, // greek small letter eta, U+03B7 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,191,"{""theta"", ""952""}, // greek small letter theta,U+03B8 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,192,"{""iota"", ""953""}, // greek small letter iota, U+03B9 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,193,"{""kappa"", ""954""}, // greek small letter kappa,U+03BA ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,194,"{""lambda"", ""955""}, // greek small letter lambda,U+03BB ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,195,"{""mu"", ""956""}, // greek small letter mu, U+03BC ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,196,"{""nu"", ""957""}, // greek small letter nu, U+03BD ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,197,"{""xi"", ""958""}, // greek small letter xi, U+03BE ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,198,"{""omicron"", ""959""}, // greek small letter omicron, U+03BF NEW -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,199,"{""pi"", ""960""}, // greek small letter pi, U+03C0 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,200,"{""rho"", ""961""}, // greek small letter rho, U+03C1 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,201,"{""sigmaf"", ""962""}, // greek small letter final sigma,U+03C2 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,202,"{""sigma"", ""963""}, // greek small letter sigma,U+03C3 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,203,"{""tau"", ""964""}, // greek small letter tau, U+03C4 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,204,"{""upsilon"", ""965""}, // greek small letter upsilon,U+03C5 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,205,"{""phi"", ""966""}, // greek small letter phi, U+03C6 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,206,"{""chi"", ""967""}, // greek small letter chi, U+03C7 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,207,"{""psi"", ""968""}, // greek small letter psi, U+03C8 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,208,"{""omega"", ""969""}, // greek small letter omega,U+03C9 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,209,"{""thetasym"", ""977""}, // greek small letter theta symbol,U+03D1 NEW -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,210,"{""upsih"", ""978""}, // greek upsilon with hook symbol,U+03D2 NEW -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,211,"{""piv"", ""982""}, // greek pi symbol, U+03D6 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,212,// <!-- General Punctuation -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,213,"{""bull"", ""8226""}, // bullet = black small circle,U+2022 ISOpub -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,214,"// <!-- bullet is NOT the same as bullet operator, U+2219 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,215,"{""hellip"", ""8230""}, // horizontal ellipsis = three dot leader,U+2026 ISOpub -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,216,"{""prime"", ""8242""}, // prime = minutes = feet, U+2032 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,217,"{""Prime"", ""8243""}, // double prime = seconds = inches,U+2033 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,218,"{""oline"", ""8254""}, // overline = spacing overscore,U+203E NEW -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,219,"{""frasl"", ""8260""}, // fraction slash, U+2044 NEW -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,220,// <!-- Letterlike Symbols -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,221,"{""weierp"", ""8472""}, // script capital P = power set= Weierstrass p, U+2118 ISOamso -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,222,"{""image"", ""8465""}, // blackletter capital I = imaginary part,U+2111 ISOamso -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,223,"{""real"", ""8476""}, // blackletter capital R = real part symbol,U+211C ISOamso -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,224,"{""trade"", ""8482""}, // trade mark sign, U+2122 ISOnum -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,225,"{""alefsym"", ""8501""}, // alef symbol = first transfinite cardinal,U+2135 NEW -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,226,"// <!-- alef symbol is NOT the same as hebrew letter alef,U+05D0 although the"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,227,// same glyph could be used to depict both characters -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,228,// <!-- Arrows -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,229,"{""larr"", ""8592""}, // leftwards arrow, U+2190 ISOnum -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,230,"{""uarr"", ""8593""}, // upwards arrow, U+2191 ISOnum-->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,231,"{""rarr"", ""8594""}, // rightwards arrow, U+2192 ISOnum -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,232,"{""darr"", ""8595""}, // downwards arrow, U+2193 ISOnum -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,233,"{""harr"", ""8596""}, // left right arrow, U+2194 ISOamsa -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,234,"{""crarr"", ""8629""}, // downwards arrow with corner leftwards= carriage return, U+21B5 NEW -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,235,"{""lArr"", ""8656""}, // leftwards double arrow, U+21D0 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,236,// <!-- ISO 10646 does not say that lArr is the same as the 'is implied by'
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,237,// arrow but also does not have any other character for that function.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,238,// So ? lArr canbe used for 'is implied by' as ISOtech suggests -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,239,"{""uArr"", ""8657""}, // upwards double arrow, U+21D1 ISOamsa -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,240,"{""rArr"", ""8658""}, // rightwards double arrow,U+21D2 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,241,// <!-- ISO 10646 does not say this is the 'implies' character but does not
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,242,// have another character with this function so ?rArr can be used for
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,243,// 'implies' as ISOtech suggests -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,244,"{""dArr"", ""8659""}, // downwards double arrow, U+21D3 ISOamsa -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,245,"{""hArr"", ""8660""}, // left right double arrow,U+21D4 ISOamsa -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,246,// <!-- Mathematical Operators -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,247,"{""forall"", ""8704""}, // for all, U+2200 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,248,"{""part"", ""8706""}, // partial differential, U+2202 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,249,"{""exist"", ""8707""}, // there exists, U+2203 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,250,"{""empty"", ""8709""}, // empty set = null set = diameter,U+2205 ISOamso -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,251,"{""nabla"", ""8711""}, // nabla = backward difference,U+2207 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,252,"{""isin"", ""8712""}, // element of, U+2208 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,253,"{""notin"", ""8713""}, // not an element of, U+2209 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,254,"{""ni"", ""8715""}, // contains as member, U+220B ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,255,// <!-- should there be a more memorable name than 'ni'? -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,256,"{""prod"", ""8719""}, // n-ary product = product sign,U+220F ISOamsb -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,257,// <!-- prod is NOT the same character as U+03A0 'greek capital letter pi'
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,258,// though the same glyph might be used for both -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,259,"{""sum"", ""8721""}, // n-ary summation, U+2211 ISOamsb -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,260,// <!-- sum is NOT the same character as U+03A3 'greek capital letter sigma'
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,261,// though the same glyph might be used for both -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,262,"{""minus"", ""8722""}, // minus sign, U+2212 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,263,"{""lowast"", ""8727""}, // asterisk operator, U+2217 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,264,"{""radic"", ""8730""}, // square root = radical sign,U+221A ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,265,"{""prop"", ""8733""}, // proportional to, U+221D ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,266,"{""infin"", ""8734""}, // infinity, U+221E ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,267,"{""ang"", ""8736""}, // angle, U+2220 ISOamso -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,268,"{""and"", ""8743""}, // logical and = wedge, U+2227 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,269,"{""or"", ""8744""}, // logical or = vee, U+2228 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,270,"{""cap"", ""8745""}, // intersection = cap, U+2229 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,271,"{""cup"", ""8746""}, // union = cup, U+222A ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,272,"{""int"", ""8747""}, // integral, U+222B ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,273,"{""there4"", ""8756""}, // therefore, U+2234 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,274,"{""sim"", ""8764""}, // tilde operator = varies with = similar to,U+223C ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,275,"// <!-- tilde operator is NOT the same character as the tilde, U+007E,although"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,276,// the same glyph might be used to represent both -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,277,"{""cong"", ""8773""}, // approximately equal to, U+2245 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,278,"{""asymp"", ""8776""}, // almost equal to = asymptotic to,U+2248 ISOamsr -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,279,"{""ne"", ""8800""}, // not equal to, U+2260 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,280,"{""equiv"", ""8801""}, // identical to, U+2261 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,281,"{""le"", ""8804""}, // less-than or equal to, U+2264 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,282,"{""ge"", ""8805""}, // greater-than or equal to,U+2265 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,283,"{""sub"", ""8834""}, // subset of, U+2282 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,284,"{""sup"", ""8835""}, // superset of, U+2283 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,285,"// <!-- note that nsup, 'not a superset of, U+2283' is not covered by the"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,286,"// Symbol font encoding and is not included. Should it be, for symmetry?"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,287,"// It is in ISOamsn --> <!ENTITY nsub"", ""8836""},"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,288,"// not a subset of, U+2284 ISOamsn -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,289,"{""sube"", ""8838""}, // subset of or equal to, U+2286 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,290,"{""supe"", ""8839""}, // superset of or equal to,U+2287 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,291,"{""oplus"", ""8853""}, // circled plus = direct sum,U+2295 ISOamsb -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,292,"{""otimes"", ""8855""}, // circled times = vector product,U+2297 ISOamsb -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,293,"{""perp"", ""8869""}, // up tack = orthogonal to = perpendicular,U+22A5 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,294,"{""sdot"", ""8901""}, // dot operator, U+22C5 ISOamsb -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,295,// <!-- dot operator is NOT the same character as U+00B7 middle dot -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,296,// <!-- Miscellaneous Technical -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,297,"{""lceil"", ""8968""}, // left ceiling = apl upstile,U+2308 ISOamsc -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,298,"{""rceil"", ""8969""}, // right ceiling, U+2309 ISOamsc -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,299,"{""lfloor"", ""8970""}, // left floor = apl downstile,U+230A ISOamsc -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,300,"{""rfloor"", ""8971""}, // right floor, U+230B ISOamsc -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,301,"{""lang"", ""9001""}, // left-pointing angle bracket = bra,U+2329 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,302,// <!-- lang is NOT the same character as U+003C 'less than' or U+2039 'single left-pointing angle quotation
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,303,// mark' -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,304,"{""rang"", ""9002""}, // right-pointing angle bracket = ket,U+232A ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,305,// <!-- rang is NOT the same character as U+003E 'greater than' or U+203A
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,306,// 'single right-pointing angle quotation mark' -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,307,// <!-- Geometric Shapes -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,308,"{""loz"", ""9674""}, // lozenge, U+25CA ISOpub -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,309,// <!-- Miscellaneous Symbols -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,310,"{""spades"", ""9824""}, // black spade suit, U+2660 ISOpub -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,311,// <!-- black here seems to mean filled as opposed to hollow -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,312,"{""clubs"", ""9827""}, // black club suit = shamrock,U+2663 ISOpub -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,313,"{""hearts"", ""9829""}, // black heart suit = valentine,U+2665 ISOpub -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,314,"{""diams"", ""9830""}, // black diamond suit, U+2666 ISOpub -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,316,// <!-- Latin Extended-A -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,317,"{""OElig"", ""338""}, // -- latin capital ligature OE,U+0152 ISOlat2 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,318,"{""oelig"", ""339""}, // -- latin small ligature oe, U+0153 ISOlat2 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,319,"// <!-- ligature is a misnomer, this is a separate character in some languages -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,320,"{""Scaron"", ""352""}, // -- latin capital letter S with caron,U+0160 ISOlat2 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,321,"{""scaron"", ""353""}, // -- latin small letter s with caron,U+0161 ISOlat2 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,322,"{""Yuml"", ""376""}, // -- latin capital letter Y with diaeresis,U+0178 ISOlat2 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,323,// <!-- Spacing Modifier Letters -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,324,"{""circ"", ""710""}, // -- modifier letter circumflex accent,U+02C6 ISOpub -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,325,"{""tilde"", ""732""}, // small tilde, U+02DC ISOdia -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,326,// <!-- General Punctuation -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,327,"{""ensp"", ""8194""}, // en space, U+2002 ISOpub -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,328,"{""emsp"", ""8195""}, // em space, U+2003 ISOpub -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,329,"{""thinsp"", ""8201""}, // thin space, U+2009 ISOpub -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,330,"{""zwnj"", ""8204""}, // zero width non-joiner,U+200C NEW RFC 2070 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,331,"{""zwj"", ""8205""}, // zero width joiner, U+200D NEW RFC 2070 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,332,"{""lrm"", ""8206""}, // left-to-right mark, U+200E NEW RFC 2070 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,333,"{""rlm"", ""8207""}, // right-to-left mark, U+200F NEW RFC 2070 -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,334,"{""ndash"", ""8211""}, // en dash, U+2013 ISOpub -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,335,"{""mdash"", ""8212""}, // em dash, U+2014 ISOpub -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,336,"{""lsquo"", ""8216""}, // left single quotation mark,U+2018 ISOnum -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,337,"{""rsquo"", ""8217""}, // right single quotation mark,U+2019 ISOnum -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,338,"{""sbquo"", ""8218""}, // single low-9 quotation mark, U+201A NEW -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,339,"{""ldquo"", ""8220""}, // left double quotation mark,U+201C ISOnum -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,340,"{""rdquo"", ""8221""}, // right double quotation mark,U+201D ISOnum -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,341,"{""bdquo"", ""8222""}, // double low-9 quotation mark, U+201E NEW -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,342,"{""dagger"", ""8224""}, // dagger, U+2020 ISOpub -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,343,"{""Dagger"", ""8225""}, // double dagger, U+2021 ISOpub -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,344,"{""permil"", ""8240""}, // per mille sign, U+2030 ISOtech -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,345,"{""lsaquo"", ""8249""}, // single left-pointing angle quotation mark,U+2039 ISO proposed -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,346,// <!-- lsaquo is proposed but not yet ISO standardized -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,347,"{""rsaquo"", ""8250""}, // single right-pointing angle quotation mark,U+203A ISO proposed -->"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,348,// <!-- rsaquo is proposed but not yet ISO standardized -->
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,349,"{""euro"", ""8364""}, // -- euro sign, U+20AC NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,351, <p>The set of entities supported by standard XML.</p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,353,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,354,* The set of entities supported by standard XML.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,355,* </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,356, <p>The set of entities supported by HTML 3.2.</p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,360,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,361,* The set of entities supported by HTML 3.2.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,362,* </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,361, <p>The set of entities supported by HTML 4.0.</p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,367,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,368,* The set of entities supported by HTML 4.0.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,369,* </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,383, <p>Fills the specified entities instance with HTML 40 entities.</p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,391,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,392,* Fills the specified entities instance with HTML 40 entities.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,393,* </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,385, @param entities the instance to be filled.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,395,* @param entities
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,396,*            the instance to be filled.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,395, <p>Add an entry to this entity map.</p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,406,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,407,* Add an entry to this entity map.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,408,* </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,397, @param name the entity name
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,398, @param value the entity value
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,410,* @param name
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,411,*            the entity name
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,412,* @param value
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,413,*            the entity value
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,403, <p>Returns the name of the entity identified by the specified value.</p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,418,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,419,* Returns the name of the entity identified by the specified value.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,420,* </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,405, @param value the value to locate
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,422,* @param value
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,423,*            the value to locate
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,411, <p>Returns the value of the entity identified by the specified name.</p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,429,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,430,* Returns the value of the entity identified by the specified name.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,431,* </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,413, @param name the name to locate
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,433,* @param name
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,434,*            the name to locate
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,494, Constructs a new instance of <code>TreeEntityMap</code>.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,516,* Constructs a new instance of <code>TreeEntityMap</code>.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,517, <p>Returns the lookup table for this entity map. The lookup table is created if it has not been
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,518, previously.</p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,540,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,541,* Returns the lookup table for this entity map. The lookup table is created if it has not been previously.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,542,* </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,530," <p>Creates an entity lookup table of LOOKUP_TABLE_SIZE elements, initialized with entity names.</p>"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,554,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,555,"* Creates an entity lookup table of LOOKUP_TABLE_SIZE elements, initialized with entity names."
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,556,* </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,555, Constructs a new instance of <code>ArrayEntityMap</code>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,556, specifying the size by which the array should grow.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,584,* Constructs a new instance of <code>ArrayEntityMap</code> specifying the size by which the array should
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,585,* grow.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,558, @param growBy array will be initialized to and will grow by this amount
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,587,* @param growBy
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,588,*            array will be initialized to and will grow by this amount
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,579, @param capacity size the array should be
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,609,* @param capacity
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,610,*            size the array should be
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,624,uper();
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,655,super();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,628, Constructs a new instance of <code>ArrayEntityMap</code>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,629, specifying the size by which the underlying array should grow.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,659,* Constructs a new instance of <code>ArrayEntityMap</code> specifying the size by which the underlying array
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,660,* should grow.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,631, @param growBy array will be initialized to and will grow by this amount
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,662,* @param growBy
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,663,*            array will be initialized to and will grow by this amount
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,638, Performs a binary search of the entity array for the specified key.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,639, This method is based on code in {@link java.util.Arrays}.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,670,* Performs a binary search of the entity array for the specified key. This method is based on code in
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,671,* {@link java.util.Arrays}.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,641, @param key the key to be found
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,673,* @param key
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,674,*            the key to be found
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,660,eturn -(low + 1);  // key not found.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,693,return -(low + 1); // key not found.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,670,eturn;    // note: this means you can't insert the same value twice
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,703,return; // note: this means you can't insert the same value twice
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,672,nsertAt = -(insertAt + 1);  // binarySearch returns it negative and off-by-one
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,705,insertAt = -(insertAt + 1); // binarySearch returns it negative and off-by-one
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,696, <p>Adds entities to this entity.</p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,729,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,730,* Adds entities to this entity.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,731,* </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,698, @param entityArray array of entities to be added
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,733,* @param entityArray
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,734,*            array of entities to be added
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,707, <p>Add an entity to this entity.</p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,743,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,744,* Add an entity to this entity.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,745,* </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,709, @param name name of the entity
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,710, @param value vale of the entity
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,747,* @param name
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,748,*            name of the entity
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,749,* @param value
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,750,*            vale of the entity
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,717, <p>Returns the name of the entity identified by the specified value.</p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,757,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,758,* Returns the name of the entity identified by the specified value.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,759,* </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,719, @param value the value to locate
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,761,* @param value
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,762,*            the value to locate
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,727, <p>Returns the value of the entity identified by the specified name.</p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,770,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,771,* Returns the value of the entity identified by the specified name.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,772,* </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,729, @param name the name to locate
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,774,* @param name
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,775,*            the name to locate
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,737, <p>Escapes the characters in a <code>String</code>.</p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,739," <p>For example, if you have called addEntity(&quot;foo&quot;, 0xA1),"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,740, escape(&quot;\u00A1&quot;) will return &quot;&amp;foo;&quot;</p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,742, @param str The <code>String</code> to escape.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,783,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,784,* Escapes the characters in a <code>String</code>.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,785,* </p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,787,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,788,"* For example, if you have called addEntity(&quot;foo&quot;, 0xA1), escape(&quot;\u00A1&quot;) will return"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,789,* &quot;&amp;foo;&quot;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,790,* </p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,792,* @param str
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,793,*            The <code>String</code> to escape.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,746,/todo: rewrite to use a Writer
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,747,tringBuffer buf = new StringBuffer(str.length() * 2);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,748,nt i;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,749,or (i = 0; i < str.length(); ++i) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,750,har ch = str.charAt(i);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,751,tring entityName = this.entityName(ch);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,752,f (entityName == null) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,753,f (ch > 0x7F) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,754,nt intValue = ch;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,755,"uf.append(""&#"");"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,756,uf.append(intValue);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,757,uf.append(';');
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,758, else {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,759,uf.append(ch);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,761, else {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,762,uf.append('&');
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,763,uf.append(entityName);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,764,uf.append(';');
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,767,eturn buf.toString();
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,797,StringWriter stringWriter = newStringWriter(str);
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,798,"this.escape(stringWriter, str);"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,799,return stringWriter.toString();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,771, <p>Escapes the characters in the <code>String</code> passed and writes the result
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,772, to the <code>Writer</code> passed. </p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,803,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,804,* Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,805,* passed.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,806,* </p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,808,* @param writer
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,809,*            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,810,* @param str
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,811,*            The <code>String</code> to escape. Assumed to be a non-null value.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,812,* @throws IOException
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,813,*             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,814,*             methods.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,774, @param writer The <code>Writer</code> to write the results of the escaping to.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,775,                            Assumed to be a non-null value.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,776, @param str The <code>String</code> to escape. Assumed to be a non-null value.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,777, @throws IOException when <code>Writer</code> passed throws the exception from
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,778,                                       calls to the {@link Writer#write(int)} methods.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,841,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,842,* Escapes the characters in the <code>String</code> passed and writes the result to the <code>StringWriter</code>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,843,* passed.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,844,* </p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,846,* @param writer
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,847,*            The <code>StringWriter</code> to write the results of the escaping to. Assumed to be a non-null
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,848,*            value.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,849,* @param str
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,850,*            The <code>String</code> to escape. Assumed to be a non-null value.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,852,* @see #escape(String)
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,853,* @see Writer
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,854,* @since 2.3
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,856,"public void escape(StringWriter writer, String str) {"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,857,try {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,858,"this.escape((Writer) writer, str);"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,859,} catch (IOException e) {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,860,"// This should never happen because ALL the StringWriter methods called by #escape(Writer, String) do not"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,861,// throw IOExceptions.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,862,throw new UnhandledException(e);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,805, <p>Unescapes the entities in a <code>String</code>.</p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,807," <p>For example, if you have called addEntity(&quot;foo&quot;, 0xA1),"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,808, unescape(&quot;&amp;foo;&quot;) will return &quot;\u00A1&quot;</p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,810, @param str The <code>String</code> to escape.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,867,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,868,* Unescapes the entities in a <code>String</code>.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,869,* </p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,871,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,872,"* For example, if you have called addEntity(&quot;foo&quot;, 0xA1), unescape(&quot;&amp;foo;&quot;) will return"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,873,* &quot;\u00A1&quot;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,874,* </p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,876,* @param str
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,877,*            The <code>String</code> to escape.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,814,nt firstAmp = str.indexOf('&');
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,815,f (firstAmp < 0) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,816,eturn str;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,881,// Make the StringWriter larger than the source String to avoid growing the writer.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,882,StringWriter stringWriter = newStringWriter(str);
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,883,"this.unescape(stringWriter, str);"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,884,return stringWriter.toString();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,819,tringBuffer buf = new StringBuffer(str.length());
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,820,"uf.append(str.substring(0, firstAmp));"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,821,or (int i = firstAmp; i < str.length(); ++i) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,822,har ch = str.charAt(i);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,823,f (ch == '&') {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,824,"nt semi = str.indexOf(';', i + 1);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,825,f (semi == -1) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,826,uf.append(ch);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,827,ontinue;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,829,"nt amph = str.indexOf('&', i + 1);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,830,f( amph != -1 && amph < semi ) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,831,/ Then the text looks like &...&...;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,832,uf.append(ch);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,833,ontinue;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,835,"tring entityName = str.substring(i + 1, semi);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,836,nt entityValue;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,837,f (entityName.length() == 0) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,838,ntityValue = -1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,839, else if (entityName.charAt(0) == '#') {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,840,f (entityName.length() == 1) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,841,ntityValue = -1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,842, else {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,843,har charAt1 = entityName.charAt(1);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,844,ry {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,845,f (charAt1 == 'x' || charAt1=='X') {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,846,"ntityValue = Integer.valueOf(entityName.substring(2), 16).intValue();"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,847, else {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,848,ntityValue = Integer.parseInt(entityName.substring(1));
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,850,f (entityValue > 0xFFFF) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,851,ntityValue = -1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,853, catch (NumberFormatException ex) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,854,ntityValue = -1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,857, else {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,858,ntityValue = this.entityValue(entityName);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,860,f (entityValue == -1) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,861,uf.append('&');
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,862,uf.append(entityName);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,863,uf.append(';');
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,864, else {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,865,uf.append((char) (entityValue));
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,867, = semi;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,868, else {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,869,uf.append(ch);
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,887,private StringWriter newStringWriter(String str) {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,888,// Make the StringWriter 10% larger than the source String to avoid growing the writer
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,889,return new StringWriter((int) (str.length() + (str.length() * 0.1)));
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,893,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,894,* Unescapes the escaped entities in the <code>String</code> passed and writes the result to the
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,895,* <code>StringWriter</code> passed.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,896,* </p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,898,* @param writer
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,899,*            The <code>StringWriter</code> to write the results to; assumed to be non-null.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,900,* @param string
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,901,*            The <code>String</code> to write the results to; assumed to be non-null.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,903,* @see #escape(String)
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,904,* @see Writer
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,905,* @since 2.3
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,907,"public void unescape(StringWriter writer, String string) {"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,908,try {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,909,"this.unescape((Writer) writer, string);"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,910,} catch (IOException e) {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,911,"// This should never happen because ALL the StringWriter methods called by #escape(Writer, String) do not"
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,912,// throw IOExceptions.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,913,throw new UnhandledException(e);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,872,eturn buf.toString();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,876, <p>Unescapes the escaped entities in the <code>String</code> passed and
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,877, writes the result to the <code>Writer</code> passed.</p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,918,* <p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,919,* Unescapes the escaped entities in the <code>String</code> passed and writes the result to the
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,920,* <code>Writer</code> passed.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,921,* </p>
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,923,* @param writer
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,924,*            The <code>Writer</code> to write the results to; assumed to be non-null.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,925,* @param string
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,926,*            The <code>String</code> to write the results to; assumed to be non-null.
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,927,* @throws IOException
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,928,*             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,929,*             methods.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,879, @param writer The <code>Writer</code> to write the results to; assumed to be non-null.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,880, @param string The <code>String</code> to write the results to; assumed to be non-null.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,881, @throws IOException when <code>Writer</code> passed throws the exception from
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,882,                                       calls to the {@link Writer#write(int)} methods.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,899,nt nextIdx = i+1;
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,946,int nextIdx = i + 1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,906,f( amphersandIdx != -1 && amphersandIdx < semiColonIdx ) {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,953,if (amphersandIdx != -1 && amphersandIdx < semiColonIdx) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,915,f (entityContent.charAt(0) == '#') { //escaped value content is an integer (decimal or hexidecimal)
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,916,f (entityContentLen > 1) {
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,962,if (entityContent.charAt(0) == '#') { // escaped value content is an integer (decimal or
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,963,// hexidecimal)
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,964,if (entityContentLen > 1) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,936, else { //escaped value content is an entity name
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,984,} else { // escaped value content is an entity name
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,948, = semiColonIdx; //move index up to the semi-colon
True,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,996,i = semiColonIdx; // move index up to the semi-colon
