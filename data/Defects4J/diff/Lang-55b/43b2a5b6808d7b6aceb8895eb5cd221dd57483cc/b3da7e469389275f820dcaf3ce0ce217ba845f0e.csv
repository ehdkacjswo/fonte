is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,99, <p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,100, A registry of objects used by <code>reflectionToString</code> methods to detect cyclical object references and
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,101, avoid infinite loops.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,102, </p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,104,rivate static ThreadLocal registry = new ThreadLocal() {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,105,rotected synchronized Object initialValue() {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,106,"/ The HashSet implementation is not synchronized,"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,107,/ which is just what we need here.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,108,eturn new HashSet();
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,113, <p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,114, Returns the registry of objects being traversed by the <code>reflectionToString</code> methods in the current
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,115, thread.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,116, </p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,118, @return Set the registry of objects being traversed
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,120,tatic Set getRegistry() {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,121,eturn (Set) registry.get();
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,125, <p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,126, Returns <code>true</code> if the registry contains the given object. Used by the reflection methods to avoid
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,127, infinite loops.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,128, </p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,130, @param value
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,131,            The object to lookup in the registry.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,132, @return boolean <code>true</code> if the registry contains the given object.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,134,tatic boolean isRegistered(Object value) {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,135,eturn getRegistry().contains(value);
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,139, <p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,140, Registers the given object. Used by the reflection methods to avoid infinite loops.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,141, </p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,143, @param value
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,144,            The object to register.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,146,tatic void register(Object value) {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,147,etRegistry().add(value);
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,466, <p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,467, Unregisters the given object.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,468, </p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,470, <p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,471, Used by the reflection methods to avoid infinite loops.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,472, </p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,474, @param value
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,475,            The object to unregister.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,477,tatic void unregister(Object value) {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,478,etRegistry().remove(value);
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,660,f (isRegistered(this.getObject())) {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,661,"/ The object has already been appended, therefore we have an"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,662,/ object cycle.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,663,/ Append a simple Object.toString style string. The field name is
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,664,/ already appended at this point.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,665,his.appendAsObjectToString(this.getObject());
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,593,if (clazz.isArray()) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,594,this.reflectionAppendArray(this.getObject());
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,668,ry {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,669,his.registerObject();
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,670,f (clazz.isArray()) {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,671,his.reflectionAppendArray(this.getObject());
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,672,eturn;
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,674,ield[] fields = clazz.getDeclaredFields();
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,675,"ccessibleObject.setAccessible(fields, true);"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,676,or (int i = 0; i < fields.length; i++) {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,677,ield field = fields[i];
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,678,tring fieldName = field.getName();
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,679,f (this.accept(field)) {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,680,ry {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,681,/ Warning: Field.get(Object) creates wrappers objects
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,682,/ for primitive types.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,683,bject fieldValue = this.getValue(field);
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,684,f (isRegistered(fieldValue) && !field.getType().isPrimitive()) {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,685,"/ A known field value has already been appended,"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,686,"/ therefore we have an object cycle,"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,687,/ append a simple Object.toString style string.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,688,"his.getStyle().appendFieldStart(this.getStringBuffer(), fieldName);"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,689,his.appendAsObjectToString(fieldValue);
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,690,"his.getStyle().appendFieldEnd(this.getStringBuffer(), fieldName);"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,691,/ The recursion out of
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,692,"/ builder.append(fieldName, fieldValue);"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,693,/ below will append the field
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,694,/ end marker.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,695, else {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,696,ry {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,697,his.registerObject();
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,698,"his.append(fieldName, fieldValue);"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,699, finally {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,700,his.unregisterObject();
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,703, catch (IllegalAccessException ex) {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,704,/ this can't happen. Would get a Security exception
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,705,/ instead
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,706,/ throw a runtime exception in case the impossible
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,707,/ happens.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,708,"hrow new InternalError(""Unexpected IllegalAccessException: "" + ex.getMessage());"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,597,Field[] fields = clazz.getDeclaredFields();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,598,"AccessibleObject.setAccessible(fields, true);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,599,for (int i = 0; i < fields.length; i++) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,600,Field field = fields[i];
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,601,String fieldName = field.getName();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,602,if (this.accept(field)) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,603,try {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,604,// Warning: Field.get(Object) creates wrappers objects
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,605,// for primitive types.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,606,Object fieldValue = this.getValue(field);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,607,"this.append(fieldName, fieldValue);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,608,} catch (IllegalAccessException ex) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,609,//this can't happen. Would get a Security exception
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,610,// instead
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,611,//throw a runtime exception in case the impossible
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,612,// happens.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,613,"throw new InternalError(""Unexpected IllegalAccessException: "" + ex.getMessage());"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,712, finally {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,713,his.unregisterObject();
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,793, <p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,794, Registers this builder's source object to avoid infinite loops when processing circular object references.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,795, </p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,797,oid registerObject() {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,798,egister(this.getObject());
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,876, <p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,877, Unregisters this builder's source object to avoid infinite loops when processing circular object references.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,878, </p>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,880,oid unregisterObject() {
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,881,nregister(this.getObject());
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,22,import java.util.HashSet;
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,24,import java.util.Set;
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,100,* <p>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,101,* A registry of objects used by <code>reflectionToString</code> methods
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,102,* to detect cyclical object references and avoid infinite loops.
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,103,* </p>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,105,private static ThreadLocal registry = new ThreadLocal() {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,106,protected synchronized Object initialValue() {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,107,"// The HashSet implementation is not synchronized,"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,108,// which is just what we need here.
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,109,return new HashSet();
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,114,* <p>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,115,* Returns the registry of objects being traversed by the <code>reflectionToString</code>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,116,* methods in the current thread.
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,117,* </p>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,119,* @return Set the registry of objects being traversed
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,121,static Set getRegistry() {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,122,return (Set) registry.get();
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,126,* <p>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,127,* Returns <code>true</code> if the registry contains the given object.
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,128,* Used by the reflection methods to avoid infinite loops.
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,129,* </p>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,131,* @param value
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,132,*                  The object to lookup in the registry.
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,133,* @return boolean <code>true</code> if the registry contains the given
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,134,*             object.
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,136,static boolean isRegistered(Object value) {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,137,return getRegistry().contains(value);
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,141,* <p>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,142,* Registers the given object. Used by the reflection methods to avoid
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,143,* infinite loops.
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,144,* </p>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,146,* @param value
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,147,*                  The object to register.
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,149,static void register(Object value) {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,150,if (value != null) {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,151,getRegistry().add(value);
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,156,* <p>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,157,* Unregisters the given object.
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,158,* </p>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,160,* <p>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,161,* Used by the reflection methods to avoid infinite loops.
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,162,* </p>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,164,* @param value
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,165,*                  The object to unregister.
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,167,static void unregister(Object value) {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,168,getRegistry().remove(value);
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,349,unregister(object);
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,346,f (ReflectionToStringBuilder.isRegistered(value)
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,421,if (isRegistered(value)
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,348,"bjectUtils.appendIdentityToString(buffer, value);"
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,350, else if (value instanceof Collection) {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,423,"appendCyclicObject(buffer, fieldName, value);"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,424,return;
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,426,register(value);
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,427,try {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,428,if (value instanceof Collection) {
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,428,f (detail) {
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,429,"ppendDetail(buffer, fieldName, value);"
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,430, else {
False,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,431,"ppendSummary(buffer, fieldName, value);"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,506,if (detail) {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,507,"appendDetail(buffer, fieldName, value);"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,508,} else {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,509,"appendSummary(buffer, fieldName, value);"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,512,} finally {
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,513,unregister(value);
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,518,* <p>Append to the <code>toString</code> an <code>Object</code>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,519,* value that has been detected to participate in a cycle. This
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,520,* implementation will print the standard string value of the value.</p>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,522,* @param buffer  the <code>StringBuffer</code> to populate
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,523,"* @param fieldName  the field name, typically not used as already appended"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,524,"* @param value  the value to add to the <code>toString</code>,"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,525,*  not <code>null</code>
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,527,* @since 2.2
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,529,"protected void appendCyclicObject(StringBuffer buffer, String fieldName, Object value) {"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,530,"ObjectUtils.appendIdentityToString(buffer, value);"
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,1401,register(object);
True,src/java/org/apache/commons/lang/builder/ToStringStyle.java,src/java/org/apache/commons/lang/builder/ToStringStyle.java,1418,register(object);
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,171,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,171,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,180,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,180,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,189,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,189,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,198,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,198,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,207,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,207,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,216,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,216,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,225,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,225,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,234,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,234,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,243,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,243,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,254,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,254,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,264,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,264,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,273,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,273,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,282,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,282,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,291,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,291,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,300,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,300,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,309,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,309,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,319,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,319,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,329,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,329,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,356,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,356,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,397,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,397,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,414,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,414,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,436,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,436,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,517,ssertTrue(ReflectionToStringBuilder.getRegistry().isEmpty());
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,517,assertTrue(ToStringStyle.getRegistry().isEmpty());
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,519,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,519,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,529,ssertTrue(ReflectionToStringBuilder.getRegistry().isEmpty());
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,529,assertTrue(ToStringStyle.getRegistry().isEmpty());
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,531,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,531,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,542,ssertTrue(ReflectionToStringBuilder.getRegistry().isEmpty());
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,542,assertTrue(ToStringStyle.getRegistry().isEmpty());
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,544,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,544,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,561,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,561,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,589,his.validateEmptyReflectionRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,589,this.validateEmptyToStringStyleRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,592,oid validateEmptyReflectionRegistry() {
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,593,ssertTrue(ReflectionToStringBuilder.getRegistry().isEmpty());
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,592,void validateEmptyToStringStyleRegistry() {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,593,if (!ToStringStyle.getRegistry().isEmpty()) {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,594,System.out.println(ToStringStyle.getRegistry());
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,597,assertTrue(ToStringStyle.getRegistry().isEmpty());
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,838,public void testObjectCycle() {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,839,ObjectCycle a = new ObjectCycle();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,840,ObjectCycle b = new ObjectCycle();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,841,a.obj = b;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,842,b.obj = a;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,844,"String expected = toBaseString(a) + ""["" + toBaseString(b) + ""["" + toBaseString(a) + ""]]"";"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,845,"assertEquals(expected, a.toString());"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,846,validateEmptyToStringStyleRegistry();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,849,static class ObjectCycle {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,850,Object obj;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,852,public String toString() {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,853,return new ToStringBuilder(this).append(obj).toString();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,951,* Unit test for #36061
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,952,ublic void testObjectCycle() {
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,953,bjectCycle a = new ObjectCycle();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,954,bjectCycle b = new ObjectCycle();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,955,.obj = b;
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,956,.obj = a;
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,958,"tring expected = toBaseString(a) + ""["" + toBaseString(b) + ""["" + toBaseString(a) + ""]]"";"
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,959,"ssertEquals(expected, a.toString());"
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,960,alidateEmptyReflectionRegistry();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,963,tatic class ObjectCycle {
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,964,bject obj;
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,966,ublic String toString() {
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,967,eturn new ToStringBuilder(this).append(obj).toString();
