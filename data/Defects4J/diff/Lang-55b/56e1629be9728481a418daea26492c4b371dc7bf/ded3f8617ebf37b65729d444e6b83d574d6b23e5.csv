is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,63,* @author Matthew Hawthorne
False,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,64," @version $Id: BooleanUtils.java,v 1.5 2003/06/24 21:14:50 scolebourne Exp $"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,65,"* @version $Id: BooleanUtils.java,v 1.6 2003/06/28 18:16:03 scolebourne Exp $"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,564,// xor methods
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,567,* Performs an xor on a set of booleans.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,569,* @param array  an array of <code>boolean<code>s
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,570,* @return <code>true</code> if the xor is successful.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,571,* @throws NullArgumentException if <code>array</code> is <code>null</code>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,572,* @throws IllegalArgumentException if <code>array</code> is empty.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,574,public static boolean xor(boolean[] array) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,575,// Validates input
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,576,if (array == null) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,577,"throw new NullArgumentException(""Array"");"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,578,} else if (array.length == 0) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,579,"throw new IllegalArgumentException(""Array is empty"");"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,582,"// Loops through array, comparing each item"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,583,int trueCount = 0;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,584,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,585,"// If item is true, and trueCount is < 1, increments count"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,586,"// Else, xor fails"
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,587,if (array[i]) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,588,if (trueCount < 1) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,589,trueCount++;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,590,} else {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,591,return false;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,596,// Returns true if there was exactly 1 true item
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,597,return trueCount == 1;
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,601,* Performs an xor on an array of Booleans.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,603,* @param array  an array of <code>Boolean<code>s
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,604,* @return <code>true</code> if the xor is successful.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,605,* @throws NullPointerException if <code>array</code> contains a <code>null</code>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,606,* @throws NullArgumentException if <code>array</code> is <code>null</code>
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,607,* @throws IllegalArgumentException if <code>array</code> is empty.
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,609,public static Boolean xor(Boolean[] array) {
True,src/java/org/apache/commons/lang/BooleanUtils.java,src/java/org/apache/commons/lang/BooleanUtils.java,610,return new Boolean(xor(ArrayUtils.toPrimitive(array)));
False,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,65," @version $Id: BooleanUtilsTest.java,v 1.3 2003/03/23 21:47:30 scolebourne Exp $"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,65,* @author Matthew Hawthorne
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,66,"* @version $Id: BooleanUtilsTest.java,v 1.4 2003/06/28 18:16:03 scolebourne Exp $"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,341,//  testXor
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,343,public void testXor_primitive_nullInput() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,344,final boolean[] b = null;
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,345,try {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,346,BooleanUtils.xor(b);
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,347,"fail(""Exception was not thrown for null input."");"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,348,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,351,public void testXor_primitive_emptyInput() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,352,try {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,353,BooleanUtils.xor(new boolean[] {});
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,354,"fail(""Exception was not thrown for empty input."");"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,355,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,358,public void testXor_primitive_validInput_2items() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,359,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,360,"""True result for (true, true)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,361,"! BooleanUtils.xor(new boolean[] { true, true }));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,363,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,364,"""True result for (false, false)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,365,"! BooleanUtils.xor(new boolean[] { false, false }));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,367,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,368,"""False result for (true, false)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,369,"BooleanUtils.xor(new boolean[] { true, false }));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,371,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,372,"""False result for (false, true)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,373,"BooleanUtils.xor(new boolean[] { false, true }));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,376,public void testXor_primitive_validInput_3items() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,377,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,378,"""False result for (false, false, true)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,379,"BooleanUtils.xor(new boolean[] { false, false, true }));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,381,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,382,"""False result for (false, true, false)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,383,"BooleanUtils.xor(new boolean[] { false, true, false }));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,385,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,386,"""False result for (true, false, false)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,387,"BooleanUtils.xor(new boolean[] { true, false, false }));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,389,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,390,"""True result for (true, true, true)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,391,"! BooleanUtils.xor(new boolean[] { true, true, true }));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,393,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,394,"""True result for (false, false)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,395,"! BooleanUtils.xor(new boolean[] { false, false, false }));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,397,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,398,"""True result for (true, true, false)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,399,"! BooleanUtils.xor(new boolean[] { true, true, false }));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,401,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,402,"""True result for (true, false, true)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,403,"! BooleanUtils.xor(new boolean[] { true, false, true }));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,405,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,406,"""False result for (false, true, true)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,407,"! BooleanUtils.xor(new boolean[] { false, true, true }));"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,410,public void testXor_object_nullInput() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,411,final Boolean[] b = null;
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,412,try {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,413,BooleanUtils.xor(b);
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,414,"fail(""Exception was not thrown for null input."");"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,415,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,418,public void testXor_object_emptyInput() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,419,try {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,420,BooleanUtils.xor(new Boolean[] {});
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,421,"fail(""Exception was not thrown for empty input."");"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,422,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,425,public void testXor_object_validInput_2items() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,426,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,427,"""True result for (true, true)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,428,! BooleanUtils
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,429,".xor(new Boolean[] { Boolean.TRUE, Boolean.TRUE })"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,430,.booleanValue());
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,432,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,433,"""True result for (false, false)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,434,! BooleanUtils
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,435,".xor(new Boolean[] { Boolean.FALSE, Boolean.FALSE })"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,436,.booleanValue());
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,438,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,439,"""False result for (true, false)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,440,BooleanUtils
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,441,".xor(new Boolean[] { Boolean.TRUE, Boolean.FALSE })"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,442,.booleanValue());
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,444,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,445,"""False result for (false, true)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,446,BooleanUtils
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,447,".xor(new Boolean[] { Boolean.FALSE, Boolean.TRUE })"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,448,.booleanValue());
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,451,public void testXor_object_validInput_3items() {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,452,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,453,"""False result for (false, false, true)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,454,BooleanUtils
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,455,.xor(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,456,new Boolean[] {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,457,"Boolean.FALSE,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,458,"Boolean.FALSE,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,459,Boolean.TRUE })
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,460,.booleanValue());
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,462,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,463,"""False result for (false, true, false)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,464,BooleanUtils
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,465,.xor(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,466,new Boolean[] {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,467,"Boolean.FALSE,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,468,"Boolean.TRUE,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,469,Boolean.FALSE })
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,470,.booleanValue());
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,472,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,473,"""False result for (true, false, false)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,474,BooleanUtils
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,475,.xor(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,476,new Boolean[] {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,477,"Boolean.TRUE,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,478,"Boolean.FALSE,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,479,Boolean.FALSE })
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,480,.booleanValue());
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,482,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,483,"""True result for (true, true, true)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,484,! BooleanUtils
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,485,".xor(new Boolean[] { Boolean.TRUE, Boolean.TRUE, Boolean.TRUE })"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,486,.booleanValue());
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,488,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,489,"""True result for (false, false)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,490,! BooleanUtils.xor(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,491,new Boolean[] {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,492,"Boolean.FALSE,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,493,"Boolean.FALSE,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,494,Boolean.FALSE })
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,495,.booleanValue());
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,497,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,498,"""True result for (true, true, false)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,499,! BooleanUtils.xor(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,500,new Boolean[] {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,501,"Boolean.TRUE,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,502,"Boolean.TRUE,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,503,Boolean.FALSE })
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,504,.booleanValue());
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,506,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,507,"""True result for (true, false, true)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,508,! BooleanUtils.xor(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,509,new Boolean[] {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,510,"Boolean.TRUE,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,511,"Boolean.FALSE,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,512,Boolean.TRUE })
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,513,.booleanValue());
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,515,assertTrue(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,516,"""False result for (false, true, true)"","
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,517,! BooleanUtils.xor(
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,518,new Boolean[] {
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,519,"Boolean.FALSE,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,520,"Boolean.TRUE,"
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,521,Boolean.TRUE })
True,src/test/org/apache/commons/lang/BooleanUtilsTest.java,src/test/org/apache/commons/lang/BooleanUtilsTest.java,522,.booleanValue());
