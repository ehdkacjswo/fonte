is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,27,import java.util.concurrent.atomic.AtomicBoolean;
True,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,32,* @NotThreadSafe
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,34,rivate volatile byte[] data;
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,35,rivate volatile boolean closed;
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,36,"rivate volatile int position, size;"
True,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,36,private byte[] data;
True,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,37,private final AtomicBoolean closed = new AtomicBoolean();
True,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,38,"private int position, size;"
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,82,nt pos = position;
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,83,nt sz = size;
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,85,nt possible = sz - pos;
True,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,85,int possible = size - position;
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,89,"uf.put(data, pos, wanted);"
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,90,osition = pos + wanted;
True,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,89,"buf.put(data, position, wanted);"
True,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,90,position += wanted;
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,96,losed = true;
True,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,96,closed.set(true);
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,101,eturn !closed;
True,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,101,return !closed.get();
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,109,nt pos = position;
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,110,nt sz = data.length;
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,112,nt possibleWithoutResize = sz - pos;
True,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,110,int possibleWithoutResize = size - position;
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,114,esize(pos + wanted);
True,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,112,resize(position + wanted);
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,116,".get(data, pos, wanted);"
False,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,117,osition = pos + wanted;
True,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,114,"b.get(data, position, wanted);"
True,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,src/main/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannel.java,115,position += wanted;
