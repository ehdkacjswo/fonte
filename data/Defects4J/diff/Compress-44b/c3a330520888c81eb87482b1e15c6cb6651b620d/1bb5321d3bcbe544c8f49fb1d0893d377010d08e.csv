is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,43,rotected File dir;
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,45,rotected void setUp() throws Exception {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,46,"ir = File.createTempFile(""dir"", """");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,47,ir.delete();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,48,ir.mkdir();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,50,"ddURL(new File(""src/test/resources"").toURL());"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,53,rotected File getFile( String path ) {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,54,eturn new File(getClass().getClassLoader().getResource(path).getFile());
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,57,rotected void tearDown() throws Exception {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,58,ir.delete();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,59,ir = null;
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,63, Adds a URL to the classpath. This method is necessary when running
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,64, junit tests from within eclipse.
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,65, @param url the url to add
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,66, @throws Exception if an error occurs
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,68,ublic void addURL(URL url) throws Exception {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,69,RLClassLoader classLoader = (URLClassLoader) ClassLoader.getSystemClassLoader();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,70,lass clazz = URLClassLoader.class;
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,72,"ethod method= clazz.getDeclaredMethod(""addURL"", new Class[] { URL.class });"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,73,ethod.setAccessible(true);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,74,"ethod.invoke(classLoader, new Object[] { url });"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,78, Creates an archive of 5 textbased files in several directories.
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,79," The archivername is the factory identifier for the archiver, for example"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,80," zip, tar, cpio, jar, ar."
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,81, The archive is created as a temp file.
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,83, The archive contains the following files:
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,84, <ul>
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,85, <li>testdata/test1.xml</li>
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,86, <li>testdata/test2.xml</li>
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,87, <li>test/test3.xml</li>
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,88, <li>bla/test4.xml</li>
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,89, <li>test.txt</li>
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,90, <li>something/bla</li>
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,91, <li>test with spaces.txt</li>
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,92, </ul>
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,94, @param archivename the identifier of this archive
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,95, @return the newly created file
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,96, @throws Exception in case something goes wrong
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,98,rotected File createArchive(String archivename) throws Exception {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,99,rchiveOutputStream out = null;
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,100,rchiveInputStream ais = null;
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,101,ry {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,102,"ile temp = File.createTempFile(""test"", ""."" + archivename);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,104,inal OutputStream stream = new FileOutputStream(temp);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,105,"ut = new ArchiveStreamFactory().createArchiveOutputStream(archivename, stream);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,107,"inal File file1 = getFile(""test1.xml"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,108,"inal File file2 = getFile(""test2.xml"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,109,"inal File file3 = getFile(""test3.xml"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,110,"inal File file4 = getFile(""test4.xml"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,111,"inal File file5 = getFile(""test.txt"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,112,"inal File file6 = getFile(""test with spaces.txt"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,114,"ipArchiveEntry entry = new ZipArchiveEntry(""testdata/test1.xml"");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,115,ntry.setSize(file1.length());
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,116,ut.putArchiveEntry(entry);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,117,"OUtils.copy(new FileInputStream(file1), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,118,ut.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,120,"ut.putArchiveEntry(new ZipArchiveEntry(""testdata/test2.xml""));"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,121,"OUtils.copy(new FileInputStream(file2), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,122,ut.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,124,"ut.putArchiveEntry(new ZipArchiveEntry(""test/test3.xml""));"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,125,"OUtils.copy(new FileInputStream(file3), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,126,ut.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,128,"ut.putArchiveEntry(new ZipArchiveEntry(""bla/test4.xml""));"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,129,"OUtils.copy(new FileInputStream(file4), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,130,ut.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,132,"ut.putArchiveEntry(new ZipArchiveEntry(""test.txt""));"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,133,"OUtils.copy(new FileInputStream(file5), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,134,ut.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,136,"ut.putArchiveEntry(new ZipArchiveEntry(""something/bla""));"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,137,"OUtils.copy(new FileInputStream(file6), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,138,ut.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,140,"ut.putArchiveEntry(new ZipArchiveEntry(""test with spaces.txt""));"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,141,"OUtils.copy(new FileInputStream(file6), out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,142,ut.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,144,eturn temp;
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,145, finally {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,146,f(out != null) out.close();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,147,f(ais != null) ais.close();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,152, Checks if an archive contains all expected files.
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,154, @param archive
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,155, 				the archive to check
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,156, @param expected
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,157, 				a list with expected string filenames
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,158, @throws Exception
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,160,"rotected void checkArchiveContent(File archive, List expected)"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,161,hrows Exception {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,162,inal InputStream is = new FileInputStream(archive);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,163,inal BufferedInputStream buf = new BufferedInputStream(is);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,164,inal ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(buf);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,166,"ile result = File.createTempFile(""dir-result"", """");"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,167,esult.delete();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,168,esult.mkdir();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,170,rchiveEntry entry = null;
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,171,hile((entry = (ArchiveEntry)in.getNextEntry()) != null) {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,172,"ile outfile = new File(result.getCanonicalPath() + ""/result/"" + entry.getName());"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,173,utfile.getParentFile().mkdirs();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,174,utputStream out = new FileOutputStream(outfile);
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,175,f(!expected.remove(entry.getName())) {
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,176,"ail(""unexpected entry: "" + entry.getName());"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,178,"OUtils.copy(in, out);"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,179,ut.close();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,181,n.close();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,182,"ssertEquals(expected.size(), 0);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,43,protected File dir;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,45,protected void setUp() throws Exception {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,46,"dir = File.createTempFile(""dir"", """");"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,47,dir.delete();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,48,dir.mkdir();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,50,"addURL(new File(""src/test/resources"").toURL());"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,53,protected File getFile( String path ) {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,54,return new File(getClass().getClassLoader().getResource(path).getFile());
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,57,protected void tearDown() throws Exception {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,58,dir.delete();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,59,dir = null;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,63,* Adds a URL to the classpath. This method is necessary when running
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,64,* junit tests from within eclipse.
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,65,* @param url the url to add
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,66,* @throws Exception if an error occurs
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,68,public void addURL(URL url) throws Exception {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,69,URLClassLoader classLoader = (URLClassLoader) ClassLoader.getSystemClassLoader();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,70,Class clazz = URLClassLoader.class;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,72,"Method method= clazz.getDeclaredMethod(""addURL"", new Class[] { URL.class });"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,73,method.setAccessible(true);
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,74,"method.invoke(classLoader, new Object[] { url });"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,78,* Creates an archive of 5 textbased files in several directories.
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,79,"* The archivername is the factory identifier for the archiver, for example"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,80,"* zip, tar, cpio, jar, ar."
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,81,* The archive is created as a temp file.
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,83,* The archive contains the following files:
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,84,* <ul>
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,85,* <li>testdata/test1.xml</li>
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,86,* <li>testdata/test2.xml</li>
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,87,* <li>test/test3.xml</li>
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,88,* <li>bla/test4.xml</li>
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,89,* <li>test.txt</li>
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,90,* <li>something/bla</li>
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,91,* <li>test with spaces.txt</li>
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,92,* </ul>
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,94,* @param archivename the identifier of this archive
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,95,* @return the newly created file
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,96,* @throws Exception in case something goes wrong
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,98,protected File createArchive(String archivename) throws Exception {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,99,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,100,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,101,try {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,102,"File temp = File.createTempFile(""test"", ""."" + archivename);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,104,final OutputStream stream = new FileOutputStream(temp);
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,105,"out = new ArchiveStreamFactory().createArchiveOutputStream(archivename, stream);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,107,"final File file1 = getFile(""test1.xml"");"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,108,"final File file2 = getFile(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,109,"final File file3 = getFile(""test3.xml"");"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,110,"final File file4 = getFile(""test4.xml"");"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,111,"final File file5 = getFile(""test.txt"");"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,112,"final File file6 = getFile(""test with spaces.txt"");"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,114,"ZipArchiveEntry entry = new ZipArchiveEntry(""testdata/test1.xml"");"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,115,entry.setSize(file1.length());
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,116,out.putArchiveEntry(entry);
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,117,"IOUtils.copy(new FileInputStream(file1), out);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,118,out.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,120,"out.putArchiveEntry(new ZipArchiveEntry(""testdata/test2.xml""));"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,121,"IOUtils.copy(new FileInputStream(file2), out);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,122,out.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,124,"out.putArchiveEntry(new ZipArchiveEntry(""test/test3.xml""));"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,125,"IOUtils.copy(new FileInputStream(file3), out);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,126,out.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,128,"out.putArchiveEntry(new ZipArchiveEntry(""bla/test4.xml""));"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,129,"IOUtils.copy(new FileInputStream(file4), out);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,130,out.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,132,"out.putArchiveEntry(new ZipArchiveEntry(""test.txt""));"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,133,"IOUtils.copy(new FileInputStream(file5), out);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,134,out.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,136,"out.putArchiveEntry(new ZipArchiveEntry(""something/bla""));"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,137,"IOUtils.copy(new FileInputStream(file6), out);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,138,out.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,140,"out.putArchiveEntry(new ZipArchiveEntry(""test with spaces.txt""));"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,141,"IOUtils.copy(new FileInputStream(file6), out);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,142,out.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,144,return temp;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,145,} finally {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,146,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,147,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,152,* Checks if an archive contains all expected files.
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,154,* @param archive
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,155,*                              the archive to check
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,156,* @param expected
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,157,*                              a list with expected string filenames
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,158,* @throws Exception
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,160,"protected void checkArchiveContent(File archive, List expected)"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,161,throws Exception {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,162,final InputStream is = new FileInputStream(archive);
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,163,final BufferedInputStream buf = new BufferedInputStream(is);
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,164,final ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(buf);
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,166,"File result = File.createTempFile(""dir-result"", """");"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,167,result.delete();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,168,result.mkdir();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,170,ArchiveEntry entry = null;
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,171,while((entry = (ArchiveEntry)in.getNextEntry()) != null) {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,172,"File outfile = new File(result.getCanonicalPath() + ""/result/"" + entry.getName());"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,173,outfile.getParentFile().mkdirs();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,174,OutputStream out = new FileOutputStream(outfile);
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,175,if(!expected.remove(entry.getName())) {
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,176,"fail(""unexpected entry: "" + entry.getName());"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,178,"IOUtils.copy(in, out);"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,179,out.close();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,181,in.close();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,182,"assertEquals(expected.size(), 0);"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,36,ublic void testDetection() throws Exception {
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,37,inal ArchiveStreamFactory factory = new ArchiveStreamFactory();
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,36,public void testDetection() throws Exception {
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,37,final ArchiveStreamFactory factory = new ArchiveStreamFactory();
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,39,inal ArchiveInputStream ar = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,40,ew BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,41,"ew File(getClass().getClassLoader().getResource(""bla.ar"").getFile()))));"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,42,ssertNotNull(ar);
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,43,ssertTrue(ar instanceof ArArchiveInputStream);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,39,final ArchiveInputStream ar = factory.createArchiveInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,40,new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,41,"new File(getClass().getClassLoader().getResource(""bla.ar"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,42,assertNotNull(ar);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,43,assertTrue(ar instanceof ArArchiveInputStream);
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,45,inal ArchiveInputStream tar = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,46,ew BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,47,"ew File(getClass().getClassLoader().getResource(""bla.tar"").getFile()))));"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,48,ssertNotNull(tar);
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,49,ssertTrue(tar instanceof TarArchiveInputStream);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,45,final ArchiveInputStream tar = factory.createArchiveInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,46,new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,47,"new File(getClass().getClassLoader().getResource(""bla.tar"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,48,assertNotNull(tar);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,49,assertTrue(tar instanceof TarArchiveInputStream);
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,51,inal ArchiveInputStream zip = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,52,ew BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,53,"ew File(getClass().getClassLoader().getResource(""bla.zip"").getFile()))));"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,54,ssertNotNull(zip);
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,55,ssertTrue(zip instanceof ZipArchiveInputStream);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,51,final ArchiveInputStream zip = factory.createArchiveInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,52,new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,53,"new File(getClass().getClassLoader().getResource(""bla.zip"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,54,assertNotNull(zip);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,55,assertTrue(zip instanceof ZipArchiveInputStream);
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,57,inal ArchiveInputStream jar = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,58,ew BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,59,"ew File(getClass().getClassLoader().getResource(""bla.jar"").getFile()))));"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,60,ssertNotNull(jar);
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,61,ssertTrue(jar instanceof JarArchiveInputStream);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,57,final ArchiveInputStream jar = factory.createArchiveInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,58,new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,59,"new File(getClass().getClassLoader().getResource(""bla.jar"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,60,assertNotNull(jar);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,61,assertTrue(jar instanceof JarArchiveInputStream);
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,63,inal ArchiveInputStream cpio = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,64,ew BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,65,"ew File(getClass().getClassLoader().getResource(""bla.cpio"").getFile()))));"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,66,ssertNotNull(cpio);
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,67,ssertTrue(cpio instanceof CpioArchiveInputStream);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,63,final ArchiveInputStream cpio = factory.createArchiveInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,64,new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,65,"new File(getClass().getClassLoader().getResource(""bla.cpio"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,66,assertNotNull(cpio);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,67,assertTrue(cpio instanceof CpioArchiveInputStream);
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,69,/		final ArchiveInputStream tgz = factory.createArchiveInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,70,/				new BufferedInputStream(new FileInputStream(
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,71,"/						new File(getClass().getClassLoader().getResource(""bla.tgz"").getFile()))));"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,72,/		assertTrue(tgz instanceof TarArchiveInputStream);
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,69,//              final ArchiveInputStream tgz = factory.createArchiveInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,70,//                              new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,71,"//                                              new File(getClass().getClassLoader().getResource(""bla.tgz"").getFile()))));"
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,72,//              assertTrue(tgz instanceof TarArchiveInputStream);
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,35, Archives 2 files and unarchives it again. If the file length of result
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,36," and source is the same, it looks like the operations have worked"
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,37, @throws Exception
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,39,ublic void testZipArchiveCreation() throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,40,/ Archive
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,41,"inal File output = new File(dir, ""bla.zip"");"
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,42,"inal File file1 = getFile(""test1.xml"");"
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,43,"inal File file2 = getFile(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,35,* Archives 2 files and unarchives it again. If the file length of result
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,36,"* and source is the same, it looks like the operations have worked"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,37,* @throws Exception
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,39,public void testZipArchiveCreation() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,40,// Archive
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,41,"final File output = new File(dir, ""bla.zip"");"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,42,"final File file1 = getFile(""test1.xml"");"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,43,"final File file2 = getFile(""test2.xml"");"
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,46,inal OutputStream out = new FileOutputStream(output);
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,47,"inal ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", out);"
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,49,"s.putArchiveEntry(new ZipArchiveEntry(""testdata/test1.xml""));"
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,50,"OUtils.copy(new FileInputStream(file1), os);"
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,51,s.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,53,"s.putArchiveEntry(new ZipArchiveEntry(""testdata/test2.xml""));"
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,54,"OUtils.copy(new FileInputStream(file2), os);"
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,55,s.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,56,s.close();
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,59,/ Unarchive the same
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,60,ist results = new ArrayList();
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,63,inal InputStream is = new FileInputStream(output);
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,64,"inal ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,66,"ile result = File.createTempFile(""dir-result"", """");"
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,67,esult.delete();
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,68,esult.mkdir();
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,70,ipArchiveEntry entry = null;
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,71,hile((entry = (ZipArchiveEntry)in.getNextEntry()) != null) {
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,72,"ile outfile = new File(result.getCanonicalPath() + ""/result/"" + entry.getName());"
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,73,utfile.getParentFile().mkdirs();
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,74,utputStream out = new FileOutputStream(outfile);
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,75,"OUtils.copy(in, out);"
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,76,ut.close();
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,77,esults.add(outfile);
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,79,n.close();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,46,final OutputStream out = new FileOutputStream(output);
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,47,"final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", out);"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,49,"os.putArchiveEntry(new ZipArchiveEntry(""testdata/test1.xml""));"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,50,"IOUtils.copy(new FileInputStream(file1), os);"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,51,os.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,53,"os.putArchiveEntry(new ZipArchiveEntry(""testdata/test2.xml""));"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,54,"IOUtils.copy(new FileInputStream(file2), os);"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,55,os.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,56,os.close();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,59,// Unarchive the same
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,60,List results = new ArrayList();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,63,final InputStream is = new FileInputStream(output);
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,64,"final ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,66,"File result = File.createTempFile(""dir-result"", """");"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,67,result.delete();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,68,result.mkdir();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,70,ZipArchiveEntry entry = null;
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,71,while((entry = (ZipArchiveEntry)in.getNextEntry()) != null) {
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,72,"File outfile = new File(result.getCanonicalPath() + ""/result/"" + entry.getName());"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,73,outfile.getParentFile().mkdirs();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,74,OutputStream out = new FileOutputStream(outfile);
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,75,"IOUtils.copy(in, out);"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,76,out.close();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,77,results.add(outfile);
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,79,in.close();
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,94,"inal File input = getFile(""bla.zip"");"
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,94,"final File input = getFile(""bla.zip"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,43," Tries to delete the folder ""bla"" from a zip file."
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,44," This should result in the deletion of bla/*, which"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,45, actually means bla/test4.xml should be removed from this zipfile.
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,46," The file something/bla (without ending, named like the folder) should"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,47, not be deleted.
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,49, @throws Exception
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,51,ublic void XtestDeleteDir() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,52,"ile input = this.createArchive(""zip"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,54,rchiveOutputStream out = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,55,rchiveInputStream ais = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,56,"ile result = File.createTempFile(""test"", "".zip"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,57,ry {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,59,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,60,"is = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,62,"ut = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", new FileOutputStream(result));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,64,hangeSet changes = new ChangeSet();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,65,"hanges.delete(""bla"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,66,"hanges.perform(ais, out);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,68, finally {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,69,f(out != null) out.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,70,f(ais != null) ais.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,73,ist expected = new ArrayList();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,74,"xpected.add(""testdata/test1.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,75,"xpected.add(""testdata/test2.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,76,"xpected.add(""test/test3.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,77,"xpected.add(""test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,78,"xpected.add(""something/bla"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,79,"xpected.add(""test with spaces.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,81,"his.checkArchiveContent(result, expected);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,85, Tries to delete a directory with a file and adds
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,86, a new directory with a new file and with the same name.
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,43,"* Tries to delete the folder ""bla"" from a zip file."
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,44,"* This should result in the deletion of bla/*, which"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,45,* actually means bla/test4.xml should be removed from this zipfile.
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,46,"* The file something/bla (without ending, named like the folder) should"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,47,* not be deleted.
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,49,* @throws Exception
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,51,public void XtestDeleteDir() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,52,"File input = this.createArchive(""zip"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,54,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,55,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,56,"File result = File.createTempFile(""test"", "".zip"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,57,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,59,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,60,"ais = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,62,"out = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", new FileOutputStream(result));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,64,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,65,"changes.delete(""bla"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,66,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,68,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,69,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,70,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,73,List expected = new ArrayList();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,74,"expected.add(""testdata/test1.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,75,"expected.add(""testdata/test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,76,"expected.add(""test/test3.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,77,"expected.add(""test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,78,"expected.add(""something/bla"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,79,"expected.add(""test with spaces.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,81,"this.checkArchiveContent(result, expected);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,85,* Tries to delete a directory with a file and adds
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,86,* a new directory with a new file and with the same name.
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,89, @throws Exception
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,91,ublic void XtestDeletePlusAdd() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,92,"ile input = this.createArchive(""zip"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,94,rchiveOutputStream out = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,95,rchiveInputStream ais = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,96,"ile result = File.createTempFile(""test"", "".zip"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,97,ry {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,99,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,100,"is = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,101,"ut = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", new FileOutputStream(result));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,103,hangeSet changes = new ChangeSet();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,104,"hanges.delete(""bla"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,106,/ Add a file
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,107,"inal File file1 = getFile(""test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,108,"rchiveEntry entry = new ZipArchiveEntry(""bla/test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,109,"hanges.add(entry, new FileInputStream(file1));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,111,"hanges.perform(ais, out);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,113, finally {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,114,f(out != null) out.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,115,f(ais != null) ais.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,118,ist expected = new ArrayList();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,119,"xpected.add(""testdata/test1.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,120,"xpected.add(""testdata/test2.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,121,"xpected.add(""test/test3.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,122,"xpected.add(""test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,123,"xpected.add(""something/bla"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,124,"xpected.add(""bla/test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,125,"xpected.add(""test with spaces.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,127,"his.checkArchiveContent(result, expected);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,131, Adds a file to a zip archive. Deletes an other file.
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,132, @throws Exception
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,134,ublic void testDeleteFromAndAddToZip() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,135,"ile input = this.createArchive(""zip"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,137,rchiveOutputStream out = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,138,rchiveInputStream ais = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,139,"ile result = File.createTempFile(""test"", "".zip"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,140,ry {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,142,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,143,"is = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,144,"ut = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", new FileOutputStream(result));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,146,hangeSet changes = new ChangeSet();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,148,"inal File file1 = getFile(""test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,149,"rchiveEntry entry = new ZipArchiveEntry(""blub/test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,150,"hanges.add(entry, new FileInputStream(file1));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,152,"hanges.delete(""testdata/test1.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,154,"hanges.perform(ais, out);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,156, finally {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,157,f(out != null) out.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,158,f(ais != null) ais.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,161,ist expected = new ArrayList();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,162,"xpected.add(""testdata/test2.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,163,"xpected.add(""test/test3.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,164,"xpected.add(""blub/test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,165,"xpected.add(""test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,166,"xpected.add(""something/bla"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,167,"xpected.add(""bla/test4.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,168,"xpected.add(""test with spaces.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,170,"his.checkArchiveContent(result, expected);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,174, add blub/test.txt + delete blub
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,89,* @throws Exception
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,91,public void XtestDeletePlusAdd() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,92,"File input = this.createArchive(""zip"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,94,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,95,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,96,"File result = File.createTempFile(""test"", "".zip"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,97,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,99,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,100,"ais = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,101,"out = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", new FileOutputStream(result));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,103,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,104,"changes.delete(""bla"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,106,// Add a file
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,107,"final File file1 = getFile(""test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,108,"ArchiveEntry entry = new ZipArchiveEntry(""bla/test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,109,"changes.add(entry, new FileInputStream(file1));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,111,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,113,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,114,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,115,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,118,List expected = new ArrayList();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,119,"expected.add(""testdata/test1.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,120,"expected.add(""testdata/test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,121,"expected.add(""test/test3.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,122,"expected.add(""test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,123,"expected.add(""something/bla"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,124,"expected.add(""bla/test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,125,"expected.add(""test with spaces.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,127,"this.checkArchiveContent(result, expected);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,131,* Adds a file to a zip archive. Deletes an other file.
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,132,* @throws Exception
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,134,public void testDeleteFromAndAddToZip() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,135,"File input = this.createArchive(""zip"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,137,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,138,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,139,"File result = File.createTempFile(""test"", "".zip"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,140,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,142,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,143,"ais = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,144,"out = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", new FileOutputStream(result));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,146,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,148,"final File file1 = getFile(""test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,149,"ArchiveEntry entry = new ZipArchiveEntry(""blub/test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,150,"changes.add(entry, new FileInputStream(file1));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,152,"changes.delete(""testdata/test1.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,154,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,156,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,157,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,158,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,161,List expected = new ArrayList();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,162,"expected.add(""testdata/test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,163,"expected.add(""test/test3.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,164,"expected.add(""blub/test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,165,"expected.add(""test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,166,"expected.add(""something/bla"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,167,"expected.add(""bla/test4.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,168,"expected.add(""test with spaces.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,170,"this.checkArchiveContent(result, expected);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,174,* add blub/test.txt + delete blub
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,177, @throws Exception
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,179,ublic void XtestAddDeleteAdd() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,180,"ile input = this.createArchive(""zip"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,182,rchiveOutputStream out = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,183,rchiveInputStream ais = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,184,"ile result = File.createTempFile(""test"", "".zip"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,185,ry {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,187,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,188,"is = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,189,"ut = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", new FileOutputStream(result));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,191,hangeSet changes = new ChangeSet();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,193,"inal File file1 = getFile(""test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,194,"rchiveEntry entry = new ZipArchiveEntry(""blub/test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,195,"hanges.add(entry, new FileInputStream(file1));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,197,"hanges.delete(""blub"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,199,"hanges.perform(ais, out);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,201, finally {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,202,f(out != null) out.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,203,f(ais != null) ais.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,206,ist expected = new ArrayList();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,207,"xpected.add(""testdata/test1.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,208,"xpected.add(""testdata/test2.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,209,"xpected.add(""test/test3.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,210,"xpected.add(""test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,211,"xpected.add(""something/bla"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,212,"xpected.add(""bla/test4.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,213,"xpected.add(""test with spaces.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,215,"his.checkArchiveContent(result, expected);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,220, delete bla + add bla/test.txt + delete bla
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,221," Deletes dir1/* first, then surpresses the add of bla.txt cause there"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,222, is a delete operation later.
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,223, @throws Exception
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,225,ublic void XtestDeleteAddDelete() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,226,"ile input = this.createArchive(""zip"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,228,rchiveOutputStream out = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,229,rchiveInputStream ais = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,230,"ile result = File.createTempFile(""test"", "".zip"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,231,ry {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,233,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,234,"is = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,235,"ut = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", new FileOutputStream(result));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,237,hangeSet changes = new ChangeSet();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,239,"hanges.delete(""bla"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,241,"inal File file1 = getFile(""test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,242,"rchiveEntry entry = new ZipArchiveEntry(""bla/test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,243,"hanges.add(entry, new FileInputStream(file1));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,245,"hanges.delete(""bla"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,247,"hanges.perform(ais, out);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,249, finally {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,250,f(out != null) out.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,251,f(ais != null) ais.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,254,ist expected = new ArrayList();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,255,"xpected.add(""testdata/test1.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,256,"xpected.add(""testdata/test2.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,257,"xpected.add(""test/test3.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,258,"xpected.add(""test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,259,"xpected.add(""something/bla"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,260,"xpected.add(""test with spaces.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,262,"his.checkArchiveContent(result, expected);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,266, Simple Delete from a zip file.
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,267, @throws Exception
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,269,ublic void testDeleteFromZip() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,270,rchiveOutputStream out = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,271,rchiveInputStream ais = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,272,ry {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,273,hangeSet changes = new ChangeSet();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,274,"hanges.delete(""test2.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,276,"inal File input = getFile(""bla.zip"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,277,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,278,"is = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,280,"ile temp = File.createTempFile(""test"", "".zip"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,281,"ut = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", new FileOutputStream(temp));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,283,"hanges.perform(ais, out);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,284, finally {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,285,f(out != null) out.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,286,f(ais != null) ais.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,288,/ TODO add asserts
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,292, Simple delete from a tar file
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,293, @throws Exception
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,295,ublic void testDeleteFromTar() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,296,rchiveOutputStream out = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,297,rchiveInputStream ais = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,298,ry {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,299,hangeSet changes = new ChangeSet();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,300,"hanges.delete(""test2.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,302,"inal File input = getFile(""bla.tar"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,303,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,304,"is = new ArchiveStreamFactory().createArchiveInputStream(""tar"", is);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,306,"ile temp = new File(dir, ""bla.tar"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,307,"ut = new ArchiveStreamFactory().createArchiveOutputStream(""tar"", new FileOutputStream(temp));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,309,"hanges.perform(ais, out);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,310, finally {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,311,f(out != null) out.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,312,f(ais != null) ais.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,314,/ TODO add asserts
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,318, Simple delete from a jar file
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,319, @throws Exception
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,321,ublic void testDeleteFromJar() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,322,rchiveOutputStream out = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,323,rchiveInputStream ais = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,324,ry {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,325,hangeSet changes = new ChangeSet();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,326,"hanges.delete(""test2.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,327,"hanges.delete(""META-INF/MANIFEST.MF"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,329,"inal File input = getFile(""bla.jar"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,330,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,331,"is = new ArchiveStreamFactory().createArchiveInputStream(""jar"", is);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,333,"ile temp = new File(dir, ""bla.jar"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,334,"ut = new ArchiveStreamFactory().createArchiveOutputStream(""jar"", new FileOutputStream(temp));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,336,"hanges.perform(ais, out);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,337, finally {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,338,f(out != null) out.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,339,f(ais != null) ais.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,341,/ TODO add asserts
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,345, Simple delete from an ar file
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,346, @throws Exception
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,348,ublic void testDeleteFromAr() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,349,rchiveOutputStream out = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,350,rchiveInputStream ais = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,351,ry {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,352,hangeSet changes = new ChangeSet();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,353,"hanges.delete(""test2.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,355,"inal File input = getFile(""bla.ar"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,356,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,357,"is = new ArchiveStreamFactory().createArchiveInputStream(""ar"", is);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,359,"ile temp = new File(dir, ""bla.ar"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,360,"ut = new ArchiveStreamFactory().createArchiveOutputStream(""ar"", new FileOutputStream(temp));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,362,"hanges.perform(ais, out);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,363, finally {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,364,f(out != null) out.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,365,f(ais != null) ais.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,367,/ TODO add asserts
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,370,ublic void testDeleteFromAndAddToTar() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,371,rchiveOutputStream out = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,372,rchiveInputStream ais = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,373,ry {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,374,hangeSet changes = new ChangeSet();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,375,"hanges.delete(""test2.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,377,"inal File file1 = getFile(""test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,379,"inal TarArchiveEntry entry = new TarArchiveEntry(""testdata/test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,380,ntry.setModTime(0);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,381,ntry.setSize(file1.length());
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,382,ntry.setUserId(0);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,383,ntry.setGroupId(0);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,384,"ntry.setUserName(""avalon"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,385,"ntry.setGroupName(""excalibur"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,386,ntry.setMode(0100000);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,388,"hanges.add(entry, new FileInputStream(file1));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,390,"inal File input = getFile(""bla.tar"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,391,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,392,"is = new ArchiveStreamFactory().createArchiveInputStream(""tar"", is);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,394,"ile temp = new File(dir, ""bla.tar"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,395,"ut = new ArchiveStreamFactory().createArchiveOutputStream(""tar"", new FileOutputStream(temp));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,397,"hanges.perform(ais, out);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,398, finally {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,399,f(out != null) out.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,400,f(ais != null) ais.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,402,/ TODO add asserts
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,406, Delete from a jar file and add another file
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,407, @throws Exception
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,409,ublic void testDeleteFromAndAddToJar() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,410,rchiveOutputStream out = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,411,rchiveInputStream ais = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,412,ry {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,413,hangeSet changes = new ChangeSet();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,414,"hanges.delete(""test2.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,416,"inal File file1 = getFile(""test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,417,"arArchiveEntry entry = new JarArchiveEntry(""testdata/test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,418,"hanges.add(entry, new FileInputStream(file1));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,420,"inal File input = getFile(""bla.jar"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,421,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,422,"is = new ArchiveStreamFactory().createArchiveInputStream(""jar"", is);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,424,"ile temp = new File(dir, ""bla.jar"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,425,"ut = new ArchiveStreamFactory().createArchiveOutputStream(""jar"", new FileOutputStream(temp));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,427,"hanges.perform(ais, out);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,428, finally {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,429,f(out != null) out.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,430,f(ais != null) ais.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,432,/ TODO add asserts
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,436, Deletes a file from an AR-archive and adds another
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,437, @throws Exception
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,439,ublic void testDeleteFromAndAddToAr() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,440,rchiveOutputStream out = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,441,rchiveInputStream ais = null;
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,442,ry {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,443,hangeSet changes = new ChangeSet();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,444,"hanges.delete(""test2.xml"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,446,"inal File file1 = getFile(""test.txt"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,448,"inal ArArchiveEntry entry = new ArArchiveEntry(""test.txt"", file1.length());"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,450,"hanges.add(entry, new FileInputStream(file1));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,452,"inal File input = getFile(""bla.ar"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,453,inal InputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,454,"is = new ArchiveStreamFactory().createArchiveInputStream(""ar"", is);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,456,"ile temp = new File(dir, ""bla.ar"");"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,457,"ut = new ArchiveStreamFactory().createArchiveOutputStream(""ar"", new FileOutputStream(temp));"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,459,"hanges.perform(ais, out);"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,460, finally {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,461,f(out != null) out.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,462,f(ais != null) ais.close();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,464,/ TODO add asserts
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,468, TODO: Move operations are not supported currently
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,470, mv dir1/test.text dir2/test.txt + delete dir1
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,471, Moves the file to dir2 and deletes everything in dir1
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,472, @throws Exception
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,474,ublic void testRenameAndDelete() throws Exception {
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,478, TODO: Move operations are not supported currently
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,480, add dir1/bla.txt + mv dir1/test.text dir2/test.txt + delete dir1
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,482, Add dir1/bla.txt should be surpressed. All other dir1 files will be
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,483," deleted, except dir1/test.text will be moved"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,485, @throws Exception
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,487,ublic void testAddMoveDelete() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,177,* @throws Exception
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,179,public void XtestAddDeleteAdd() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,180,"File input = this.createArchive(""zip"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,182,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,183,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,184,"File result = File.createTempFile(""test"", "".zip"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,185,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,187,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,188,"ais = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,189,"out = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", new FileOutputStream(result));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,191,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,193,"final File file1 = getFile(""test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,194,"ArchiveEntry entry = new ZipArchiveEntry(""blub/test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,195,"changes.add(entry, new FileInputStream(file1));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,197,"changes.delete(""blub"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,199,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,201,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,202,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,203,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,206,List expected = new ArrayList();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,207,"expected.add(""testdata/test1.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,208,"expected.add(""testdata/test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,209,"expected.add(""test/test3.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,210,"expected.add(""test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,211,"expected.add(""something/bla"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,212,"expected.add(""bla/test4.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,213,"expected.add(""test with spaces.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,215,"this.checkArchiveContent(result, expected);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,220,* delete bla + add bla/test.txt + delete bla
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,221,"* Deletes dir1/* first, then surpresses the add of bla.txt cause there"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,222,* is a delete operation later.
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,223,* @throws Exception
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,225,public void XtestDeleteAddDelete() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,226,"File input = this.createArchive(""zip"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,228,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,229,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,230,"File result = File.createTempFile(""test"", "".zip"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,231,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,233,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,234,"ais = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,235,"out = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", new FileOutputStream(result));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,237,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,239,"changes.delete(""bla"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,241,"final File file1 = getFile(""test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,242,"ArchiveEntry entry = new ZipArchiveEntry(""bla/test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,243,"changes.add(entry, new FileInputStream(file1));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,245,"changes.delete(""bla"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,247,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,249,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,250,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,251,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,254,List expected = new ArrayList();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,255,"expected.add(""testdata/test1.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,256,"expected.add(""testdata/test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,257,"expected.add(""test/test3.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,258,"expected.add(""test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,259,"expected.add(""something/bla"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,260,"expected.add(""test with spaces.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,262,"this.checkArchiveContent(result, expected);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,266,* Simple Delete from a zip file.
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,267,* @throws Exception
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,269,public void testDeleteFromZip() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,270,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,271,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,272,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,273,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,274,"changes.delete(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,276,"final File input = getFile(""bla.zip"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,277,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,278,"ais = new ArchiveStreamFactory().createArchiveInputStream(""zip"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,280,"File temp = File.createTempFile(""test"", "".zip"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,281,"out = new ArchiveStreamFactory().createArchiveOutputStream(""zip"", new FileOutputStream(temp));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,283,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,284,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,285,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,286,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,288,// TODO add asserts
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,292,* Simple delete from a tar file
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,293,* @throws Exception
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,295,public void testDeleteFromTar() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,296,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,297,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,298,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,299,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,300,"changes.delete(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,302,"final File input = getFile(""bla.tar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,303,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,304,"ais = new ArchiveStreamFactory().createArchiveInputStream(""tar"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,306,"File temp = new File(dir, ""bla.tar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,307,"out = new ArchiveStreamFactory().createArchiveOutputStream(""tar"", new FileOutputStream(temp));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,309,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,310,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,311,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,312,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,314,// TODO add asserts
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,318,* Simple delete from a jar file
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,319,* @throws Exception
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,321,public void testDeleteFromJar() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,322,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,323,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,324,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,325,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,326,"changes.delete(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,327,"changes.delete(""META-INF/MANIFEST.MF"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,329,"final File input = getFile(""bla.jar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,330,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,331,"ais = new ArchiveStreamFactory().createArchiveInputStream(""jar"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,333,"File temp = new File(dir, ""bla.jar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,334,"out = new ArchiveStreamFactory().createArchiveOutputStream(""jar"", new FileOutputStream(temp));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,336,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,337,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,338,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,339,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,341,// TODO add asserts
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,345,* Simple delete from an ar file
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,346,* @throws Exception
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,348,public void testDeleteFromAr() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,349,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,350,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,351,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,352,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,353,"changes.delete(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,355,"final File input = getFile(""bla.ar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,356,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,357,"ais = new ArchiveStreamFactory().createArchiveInputStream(""ar"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,359,"File temp = new File(dir, ""bla.ar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,360,"out = new ArchiveStreamFactory().createArchiveOutputStream(""ar"", new FileOutputStream(temp));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,362,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,363,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,364,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,365,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,367,// TODO add asserts
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,370,public void testDeleteFromAndAddToTar() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,371,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,372,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,373,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,374,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,375,"changes.delete(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,377,"final File file1 = getFile(""test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,379,"final TarArchiveEntry entry = new TarArchiveEntry(""testdata/test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,380,entry.setModTime(0);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,381,entry.setSize(file1.length());
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,382,entry.setUserId(0);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,383,entry.setGroupId(0);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,384,"entry.setUserName(""avalon"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,385,"entry.setGroupName(""excalibur"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,386,entry.setMode(0100000);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,388,"changes.add(entry, new FileInputStream(file1));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,390,"final File input = getFile(""bla.tar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,391,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,392,"ais = new ArchiveStreamFactory().createArchiveInputStream(""tar"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,394,"File temp = new File(dir, ""bla.tar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,395,"out = new ArchiveStreamFactory().createArchiveOutputStream(""tar"", new FileOutputStream(temp));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,397,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,398,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,399,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,400,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,402,// TODO add asserts
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,406,* Delete from a jar file and add another file
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,407,* @throws Exception
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,409,public void testDeleteFromAndAddToJar() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,410,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,411,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,412,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,413,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,414,"changes.delete(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,416,"final File file1 = getFile(""test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,417,"JarArchiveEntry entry = new JarArchiveEntry(""testdata/test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,418,"changes.add(entry, new FileInputStream(file1));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,420,"final File input = getFile(""bla.jar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,421,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,422,"ais = new ArchiveStreamFactory().createArchiveInputStream(""jar"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,424,"File temp = new File(dir, ""bla.jar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,425,"out = new ArchiveStreamFactory().createArchiveOutputStream(""jar"", new FileOutputStream(temp));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,427,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,428,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,429,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,430,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,432,// TODO add asserts
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,436,* Deletes a file from an AR-archive and adds another
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,437,* @throws Exception
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,439,public void testDeleteFromAndAddToAr() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,440,ArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,441,ArchiveInputStream ais = null;
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,442,try {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,443,ChangeSet changes = new ChangeSet();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,444,"changes.delete(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,446,"final File file1 = getFile(""test.txt"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,448,"final ArArchiveEntry entry = new ArArchiveEntry(""test.txt"", file1.length());"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,450,"changes.add(entry, new FileInputStream(file1));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,452,"final File input = getFile(""bla.ar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,453,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,454,"ais = new ArchiveStreamFactory().createArchiveInputStream(""ar"", is);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,456,"File temp = new File(dir, ""bla.ar"");"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,457,"out = new ArchiveStreamFactory().createArchiveOutputStream(""ar"", new FileOutputStream(temp));"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,459,"changes.perform(ais, out);"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,460,} finally {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,461,if(out != null) out.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,462,if(ais != null) ais.close();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,464,// TODO add asserts
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,468,* TODO: Move operations are not supported currently
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,470,* mv dir1/test.text dir2/test.txt + delete dir1
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,471,* Moves the file to dir2 and deletes everything in dir1
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,472,* @throws Exception
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,474,public void testRenameAndDelete() throws Exception {
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,478,* TODO: Move operations are not supported currently
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,480,* add dir1/bla.txt + mv dir1/test.text dir2/test.txt + delete dir1
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,482,* Add dir1/bla.txt should be surpressed. All other dir1 files will be
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,483,"* deleted, except dir1/test.text will be moved"
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,485,* @throws Exception
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,487,public void testAddMoveDelete() throws Exception {
