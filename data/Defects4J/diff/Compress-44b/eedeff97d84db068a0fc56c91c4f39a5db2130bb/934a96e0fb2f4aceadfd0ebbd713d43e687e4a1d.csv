is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,19,package org.apache.commons.compress.archivers.tar;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,21,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,24,* This class represents a sparse entry in a Tar archive.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,26,* <p>
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,27,* The C structure for a sparse entry is:
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,28,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,29,* struct posix_header {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,30,* struct sparse sp[21]; // TarConstants.SPARSELEN_GNU_SPARSE     - offset 0
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,31,* char isextended;      // TarConstants.ISEXTENDEDLEN_GNU_SPARSE - offset 504
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,33,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,34,"* Whereas, ""struct sparse"" is:"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,35,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,36,* struct sparse {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,37,* char offset[12];   // offset 0
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,38,* char numbytes[12]; // offset 12
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,40,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,43,public class TarArchiveSparseEntry implements TarConstants {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,44,/** If an extension sparse header follows. */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,45,private boolean isExtended;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,48,* Construct an entry from an archive's header bytes. File is set
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,49,* to null.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,51,* @param headerBuf The header bytes from a tar archive entry.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,52,* @throws IOException on unknown format
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,54,public TarArchiveSparseEntry(byte[] headerBuf) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,55,int offset = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,56,offset += SPARSELEN_GNU_SPARSE;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,57,"isExtended = TarUtils.parseBoolean(headerBuf, offset);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,60,public boolean isExtended() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java,61,return isExtended;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,24,"* For tar formats (FORMAT_OLDGNU, FORMAT_POSIX, etc.) see GNU tar"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,25,* <I>tar.h</I> type <I>enum archive_format</I>
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,31,* GNU format as per before tar 1.12.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,33,int    FORMAT_OLDGNU = 2;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,36,* Pure Posix format.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,38,int    FORMAT_POSIX = 3;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,117,* The length of the access time field in an old GNU header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,120,int    ATIMELEN_GNU = 12;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,123,* The length of the created time field in an old GNU header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,126,int    CTIMELEN_GNU = 12;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,129,* The length of the multivolume start offset field in an old GNU header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,132,int    OFFSETLEN_GNU = 12;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,135,* The length of the long names field in an old GNU header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,138,int    LONGNAMESLEN_GNU = 4;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,141,* The length of the padding field in an old GNU header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,144,int    PAD2LEN_GNU = 1;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,147,* The sum of the length of all sparse headers in an old GNU header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,150,int    SPARSELEN_GNU = 96;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,153,* The length of the is extension field in an old GNU header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,156,int    ISEXTENDEDLEN_GNU = 1;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,159,* The length of the real size field in an old GNU header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,162,int    REALSIZELEN_GNU = 12;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,165,* The sum of the length of all sparse headers in a sparse header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,168,int    SPARSELEN_GNU_SPARSE = 504;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,171,* The length of the is extension field in a sparse header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,174,int    ISEXTENDEDLEN_GNU_SPARSE = 1;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,228,* Sparse file type.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,229,* @since Apache Commons Compress 1.1.1
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,231,byte LF_GNUTYPE_SPARSE = (byte) 'S';
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,110,* Parse a boolean byte from a buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,111,* Leading spaces and NUL are ignored.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,112,* The buffer may contain trailing spaces or NULs.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,114,* @param buffer The buffer from which to parse.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,115,* @param offset The offset into the buffer from which to parse.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,116,* @param length The maximum number of bytes to parse - must be at least 1 byte.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,117,* @return The boolean value of the bytes.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,118,* @throws IllegalArgumentException if an invalid byte is detected.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,120,"public static boolean parseBoolean(final byte[] buffer, final int offset) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,121,return (buffer[offset] == 1);
