is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,29,import org.apache.commons.compress.compressors.xz.XZCompressorInputStream;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,30,import org.apache.commons.compress.compressors.xz.XZCompressorOutputStream;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,80,* Constant used to identify the XZ compression method.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,81,* @since Commons Compress 1.4
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,83,"public static final String XZ = ""xz"";"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,120,"if (XZCompressorInputStream.matches(signature, signatureLength)) {"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,121,return new XZCompressorInputStream(in);
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,125," @param name of the compressor, i.e. ""gz"", ""bzip2"" or ""pack200"""
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,138,"* @param name of the compressor, i.e. ""gz"", ""bzip2"", ""xz"", or ""pack200"""
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,161,if (XZ.equalsIgnoreCase(name)) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,162,return new XZCompressorInputStream(in);
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,162," @param name the compressor name, i.e. ""gz"", ""bzip2"" or ""pack200"""
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,179,"* @param name the compressor name, i.e. ""gz"", ""bzip2"", ""xz"", or ""pack200"""
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,203,if (XZ.equalsIgnoreCase(name)) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,204,return new XZCompressorOutputStream(out);
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,19,package org.apache.commons.compress.compressors.xz;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,21,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,22,import java.io.InputStream;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,23,import org.tukaani.xz.XZ;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,24,import org.tukaani.xz.SingleXZInputStream;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,25,import org.tukaani.xz.XZInputStream;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,27,import org.apache.commons.compress.compressors.CompressorInputStream;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,30,* XZ decompressor.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,31,* @since Commons Compress 1.4
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,33,public class XZCompressorInputStream extends CompressorInputStream {
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,34,private final InputStream in;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,37,* Checks if the signature matches what is expected for a .xz file.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,39,* @param   signature     the bytes to check
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,40,* @param   length        the number of bytes to check
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,41,"* @return  true if signature matches the .xz magic bytes, false otherwise"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,43,"public static boolean matches(byte[] signature, int length) {"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,44,if (length < XZ.HEADER_MAGIC.length)
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,45,return false;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,47,for (int i = 0; i < XZ.HEADER_MAGIC.length; ++i)
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,48,if (signature[i] != XZ.HEADER_MAGIC[i])
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,49,return false;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,51,return true;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,55,* Creates a new input stream that decompresses XZ-compressed data
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,56,* from the specified input stream. This supports concatenated .xz files.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,58,* @param       inputStream where to read the compressed data
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,60,"* @throws      IOException if the input is not in the .xz format,"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,61,"*                          the input is corrupt or truncated, the .xz"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,62,*                          headers specify options that are not supported
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,63,"*                          by this implementation, or the underlying"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,64,*                          <code>inputStream</code> throws an exception
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,66,public XZCompressorInputStream(InputStream inputStream)
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,67,throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,68,"this(inputStream, true);"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,72,* Creates a new input stream that decompresses XZ-compressed data
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,73,* from the specified input stream.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,75,* @param       inputStream where to read the compressed data
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,76,* @param       decompressConcatenated
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,77,"*                          if true, decompress until the end of the"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,78,"*                          input; if false, stop after the first .xz"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,79,*                          stream and leave the input position to point
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,80,*                          to the next byte after the .xz stream
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,82,"* @throws      IOException if the input is not in the .xz format,"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,83,"*                          the input is corrupt or truncated, the .xz"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,84,*                          headers specify options that are not supported
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,85,"*                          by this implementation, or the underlying"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,86,*                          <code>inputStream</code> throws an exception
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,88,"public XZCompressorInputStream(InputStream inputStream,"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,89,boolean decompressConcatenated)
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,90,throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,91,if (decompressConcatenated)
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,92,in = new XZInputStream(inputStream);
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,93,else
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,94,in = new SingleXZInputStream(inputStream);
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,97,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,98,public int read() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,99,int ret = in.read();
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,100,count(ret == -1 ? -1 : 1);
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,101,return ret;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,104,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,105,"public int read(byte[] buf, int off, int len) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,106,"int ret = in.read(buf, off, len);"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,107,count(ret);
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,108,return ret;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,111,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,112,public long skip(long n) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,113,return in.skip(n);
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,116,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,117,public int available() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,118,return in.available();
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,121,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,122,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java,123,in.close();
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,19,package org.apache.commons.compress.compressors.xz;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,21,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,22,import java.io.OutputStream;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,23,import org.tukaani.xz.LZMA2Options;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,24,import org.tukaani.xz.XZOutputStream;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,26,import org.apache.commons.compress.compressors.CompressorOutputStream;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,29,* XZ compressor.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,30,* @since Commons Compress 1.4
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,32,public class XZCompressorOutputStream extends CompressorOutputStream {
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,33,private final XZOutputStream out;
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,36,* Creates a new XZ compressor using the default LZMA2 options.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,37,* This is equivalent to <code>XZCompressorOutputStream(6)</code>.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,39,public XZCompressorOutputStream(OutputStream outputStream)
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,40,throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,41,"out = new XZOutputStream(outputStream, new LZMA2Options());"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,45,* Creates a new XZ compressor using the specified LZMA2 preset level.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,46,* <p>
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,47,* The presets 0-3 are fast presets with medium compression.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,48,* The presets 4-6 are fairly slow presets with high compression.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,49,* The default preset is 6.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,50,* <p>
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,51,* The presets 7-9 are like the preset 6 but use bigger dictionaries
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,52,* and have higher compressor and decompressor memory requirements.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,53,"* Unless the uncompressed size of the file exceeds 8&nbsp;MiB,"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,54,"* 16&nbsp;MiB, or 32&nbsp;MiB, it is waste of memory to use the"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,55,"* presets 7, 8, or 9, respectively."
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,57,"public XZCompressorOutputStream(OutputStream outputStream, int preset)"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,58,throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,59,"out = new XZOutputStream(outputStream, new LZMA2Options(preset));"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,62,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,63,public void write(int b) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,64,out.write(b);
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,67,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,68,"public void write(byte[] buf, int off, int len) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,69,"out.write(buf, off, len);"
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,73,* Flushes the encoder and calls <code>outputStream.flush()</code>.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,74,* All buffered pending data will then be decompressible from
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,75,* the output stream. Calling this function very often may increase
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,76,* the compressed file size a lot.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,78,public void flush() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,79,out.flush();
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,83,* Finishes compression without closing the underlying stream.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,84,* No more data can be written to this stream after finishing.
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,86,public void finish() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,87,out.finish();
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,90,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,91,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java,92,out.close();
