is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,102,tatic class LZMADecoder extends CoderBase {
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,103,Override
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,104,"nputStream decode(final String archiveName, final InputStream in, final long uncompressedLength,"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,105,"inal Coder coder, final byte[] password) throws IOException {"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,106,inal byte propsByte = coder.properties[0];
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,107,ong dictSize = coder.properties[1];
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,108,or (int i = 1; i < 4; i++) {
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,109,ictSize |= (coder.properties[i + 1] & 0xffl) << (8 * i);
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,111,f (dictSize > LZMAInputStream.DICT_SIZE_MAX) {
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,112,"hrow new IOException(""Dictionary larger than 4GiB maximum size used in "" + archiveName);"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,114,"eturn new LZMAInputStream(in, uncompressedLength, propsByte, (int) dictSize);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,4,*  this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,7,*  the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,14,*  See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,15,*  limitations under the License.
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,18,package org.apache.commons.compress.archivers.sevenz;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,20,import java.io.FilterOutputStream;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,21,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,22,import java.io.InputStream;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,23,import java.io.OutputStream;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,25,import org.tukaani.xz.LZMA2Options;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,26,import org.tukaani.xz.LZMAInputStream;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,27,import org.tukaani.xz.LZMAOutputStream;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,28,import org.tukaani.xz.UnsupportedOptionsException;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,30,class LZMADecoder extends CoderBase {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,31,LZMADecoder() {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,32,"super(LZMA2Options.class, Number.class);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,35,@Override
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,36,"InputStream decode(final String archiveName, final InputStream in, final long uncompressedLength,"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,37,"final Coder coder, final byte[] password) throws IOException {"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,38,final byte propsByte = coder.properties[0];
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,39,final int dictSize = getDictionarySize(coder);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,40,if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,41,"throw new IOException(""Dictionary larger than 4GiB maximum size used in "" + archiveName);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,43,"return new LZMAInputStream(in, uncompressedLength, propsByte, (int) dictSize);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,46,@Override
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,47,"OutputStream encode(final OutputStream out, final Object opts)"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,48,throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,49,"return new FilterOutputStream(new LZMAOutputStream(out, getOptions(opts), false)) {"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,50,@Override
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,51,public void flush() {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,52,// NOOP as LZMAOutputStream throws an exception in flush
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,57,@Override
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,58,byte[] getOptionsAsProperties(final Object opts) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,59,final LZMA2Options options = getOptions(opts);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,60,final byte props = (byte) ((options.getPb() * 5 + options.getLp()) * 9 + options.getLc());
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,61,int dictSize = options.getDictSize();
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,62,return new byte[] {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,63,"props,"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,64,"(byte) (dictSize & 0xff),"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,65,"(byte) ((dictSize >> 8) & 0xff),"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,66,"(byte) ((dictSize >> 16) & 0xff),"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,67,"(byte) ((dictSize >> 24) & 0xff),"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,71,@Override
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,72,"Object getOptionsFromCoder(final Coder coder, final InputStream in) {"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,73,try {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,74,final byte propsByte = coder.properties[0];
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,75,int props = propsByte & 0xFF;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,76,int pb = props / (9 * 5);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,77,props -= pb * 9 * 5;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,78,int lp = props / 9;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,79,int lc = props - lp * 9;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,80,LZMA2Options opts = new LZMA2Options();
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,81,opts.setPb(pb);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,82,"opts.setLcLp(lc, lp);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,83,opts.setDictSize(getDictionarySize(coder));
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,84,return opts;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,85,} catch (UnsupportedOptionsException ex) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,86,throw new RuntimeException(ex);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,90,private int getDictSize(final Object opts) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,91,if (opts instanceof LZMA2Options) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,92,return ((LZMA2Options) opts).getDictSize();
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,94,return numberOptionOrDefault(opts);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,97,private int getDictionarySize(final Coder coder) throws IllegalArgumentException {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,98,long dictSize = coder.properties[1];
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,99,for (int i = 1; i < 4; i++) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,100,dictSize |= (coder.properties[i + 1] & 0xffl) << (8 * i);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,102,return (int) dictSize;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,105,private LZMA2Options getOptions(final Object opts) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,106,if (opts instanceof LZMA2Options) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,107,return (LZMA2Options) opts;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,109,final LZMA2Options options = new LZMA2Options();
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,110,try {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,111,options.setDictSize(numberOptionOrDefault(opts));
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,112,} catch (UnsupportedOptionsException ex) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,113,throw new RuntimeException(ex);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,115,return options;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,118,private int numberOptionOrDefault(final Object opts) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java,119,"return numberOptionOrDefault(opts, LZMA2Options.DICT_SIZE_DEFAULT);"
True,src/test/java/org/apache/commons/compress/archivers/SevenZTestCase.java,src/test/java/org/apache/commons/compress/archivers/SevenZTestCase.java,40,@Test
True,src/test/java/org/apache/commons/compress/archivers/SevenZTestCase.java,src/test/java/org/apache/commons/compress/archivers/SevenZTestCase.java,41,public void testSevenZArchiveCreationUsingLZMA() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/SevenZTestCase.java,src/test/java/org/apache/commons/compress/archivers/SevenZTestCase.java,42,testSevenZArchiveCreation(SevenZMethod.LZMA);
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,32,@Test
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,33,public void shouldAllowLZMA2OptionsForLZMA() {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,34,"Assert.assertNotNull(new SevenZMethodConfiguration(SevenZMethod.LZMA,"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,35,new LZMA2Options())
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,36,.getOptions());
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,39,@Test
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,40,public void shouldAllowNumberForLZMA() {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,41,"Assert.assertNotNull(new SevenZMethodConfiguration(SevenZMethod.LZMA, 42)"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,42,.getOptions());
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,70,@Test(expected = IllegalArgumentException.class)
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,71,public void shouldNotAllowStringOptionsForLZMA() {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,72,"new SevenZMethodConfiguration(SevenZMethod.LZMA, """");"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,330,@Test
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,331,public void testLzmaWithIntConfiguration() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,332,"output = new File(dir, ""lzma-options.7z"");"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,333,// 1 MB dictionary
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,334,"createAndReadBack(output, Collections"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,335,".singletonList(new SevenZMethodConfiguration(SevenZMethod.LZMA, 1 << 20)));"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,338,@Test
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,339,public void testLzmaWithOptionsConfiguration() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,340,"output = new File(dir, ""lzma-options2.7z"");"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,341,final LZMA2Options opts = new LZMA2Options(1);
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,342,"createAndReadBack(output, Collections"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,343,".singletonList(new SevenZMethodConfiguration(SevenZMethod.LZMA, opts)));"
