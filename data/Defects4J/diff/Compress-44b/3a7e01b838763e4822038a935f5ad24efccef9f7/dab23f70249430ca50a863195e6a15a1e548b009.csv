is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,24,import java.io.ByteArrayInputStream;
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,34,import org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream;
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,35,import org.apache.commons.compress.compressors.xz.XZCompressorInputStream;
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,40,inal ClassLoader classLoader = getClass().getClassLoader();
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,45,"inal CompressorInputStream bzip2 = getStreamFor(""bla.txt.bz2"");"
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,46,"CompressorInputStream bzip2 = getStreamFor(""bla.txt.bz2"");"
False,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,49,"inal CompressorInputStream gzip = getStreamFor(""bla.tgz"");"
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,50,"CompressorInputStream gzip = getStreamFor(""bla.tgz"");"
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,54,"CompressorInputStream pack200 = getStreamFor(""bla.pack"");"
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,55,assertNotNull(pack200);
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,56,assertTrue(pack200 instanceof Pack200CompressorInputStream);
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,58,"CompressorInputStream xz = getStreamFor(""bla.tar.xz"");"
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,59,assertNotNull(xz);
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,60,assertTrue(xz instanceof XZCompressorInputStream);
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,62,try {
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,63,factory.createCompressorInputStream(new ByteArrayInputStream(new byte[0]));
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,64,"fail(""No exception thrown for an empty input stream"");"
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,65,} catch (CompressorException e) {
True,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java,66,// expected
