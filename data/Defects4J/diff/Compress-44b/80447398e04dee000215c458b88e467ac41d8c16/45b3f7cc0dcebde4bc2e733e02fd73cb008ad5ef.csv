is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,88,* Stored in {@link #parseFromCentralDirectoryData
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,89,* parseFromCentralDirectoryData} so it can be reused when ZipFile
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,90,* calls {@link #reparseCentralDirectoryData
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,91,* reparseCentralDirectoryData}.
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,93,* <p>Not used for anything else</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,95,* @since Apache Commons Compress 1.3
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,97,private byte[] rawCentralDirectoryData;
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,209,// store for processing in reparseCentralDirectoryData
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,210,rawCentralDirectoryData = new byte[length];
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,211,"System.arraycopy(buffer, offset, rawCentralDirectoryData, 0, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,233,* Parses the raw bytes read from the central directory extra
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,234,* field with knowledge which fields are expected to be there.
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,236,* <p>All four fields inside the zip64 extended information extra
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,237,* field are optional and only present if their corresponding
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,238,* entry inside the central directory contains the correct magic
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,239,* value.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,241,"public void reparseCentralDirectoryData(boolean hasUncompressedSize,"
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,242,"boolean hasCompressedSize,"
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,243,"boolean hasRelativeHeaderOffset,"
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,244,boolean hasDiskStart)
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,245,throws ZipException {
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,246,if (rawCentralDirectoryData != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,247,int expectedLength = (hasUncompressedSize ? DWORD : 0)
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,248,+ (hasCompressedSize ? DWORD : 0)
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,249,+ (hasRelativeHeaderOffset ? DWORD : 0)
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,250,+ (hasDiskStart ? WORD : 0);
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,251,if (rawCentralDirectoryData.length != expectedLength) {
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,252,"throw new ZipException(""central directory zip64 extended"""
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,253,"+ "" information extra field's length"""
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,254,"+ "" doesn't match central directory"""
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,255,"+ "" data.  Expected length """
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,256,"+ expectedLength + "" but is """
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,257,+ rawCentralDirectoryData.length);
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,259,int offset = 0;
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,260,if (hasUncompressedSize) {
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,261,"size = new ZipEightByteInteger(rawCentralDirectoryData, offset);"
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,262,offset += DWORD;
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,264,if (hasCompressedSize) {
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,265,"compressedSize = new ZipEightByteInteger(rawCentralDirectoryData,"
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,266,offset);
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,267,offset += DWORD;
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,269,if (hasRelativeHeaderOffset) {
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,270,relativeHeaderOffset =
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,271,"new ZipEightByteInteger(rawCentralDirectoryData, offset);"
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,272,offset += DWORD;
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,274,if (hasDiskStart) {
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,275,"diskStart = new ZipLong(rawCentralDirectoryData, offset);"
True,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java,276,offset += WORD;
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,178,public void testReparseCDSingleEightByteData() throws ZipException {
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,179,Zip64ExtendedInformationExtraField f =
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,180,new Zip64ExtendedInformationExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,181,byte[] b = new byte[8];
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,182,"System.arraycopy(SIZE.getBytes(), 0, b, 0, 8);"
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,183,"f.parseFromCentralDirectoryData(b, 0, b.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,184,"f.reparseCentralDirectoryData(true, false, false, false);"
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,185,"assertEquals(SIZE, f.getSize());"
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,186,assertNull(f.getCompressedSize());
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,187,assertNull(f.getRelativeHeaderOffset());
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,188,assertNull(f.getDiskStartNumber());
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,189,f.setSize(null);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,190,"f.reparseCentralDirectoryData(false, true, false, false);"
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,191,assertNull(f.getSize());
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,192,"assertEquals(SIZE, f.getCompressedSize());"
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,193,assertNull(f.getRelativeHeaderOffset());
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,194,assertNull(f.getDiskStartNumber());
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,195,f.setCompressedSize(null);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,196,"f.reparseCentralDirectoryData(false, false, true, false);"
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,197,assertNull(f.getSize());
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,198,assertNull(f.getCompressedSize());
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,199,"assertEquals(SIZE, f.getRelativeHeaderOffset());"
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java,200,assertNull(f.getDiskStartNumber());
