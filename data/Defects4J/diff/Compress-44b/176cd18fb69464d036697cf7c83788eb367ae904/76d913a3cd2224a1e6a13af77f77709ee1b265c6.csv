is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,355,nt splitLen = splitCandidate.length();
False,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,363,"eplacement.prependLiteral(expand(toExpand + splitLen, splitLen));"
True,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,362,if (splitCandidate.hasBackReference()) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,363,int brLen = splitCandidate.backReferenceLength();
True,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,364,"replacement.prependLiteral(expand(toExpand + brLen, brLen));"
True,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,366,splitCandidate.prependTo(replacement);
False,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,442,air splitWithNewBackReferenceLengthOf(int newBackReferenceLength) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,445,private void prependTo(Pair other) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,446,Iterator<byte[]> litsBackwards = literals.descendingIterator();
True,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,447,while (litsBackwards.hasNext()) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,448,other.prependLiteral(litsBackwards.next());
True,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java,451,private Pair splitWithNewBackReferenceLengthOf(int newBackReferenceLength) {
False,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,47,rivate static final int DEFAULT_BLOCK_SIZE = 4096 * 1024;
False,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,48,"rivate static final List<Integer> BLOCK_SIZES = Arrays.asList(64 * 1024, 256 * 1024, 1024 * 1024,"
False,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,49,EFAULT_BLOCK_SIZE);
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,54,private final Parameters params;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,61,public enum BlockSize {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,62,/** Block size of 64K */
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,63,"K64(64 * 1024, 0),"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,64,/** Block size of 256K */
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,65,"K256(256 * 1024, 1),"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,66,/** Block size of 1M */
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,67,"M1(1024 * 1024, 2),"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,68,/** Block size of 4M */
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,69,"M4(1024 * 1024, 4);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,71,"private final int size, index;"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,72,"private BlockSize(int size, int index) {"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,73,this.size = size;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,74,this.index = index;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,76,int getSize() {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,77,return size;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,79,int getIndex() {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,80,return index;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,85,* Parameters of the LZ4 frame format.
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,87,public static class Parameters {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,88,private final BlockSize blockSize;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,91,"* The default parameters of 4M block size, enabled content"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,92,"* checksum, disabled block checksums and independent blocks."
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,94,* <p>This matches the defaults of the lz4 command line utility.</p>
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,96,public static Parameters DEFAULT = new Parameters(BlockSize.M4);
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,99,* Sets up custom parameters for the LZ4 stream.
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,100,* @param blockSize the size of a single block.
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,102,public Parameters(BlockSize blockSize) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,103,this.blockSize = blockSize;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,105,@Override
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,106,public String toString() {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,107,"return ""LZ4 Parameters with BlockSize "" + blockSize;"
False,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,70,"his(out, DEFAULT_BLOCK_SIZE);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,118,"this(out, Parameters.DEFAULT);"
False,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,77," @param blockSize block size, one of 64 KB, 256 KB, 1 MB or 4 MB."
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,125,* @param params the parameters to use
False,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,79, @throws IllegalArgumentException if the block size is not supported
False,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,81,"ublic FramedLZ4CompressorOutputStream(OutputStream out, int blockSize) throws IOException {"
False,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,82,f (!BLOCK_SIZES.contains(blockSize)) {
False,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,83,"hrow new IllegalArgumentException(""Unsupported block size"");"
False,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,85,lockData = new byte[blockSize];
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,128,"public FramedLZ4CompressorOutputStream(OutputStream out, Parameters params) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,129,this.params = params;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,130,blockData = new byte[params.blockSize.getSize()];
False,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,139,nt bd = BLOCK_SIZES.indexOf(blockData.length) << 4;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,184,int bd = params.blockSize.getIndex() << 4;
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,24,mport java.io.InputStream;
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,26,mport java.io.OutputStream;
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,27,mport java.util.Random;
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,29,mport org.apache.commons.compress.compressors.CompressorStreamFactory;
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,30,mport org.apache.commons.compress.compressors.lz77support.Parameters;
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,75,Test
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,76,ublic void roundtripViaFactory() throws Exception {
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,77,"ile input = getFile(""bla.tar"");"
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,78,ong start = System.currentTimeMillis();
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,79,"inal File outputSz = new File(dir, input.getName() + "".block.lz4"");"
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,80,ry (FileInputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,81,ileOutputStream os = new FileOutputStream(outputSz);
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,82,utputStream los = new CompressorStreamFactory()
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,83,"createCompressorOutputStream(CompressorStreamFactory.getLZ4Block(), os)) {"
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,84,"OUtils.copy(is, los);"
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,86,"ystem.err.println(input.getName() + "" written, uncompressed bytes: "" + input.length()"
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,87," "", compressed bytes: "" + outputSz.length() + "" after "" + (System.currentTimeMillis() - start) + ""ms"");"
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,88,tart = System.currentTimeMillis();
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,89,ry (FileInputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,90,nputStream sis = new CompressorStreamFactory()
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,91,"createCompressorInputStream(CompressorStreamFactory.LZ4_BLOCK, new FileInputStream(outputSz))) {"
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,92,yte[] expected = IOUtils.toByteArray(is);
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,93,yte[] actual = IOUtils.toByteArray(sis);
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,94,"ssert.assertArrayEquals(expected, actual);"
False,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorRoundtripTest.java,96,"ystem.err.println(outputSz.getName() + "" read after "" + (System.currentTimeMillis() - start) + ""ms"");"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,19,package org.apache.commons.compress.compressors.lz4;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,21,import java.io.File;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,22,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,23,import java.io.FileOutputStream;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,24,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,25,import java.io.OutputStream;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,27,import org.apache.commons.compress.AbstractTestCase;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,28,import org.apache.commons.compress.compressors.CompressorStreamFactory;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,29,import org.apache.commons.compress.utils.IOUtils;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,30,import org.junit.Assert;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,31,import org.junit.Test;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,33,public class FactoryTest extends AbstractTestCase {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,35,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,36,public void frameRoundtripViaFactory() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,37,roundtripViaFactory(CompressorStreamFactory.getLZ4Framed());
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,40,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,41,public void blockRoundtripViaFactory() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,42,roundtripViaFactory(CompressorStreamFactory.getLZ4Block());
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,45,private void roundtripViaFactory(String format) throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,46,"File input = getFile(""bla.tar"");"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,47,long start = System.currentTimeMillis();
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,48,"final File outputSz = new File(dir, input.getName() + ""."" + format + "".lz4"");"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,49,try (FileInputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,50,FileOutputStream os = new FileOutputStream(outputSz);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,51,"OutputStream los = new CompressorStreamFactory().createCompressorOutputStream(format, os)) {"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,52,"IOUtils.copy(is, los);"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,54,"System.err.println(input.getName() + "" written, uncompressed bytes: "" + input.length()"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,55,"+ "", compressed bytes: "" + outputSz.length() + "" after "" + (System.currentTimeMillis() - start) + ""ms"");"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,56,start = System.currentTimeMillis();
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,57,try (FileInputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,58,InputStream sis = new CompressorStreamFactory()
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,59,".createCompressorInputStream(format, new FileInputStream(outputSz))) {"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,60,byte[] expected = IOUtils.toByteArray(is);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,61,byte[] actual = IOUtils.toByteArray(sis);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,62,"Assert.assertArrayEquals(expected, actual);"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FactoryTest.java,64,"System.err.println(outputSz.getName() + "" read after "" + (System.currentTimeMillis() - start) + ""ms"");"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,3, or more contributor license agreements.  See the NOTICE file
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,4, distributed with this work for additional information
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,6," to you under the Apache License, Version 2.0 (the"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,7," ""License""); you may not use this file except in compliance"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,8, with the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,12," Unless required by applicable law or agreed to in writing,"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,13, software distributed under the License is distributed on an
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,15," KIND, either express or implied.  See the License for the"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,16, specific language governing permissions and limitations
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,17, under the License.
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,19,ackage org.apache.commons.compress.compressors.lz4;
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,21,mport java.io.ByteArrayOutputStream;
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,22,mport java.io.IOException;
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,24,mport org.junit.Test;
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,26,ublic final class FramedLZ4CompressorOutputStreamTest {
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,28,Test(expected = IllegalArgumentException.class)
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,29,ublic void illegalBlockSize() throws IOException {
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,30,"ew FramedLZ4CompressorOutputStream(new ByteArrayOutputStream(), 32 * 1024);"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,24,mport java.io.InputStream;
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,26,mport java.io.OutputStream;
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,27,mport java.util.Random;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,25,import java.util.Arrays;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,26,import java.util.Collection;
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,29,mport org.apache.commons.compress.compressors.CompressorStreamFactory;
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,30,mport org.apache.commons.compress.compressors.lz77support.Parameters;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,32,import org.junit.runners.Parameterized;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,33,import org.junit.runners.Parameterized.Parameters;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,34,import org.junit.runner.RunWith;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,36,@RunWith(Parameterized.class)
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,39,"@Parameters(name = ""using {0}"")"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,40,public static Collection<Object[]> factory() {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,41,return Arrays.asList(new Object[][] {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,42,"new Object[] { new FramedLZ4CompressorOutputStream.Parameters(FramedLZ4CompressorOutputStream.BlockSize.K64) },"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,43,"new Object[] { new FramedLZ4CompressorOutputStream.Parameters(FramedLZ4CompressorOutputStream.BlockSize.K256) },"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,44,"new Object[] { new FramedLZ4CompressorOutputStream.Parameters(FramedLZ4CompressorOutputStream.BlockSize.M1) },"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,45,"new Object[] { FramedLZ4CompressorOutputStream.Parameters.DEFAULT },"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,49,private final FramedLZ4CompressorOutputStream.Parameters params;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,51,public FramedLZ4CompressorRoundtripTest(FramedLZ4CompressorOutputStream.Parameters params) {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,52,this.params = params;
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,43,ramedLZ4CompressorOutputStream los = new FramedLZ4CompressorOutputStream(os)) {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,61,"FramedLZ4CompressorOutputStream los = new FramedLZ4CompressorOutputStream(os, params)) {"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,61,ry {
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,63, catch (Exception e) {
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,64,.printStackTrace();
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,79,Test
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,80,ublic void roundtripViaFactory() throws Exception {
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,81,"ile input = getFile(""bla.tar"");"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,82,ong start = System.currentTimeMillis();
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,83,"inal File outputSz = new File(dir, input.getName() + "".framed.lz4"");"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,84,ry (FileInputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,85,ileOutputStream os = new FileOutputStream(outputSz);
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,86,utputStream los = new CompressorStreamFactory()
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,87,"createCompressorOutputStream(CompressorStreamFactory.getLZ4Framed(), os)) {"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,88,"OUtils.copy(is, los);"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,90,"ystem.err.println(input.getName() + "" written, uncompressed bytes: "" + input.length()"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,91," "", compressed bytes: "" + outputSz.length() + "" after "" + (System.currentTimeMillis() - start) + ""ms"");"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,92,tart = System.currentTimeMillis();
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,93,ry (FileInputStream is = new FileInputStream(input);
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,94,nputStream sis = new CompressorStreamFactory()
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,95,"createCompressorInputStream(CompressorStreamFactory.LZ4_FRAMED, new FileInputStream(outputSz))) {"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,96,yte[] expected = IOUtils.toByteArray(is);
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,97,yte[] actual = IOUtils.toByteArray(sis);
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,98,"ssert.assertArrayEquals(expected, actual);"
False,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,100,"ystem.err.println(outputSz.getName() + "" read after "" + (System.currentTimeMillis() - start) + ""ms"");"
