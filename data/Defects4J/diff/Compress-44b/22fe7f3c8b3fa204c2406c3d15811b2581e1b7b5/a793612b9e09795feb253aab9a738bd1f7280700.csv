is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,18,package org.apache.commons.compress.compressors.brotli;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,20,import java.io.FilterInputStream;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,21,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,22,import java.io.InputStream;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,24,import org.apache.commons.compress.compressors.CompressorInputStream;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,27,* {@link FilterInputStream} implementation to decode Brotli encoded stream.
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,28,"* Library relies on <a href=""https://github.com/google/brotli"">Google brotli</a>"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,30,* @since 1.14
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,32,public class BrotliCompressorInputStream extends CompressorInputStream {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,34,private org.brotli.dec.BrotliInputStream decIS;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,36,public BrotliCompressorInputStream(InputStream in) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,37,this.decIS = new org.brotli.dec.BrotliInputStream(in);
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,41,* @return
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,42,* @throws IOException
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,43,* @see java.io.InputStream#available()
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,45,public int available() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,46,return decIS.available();
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,50,* @throws IOException
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,51,* @see org.brotli.dec.BrotliInputStream#close()
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,53,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,54,decIS.close();
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,58,* @return
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,59,* @see java.lang.Object#hashCode()
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,61,public int hashCode() {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,62,return decIS.hashCode();
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,65,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,66,@Override
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,67,public int read(byte[] b) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,68,return decIS.read(b);
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,72,* @param obj
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,73,* @return
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,74,* @see java.lang.Object#equals(java.lang.Object)
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,76,public boolean equals(Object obj) {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,77,return decIS.equals(obj);
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,81,* @param n
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,82,* @return
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,83,* @throws IOException
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,84,* @see java.io.InputStream#skip(long)
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,86,public long skip(long n) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,87,return decIS.skip(n);
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,91,* @param readlimit
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,92,* @see java.io.InputStream#mark(int)
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,94,public void mark(int readlimit) {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,95,decIS.mark(readlimit);
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,99,* @return
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,100,* @see java.io.InputStream#markSupported()
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,102,public boolean markSupported() {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,103,return decIS.markSupported();
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,106,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,107,@Override
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,108,public int read() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,109,final int ret = decIS.read();
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,110,count(ret == -1 ? 0 : 1);
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,111,return ret;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,114,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,115,@Override
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,116,"public int read(byte[] buf, int off, int len) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,117,"final int ret = decIS.read(buf, off, len);"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,118,count(ret);
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,119,return ret;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,123,* @return
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,124,* @see java.lang.Object#toString()
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,126,public String toString() {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,127,return decIS.toString();
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,131,* @throws IOException
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,132,* @see java.io.InputStream#reset()
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,134,public void reset() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,135,decIS.reset();
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,140,* There is no magic for Brotli
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,142,* @param signature
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,143,*            the bytes to check
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,144,* @param length
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,145,*            the number of bytes to check
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,146,* @return true
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,148,"static boolean matches(final byte[] signature, final int length) {"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java,149,return true;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,19,package org.apache.commons.compress.compressors.brotli;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,22,* Utility code for the Brotli compression format.
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,23,* @ThreadSafe
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,24,* @since 1.14
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,26,public class BrotliUtils {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,28,static enum CachedAvailability {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,29,"DONT_CACHE, CACHED_AVAILABLE, CACHED_UNAVAILABLE"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,32,private static volatile CachedAvailability cachedBrotliAvailability;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,34,static {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,35,cachedBrotliAvailability = CachedAvailability.DONT_CACHE;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,36,try {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,37,"Class.forName(""org.osgi.framework.BundleEvent"");"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,38,} catch (final Exception ex) {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,39,setCacheBrotliAvailablity(true);
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,43,/** Private constructor to prevent instantiation of this utility class. */
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,44,private BrotliUtils() {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,49,* Are the classes required to support Brotli compression available?
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,50,* @return true if the classes required to support Brotli compression are available
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,52,public static boolean isBrotliCompressionAvailable() {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,53,final CachedAvailability cachedResult = cachedBrotliAvailability;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,54,if (cachedResult != CachedAvailability.DONT_CACHE) {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,55,return cachedResult == CachedAvailability.CACHED_AVAILABLE;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,57,return internalIsBrotliCompressionAvailable();
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,60,private static boolean internalIsBrotliCompressionAvailable() {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,61,try {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,62,"return BrotliCompressorInputStream.matches(null, 0);"
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,63,} catch (final NoClassDefFoundError error) {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,64,return false;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,69,* Whether to cache the result of the Brotli for Java check.
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,71,* <p>This defaults to {@code false} in an OSGi environment and {@code true} otherwise.</p>
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,72,* @param doCache whether to cache the result
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,74,public static void setCacheBrotliAvailablity(final boolean doCache) {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,75,if (!doCache) {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,76,cachedBrotliAvailability = CachedAvailability.DONT_CACHE;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,77,} else if (cachedBrotliAvailability == CachedAvailability.DONT_CACHE) {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,78,final boolean hasXz = internalIsBrotliCompressionAvailable();
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,79,cachedBrotliAvailability = hasXz ? CachedAvailability.CACHED_AVAILABLE
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,80,: CachedAvailability.CACHED_UNAVAILABLE;
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,84,// only exists to support unit tests
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,85,static CachedAvailability getCachedBrotliAvailability() {
True,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java,86,return cachedBrotliAvailability;
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,18,package org.apache.commons.compress.compressors.brotli;
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,20,import static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,21,import static org.junit.Assert.assertTrue;
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,23,import java.io.ByteArrayOutputStream;
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,24,import java.io.File;
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,25,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,26,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,27,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,29,import org.apache.commons.compress.AbstractTestCase;
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,30,import org.apache.commons.compress.utils.IOUtils;
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,31,import org.junit.Assert;
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,32,import org.junit.Test;
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,34,public class BrotliCompressorInputStreamTest {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,37,* Test bridge works fine
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,38,* @throws {@link IOException}
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,40,@Test
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,41,public void testBrotliDecode() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,42,"final File input = AbstractTestCase.getFile(""brotli.testdata.compressed"");"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,43,"final File expected = AbstractTestCase.getFile(""brotli.testdata.uncompressed"");"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,44,try (InputStream inputStream = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,45,InputStream expectedStream = new FileInputStream(expected);
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,46,BrotliCompressorInputStream brotliInputStream = new BrotliCompressorInputStream(inputStream)) {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,47,final byte[] b = new byte[20];
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,48,"IOUtils.readFully(expectedStream, b);"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,49,ByteArrayOutputStream bos = new ByteArrayOutputStream();
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,50,int readByte = -1;
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,51,while((readByte = brotliInputStream.read()) != -1) {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,52,bos.write(readByte);
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,54,"Assert.assertArrayEquals(b, bos.toByteArray());"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,58,@Test
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,59,public void testCachingIsEnabledByDefaultAndXZIsPresent() {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,60,"assertEquals(BrotliUtils.CachedAvailability.CACHED_AVAILABLE, BrotliUtils.getCachedBrotliAvailability());"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,61,assertTrue(BrotliUtils.isBrotliCompressionAvailable());
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,64,@Test
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,65,public void testCanTurnOffCaching() {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,66,try {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,67,BrotliUtils.setCacheBrotliAvailablity(false);
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,68,"assertEquals(BrotliUtils.CachedAvailability.DONT_CACHE, BrotliUtils.getCachedBrotliAvailability());"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,69,assertTrue(BrotliUtils.isBrotliCompressionAvailable());
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,70,} finally {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,71,BrotliUtils.setCacheBrotliAvailablity(true);
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,75,@Test
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,76,public void testTurningOnCachingReEvaluatesAvailability() {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,77,try {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,78,BrotliUtils.setCacheBrotliAvailablity(false);
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,79,"assertEquals(BrotliUtils.CachedAvailability.DONT_CACHE, BrotliUtils.getCachedBrotliAvailability());"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,80,BrotliUtils.setCacheBrotliAvailablity(true);
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,81,"assertEquals(BrotliUtils.CachedAvailability.CACHED_AVAILABLE, BrotliUtils.getCachedBrotliAvailability());"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,82,} finally {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,83,BrotliUtils.setCacheBrotliAvailablity(true);
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,88,@Test
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,89,public void availableShouldReturnZero() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,90,"final File input = AbstractTestCase.getFile(""brotli.testdata.compressed"");"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,91,try (InputStream is = new FileInputStream(input)) {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,92,final BrotliCompressorInputStream in =
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,93,new BrotliCompressorInputStream(is);
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,94,Assert.assertTrue(in.available() == 0);
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,95,in.close();
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,99,@Test
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,100,public void shouldBeAbleToSkipAByte() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,101,"final File input = AbstractTestCase.getFile(""brotli.testdata.compressed"");"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,102,try (InputStream is = new FileInputStream(input)) {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,103,final BrotliCompressorInputStream in =
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,104,new BrotliCompressorInputStream(is);
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,105,"Assert.assertEquals(1, in.skip(1));"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,106,in.close();
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,110,@Test
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,111,public void singleByteReadWorksAsExpected() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,112,"final File input = AbstractTestCase.getFile(""brotli.testdata.compressed"");"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,113,try (InputStream is = new FileInputStream(input)) {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,114,final BrotliCompressorInputStream in =
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,115,new BrotliCompressorInputStream(is);
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,116,"//  starts with filename ""XXX"""
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,117,"Assert.assertEquals('X', in.read());"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,118,in.close();
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,122,@Test
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,123,public void singleByteReadReturnsMinusOneAtEof() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,124,"final File input = AbstractTestCase.getFile(""brotli.testdata.compressed"");"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,125,try (InputStream is = new FileInputStream(input)) {
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,126,final BrotliCompressorInputStream in =
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,127,new BrotliCompressorInputStream(is);
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,128,IOUtils.toByteArray(in);
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,129,"Assert.assertEquals(-1, in.read());"
True,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java,130,in.close();
