is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,24,import java.security.AccessController;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,25,import java.security.PrivilegedAction;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,26,import java.util.ArrayList;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,27,import java.util.Collections;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,28,import java.util.HashSet;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,29,import java.util.Iterator;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,30,import java.util.Locale;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,31,import java.util.Set;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,32,import java.util.SortedMap;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,33,import java.util.TreeMap;
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,33,mport org.apache.commons.compress.compressors.xz.XZCompressorInputStream;
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,34,mport org.apache.commons.compress.compressors.xz.XZCompressorOutputStream;
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,35,mport org.apache.commons.compress.compressors.xz.XZUtils;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,47,import org.apache.commons.compress.compressors.xz.XZCompressorInputStream;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,48,import org.apache.commons.compress.compressors.xz.XZCompressorOutputStream;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,49,import org.apache.commons.compress.compressors.xz.XZUtils;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,52,import org.apache.commons.compress.utils.Lists;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,53,import org.apache.commons.compress.utils.ServiceLoaderIterator;
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,44, <p>Factory to create Compressor[In|Out]putStreams from names. To add other
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,56,* <p>
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,57,* Factory to create Compressor[In|Out]putStreams from names. To add other
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,46, appropriate methods (and call their implementation from super of course).</p>
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,59,* appropriate methods (and call their implementation from super of course).
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,60,* </p>
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,51, final OutputStream out = new FileOutputStream(output);
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,52, CompressorOutputStream cos =
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,53,"      new CompressorStreamFactory().createCompressorOutputStream(CompressorStreamFactory.BZIP2, out);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,65,* final OutputStream out = new FileOutputStream(output);
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,66,* CompressorOutputStream cos = new CompressorStreamFactory()
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,67,"*         .createCompressorOutputStream(CompressorStreamFactory.BZIP2, out);"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,60, final InputStream is = new FileInputStream(input);
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,61, CompressorInputStream in =
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,62,"      new CompressorStreamFactory().createCompressorInputStream(CompressorStreamFactory.BZIP2, is);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,75,* final InputStream is = new FileInputStream(input);
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,76,"* CompressorInputStream in = new CompressorStreamFactory().createCompressorInputStream(CompressorStreamFactory.BZIP2,"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,77,*         is);
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,66, @Immutable provided that the deprecated method setDecompressConcatenated is not used.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,82,* @Immutable provided that the deprecated method setDecompressConcatenated is
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,83,*            not used.
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,69,ublic class CompressorStreamFactory {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,86,public class CompressorStreamFactory implements CompressorStreamProvider {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,88,private static final CompressorStreamFactory SINGLETON = new CompressorStreamFactory();
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,72, Constant (value {@value}) used to identify the BZIP2 compression algorithm.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,91,* Constant (value {@value}) used to identify the BZIP2 compression
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,92,* algorithm.
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,78, Constant (value {@value}) used to identify the GZIP compression algorithm.
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,79, Not supported as an output stream type.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,99,* Constant (value {@value}) used to identify the GZIP compression
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,100,* algorithm. Not supported as an output stream type.
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,85, Constant (value {@value}) used to identify the PACK200 compression algorithm.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,107,* Constant (value {@value}) used to identify the PACK200 compression
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,108,* algorithm.
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,104," Constant (value {@value}) used to identify the ""framed"" Snappy compression method."
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,105, Not supported as an output stream type.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,130,"* Constant (value {@value}) used to identify the ""framed"" Snappy"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,131,* compression method. Not supported as an output stream type.
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,111," Constant (value {@value}) used to identify the ""raw"" Snappy compression method."
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,112, Not supported as an output stream type.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,138,"* Constant (value {@value}) used to identify the ""raw"" Snappy compression"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,139,* method. Not supported as an output stream type.
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,118, Constant (value {@value}) used to identify the traditional Unix compress method.
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,119, Not supported as an output stream type.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,146,* Constant (value {@value}) used to identify the traditional Unix compress
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,147,* method. Not supported as an output stream type.
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,131," If true, decompress until the end of the input."
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,132," If false, stop after the first stream and leave the"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,133, input position to point to the next byte after the stream
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,161,"* If true, decompress until the end of the input. If false, stop after the"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,162,* first stream and leave the input position to point to the next byte after
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,163,* the stream
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,136,/ This is Boolean so setDecompressConcatenated can determine whether it has been set by the ctor
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,137,"/ once the setDecompressConcatenated method has been removed, it can revert to boolean"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,166,// This is Boolean so setDecompressConcatenated can determine whether it has
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,167,// been set by the ctor
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,168,"// once the setDecompressConcatenated method has been removed, it can revert"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,169,// to boolean
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,171,// Thread-local gate to prevent recursive provider lookups
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,172,"private SortedMap<String, CompressorStreamProvider> compressorInputStreamProviders;"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,173,"private SortedMap<String, CompressorStreamProvider> compressorOutputStreamProviders;"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,140," If true, decompress until the end of the input."
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,141," If false, stop after the first stream and leave the"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,142, input position to point to the next byte after the stream
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,176,"* If true, decompress until the end of the input. If false, stop after the"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,177,* first stream and leave the input position to point to the next byte after
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,178,* the stream
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,182,"static void putAll(Set<String> names, CompressorStreamProvider provider,"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,183,"TreeMap<String, CompressorStreamProvider> map) {"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,184,for (String name : names) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,185,"map.put(toKey(name), provider);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,190,* Constructs a new sorted map from input stream provider names to provider
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,191,* objects.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,193,* <p>
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,194,* The map returned by this method will have one entry for each provider for
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,195,* which support is available in the current Java virtual machine. If two or
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,196,* more supported provider have the same name then the resulting map will
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,197,* contain just one of them; which one it will contain is not specified.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,198,* </p>
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,200,* <p>
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,201,"* The invocation of this method, and the subsequent use of the resulting"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,202,"* map, may cause time-consuming disk or network I/O operations to occur."
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,203,* This method is provided for applications that need to enumerate all of
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,204,"* the available providers, for example to allow user provider selection."
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,205,* </p>
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,207,* <p>
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,208,* This method may return different results at different times if new
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,209,* providers are dynamically made available to the current Java virtual
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,210,* machine.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,211,* </p>
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,213,"* @return An immutable, map from names to provider objects"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,214,* @since 1.13
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,216,"public static SortedMap<String, CompressorStreamProvider> findAvailableCompressorInputStreamProviders() {"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,217,"return AccessController.doPrivileged(new PrivilegedAction<SortedMap<String, CompressorStreamProvider>>() {"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,218,@Override
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,219,"public SortedMap<String, CompressorStreamProvider> run() {"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,220,"TreeMap<String, CompressorStreamProvider> map = new TreeMap<>();"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,221,"putAll(SINGLETON.getInputStreamCompressorNames(), SINGLETON, map);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,222,for (CompressorStreamProvider provider : findCompressorStreamProviders()) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,223,"putAll(provider.getInputStreamCompressorNames(), provider, map);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,225,return map;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,231,* Constructs a new sorted map from output stream provider names to provider
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,232,* objects.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,234,* <p>
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,235,* The map returned by this method will have one entry for each provider for
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,236,* which support is available in the current Java virtual machine. If two or
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,237,* more supported provider have the same name then the resulting map will
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,238,* contain just one of them; which one it will contain is not specified.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,239,* </p>
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,241,* <p>
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,242,"* The invocation of this method, and the subsequent use of the resulting"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,243,"* map, may cause time-consuming disk or network I/O operations to occur."
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,244,* This method is provided for applications that need to enumerate all of
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,245,"* the available providers, for example to allow user provider selection."
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,246,* </p>
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,248,* <p>
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,249,* This method may return different results at different times if new
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,250,* providers are dynamically made available to the current Java virtual
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,251,* machine.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,252,* </p>
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,254,"* @return An immutable, map from names to provider objects"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,255,* @since 1.13
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,257,"public static SortedMap<String, CompressorStreamProvider> findAvailableCompressorOutputStreamProviders() {"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,258,"return AccessController.doPrivileged(new PrivilegedAction<SortedMap<String, CompressorStreamProvider>>() {"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,259,@Override
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,260,"public SortedMap<String, CompressorStreamProvider> run() {"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,261,"TreeMap<String, CompressorStreamProvider> map = new TreeMap<>();"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,262,"putAll(SINGLETON.getOutputStreamCompressorNames(), SINGLETON, map);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,263,for (CompressorStreamProvider provider : findCompressorStreamProviders()) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,264,"putAll(provider.getOutputStreamCompressorNames(), provider, map);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,266,return map;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,272,@Override
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,273,public Set<String> getInputStreamCompressorNames() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,274,HashSet<String> set = new HashSet<>();
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,275,"Collections.addAll(set, GZIP, BZIP2, XZ, LZMA, PACK200, SNAPPY_RAW, SNAPPY_FRAMED, Z, DEFLATE);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,276,return set;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,279,@Override
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,280,public Set<String> getOutputStreamCompressorNames() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,281,HashSet<String> set = new HashSet<>();
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,282,"Collections.addAll(set, GZIP, BZIP2, XZ, PACK200, DEFLATE);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,283,return set;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,286,private static Iterator<CompressorStreamProvider> serviceLoaderIterator() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,287,return new ServiceLoaderIterator<>(CompressorStreamProvider.class);
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,290,private static ArrayList<CompressorStreamProvider> findCompressorStreamProviders() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,291,return Lists.newArrayList(serviceLoaderIterator());
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,150,his.decompressUntilEOF = null;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,298,this.decompressUntilEOF = null;
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,155, @param       decompressUntilEOF
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,156,"                          if true, decompress until the end of the"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,157,"                          input; if false, stop after the first"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,158,                          stream and leave the input position to point
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,159,                          to the next byte after the stream.
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,160,"           This setting applies to the gzip, bzip2 and xz formats only."
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,304,* @param decompressUntilEOF
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,305,"*            if true, decompress until the end of the input; if false, stop"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,306,*            after the first stream and leave the input position to point
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,307,*            to the next byte after the stream. This setting applies to the
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,308,"*            gzip, bzip2 and xz formats only."
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,165,/ Also copy to existing variable so can continue to use that as the current value
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,313,// Also copy to existing variable so can continue to use that as the
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,314,// current value
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,170, Whether to decompress the full input or only the first stream
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,171, in formats supporting multiple concatenated input streams.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,319,* Whether to decompress the full input or only the first stream in formats
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,320,* supporting multiple concatenated input streams.
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,173," <p>This setting applies to the gzip, bzip2 and xz formats only.</p>"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,322,* <p>
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,323,"* This setting applies to the gzip, bzip2 and xz formats only."
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,324,* </p>
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,175, @param       decompressConcatenated
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,176,"                          if true, decompress until the end of the"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,177,"                          input; if false, stop after the first"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,178,                          stream and leave the input position to point
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,179,                          to the next byte after the stream
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,326,* @param decompressConcatenated
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,327,"*            if true, decompress until the end of the input; if false, stop"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,328,*            after the first stream and leave the input position to point
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,329,*            to the next byte after the stream
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,181, @deprecated 1.10 use the {@link #CompressorStreamFactory(boolean)} constructor instead
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,182, @throws IllegalStateException if the constructor {@link #CompressorStreamFactory(boolean)}
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,183, was used to create the factory
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,331,* @deprecated 1.10 use the {@link #CompressorStreamFactory(boolean)}
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,332,*             constructor instead
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,333,* @throws IllegalStateException
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,334,*             if the constructor {@link #CompressorStreamFactory(boolean)}
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,335,*             was used to create the factory
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,194," Create an compressor input stream from an input stream, autodetecting"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,195, the compressor type from the first few bytes of the stream. The InputStream
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,346,"* Create an compressor input stream from an input stream, autodetecting the"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,347,* compressor type from the first few bytes of the stream. The InputStream
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,198, @param in the input stream
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,350,* @param in
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,351,*            the input stream
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,200, @throws CompressorException if the compressor name is not known
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,201, @throws IllegalArgumentException if the stream is null or does not support mark
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,353,* @throws CompressorException
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,354,*             if the compressor name is not known
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,355,* @throws IllegalArgumentException
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,356,*             if the stream is null or does not support mark
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,204,ublic CompressorInputStream createCompressorInputStream(final InputStream in)
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,205,hrows CompressorException {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,359,public CompressorInputStream createCompressorInputStream(final InputStream in) throws CompressorException {
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,244,"f (XZUtils.matches(signature, signatureLength) &&"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,245,ZUtils.isXZCompressionAvailable()) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,398,"if (XZUtils.matches(signature, signatureLength) && XZUtils.isXZCompressionAvailable()) {"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,249,"f (LZMAUtils.matches(signature, signatureLength) &&"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,250,ZMAUtils.isLZMACompressionAvailable()) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,402,"if (LZMAUtils.matches(signature, signatureLength) && LZMAUtils.isLZMACompressionAvailable()) {"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,262, Create a compressor input stream from a compressor name and an input stream.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,414,* Creates a compressor input stream from a compressor name and an input
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,415,* stream.
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,264," @param name of the compressor,"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,265," i.e. {@value #GZIP}, {@value #BZIP2}, {@value #XZ}, {@value #LZMA},"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,266," {@value #PACK200}, {@value #SNAPPY_RAW}, {@value #SNAPPY_FRAMED},"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,267, {@value #Z} or {@value #DEFLATE}
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,268, @param in the input stream
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,417,* @param name
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,418,"*            of the compressor, i.e. {@value #GZIP}, {@value #BZIP2},"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,419,"*            {@value #XZ}, {@value #LZMA}, {@value #PACK200},"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,420,"*            {@value #SNAPPY_RAW}, {@value #SNAPPY_FRAMED}, {@value #Z} or"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,421,*            {@value #DEFLATE}
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,422,* @param in
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,423,*            the input stream
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,270, @throws CompressorException if the compressor name is not known
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,271, @throws IllegalArgumentException if the name or input stream is null
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,425,* @throws CompressorException
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,426,*             if the compressor name is not known
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,427,* @throws IllegalArgumentException
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,428,*             if the name or input stream is null
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,273,"ublic CompressorInputStream createCompressorInputStream(final String name,"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,274,inal InputStream in) throws CompressorException {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,430,@Override
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,431,"public CompressorInputStream createCompressorInputStream(final String name, final InputStream in)"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,432,throws CompressorException {
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,276,hrow new IllegalArgumentException(
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,277,"Compressor name and stream must not be null."");"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,434,"throw new IllegalArgumentException(""Compressor name and stream must not be null."");"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,319,hrow new CompressorException(
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,320,"Could not create CompressorInputStream."", e);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,476,"throw new CompressorException(""Could not create CompressorInputStream."", e);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,478,final CompressorStreamProvider compressorStreamProvider = getCompressorInputStreamProviders().get(toKey(name));
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,479,if (compressorStreamProvider != null) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,480,"return compressorStreamProvider.createCompressorInputStream(name, in);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,486,private static String toKey(final String name) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,487,return name.toUpperCase(Locale.ROOT);
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,326, Create an compressor output stream from an compressor name and an output stream.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,491,* Creates an compressor output stream from an compressor name and an output
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,492,* stream.
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,328," @param name the compressor name,"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,329," i.e. {@value #GZIP}, {@value #BZIP2}, {@value #XZ},"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,330, {@value #PACK200} or {@value #DEFLATE}
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,331, @param out the output stream
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,494,* @param name
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,495,"*            the compressor name, i.e. {@value #GZIP}, {@value #BZIP2},"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,496,"*            {@value #XZ}, {@value #PACK200} or {@value #DEFLATE}"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,497,* @param out
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,498,*            the output stream
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,333, @throws CompressorException if the archiver name is not known
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,334, @throws IllegalArgumentException if the archiver name or stream is null
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,500,* @throws CompressorException
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,501,*             if the archiver name is not known
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,502,* @throws IllegalArgumentException
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,503,*             if the archiver name or stream is null
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,336,ublic CompressorOutputStream createCompressorOutputStream(
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,337,"inal String name, final OutputStream out)"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,505,@Override
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,506,"public CompressorOutputStream createCompressorOutputStream(final String name, final OutputStream out)"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,340,hrow new IllegalArgumentException(
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,341,"Compressor name and stream must not be null."");"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,509,"throw new IllegalArgumentException(""Compressor name and stream must not be null."");"
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,367,hrow new CompressorException(
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,368,"Could not create CompressorOutputStream"", e);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,535,"throw new CompressorException(""Could not create CompressorOutputStream"", e);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,537,final CompressorStreamProvider compressorStreamProvider = getCompressorOutputStreamProviders().get(toKey(name));
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,538,if (compressorStreamProvider != null) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,539,"return compressorStreamProvider.createCompressorOutputStream(name, out);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,549,public static CompressorStreamFactory getSingleton() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,550,return SINGLETON;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,553,public static String getBzip2() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,554,return BZIP2;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,557,public static String getGzip() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,558,return GZIP;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,561,public static String getPack200() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,562,return PACK200;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,565,public static String getXz() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,566,return XZ;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,569,public static String getLzma() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,570,return LZMA;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,573,public static String getSnappyFramed() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,574,return SNAPPY_FRAMED;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,577,public static String getSnappyRaw() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,578,return SNAPPY_RAW;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,581,public static String getZ() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,582,return Z;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,585,public static String getDeflate() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,586,return DEFLATE;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,589,public Boolean getDecompressUntilEOF() {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,590,return decompressUntilEOF;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,593,"public SortedMap<String, CompressorStreamProvider> getCompressorInputStreamProviders() {"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,594,if (compressorInputStreamProviders == null) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,595,compressorInputStreamProviders = Collections
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,596,.unmodifiableSortedMap(findAvailableCompressorInputStreamProviders());
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,598,return compressorInputStreamProviders;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,601,"public SortedMap<String, CompressorStreamProvider> getCompressorOutputStreamProviders() {"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,602,if (compressorOutputStreamProviders == null) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,603,compressorOutputStreamProviders = Collections
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,604,.unmodifiableSortedMap(findAvailableCompressorOutputStreamProviders());
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,606,return compressorOutputStreamProviders;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,20,package org.apache.commons.compress.compressors;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,22,import java.io.InputStream;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,23,import java.io.OutputStream;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,24,import java.util.Set;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,27,* Creates Compressor {@link CompressorInputStream}s and
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,28,* {@link CompressorOutputStream}s.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,30,* @since 1.13
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,32,public interface CompressorStreamProvider {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,35,* Creates a compressor input stream from a compressor name and an input
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,36,* stream.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,38,* @param name
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,39,"*            of the compressor, i.e. {@value #GZIP}, {@value #BZIP2},"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,40,"*            {@value #XZ}, {@value #LZMA}, {@value #PACK200},"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,41,"*            {@value #SNAPPY_RAW}, {@value #SNAPPY_FRAMED}, {@value #Z} or"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,42,*            {@value #DEFLATE}
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,43,* @param in
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,44,*            the input stream
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,45,* @return compressor input stream
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,46,* @throws CompressorException
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,47,*             if the compressor name is not known
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,48,* @throws IllegalArgumentException
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,49,*             if the name or input stream is null
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,51,"CompressorInputStream createCompressorInputStream(final String name, final InputStream in)"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,52,throws CompressorException;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,55,* Creates a compressor output stream from an compressor name and an output
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,56,* stream.
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,58,* @param name
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,59,"*            the compressor name, i.e. {@value #GZIP}, {@value #BZIP2},"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,60,"*            {@value #XZ}, {@value #PACK200} or {@value #DEFLATE}"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,61,* @param out
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,62,*            the output stream
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,63,* @return the compressor output stream
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,64,* @throws CompressorException
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,65,*             if the archiver name is not known
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,66,* @throws IllegalArgumentException
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,67,*             if the archiver name or stream is null
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,69,"CompressorOutputStream createCompressorOutputStream(final String name, final OutputStream out)"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,70,throws CompressorException;
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,73,* Gets all the input stream compressor names for this provider
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,75,* @return all the input compressor names for this provider
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,77,Set<String> getInputStreamCompressorNames();
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,80,* Gets all the output stream compressor names for this provider
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,82,* @return all the output compressor names for this provider
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamProvider.java,84,Set<String> getOutputStreamCompressorNames();
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,20,package org.apache.commons.compress.utils;
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,22,import java.util.Collection;
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,23,import java.util.Iterator;
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,24,import java.util.Objects;
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,27,* Iterator utilities.
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,29,* @since 1.13.
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,31,public class Iterators {
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,34,* Adds all the elements in the source {@code iterator} to the target
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,35,* {@code collection}.
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,37,* <p>
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,38,"* When this method returns, the {@code iterator} will be ""empty"": its"
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,39,* {@code hasNext()} method returns {@code false}.
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,40,* </p>
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,42,* @return {@code true} if the target {@code collection} was modified as a
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,43,*         result of this operation
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,45,"public static <T> boolean addAll(final Collection<T> collection, final Iterator<? extends T> iterator) {"
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,46,Objects.requireNonNull(collection);
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,47,Objects.requireNonNull(iterator);
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,48,boolean wasModified = false;
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,49,while (iterator.hasNext()) {
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,50,wasModified |= collection.add(iterator.next());
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,52,return wasModified;
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,55,private Iterators() {
True,src/main/java/org/apache/commons/compress/utils/Iterators.java,src/main/java/org/apache/commons/compress/utils/Iterators.java,56,// do not instantiate
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,20,package org.apache.commons.compress.utils;
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,22,import java.util.ArrayList;
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,23,import java.util.Iterator;
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,26,* List utilities
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,28,* @since 1.13
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,30,public class Lists {
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,33,* Creates a new {@link ArrayList}.
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,35,* @return a new {@link ArrayList}
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,37,public static <E> ArrayList<E> newArrayList() {
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,38,return new ArrayList<>();
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,42,* Creates a new {@link ArrayList} filled with the contents of the given
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,43,* {@code iterator}.
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,45,* @param iterator
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,46,*            the source iterator
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,47,* @return a new {@link ArrayList}
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,49,public static <E> ArrayList<E> newArrayList(final Iterator<? extends E> iterator) {
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,50,final ArrayList<E> list = newArrayList();
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,51,"Iterators.addAll(list, iterator);"
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,52,return list;
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,55,private Lists() {
True,src/main/java/org/apache/commons/compress/utils/Lists.java,src/main/java/org/apache/commons/compress/utils/Lists.java,56,// do not instantiate
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,20,package org.apache.commons.compress.utils;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,22,import java.util.Iterator;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,23,import java.util.NoSuchElementException;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,24,import java.util.ServiceConfigurationError;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,25,import java.util.ServiceLoader;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,28,* Iterates all services for a given class through the standard
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,29,* {@link ServiceLoader} mechanism.
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,31,* @param <E>
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,32,*            The service to load
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,33,* @since 1.13
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,35,public class ServiceLoaderIterator<E> implements Iterator<E> {
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,37,private E nextServiceLoader;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,38,private final Class<E> service;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,39,private final Iterator<E> serviceLoaderIterator;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,41,public ServiceLoaderIterator(final Class<E> service) {
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,42,"this(service, ClassLoader.getSystemClassLoader());"
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,45,"public ServiceLoaderIterator(final Class<E> service, final ClassLoader classLoader) {"
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,46,this.service = service;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,47,"final ServiceLoader<E> serviceLoader = ServiceLoader.load(service, classLoader);"
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,48,serviceLoaderIterator = serviceLoader.iterator();
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,49,nextServiceLoader = null;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,52,private boolean getNextServiceLoader() {
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,53,while (nextServiceLoader == null) {
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,54,try {
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,55,if (!serviceLoaderIterator.hasNext()) {
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,56,return false;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,58,nextServiceLoader = serviceLoaderIterator.next();
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,59,} catch (final ServiceConfigurationError e) {
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,60,if (e.getCause() instanceof SecurityException) {
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,61,// Ignore security exceptions
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,62,// TODO Log?
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,63,continue;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,65,throw e;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,68,return true;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,71,@Override
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,72,public boolean hasNext() {
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,73,return getNextServiceLoader();
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,76,@Override
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,77,public E next() {
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,78,if (!getNextServiceLoader()) {
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,79,"throw new NoSuchElementException(""No more elements for service "" + service.getName());"
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,81,final E tempNext = nextServiceLoader;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,82,nextServiceLoader = null;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,83,return tempNext;
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,86,@Override
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,87,public void remove() {
True,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,src/main/java/org/apache/commons/compress/utils/ServiceLoaderIterator.java,88,"throw new UnsupportedOperationException(""service="" + service.getName());"
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,20,package org.apache.commons.compress.compressors;
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,22,import java.io.ByteArrayInputStream;
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,23,import java.io.ByteArrayOutputStream;
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,25,import org.apache.commons.compress.compressors.TestCompressorStreamProvider.InvocationConfirmationException;
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,26,import org.junit.Test;
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,28,public class CompressorServiceLoaderTest {
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,30,@Test(expected = InvocationConfirmationException.class)
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,31,public void testInputStream() throws CompressorException {
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,32,"new CompressorStreamFactory().createCompressorInputStream(""TestInput1"", new ByteArrayInputStream(new byte[] {}));"
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,35,@Test(expected = InvocationConfirmationException.class)
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,36,public void testOutputStream() throws CompressorException {
True,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java,37,"new CompressorStreamFactory().createCompressorOutputStream(""TestOutput1"", new ByteArrayOutputStream());"
False,src/test/java/org/apache/commons/compress/compressors/CompressorStreamFactoryRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorStreamFactoryRoundtripTest.java,57,inal CompressorStreamFactory factory = new CompressorStreamFactory();
True,src/test/java/org/apache/commons/compress/compressors/CompressorStreamFactoryRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/CompressorStreamFactoryRoundtripTest.java,57,final CompressorStreamProvider factory = new CompressorStreamFactory();
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,20,package org.apache.commons.compress.compressors;
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,22,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,23,import java.io.OutputStream;
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,24,import java.util.Collections;
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,25,import java.util.HashSet;
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,26,import java.util.Set;
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,28,public class TestCompressorStreamProvider implements CompressorStreamProvider {
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,30,public static final class InvocationConfirmationException extends CompressorException {
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,32,private static final long serialVersionUID = 1L;
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,34,public InvocationConfirmationException(String message) {
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,35,super(message);
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,39,@Override
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,40,"public CompressorInputStream createCompressorInputStream(String name, InputStream in) throws CompressorException {"
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,41,throw new InvocationConfirmationException(name);
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,44,@Override
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,45,"public CompressorOutputStream createCompressorOutputStream(String name, OutputStream out)"
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,46,throws CompressorException {
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,47,throw new InvocationConfirmationException(name);
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,50,@Override
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,51,public Set<String> getInputStreamCompressorNames() {
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,52,HashSet<String> set = new HashSet<>();
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,53,"Collections.addAll(set, ""TestInput1"");"
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,54,return set;
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,57,@Override
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,58,public Set<String> getOutputStreamCompressorNames() {
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,59,HashSet<String> set = new HashSet<>();
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,60,"Collections.addAll(set, ""TestOutput1"");"
True,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,src/test/java/org/apache/commons/compress/compressors/TestCompressorStreamProvider.java,61,return set;
