is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java,171,verifyContentChecksum();
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java,198,private void verifyContentChecksum() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java,199,if (expectContentChecksum) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java,200,"int skipped = (int) IOUtils.skip(in, 4);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java,201,count(skipped);
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java,202,if (4 != skipped) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java,203,"throw new IOException(""Premature end of stream while reading content checksum"");"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,207,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,208,public void rejectsStreamsWithoutContentChecksum() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,209,byte[] input = new byte[] {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,210,"4, 0x22, 0x4d, 0x18, // signature"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,211,"0x64, // flag - Version 01, block independent, no block checksum, no content size, with content checksum"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,212,"0x70, // block size 4MB"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,213,"0x00, // checksum, revisit once it gets validated"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,214,"13, 0, 0, (byte) 0x80, // 13 bytes length and uncompressed bit set"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,215,"'H', 'e', 'l', 'l', 'o', ',', ' ', 'w', 'o', 'r', 'l', 'd', '!', // content"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,216,"0, 0, 0, 0, // empty block marker"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,218,try {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,219,try (InputStream a = new FramedLZ4CompressorInputStream(new ByteArrayInputStream(input))) {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,220,IOUtils.toByteArray(a);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,221,"fail(""expected exception"");"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,223,} catch (IOException ex) {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStreamTest.java,224,"assertThat(ex.getMessage(), containsString(""content checksum""));"
