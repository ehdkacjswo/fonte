is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,130,nt b = readOneByte();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,130,int b = readOneByte();
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,131,if (b == -1) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,132,"throw new IOException(""Premature end of stream reading block start"");"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,134,int length = 0;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,135,int offset = 0;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,137,switch (b & TAG_MASK) {
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,139,case 0x00:
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,141,length = readLiteralLength(b);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,142,uncompressedBytesRemaining -= length;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,143,startLiteral(length);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,144,state = State.IN_LITERAL;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,145,break;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,147,case 0x01:
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,150,* These elements can encode lengths between [4..11] bytes and
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,151,* offsets between [0..2047] bytes. (len-4) occupies three bits
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,152,* and is stored in bits [2..4] of the tag byte. The offset
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,153,"* occupies 11 bits, of which the upper three are stored in the"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,154,"* upper three bits ([5..7]) of the tag byte, and the lower"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,155,* eight are stored in a byte following the tag byte.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,158,length = 4 + ((b >> 2) & 0x07);
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,159,uncompressedBytesRemaining -= length;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,160,offset = (b & 0xE0) << 3;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,161,b = readOneByte();
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,132,"hrow new IOException(""Premature end of stream reading block start"");"
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,134,nt length = 0;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,135,nt offset = 0;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,137,witch (b & TAG_MASK) {
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,139,ase 0x00:
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,141,ength = readLiteralLength(b);
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,142,ncompressedBytesRemaining -= length;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,143,tartLiteral(length);
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,144,tate = State.IN_LITERAL;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,145,reak;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,147,ase 0x01:
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,150, These elements can encode lengths between [4..11] bytes and
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,151, offsets between [0..2047] bytes. (len-4) occupies three bits
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,152, and is stored in bits [2..4] of the tag byte. The offset
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,153," occupies 11 bits, of which the upper three are stored in the"
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,154," upper three bits ([5..7]) of the tag byte, and the lower"
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,155, eight are stored in a byte following the tag byte.
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,158,ength = 4 + ((b >> 2) & 0x07);
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,159,ncompressedBytesRemaining -= length;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,160,ffset = (b & 0xE0) << 3;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,161, = readOneByte();
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,162,f (b == -1) {
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,163,"hrow new IOException(""Premature end of stream reading copy length"");"
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,165,ffset |= b;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,167,"tartCopy(offset, length);"
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,168,tate = State.IN_COPY;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,169,reak;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,171,ase 0x02:
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,174, These elements can encode lengths between [1..64] and offsets
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,175, from [0..65535]. (len-1) occupies six bits and is stored in
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,176, the upper six bits ([2..7]) of the tag byte. The offset is
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,177, stored as a little-endian 16-bit integer in the two bytes
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,178, following the tag byte.
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,181,ength = (b >> 2) + 1;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,182,ncompressedBytesRemaining -= length;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,184,"ffset = (int) ByteUtils.fromLittleEndian(supplier, 2);"
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,186,"tartCopy(offset, length);"
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,187,tate = State.IN_COPY;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,188,reak;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,190,ase 0x03:
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,193, These are like the copies with 2-byte offsets (see previous
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,194," subsection), except that the offset is stored as a 32-bit"
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,195, integer instead of a 16-bit integer (and thus will occupy
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,196, four bytes).
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,199,ength = (b >> 2) + 1;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,200,ncompressedBytesRemaining -= length;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,202,"ffset = (int) ByteUtils.fromLittleEndian(supplier, 4) & 0x7fffffff;"
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,204,"tartCopy(offset, length);"
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,205,tate = State.IN_COPY;
False,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,206,reak;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,163,"throw new IOException(""Premature end of stream reading copy length"");"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,165,offset |= b;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,167,"startCopy(offset, length);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,168,state = State.IN_COPY;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,169,break;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,171,case 0x02:
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,174,* These elements can encode lengths between [1..64] and offsets
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,175,* from [0..65535]. (len-1) occupies six bits and is stored in
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,176,* the upper six bits ([2..7]) of the tag byte. The offset is
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,177,* stored as a little-endian 16-bit integer in the two bytes
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,178,* following the tag byte.
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,181,length = (b >> 2) + 1;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,182,uncompressedBytesRemaining -= length;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,184,"offset = (int) ByteUtils.fromLittleEndian(supplier, 2);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,186,"startCopy(offset, length);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,187,state = State.IN_COPY;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,188,break;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,190,case 0x03:
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,193,* These are like the copies with 2-byte offsets (see previous
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,194,"* subsection), except that the offset is stored as a 32-bit"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,195,* integer instead of a 16-bit integer (and thus will occupy
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,196,* four bytes).
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,199,length = (b >> 2) + 1;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,200,uncompressedBytesRemaining -= length;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,202,"offset = (int) ByteUtils.fromLittleEndian(supplier, 4) & 0x7fffffff;"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,204,"startCopy(offset, length);"
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,205,state = State.IN_COPY;
True,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java,206,break;
