is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,23,import java.nio.ByteBuffer;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,24,import java.nio.ByteOrder;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,25,import java.util.zip.CRC32;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,26,import java.util.zip.Deflater;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,27,import java.util.zip.GZIPInputStream;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,33,* Compressed output stream using the gzip format. This implementation improves
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,34,* over the standard {@link GZIPOutputStream} class by allowing
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,35,"* the configuration of the compression level and the header metadata (filename,"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,36,"* comment, modification time, operating system and extra flags)."
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,38,"* @see <a href=""http://tools.ietf.org/html/rfc1952"">GZIP File Format Specification</a>"
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,29,rivate final GZIPOutputStream out;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,42,/** Header flag indicating a file name follows the header */
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,43,private static final int FNAME = 1 << 3;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,45,/** Header flag indicating a comment follows the header */
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,46,private static final int FCOMMENT = 1 << 4;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,48,/** The underlying stream */
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,49,private final OutputStream out;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,51,/** Deflater used to compress the data */
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,52,private final Deflater deflater;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,54,/** The buffer receiving the compressed data from the deflater */
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,55,private final byte[] buffer = new byte[512];
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,57,/** Indicates if the stream has been closed */
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,58,private boolean closed;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,60,/** The checksum of the uncompressed data */
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,61,private final CRC32 crc = new CRC32();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,64,* Creates a gzip compressed output stream with the default parameters.
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,66,public GzipCompressorOutputStream(OutputStream out) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,67,"this(out, new GzipParameters());"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,71,* Creates a gzip compressed output stream with the specified parameters.
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,73,* @since 1.7
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,75,"public GzipCompressorOutputStream(OutputStream out, GzipParameters parameters) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,76,this.out = out;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,77,"this.deflater = new Deflater(parameters.getCompressionLevel(), true);"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,79,writeHeader(parameters);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,82,private void writeHeader(GzipParameters parameters) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,83,String filename = parameters.getFilename();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,84,String comment = parameters.getComment();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,86,ByteBuffer buffer = ByteBuffer.allocate(10);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,87,buffer.order(ByteOrder.LITTLE_ENDIAN);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,88,buffer.putShort((short) GZIPInputStream.GZIP_MAGIC);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,89,buffer.put((byte) 8); // compression method (8: deflate)
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,90,buffer.put((byte) ((filename != null ? FNAME : 0) | (comment != null ? FCOMMENT : 0))); // flags
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,91,buffer.putInt((int) (parameters.getModificationTime() / 1000));
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,93,// extra flags
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,94,int compressionLevel = parameters.getCompressionLevel();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,95,if (compressionLevel == Deflater.BEST_COMPRESSION) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,96,buffer.put((byte) 2);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,97,} else if (compressionLevel == Deflater.BEST_SPEED) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,98,buffer.put((byte) 4);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,99,} else {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,100,buffer.put((byte) 0);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,103,buffer.put((byte) parameters.getOperatingSystem());
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,105,out.write(buffer.array());
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,107,if (filename != null) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,108,"out.write(filename.getBytes(""ISO-8859-1""));"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,109,out.write(0);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,112,if (comment != null) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,113,"out.write(comment.getBytes(""ISO-8859-1""));"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,114,out.write(0);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,118,private void writeTrailer() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,119,ByteBuffer buffer = ByteBuffer.allocate(8);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,120,buffer.order(ByteOrder.LITTLE_ENDIAN);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,121,buffer.putInt((int) crc.getValue());
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,122,buffer.putInt(deflater.getTotalIn());
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,31,ublic GzipCompressorOutputStream( final OutputStream outputStream ) throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,32,ut = new GZIPOutputStream(outputStream);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,124,out.write(buffer.array());
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,37,ut.write(b);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,129,"write(new byte[]{(byte) (b & 0xff)}, 0, 1);"
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,46,ublic void write(byte[] b) throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,47,ut.write(b);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,138,public void write(byte[] buffer) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,139,"write(buffer, 0, buffer.length);"
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,56,"ublic void write(byte[] b, int from, int length) throws IOException {"
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,57,"ut.write(b, from, length);"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,148,"public void write(byte[] buffer, int offset, int length) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,149,if (deflater.finished()) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,150,"throw new IOException(""Cannot write more data, the end of the compressed data stream has been reached"");"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,152,} else if (length > 0) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,153,"deflater.setInput(buffer, offset, length);"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,155,while (!deflater.needsInput()) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,156,deflate();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,159,"crc.update(buffer, offset, length);"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,163,private void deflate() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,164,"int length = deflater.deflate(buffer, 0, buffer.length);"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,165,if (length > 0) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,166,"out.write(buffer, 0, length);"
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,66,ut.finish();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,176,if (!deflater.finished()) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,177,deflater.finish();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,179,while (!deflater.finished()) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,180,deflate();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,183,writeTrailer();
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,81,ut.close();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,199,if (!closed) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,200,finish();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,201,deflater.end();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,202,out.close();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,203,closed = true;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,20,package org.apache.commons.compress.compressors.gzip;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,22,import java.util.zip.Deflater;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,25,* Parameters for the GZIP compressor.
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,27,* @since 1.7
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,29,public class GzipParameters {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,31,private int compressionLevel = Deflater.DEFAULT_COMPRESSION;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,32,private long modificationTime;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,33,private String filename;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,34,private String comment;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,35,private int operatingSystem = 255; // Unknown OS by default
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,37,public int getCompressionLevel() {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,38,return compressionLevel;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,42,* Sets the compression level.
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,44,* @param compressionLevel the compression level (between 0 and 9)
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,45,* @see Deflater#NO_COMPRESSION
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,46,* @see Deflater#BEST_SPEED
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,47,* @see Deflater#DEFAULT_COMPRESSION
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,48,* @see Deflater#BEST_COMPRESSION
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,50,public void setCompressionLevel(int compressionLevel) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,51,if (compressionLevel < -1 || compressionLevel > 9) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,52,"throw new IllegalArgumentException(""Invalid gzip compression level: "" + compressionLevel);"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,54,this.compressionLevel = compressionLevel;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,57,public long getModificationTime() {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,58,return modificationTime;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,62,* Sets the modification time of the compressed file.
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,64,"* @param modificationTime the modification time, in milliseconds"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,66,public void setModificationTime(long modificationTime) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,67,this.modificationTime = modificationTime;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,70,public String getFilename() {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,71,return filename;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,75,* Sets the name of the compressed file.
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,77,* @param filename the name of the file without the directory path
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,79,public void setFilename(String filename) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,80,this.filename = filename;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,83,public String getComment() {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,84,return comment;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,87,public void setComment(String comment) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,88,this.comment = comment;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,91,public int getOperatingSystem() {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,92,return operatingSystem;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,96,* Sets the operating system on which the compression took place.
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,97,* The defined values are:
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,98,* <ul>
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,99,"*   <li>0: FAT filesystem (MS-DOS, OS/2, NT/Win32)</li>"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,100,*   <li>1: Amiga</li>
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,101,*   <li>2: VMS (or OpenVMS)</li>
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,102,*   <li>3: Unix</li>
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,103,*   <li>4: VM/CMS</li>
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,104,*   <li>5: Atari TOS</li>
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,105,"*   <li>6: HPFS filesystem (OS/2, NT)</li>"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,106,*   <li>7: Macintosh</li>
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,107,*   <li>8: Z-System</li>
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,108,*   <li>9: CP/M</li>
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,109,*   <li>10: TOPS-20</li>
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,110,*   <li>11: NTFS filesystem (NT)</li>
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,111,*   <li>12: QDOS</li>
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,112,*   <li>13: Acorn RISCOS</li>
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,113,*   <li>255: Unknown</li>
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,114,* </ul>
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,116,* @param operatingSystem the code of the operating system
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,118,public void setOperatingSystem(int operatingSystem) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java,119,this.operatingSystem = operatingSystem;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,29,import java.util.zip.Deflater;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,30,import java.util.zip.GZIPInputStream;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,34,import org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,35,import org.apache.commons.compress.compressors.gzip.GzipParameters;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,37,import org.apache.commons.io.FileUtils;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,38,import org.apache.commons.io.output.NullOutputStream;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,39,import org.junit.Assert;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,158,public void testInteroperabilityWithGzipCompressorInputStream() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,159,"byte[] content = FileUtils.readFileToByteArray(getFile(""test3.xml""));"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,161,ByteArrayOutputStream bout = new ByteArrayOutputStream();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,163,GzipParameters parameters = new GzipParameters();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,164,parameters.setCompressionLevel(Deflater.BEST_COMPRESSION);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,165,parameters.setOperatingSystem(3);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,166,"parameters.setFilename(""test3.xml"");"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,167,"parameters.setComment(""Test file"");"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,168,parameters.setModificationTime(System.currentTimeMillis());
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,169,"GzipCompressorOutputStream out = new GzipCompressorOutputStream(bout, parameters);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,170,out.write(content);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,171,out.flush();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,172,out.close();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,174,GzipCompressorInputStream in = new GzipCompressorInputStream(new ByteArrayInputStream(bout.toByteArray()));
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,175,byte[] content2 = IOUtils.toByteArray(in);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,177,"Assert.assertArrayEquals(""uncompressed content"", content, content2);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,180,public void testInteroperabilityWithGZIPInputStream() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,181,"byte[] content = FileUtils.readFileToByteArray(getFile(""test3.xml""));"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,183,ByteArrayOutputStream bout = new ByteArrayOutputStream();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,185,GzipParameters parameters = new GzipParameters();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,186,parameters.setCompressionLevel(Deflater.BEST_COMPRESSION);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,187,parameters.setOperatingSystem(3);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,188,"parameters.setFilename(""test3.xml"");"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,189,"parameters.setComment(""Test file"");"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,190,parameters.setModificationTime(System.currentTimeMillis());
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,191,"GzipCompressorOutputStream out = new GzipCompressorOutputStream(bout, parameters);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,192,out.write(content);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,193,out.flush();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,194,out.close();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,196,GZIPInputStream in = new GZIPInputStream(new ByteArrayInputStream(bout.toByteArray()));
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,197,byte[] content2 = IOUtils.toByteArray(in);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,199,"Assert.assertArrayEquals(""uncompressed content"", content, content2);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,202,public void testInvalidCompressionLevel() {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,203,GzipParameters parameters = new GzipParameters();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,204,try {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,205,parameters.setCompressionLevel(10);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,206,"fail(""IllegalArgumentException not thrown"");"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,207,} catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,208,// expected
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,211,try {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,212,parameters.setCompressionLevel(-5);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,213,"fail(""IllegalArgumentException not thrown"");"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,214,} catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,215,// expected
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,219,"private void testExtraFlags(int compressionLevel, int flag) throws Exception {"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,220,"byte[] content = FileUtils.readFileToByteArray(getFile(""test3.xml""));"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,222,ByteArrayOutputStream bout = new ByteArrayOutputStream();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,224,GzipParameters parameters = new GzipParameters();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,225,parameters.setCompressionLevel(compressionLevel);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,226,"GzipCompressorOutputStream out = new GzipCompressorOutputStream(bout, parameters);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,227,"IOUtils.copy(new ByteArrayInputStream(content), out);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,228,out.flush();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,229,out.close();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,231,"assertEquals(""extra flags (XFL)"", flag, bout.toByteArray()[8]);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,234,public void testExtraFlagsFastestCompression() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,235,"testExtraFlags(Deflater.BEST_SPEED, 4);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,238,public void testExtraFlagsBestCompression() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,239,"testExtraFlags(Deflater.BEST_COMPRESSION, 2);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,242,public void testExtraFlagsDefaultCompression() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,243,"testExtraFlags(Deflater.DEFAULT_COMPRESSION, 0);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,246,public void testOverWrite() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,247,GzipCompressorOutputStream out = new GzipCompressorOutputStream(new NullOutputStream());
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,248,out.close();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,249,try {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,250,out.write(0);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,251,"fail(""IOException expected"");"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,252,} catch (IOException e) {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,253,// expected
