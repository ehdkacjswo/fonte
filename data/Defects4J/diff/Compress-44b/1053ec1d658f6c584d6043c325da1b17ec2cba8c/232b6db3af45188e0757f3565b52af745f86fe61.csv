is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/zip/BitStream.java,src/main/java/org/apache/commons/compress/archivers/zip/BitStream.java,45,eturn readBits(1);
True,src/main/java/org/apache/commons/compress/archivers/zip/BitStream.java,src/main/java/org/apache/commons/compress/archivers/zip/BitStream.java,45,return (int) readBits(1);
False,src/main/java/org/apache/commons/compress/archivers/zip/BitStream.java,src/main/java/org/apache/commons/compress/archivers/zip/BitStream.java,54,nt nextBits(final int n) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/BitStream.java,src/main/java/org/apache/commons/compress/archivers/zip/BitStream.java,54,long nextBits(final int n) throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/zip/BitStream.java,src/main/java/org/apache/commons/compress/archivers/zip/BitStream.java,59,eturn readBits(8);
True,src/main/java/org/apache/commons/compress/archivers/zip/BitStream.java,src/main/java/org/apache/commons/compress/archivers/zip/BitStream.java,59,return (int) readBits(8);
False,src/main/java/org/apache/commons/compress/archivers/zip/ExplodingInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ExplodingInputStream.java,127,iteral = bits.nextBits(8);
True,src/main/java/org/apache/commons/compress/archivers/zip/ExplodingInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ExplodingInputStream.java,127,literal = bits.nextByte();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExplodingInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ExplodingInputStream.java,140,nt distanceLow = bits.nextBits(distanceLowSize);
True,src/main/java/org/apache/commons/compress/archivers/zip/ExplodingInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ExplodingInputStream.java,140,int distanceLow = (int) bits.nextBits(distanceLowSize);
False,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,124,eturn in.readBits(codeSize);
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,124,if (codeSize > 31) {
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,125,"throw new IllegalArgumentException(""code size must not be bigger than 31"");"
True,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java,127,return (int) in.readBits(codeSize);
False,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,43,nt firstByte = in.readBits(8);
False,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,44,nt secondByte = in.readBits(8);
False,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,45,nt thirdByte = in.readBits(8);
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,43,int firstByte = (int) in.readBits(8);
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,44,int secondByte = (int) in.readBits(8);
True,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java,45,int thirdByte = (int) in.readBits(8);
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,32,rivate static final int MAXIMUM_CACHE_SIZE = 31; // bits in int minus sign bit
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,33,rivate static final int[] MASKS = new int[MAXIMUM_CACHE_SIZE + 1];
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,32,private static final int MAXIMUM_CACHE_SIZE = 63; // bits in long minus sign bit
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,33,private static final long[] MASKS = new long[MAXIMUM_CACHE_SIZE + 1];
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,43,rivate int bitsCached = 0;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,43,private long bitsCached = 0;
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,71, Returns at most 31 bits read from the underlying stream.
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,71,* Returns at most 63 bits read from the underlying stream.
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,74, number not bigger than 31.
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,75, @return the bits concatenated as an integer using the stream's byte order.
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,74,* number not bigger than 63.
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,75,* @return the bits concatenated as a long using the stream's byte order.
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,79,ublic int readBits(final int count) throws IOException {
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,79,public long readBits(final int count) throws IOException {
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,84,inal int nextByte = in.read();
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,84,final long nextByte = in.read();
False,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,97,inal int bitsOut;
True,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,src/main/java/org/apache/commons/compress/utils/BitInputStream.java,97,final long bitsOut;
False,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,38,ublic void shouldNotAllowReadingOfMoreThan31BitsAtATime() throws IOException {
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,38,public void shouldNotAllowReadingOfMoreThan63BitsAtATime() throws IOException {
False,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,40,is.readBits(32);
True,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,src/test/java/org/apache/commons/compress/utils/BitInputStreamTest.java,40,bis.readBits(64);
