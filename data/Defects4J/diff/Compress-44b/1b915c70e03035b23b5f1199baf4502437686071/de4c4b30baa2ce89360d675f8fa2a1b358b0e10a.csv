is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,307,"rivate static final String BSD_LONGNAME_PREFIX = ""#1/"";"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,307,"static final String BSD_LONGNAME_PREFIX = ""#1/"";"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,35,/** Fail if a long file name is required in the archive. */
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,36,public static final int LONGFILE_ERROR = 0;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,38,/** BSD ar extensions are used to store long file names in the archive. */
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,39,public static final int LONGFILE_BSD = 1;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,46,private int longFileMode = LONGFILE_ERROR;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,56,* Set the long file mode.
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,57,* This can be LONGFILE_ERROR(0) or LONGFILE_BSD(1).
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,58,* This specifies the treatment of long file names (names >= 16).
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,59,* Default is LONGFILE_ERROR.
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,60,* @param longFileMode the mode to use
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,61,* @since Apache Commons Compress 1.3
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,63,public void setLongFileMode(int longFileMode) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,64,this.longFileMode = longFileMode;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,138,boolean mustAppendName = false;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,122,f (n.length() > 16) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,141,if (LONGFILE_ERROR == longFileMode && n.length() > 16) {
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,125,ffset += write(n);
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,144,if (LONGFILE_BSD == longFileMode &&
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,145,"(n.length() > 16 || n.indexOf("" "") > -1)) {"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,146,mustAppendName = true;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,147,offset += write(ArArchiveInputStream.BSD_LONGNAME_PREFIX
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,148,+ String.valueOf(n.length()));
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,149,} else {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,150,offset += write(n);
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,156,"inal String s = """" + pEntry.getLength();"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,182,final String s =
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,183,String.valueOf(pEntry.getLength()
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,184,+ (mustAppendName ? n.length() : 0));
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,194,if (mustAppendName) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,195,offset += write(n);
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,4,*  this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,7,*  the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,14,*  See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,15,*  limitations under the License.
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,19,package org.apache.commons.compress.archivers.ar;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,21,import java.io.ByteArrayOutputStream;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,22,import java.io.FileOutputStream;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,23,import java.io.File;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,24,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,25,import java.util.ArrayList;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,26,import java.util.List;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,27,import org.apache.commons.compress.AbstractTestCase;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,29,public class ArArchiveOutputStreamTest extends AbstractTestCase {
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,31,public void testLongFileNamesCauseExceptionByDefault() {
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,32,try {
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,33,ArArchiveOutputStream os =
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,34,new ArArchiveOutputStream(new ByteArrayOutputStream());
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,35,"ArArchiveEntry ae = new ArArchiveEntry(""this_is_a_long_name.txt"","
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,36,0);
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,37,os.putArchiveEntry(ae);
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,38,"fail(""Expected an exception"");"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,39,} catch (IOException ex) {
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,40,"assertTrue(ex.getMessage().startsWith(""filename too long""));"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,44,public void testLongFileNamesWorkUsingBSDDialect() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,45,FileOutputStream fos = null;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,46,ArArchiveOutputStream os = null;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,47,File[] df = createTempDirAndFile();
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,48,try {
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,49,fos = new FileOutputStream(df[1]);
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,50,os = new ArArchiveOutputStream(fos);
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,51,os.setLongFileMode(ArArchiveOutputStream.LONGFILE_BSD);
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,52,"ArArchiveEntry ae = new ArArchiveEntry(""this_is_a_long_name.txt"","
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,53,14);
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,54,os.putArchiveEntry(ae);
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,55,os.write(new byte[] {
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,56,"'H', 'e', 'l', 'l', 'o', ',', ' ',"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,57,"'w', 'o', 'r', 'l', 'd', '!', '\n'"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,59,os.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,60,os.close();
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,61,os = null;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,62,fos = null;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,64,List<String> expected = new ArrayList<String>();
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,65,"expected.add(""this_is_a_long_name.txt"");"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,66,"checkArchiveContent(df[1], expected);"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,67,} finally {
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,68,if (os != null) {
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,69,os.close();
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,71,if (fos != null) {
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,72,fos.close();
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java,74,rmdir(df[0]);
