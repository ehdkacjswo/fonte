is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,19,package org.apache.commons.compress.compressors.lz77support;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,22,* Helper class for compression algorithms that use the ideas of LZ77.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,24,* <p>Most LZ77 derived algorithms split input data into blocks of
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,25,* uncompressed data (called literal blocks) and back-references
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,26,"* (pairs of offsets and lengths) that state ""add <code>length</code>"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,27,* bytes that are the same as those already written starting
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,28,* <code>offset</code> bytes before the current position. The details
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,29,* of how those blocks and back-references are encoded are quite
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,30,* different between the algorithms and some algorithms perform
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,31,* additional steps (Huffman encoding in the case of DEFLATE for
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,32,* example).</p>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,34,* <p>This class attempts to extract the core logic - finding
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,35,* back-references - so it can be re-used. It follows the algorithm
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,36,* explained in section 4 of RFC 1951 (DEFLATE) and currently doesn't
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,37,"* implement the ""lazy match"" optimization. The three-byte hash function"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,38,* used in this class is the same used by zlib and InfoZIP's ZIP
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,39,* implementation of DEFLATE.</p>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,41,* <p>LZ77 is used vaguely here (as well as many other places that
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,42,"* talk about it :-), LZSS would likely be closer to the truth but"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,43,* LZ77 has become the synonym for a whole family of algorithms.</p>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,45,* <p>The API consists of a compressor that is fed <code>byte</code>s
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,46,* and emits {@link Block}s to a registered callback where the blocks
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,47,"* represent either {@link LiteralBlock literal blocks}, {@link"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,48,* BackReference back references} or {@link EOD end of data
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,49,"* markers}. In order to ensure the callback receives all information,"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,50,* the {@code #finish} method must be used once all data has been fed
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,51,* into the compressor.</p>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,53,"* <p>Several parameters influence the outcome of the ""compression"":</p>"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,54,* <dl>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,56,*  <dt><code>windowSize</code></dt> <dd>the size of the sliding
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,57,"*  window, must be a power of two - this determines the maximum"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,58,*  offset a back-reference can take. The compressor maintains a
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,59,*  buffer of twice of <code>windowSize</code> - real world values are
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,60,*  in the area of 32k.</dd>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,62,*  <dt><code>minMatchSize</code></dt>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,63,*  <dd>Minimal size of a match found. A true minimum of 3 is
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,64,*  hard-coded inside of this implemention but bigger sizes can be
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,65,*  configured.</dd>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,67,*  <dt><code>maxMatchSize</code></dt>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,68,*  <dd>Maximal size of a match found.</dd>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,70,*  <dt><code>maxOffset</code></dt>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,71,*  <dd>Maximal offset of a back-reference.</dd>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,73,*  <dt><code>maxLiteralSize</code></dt>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,74,*  <dd>Maximal size of a literal block.</dd>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,75,* </dl>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,77,"* @see ""https://tools.ietf.org/html/rfc1951#section-4"""
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,78,* @since 1.14
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,79,* @NotThreadSafe
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,81,public class LZ77Compressor {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,84,* Base class representing things the compressor may emit.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,86,public static abstract class Block { }
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,88,* Represents a literal block of data.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,90,public static final class LiteralBlock extends Block {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,91,private final byte[] data;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,92,private LiteralBlock(byte[] data) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,93,this.data = data;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,96,* The literal data.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,98,* <p>This returns a life view of the actual data in order to
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,99,"* avoid copying, modify the array at your own risk.</p>"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,101,public byte[] getData() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,102,return data;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,106,* Represents a back-reference to a match.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,108,public static final class BackReference extends Block {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,109,"private final int offset, length;"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,110,"private BackReference(int offset, int length) {"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,111,this.offset = offset;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,112,this.length = length;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,115,* Provides the offset of the match.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,117,public int getOffset() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,118,return offset;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,121,* Provides the length of the match.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,123,public int getLength() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,124,return length;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,128,"* A simple ""we are done"" marker."
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,130,public static final class EOD extends Block { }
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,133,* Callback invoked while the compressor processes data.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,135,* <p>The callback is invoked on the same thread that receives the
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,136,* bytes to compress and may be invoked multiple times during the
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,137,* execution of {@link #compress} or {@link #finish}.</p>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,139,public interface Callback /* extends Consumer<Block> */ {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,140,void accept(Block b);
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,143,private final Parameters params;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,144,private final Callback callback;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,147,* Initializes a compressor with parameters and a callback.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,148,* @param params the parameters
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,149,* @param callback the callback
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,150,* @throws NullPointerException if either parameter is <code>null</code>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,152,"public LZ77Compressor(Parameters params, Callback callback) {"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,153,if (params == null) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,154,"throw new NullPointerException(""params must not be null"");"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,156,if (callback == null) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,157,"throw new NullPointerException(""callback must not be null"");"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,159,this.params = params;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,160,this.callback = callback;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,164,* Feeds bytes into the compressor which in turn may emit zero or
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,165,* more blocks to the callback during the execution of this
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,166,* method.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,167,* @param data the data to compress - must not be null
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,169,public void compress(byte[] data) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,170,"compress(data, 0, data.length);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,174,* Feeds bytes into the compressor which in turn may emit zero or
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,175,* more blocks to the callback during the execution of this
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,176,* method.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,177,* @param data the data to compress - must not be null
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,178,* @param off the start offset of the data
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,179,* @param len the number of bytes to compress
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,181,"public void compress(byte[] data, int off, int len) {"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,185,* Tells the compressor to process all remaining data and signal
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,186,* end of data to the callback.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,188,* <p>The compressor will in turn emit at least one block ({@link
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,189,* EOD}) but potentially multiple blocks to the callback during
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,190,* the execution of this method.</p>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java,192,public void finish() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,19,package org.apache.commons.compress.compressors.lz77support;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,22,* Parameters of the {@link LZ77Compressor compressor}.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,24,public final class Parameters {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,25,public static final int TRUE_MIN_MATCH_SIZE = 3;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,26,"private final int windowSize, minMatchSize, maxMatchSize, maxOffset, maxLiteralSize;"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,29,* Initializes the compressor's parameters with a
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,30,* <code>minMatchSize</code> of 3 and <code>max*Size</code>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,31,* equal to <code>windowSize</code>.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,33,* @param windowSize the size of the sliding window - this
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,34,* determines the maximum offset a back-reference can take.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,35,* @throws IllegalArgumentException if <code>windowSize</code>
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,36,* is smaller than <code>minMatchSize</code>.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,38,public Parameters(int windowSize) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,39,"this(windowSize, TRUE_MIN_MATCH_SIZE, windowSize, windowSize, windowSize);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,43,* Initializes the compressor's parameters.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,45,"* @param windowSize the size of the sliding window, must be a"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,46,* power of two - this determines the maximum offset a
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,47,* back-reference can take.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,48,* @param minMatchSize the minimal size of a match found. A
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,49,* true minimum of 3 is hard-coded inside of this implemention
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,50,* but bigger sizes can be configured.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,51,* @param maxMatchSize maximal site of a match found. A value
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,52,* smaller than <code>minMatchSize</code> is interpreted as
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,53,* infinite (actually {@link Integer.MAX_VALUE}).
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,54,* @param maxOffset maximal offset of a back-reference. A
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,55,* non-positive value is interpreted as <code>windowSize</code>.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,56,* @param maxLiteralSize maximal size of a literal block. Negative
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,57,* numbers and 0 as well as values bigger than <code>2 *
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,58,* windowSize</code> are interpreted as <code>windowSize</code>.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,59,* @throws IllegalArgumentException if <code>windowSize</code> is
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,60,* smaller than <code>minMatchSize</code> or not a power of two.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,62,"public Parameters(int windowSize, int minMatchSize, int maxMatchSize,"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,63,"int maxOffset, int maxLiteralSize) {"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,64,"this.minMatchSize = Math.max(TRUE_MIN_MATCH_SIZE, minMatchSize);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,65,if (windowSize < this.minMatchSize) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,66,"throw new IllegalArgumentException(""windowSize must be at least as big as minMatchSize"");"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,68,if (!isPowerOfTwo(windowSize)) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,69,"throw new IllegalArgumentException(""windowSize must be a power of two"");"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,71,this.windowSize = windowSize;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,72,this.maxOffset = maxOffset < 1 ? this.windowSize
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,73,": Math.min(maxOffset, this.windowSize);"
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,74,this.maxMatchSize = maxMatchSize < this.minMatchSize ? Integer.MAX_VALUE
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,75,: maxMatchSize;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,76,this.maxLiteralSize = maxLiteralSize < 1 || maxLiteralSize > 2 * windowSize
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,77,? windowSize : maxLiteralSize;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,81,* Gets the size of the sliding window - this determines the
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,82,* maximum offset a back-reference can take.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,84,public int getWindowSize() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,85,return windowSize;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,88,* Gets the minimal size of a match found.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,90,public int getMinMatchSize() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,91,return minMatchSize;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,94,* Gets the maximal size of a match found.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,96,public int getMaxMatchSize() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,97,return maxMatchSize;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,100,* Gets the maximal offset of a match found.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,102,public int getMaxOffset() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,103,return maxOffset;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,106,* Gets the maximal size of a literal block.
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,108,public int getMaxLiteralSize() {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,109,return maxLiteralSize;
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,112,private static final boolean isPowerOfTwo(int x) {
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,113,// pre-condition: x > 0
True,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java,114,return (x & (x - 1)) == 0;
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,19,package org.apache.commons.compress.compressors.lz77support;
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,21,import org.junit.Test;
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,23,import static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,25,public class ParametersTest {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,27,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,28,public void defaultConstructor() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,29,Parameters p = new Parameters(128);
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,30,"assertEquals(128, p.getWindowSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,31,"assertEquals(3, p.getMinMatchSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,32,"assertEquals(128, p.getMaxMatchSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,33,"assertEquals(128, p.getMaxOffset());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,34,"assertEquals(128, p.getMaxLiteralSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,37,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,38,public void minMatchSizeIsAtLeastThree() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,39,"Parameters p = new Parameters(128, 2, 3, 4, 5);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,40,"assertEquals(3, p.getMinMatchSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,43,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,44,public void maxMatchSizeIsInfiniteWhenSmallerThanMinMatchSize() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,45,"Parameters p = new Parameters(128, 2, 2, 4, 5);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,46,"assertEquals(Integer.MAX_VALUE, p.getMaxMatchSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,49,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,50,public void maxMatchSizeIsMinMatchSizeIfBothAreEqual() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,51,"Parameters p = new Parameters(128, 2, 3, 4, 5);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,52,"assertEquals(3, p.getMaxMatchSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,55,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,56,public void maxOffsetIsWindowSizeIfSetTo0() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,57,"Parameters p = new Parameters(128, 2, 3, 0, 5);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,58,"assertEquals(128, p.getMaxOffset());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,61,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,62,public void maxOffsetIsWindowSizeIfSetToANegativeValue() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,63,"Parameters p = new Parameters(128, 2, 3, -1, 5);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,64,"assertEquals(128, p.getMaxOffset());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,67,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,68,public void maxOffsetIsWindowSizeIfBiggerThanWindowSize() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,69,"Parameters p = new Parameters(128, 2, 3, 129, 5);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,70,"assertEquals(128, p.getMaxOffset());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,73,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,74,public void maxLiteralSizeIsWindowSizeIfSetTo0() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,75,"Parameters p = new Parameters(128, 2, 3, 4, 0);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,76,"assertEquals(128, p.getMaxLiteralSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,79,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,80,public void maxLiteralSizeIsWindowSizeIfSetToANegativeValue() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,81,"Parameters p = new Parameters(128, 2, 3, 0, -1);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,82,"assertEquals(128, p.getMaxLiteralSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,85,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,86,public void maxLiteralSizeIsWindowSizeIfSetToAValueTooBigToHoldInSlidingWindow() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,87,"Parameters p = new Parameters(128, 2, 3, 0, 259);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,88,"assertEquals(128, p.getMaxLiteralSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,91,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,92,public void allParametersUsuallyTakeTheirSpecifiedValues() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,93,"Parameters p = new Parameters(256, 4, 5, 6, 7);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,94,"assertEquals(256, p.getWindowSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,95,"assertEquals(4, p.getMinMatchSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,96,"assertEquals(5, p.getMaxMatchSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,97,"assertEquals(6, p.getMaxOffset());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,98,"assertEquals(7, p.getMaxLiteralSize());"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,101,@Test(expected = IllegalArgumentException.class)
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,102,public void windowSizeMustNotBeSmallerThanMinMatchSize() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,103,"new Parameters(128, 200, 300, 400, 500);"
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,106,@Test(expected = IllegalArgumentException.class)
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,107,public void windowSizeMustNotBeAPowerOfTwo() {
True,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java,108,"new Parameters(100, 200, 300, 400, 500);"
