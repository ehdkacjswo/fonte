is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,153," Returns the encoding to use for arj, zip, dump, cpio and tar"
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,154," files, or null for the default."
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,153,"* Returns the encoding to use for arj, jar, zip, dump, cpio and tar"
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,154,"* files, or null for the archiver default."
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,156," @return entry encoding, or null"
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,156,"* @return entry encoding, or null for the archiver default"
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,164," Sets the encoding to use for arj, zip, dump, cpio and tar files. Use null for the default."
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,164,"* Sets the encoding to use for arj, jar, zip, dump, cpio and tar files. Use null for the archiver default."
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,166," @param entryEncoding the entry encoding, null uses the default."
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,166,"* @param entryEncoding the entry encoding, null uses the archiver default."
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,230,eturn new JarArchiveInputStream(in);
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,230,if (entryEncoding != null) {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,231,"return new JarArchiveInputStream(in, entryEncoding);"
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,232,} else {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,233,return new JarArchiveInputStream(in);
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,257," i.e. {@value #AR}, {@value #ZIP}, {@value #TAR}, {@value #JAR}, {@value #CPIO} or {@value #SEVEN_Z}"
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,261,"* i.e. {@value #AR}, {@value #ZIP}, {@value #TAR}, {@value #JAR} or {@value #CPIO}"
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,293,eturn new JarArchiveOutputStream(out);
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,297,if (entryEncoding != null) {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,298,"return new JarArchiveOutputStream(out, entryEncoding);"
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,299,} else {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,300,return new JarArchiveOutputStream(out);
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,342,eturn new JarArchiveInputStream(in);
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,350,if (entryEncoding != null) {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,351,"return new JarArchiveInputStream(in, entryEncoding);"
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,352,} else {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,353,return new JarArchiveInputStream(in);
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,346,eturn new CpioArchiveInputStream(in);
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,358,if (entryEncoding != null) {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,359,"return new CpioArchiveInputStream(in, entryEncoding);"
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,360,} else {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,361,return new CpioArchiveInputStream(in);
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,348,eturn new ArjArchiveInputStream(in);
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,364,if (entryEncoding != null) {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,365,"return new ArjArchiveInputStream(in, entryEncoding);"
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,366,} else {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,367,return new ArjArchiveInputStream(in);
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,359,eturn new DumpArchiveInputStream(in);
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,379,"return new DumpArchiveInputStream(in, entryEncoding);"
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,368,f (entryEncoding != null) {
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,369,"eturn new TarArchiveInputStream(in, entryEncoding);"
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,370, else {
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,371,eturn new TarArchiveInputStream(in);
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,388,"return new TarArchiveInputStream(in, entryEncoding);"
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,381,eturn new TarArchiveInputStream(in);
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,397,"return new TarArchiveInputStream(in, encoding);"
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,94,rivate final ZipEncoding encoding;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,94,private final ZipEncoding zipEncoding;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,96,// the provided encoding (for unit tests)
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,97,final String encoding;
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,153,his.encoding = ZipEncodingHelper.getZipEncoding(encoding);
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,156,this.encoding = encoding;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,157,this.zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,447,eturn encoding.decode(tmpBuffer);
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,451,return zipEncoding.decode(tmpBuffer);
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,95,rivate final ZipEncoding encoding;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,95,private final ZipEncoding zipEncoding;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,97,// the provided encoding (for unit tests)
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,98,final String encoding;
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,160,his.encoding = ZipEncodingHelper.getZipEncoding(encoding);
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,163,this.encoding = encoding;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,164,this.zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,537,yteBuffer buf = encoding.encode(str);
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,541,ByteBuffer buf = zipEncoding.encode(str);
False,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,77,rivate final ZipEncoding encoding;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,77,private final ZipEncoding zipEncoding;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,79,// the provided encoding (for unit tests)
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,80,final String encoding;
False,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,102,his.encoding = ZipEncodingHelper.getZipEncoding(encoding);
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,105,this.encoding = encoding;
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,106,this.zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
False,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,113,"ummary = new DumpArchiveSummary(headerBytes, this.encoding);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,117,"summary = new DumpArchiveSummary(headerBytes, this.zipEncoding);"
False,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,354,"tring name = DumpArchiveUtil.decode(encoding, blockBuffer, i + 8, blockBuffer[i + 7]);"
True,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java,358,"String name = DumpArchiveUtil.decode(zipEncoding, blockBuffer, i + 8, blockBuffer[i + 7]);"
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,36,* Creates an instance from the input stream using the default encoding.
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,38,* @param inputStream the input stream to wrap
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,45,* Creates an instance from the input stream using the specified encoding.
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,47,* @param inputStream the input stream to wrap
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,48,* @param encoding the encoding to use
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,49,* @since 1.10
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,51,"public JarArchiveInputStream( final InputStream inputStream, final String encoding ) {"
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java,52,"super(inputStream, encoding);"
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,45,* Create and instance that wraps the output stream using the provided encoding.
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,47,* @param out the output stream to wrap
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,48,* @param encoding the encoding to use. Use null for the platform default.
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,49,* @since 1.10
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,51,"public JarArchiveOutputStream(final OutputStream out, final String encoding) {"
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,52,super(out);
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,53,setEncoding(encoding);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,76,rivate final ZipEncoding encoding;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,76,private final ZipEncoding zipEncoding;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,78,// the provided encoding (for unit tests)
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,79,final String encoding;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,140,his.encoding = ZipEncodingHelper.getZipEncoding(encoding);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,143,this.encoding = encoding;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,144,this.zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,274,"urrEntry = new TarArchiveEntry(headerBuf, encoding);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,278,"currEntry = new TarArchiveEntry(headerBuf, zipEncoding);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,292,urrEntry.setLinkName(encoding.decode(longLinkData));
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,296,currEntry.setLinkName(zipEncoding.decode(longLinkData));
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,303,urrEntry.setName(encoding.decode(longNameData));
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,307,currEntry.setName(zipEncoding.decode(longNameData));
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,87,rivate final ZipEncoding encoding;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,87,private final ZipEncoding zipEncoding;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,89,// the provided encoding (for unit tests)
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,90,final String encoding;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,153,his.encoding = ZipEncodingHelper.getZipEncoding(encoding);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,156,this.encoding = encoding;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,157,this.zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,304,"ntry.writeEntryHeader(recordBuf, encoding,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,308,"entry.writeEntryHeader(recordBuf, zipEncoding,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,663,inal ByteBuffer encodedName = encoding.encode(name);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,667,final ByteBuffer encodedName = zipEncoding.encode(name);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,64,// the provided encoding (for unit tests)
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,65,final String encoding;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,146,* Create an instance using UTF-8 encoding
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,147,* @param inputStream the stream to wrap
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java,185,this.encoding = encoding;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,21,import static org.apache.commons.compress.AbstractTestCase.getFile;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,23,import static org.junit.Assert.assertNull;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,31,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,33,import java.lang.reflect.Field;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,35,import org.apache.commons.compress.archivers.arj.ArjArchiveInputStream;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,36,import org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,37,import org.apache.commons.compress.archivers.dump.DumpArchiveInputStream;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,38,import org.apache.commons.compress.archivers.jar.JarArchiveInputStream;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,39,import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,160,@Test
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,161,public void testEncodingCtor() {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,162,ArchiveStreamFactory fac = new ArchiveStreamFactory();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,163,assertNull(fac.getEntryEncoding());
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,164,fac = new ArchiveStreamFactory(null);
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,165,assertNull(fac.getEntryEncoding());
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,166,"fac = new ArchiveStreamFactory(""UTF-8"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,167,"assertEquals(""UTF-8"", fac.getEntryEncoding());"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,170,@Test
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,171,"@SuppressWarnings(""deprecation"")"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,172,public void testEncodingDeprecated() {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,173,ArchiveStreamFactory fac = new ArchiveStreamFactory();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,174,assertNull(fac.getEntryEncoding());
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,175,"fac.setEntryEncoding(""UTF-8"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,176,"assertEquals(""UTF-8"", fac.getEntryEncoding());"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,177,"fac.setEntryEncoding(""US_ASCII"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,178,"assertEquals(""US_ASCII"", fac.getEntryEncoding());"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,179,"fac = new ArchiveStreamFactory(""UTF-8"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,180,"assertEquals(""UTF-8"", fac.getEntryEncoding());"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,181,try {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,182,"fac.setEntryEncoding(""US_ASCII"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,183,"fail(""Expected IllegalStateException"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,184,} catch (IllegalStateException ise) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,185,// expected
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,189,static class TestData {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,190,final String testFile;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,191,final String expectedEncoding;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,192,final ArchiveStreamFactory fac;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,193,final String fieldName;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,194,final String type;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,195,final boolean hasOutputStream;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,196,"TestData(String testFile, String type, boolean hasOut, String expectedEncoding, ArchiveStreamFactory fac, String fieldName) {"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,197,this.testFile = testFile;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,198,this.expectedEncoding = expectedEncoding;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,199,this.fac = fac;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,200,this.fieldName = fieldName;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,201,this.type = type;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,202,this.hasOutputStream = hasOut;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,206,"@SuppressWarnings(""deprecation"") // test of deprecated method"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,207,static ArchiveStreamFactory getFactory(String entryEncoding) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,208,ArchiveStreamFactory fac = new ArchiveStreamFactory();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,209,fac.setEntryEncoding(entryEncoding);
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,210,return fac;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,212,// The different factory types
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,213,private static final ArchiveStreamFactory FACTORY = new ArchiveStreamFactory();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,214,"private static final ArchiveStreamFactory FACTORY_UTF8 = new ArchiveStreamFactory(""UTF-8"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,215,"private static final ArchiveStreamFactory FACTORY_ASCII = new ArchiveStreamFactory(""ASCII"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,216,"private static final ArchiveStreamFactory FACTORY_SET_UTF8 = getFactory(""UTF-8"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,217,"private static final ArchiveStreamFactory FACTORY_SET_ASCII = getFactory(""ASCII"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,219,// Default encoding if none is provided (not even null)
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,220,// The test currently assumes that the output default is the same as the input default
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,221,private static final String ARJ_DEFAULT;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,222,private static final String DUMP_DEFAULT;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,224,"private static final String ZIP_DEFAULT = getField(new ZipArchiveInputStream(null),""encoding"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,225,"private static final String CPIO_DEFAULT = getField(new CpioArchiveInputStream(null),""encoding"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,226,"private static final String TAR_DEFAULT = getField(new TarArchiveInputStream(null),""encoding"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,227,"private static final String JAR_DEFAULT = getField(new JarArchiveInputStream(null),""encoding"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,229,static {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,230,String dflt;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,231,"dflt = ""??"";"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,232,try {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,233,"dflt = getField(new ArjArchiveInputStream(new FileInputStream(getFile(""bla.arj""))), ""charsetName"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,234,} catch (ArchiveException e) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,235,e.printStackTrace();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,236,} catch (Exception e) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,237,e.printStackTrace();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,239,ARJ_DEFAULT = dflt;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,240,"dflt = ""??"";"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,241,try {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,242,"dflt = getField(new DumpArchiveInputStream(new FileInputStream(getFile(""bla.dump""))), ""encoding"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,243,} catch (ArchiveException e) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,244,e.printStackTrace();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,245,} catch (Exception e) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,246,e.printStackTrace();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,248,DUMP_DEFAULT = dflt;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,251,static final TestData[] TESTS = {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,252,"new TestData(""bla.arj"", ArchiveStreamFactory.ARJ, false, ARJ_DEFAULT, FACTORY, ""charsetName""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,253,"new TestData(""bla.arj"", ArchiveStreamFactory.ARJ, false, ""UTF-8"", FACTORY_UTF8, ""charsetName""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,254,"new TestData(""bla.arj"", ArchiveStreamFactory.ARJ, false, ""ASCII"", FACTORY_ASCII, ""charsetName""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,255,"new TestData(""bla.arj"", ArchiveStreamFactory.ARJ, false, ""UTF-8"", FACTORY_SET_UTF8, ""charsetName""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,256,"new TestData(""bla.arj"", ArchiveStreamFactory.ARJ, false, ""ASCII"", FACTORY_SET_ASCII, ""charsetName""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,258,"new TestData(""bla.cpio"", ArchiveStreamFactory.CPIO, true, CPIO_DEFAULT, FACTORY, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,259,"new TestData(""bla.cpio"", ArchiveStreamFactory.CPIO, true, ""UTF-8"", FACTORY_UTF8, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,260,"new TestData(""bla.cpio"", ArchiveStreamFactory.CPIO, true, ""ASCII"", FACTORY_ASCII, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,261,"new TestData(""bla.cpio"", ArchiveStreamFactory.CPIO, true, ""UTF-8"", FACTORY_SET_UTF8, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,262,"new TestData(""bla.cpio"", ArchiveStreamFactory.CPIO, true, ""ASCII"", FACTORY_SET_ASCII, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,264,"new TestData(""bla.dump"", ArchiveStreamFactory.DUMP, false, DUMP_DEFAULT, FACTORY, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,265,"new TestData(""bla.dump"", ArchiveStreamFactory.DUMP, false, ""UTF-8"", FACTORY_UTF8, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,266,"new TestData(""bla.dump"", ArchiveStreamFactory.DUMP, false, ""ASCII"", FACTORY_ASCII, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,267,"new TestData(""bla.dump"", ArchiveStreamFactory.DUMP, false, ""UTF-8"", FACTORY_SET_UTF8, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,268,"new TestData(""bla.dump"", ArchiveStreamFactory.DUMP, false, ""ASCII"", FACTORY_SET_ASCII, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,270,"new TestData(""bla.tar"", ArchiveStreamFactory.TAR, true, TAR_DEFAULT, FACTORY, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,271,"new TestData(""bla.tar"", ArchiveStreamFactory.TAR, true, ""UTF-8"", FACTORY_UTF8, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,272,"new TestData(""bla.tar"", ArchiveStreamFactory.TAR, true, ""ASCII"", FACTORY_ASCII, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,273,"new TestData(""bla.tar"", ArchiveStreamFactory.TAR, true, ""UTF-8"", FACTORY_SET_UTF8, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,274,"new TestData(""bla.tar"", ArchiveStreamFactory.TAR, true, ""ASCII"", FACTORY_SET_ASCII, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,276,"new TestData(""bla.jar"", ArchiveStreamFactory.JAR, true, JAR_DEFAULT, FACTORY, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,277,"new TestData(""bla.jar"", ArchiveStreamFactory.JAR, true, ""UTF-8"", FACTORY_UTF8, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,278,"new TestData(""bla.jar"", ArchiveStreamFactory.JAR, true, ""ASCII"", FACTORY_ASCII, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,279,"new TestData(""bla.jar"", ArchiveStreamFactory.JAR, true, ""UTF-8"", FACTORY_SET_UTF8, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,280,"new TestData(""bla.jar"", ArchiveStreamFactory.JAR, true, ""ASCII"", FACTORY_SET_ASCII, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,282,"new TestData(""bla.zip"", ArchiveStreamFactory.ZIP, true, ZIP_DEFAULT, FACTORY, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,283,"new TestData(""bla.zip"", ArchiveStreamFactory.ZIP, true, ""UTF-8"", FACTORY_UTF8, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,284,"new TestData(""bla.zip"", ArchiveStreamFactory.ZIP, true, ""ASCII"", FACTORY_ASCII, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,285,"new TestData(""bla.zip"", ArchiveStreamFactory.ZIP, true, ""UTF-8"", FACTORY_SET_UTF8, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,286,"new TestData(""bla.zip"", ArchiveStreamFactory.ZIP, true, ""ASCII"", FACTORY_SET_ASCII, ""encoding""),"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,289,@Test
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,290,public void testEncodingInputStreamAutodetect() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,291,int failed = 0;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,292,for(int i = 1; i <= TESTS.length; i++) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,293,TestData test = TESTS[i-1];
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,294,"ArchiveInputStream ais = getInputStreamFor(test.testFile, test.fac);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,295,"final String field = getField(ais,test.fieldName);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,296,"if (!eq(test.expectedEncoding,field)) {"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,297,"System.out.println(""Failed test "" + i + "". expected: "" + test.expectedEncoding + "" actual: "" + field + "" type: "" + test.type);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,298,failed++;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,301,if (failed > 0) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,302,"fail(""Tests failed: "" + failed);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,306,@Test
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,307,public void testEncodingInputStream() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,308,int failed = 0;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,309,for(int i = 1; i <= TESTS.length; i++) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,310,TestData test = TESTS[i-1];
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,311,"ArchiveInputStream ais = getInputStreamFor(test.type, test.testFile, test.fac);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,312,"final String field = getField(ais,test.fieldName);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,313,"if (!eq(test.expectedEncoding,field)) {"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,314,"System.out.println(""Failed test "" + i + "". expected: "" + test.expectedEncoding + "" actual: "" + field + "" type: "" + test.type);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,315,failed++;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,318,if (failed > 0) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,319,"fail(""Tests failed: "" + failed);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,323,@Test
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,324,public void testEncodingOutputStream() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,325,int failed = 0;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,326,for(int i = 1; i <= TESTS.length; i++) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,327,TestData test = TESTS[i-1];
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,328,if (test.hasOutputStream) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,329,"ArchiveOutputStream ais = getOutputStreamFor(test.type, test.fac);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,330,"final String field = getField(ais, test.fieldName);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,331,"if (!eq(test.expectedEncoding, field)) {"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,332,"System.out.println(""Failed test "" + i + "". expected: "" + test.expectedEncoding + "" actual: "" + field + "" type: "" + test.type);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,333,failed++;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,337,if (failed > 0) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,338,"fail(""Tests failed: "" + failed);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,342,// equals allowing null
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,343,"private static boolean eq(String exp, String act) {"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,344,if (exp == null) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,345,return act == null;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,347,return exp.equals(act);
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,350,"private static String getField(Object instance, String name) {"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,351,Class<?> cls = instance.getClass();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,352,Field fld;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,353,try {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,354,fld = cls.getDeclaredField(name);
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,355,} catch (NoSuchFieldException nsfe) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,356,try {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,357,fld = cls.getSuperclass().getDeclaredField(name);
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,358,} catch (NoSuchFieldException e) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,359,"System.out.println(""Cannot find "" + name + "" in class "" + instance.getClass().getSimpleName());"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,360,"return ""??"";"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,363,boolean isAccessible = fld.isAccessible();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,364,try {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,365,if (!isAccessible) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,366,fld.setAccessible(true);
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,368,final Object object = fld.get(instance);
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,369,if (object instanceof String || object == null) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,370,return (String) object;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,371,} else {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,372,"System.out.println(""Wrong type: "" + object.getClass().getCanonicalName() + "" for "" + name + "" in class "" + instance.getClass().getSimpleName());"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,373,"return ""??"";"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,375,} catch (Exception e) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,376,e.printStackTrace();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,377,"return ""??"";"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,378,} finally {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,379,if (!isAccessible) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,380,fld.setAccessible(isAccessible);
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,385,"private ArchiveInputStream getInputStreamFor(String resource, ArchiveStreamFactory factory)"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,386,"throws IOException, ArchiveException {"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,387,return factory.createArchiveInputStream(
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,388,new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,389,getFile(resource))));
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,392,"private ArchiveInputStream getInputStreamFor(String type, String resource, ArchiveStreamFactory factory)"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,393,"throws IOException, ArchiveException {"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,394,return factory.createArchiveInputStream(
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,395,"type,"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,396,new BufferedInputStream(new FileInputStream(
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,397,getFile(resource))));
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,400,"private ArchiveOutputStream getOutputStreamFor(String type, ArchiveStreamFactory factory)"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,401,"throws IOException, ArchiveException {"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java,402,"return factory.createArchiveOutputStream(type, new ByteArrayOutputStream());"
