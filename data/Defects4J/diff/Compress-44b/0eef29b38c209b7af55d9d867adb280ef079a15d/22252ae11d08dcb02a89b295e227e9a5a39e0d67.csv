is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,149,* Inserts the given value into the array as a little endian
True,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,150,* sequence of the given length starting at the given offset.
True,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,151,* @param array the array to write into
True,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,152,* @param value the value to insert
True,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,153,* @param offset the offset into the array that receives the first byte
True,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,154,* @param length the number of bytes to use to represent the value
True,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,156,"public static void toLittleEndian(final byte[] b, final long value, final int off, final int length) {"
True,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,157,long num = value;
True,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,158,for (int i = 0; i < length; i++) {
True,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,159,b[off + i] = (byte) (num & 0xff);
True,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,src/main/java/org/apache/commons/compress/utils/ByteUtils.java,160,num >>= 8;
True,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,28,import java.util.Arrays;
True,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,194,@Test
True,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,195,public void toLittleEndianToByteArray() throws IOException {
True,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,196,byte[] b = new byte[4];
True,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,197,"toLittleEndian(b, 2 + 3 * 256 + 4 * 256 * 256, 1, 3);"
True,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,198,"assertArrayEquals(new byte[] { 2, 3, 4 }, Arrays.copyOfRange(b, 1, 4));"
True,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,201,@Test
True,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,202,public void toLittleEndianToByteArrayUnsignedInt32() throws IOException {
True,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,203,byte[] b = new byte[4];
True,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,204,"toLittleEndian(b, 2 + 3 * 256 + 4 * 256 * 256 + 128l * 256 * 256 * 256, 0, 4);"
True,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,src/test/java/org/apache/commons/compress/utils/ByteUtilsTest.java,205,"assertArrayEquals(new byte[] { 2, 3, 4, (byte) 128 }, b);"
