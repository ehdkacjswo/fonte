is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,2,"* Copyright 2002,2004 The Apache Software Foundation."
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,14,* limitations under the License.
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,16,package org.apache.commons.compress;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,18,import java.io.File;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,19,import java.io.FileInputStream;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,20,import java.io.FileNotFoundException;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,21,import java.io.FileOutputStream;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,22,import java.io.IOException;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,23,import java.io.InputStream;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,25,* AbstractCompressor handles all compression/decompression
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,26,* actions on an abstract basis.
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,28,public abstract class AbstractCompressor
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,29,extends PackableObject
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,30,implements Compressor {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,32,* Constructor
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,34,public AbstractCompressor() {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,35,super();
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,39,* Returns a String with the default file extension
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,40,"* for this compressor. For example, a zip-files default"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,41,"* file extension would be ""zip"" (without leading dot)."
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,43,* @return the default file extension
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,45,public abstract String getDefaultFileExtension();
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,48,/* (non-Javadoc)
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,49,* @see org.apache.commons.compress.Compressor#compressStream(java.io.FileInputStream)
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,51,public InputStream compress(FileInputStream input) throws CompressException {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,52,FileOutputStream outputStream = null;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,53,FileOutputStream tempFileOutputStream = null;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,54,try {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,55,"File temp = File.createTempFile(""commons_"",""jkt"");;"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,56,tempFileOutputStream = new FileOutputStream(temp);
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,57,"compressTo(input, tempFileOutputStream);"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,58,return new FileInputStream(temp);
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,59,} catch (IOException e) {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,60,"throw new CompressException(""An IO Exception has occured"", e);"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,61,} finally {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,62,try {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,63,tempFileOutputStream.close();
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,64,outputStream.close();
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,65,} catch (IOException e) {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,66,"throw new CompressException(""An IO Exception occured while closing the streams"", e);"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,71,/* (non-Javadoc)
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,72,"* @see org.apache.commons.compress.Compressor#compress(java.io.File, java.io.File)"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,74,"public void compressTo(File input, File output) throws CompressException {"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,75,FileOutputStream outputStream = null;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,76,FileInputStream inputStream = null;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,77,try {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,78,outputStream = new FileOutputStream( output );
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,79,inputStream = new FileInputStream( input );
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,80,"this.compressTo(inputStream, outputStream);"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,81,} catch (FileNotFoundException e) {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,82,"throw new CompressException(""File not found"" ,e);"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,86,/* (non-Javadoc)
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,87,* @see org.apache.commons.compress.Compressor#compress(java.io.File)
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,89,public void compressToHere(File input) throws CompressException {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,90,"String pathToFile = input.getAbsolutePath().concat(""."").concat(getDefaultFileExtension());"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,91,File output = new File(pathToFile);
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,92,"this.compressTo(input, output);"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,95,/* (non-Javadoc)
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,96,* @see org.apache.commons.compress.Compressor#compressStream(java.io.File)
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,98,public InputStream compress(File input) throws CompressException {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,99,try {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,100,return this.compress(
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,101,new FileInputStream(input));
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,102,} catch (FileNotFoundException e) {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,103,"throw new CompressException(""File could not be found."",e);"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,107,/* (non-Javadoc)
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,108,* @see org.apache.commons.compress.Decompressor#decompress(java.io.File)
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,110,public InputStream decompress(File input) throws CompressException {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,111,File temp;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,112,InputStream result;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,113,try {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,114,"temp = File.createTempFile(""compress_"", ""jkt"");"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,115,"this.decompressTo(input, temp);"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,116,result = new FileInputStream(temp);
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,117,} catch (IOException e) {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,118,"throw new CompressException(""Error while creating a temporary file"", e);"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,120,return result;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,123,/* (non-Javadoc)
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,124,* @see org.apache.commons.compress.Decompressor#decompress(java.io.FileInputStream)
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,126,public InputStream decompress(FileInputStream input)
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,127,throws CompressException {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,128,File temp;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,129,InputStream result;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,130,try {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,131,"temp = File.createTempFile(""compress_"", ""jkt"");"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,132,"this.decompressTo(input, new FileOutputStream(temp));"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,133,result = new FileInputStream(temp);
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,134,} catch (IOException e) {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,135,"throw new CompressException(""Error while creating a temporary file"", e);"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,137,return result;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,140,/* (non-Javadoc)
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,141,"* @see org.apache.commons.compress.Compressor#decompress(java.io.File, java.io.File)"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,143,"public void decompressTo(File input, File output)"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,144,throws CompressException {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,145,FileInputStream inputStream = null;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,146,FileOutputStream outputStream = null;
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,147,try {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,148,outputStream = new FileOutputStream( output );
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,149,inputStream = new FileInputStream( input );
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,150,"decompressTo(inputStream, outputStream);"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,151,} catch (FileNotFoundException e) {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,152,"throw new CompressException(""File could not be found"", e);"
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,153,} finally {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,154,try {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,155,inputStream.close();
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,156,outputStream.close();
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,157,} catch (IOException e1) {
True,src/java/org/apache/commons/compress/AbstractCompressor.java,src/java/org/apache/commons/compress/AbstractCompressor.java,158,"throw new CompressException(""An I/O Exception has occured while closing a stream"", e1);"
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,2,"* Copyright 2002,2004 The Apache Software Foundation."
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,14,* limitations under the License.
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,16,package org.apache.commons.compress;
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,18,import java.io.File;
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,19,import java.io.FileNotFoundException;
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,20,import java.io.FileOutputStream;
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,21,import java.io.IOException;
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,22,import java.util.Iterator;
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,24,* Archive is the interface which defines all operations
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,25,* for all possible archive-operations.
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,27,* TODO:
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,28,* - delete files from an archive
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,29,* - add files to an existing archive
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,30,* - recursivley add directories
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,32,public interface Archive {
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,34,* Adds a file to the internal filelist
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,35,* for a possible pack-operation
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,37,public void add(File file) throws FileNotFoundException;
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,40,* Adds a FileInputStream to the internal filelist
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,41,* for a possible pack-operation
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,43,public void add(ArchiveEntry entry);
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,46,* Packs a file.
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,47,* The destination filename must be set manually with setDestinationFile(...).
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,48,* There must be at least 1 file to be packed.
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,50,* @throws ArchiveException if there is no destination file or files to be packed
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,51,"* @return true, if the operation has been ended without exceptions"
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,53,public void save(FileOutputStream output) throws ArchiveException;
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,56,* Packs this file.
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,57,* This methods ignores what has been set in setDestinationFile(...) and
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,58,* uses the filename of the parameter. This string must not be null.
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,60,* @throws ArchiveException if there is no destination file or files to be packed
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,62,public void save(File output) throws ArchiveException;
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,65,* Sets an Archive for manipulating. An archive is set if someone
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,66,* saves an Archive or calls getInstance(...) with an archive.
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,67,* @param archive file to manipulate
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,69,void setArchive(File file);
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,72,"* Returns the archive file and null,"
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,73,* if this archiver has not been saved yet or
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,74,* there has not been set an archive manually.
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,75,"* @return the archiver, or null"
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,77,public File getArchive();
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,80,* Unpacks to the specified directory
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,81,* @param dir to unpack
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,82,* @throws UnpackException if an unpack error occurs
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,84,public void unpack(File destinationDir) throws UnpackException;
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,87,* Get an iterator of ArchiveEntrys which shall be archived
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,88,* @return the iterator
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,90,public Iterator getEntryIterator();
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,93,* Closes this archiver and all internal streams.
True,src/java/org/apache/commons/compress/Archive.java,src/java/org/apache/commons/compress/Archive.java,95,public void close() throws IOException ;
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,2,"* Copyright 2002,2004 The Apache Software Foundation."
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,14,* limitations under the License.
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,16,package org.apache.commons.compress;
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,18,import java.io.File;
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,19,import java.util.ArrayList;
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,20,import java.util.Iterator;
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,21,import java.util.List;
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,23,import org.apache.commons.compress.archivers.tar.TarArchive;
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,24,import org.apache.commons.compress.archivers.zip.ZipArchive;
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,26,* Provides implementations for all ArchiverFactory methods.
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,28,public class ArchiverFactory {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,29,/* internal archiver list */
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,30,private static List archives;
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,32,// pre-register archives
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,33,static {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,34,archives = new ArrayList();
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,35,try {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,36,registerArchiver(TarArchive.class);
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,37,registerArchiver(ZipArchive.class);
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,38,} catch (ArchiveException e) {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,39,e.printStackTrace();
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,44,* Constructor.
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,45,* @param name name of the implementation
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,47,private ArchiverFactory() {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,51,* Registers a new archiver in the factory.
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,52,* The archiver must implement the archiver interface.
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,54,* @param className full qualified archiver implementation
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,55,* @throws ClassNotFoundException if the new archiver class could not be found
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,56,* @throws ArchiveException if the new archiver does not implement the archiver interface
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,58,public static void registerArchiver(String className)
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,59,"throws ClassNotFoundException, ArchiveException {"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,60,Class clazz = Class.forName(className);
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,61,registerArchiver(clazz);
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,65,* Registers a new archiver in the factory.
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,66,* The archiver must implement the archiver interface and must
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,67,* be an concrete implementation
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,69,* @param className full qualified archiver implementation
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,70,* @throws ArchiveException if the new archiver does not implement the archiver interface
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,72,public static void registerArchiver(Class clazz)
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,73,throws ArchiveException {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,74,"// register only, if the class is assignable and not an interface"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,75,if(Archive.class.isAssignableFrom(clazz) && !(clazz.isInterface())) {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,76,try {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,77,archives.add(clazz.newInstance());
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,78,} catch (InstantiationException e) {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,79,"throw new ArchiveException(""Archive could not be instantiated"", e);"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,80,} catch (IllegalAccessException e) {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,81,"throw new ArchiveException(""Archive could not be instantiated"", e);"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,83,} else {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,84,"throw new ArchiveException(""Archive does not implement the Archive.class interface."");"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,89,"* Returns an empty Archive, if an archiver could be found for this factory."
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,90,"* If two Archive-implementations with the same name are registered,"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,91,* the first matching archiver will be instanciated.
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,93,"* @return the archiver, or null, if no matching archiver could be found"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,94,* @throws ArchiveException if the archiver could not be created
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,96,public static Archive getInstance(String archiverName)
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,97,throws ArchiveException {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,98,try {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,99,if(archiverName == null) {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,100,"throw new ArchiveException(""ArchiverFactory could not create instance"");"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,102,Iterator it = archives.iterator();
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,103,while(it.hasNext()) {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,104,PackableObject po = (PackableObject)it.next();
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,105,"if(po.isPackableWith(archiverName, PackableObject.CHOOSE_NAME)) {"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,106,return (Archive)po.getClass().newInstance();
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,109,return null;
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,110,} catch (InstantiationException e) {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,111,"throw new ArchiveException(""ArchiverFactory could not create instance"", e);"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,112,} catch (IllegalAccessException e) {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,113,"throw new ArchiveException(""ArchiverFactory could not create instance"", e);"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,118,"* Returns an archiver, filled with an existing archive."
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,119,* Uses the byte header to identify the archiver. If no corresponding
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,120,"* archiver could be found, a filename extension check will be done."
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,121,* @param archivedFile an existing archive
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,122,"* @return an archiver, filled with the archive"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,124,public static Archive getInstance(File file)
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,125,throws ArchiveException {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,126,if(file == null && !file.isFile()) {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,127,"throw new ArchiveException(""ArchiverFactory could not create instance for this file"");"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,131,/* Archive result */
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,132,PackableObject packable = null;
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,134,try {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,135,"packable = PackableObject.identifyByHeader(file, archives);"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,137,if(packable == null) {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,138,return null;
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,140,Archive archive = (Archive)packable.getClass().newInstance();
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,141,archive.setArchive(file);
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,142,return archive;
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,143,} catch (SecurityException e) {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,144,"throw new ArchiveException(""A security violation occured while reading the field ARCHIVER_NAME"", e);"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,145,} catch (IllegalArgumentException e) {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,146,"throw new ArchiveException(""Internal factory exception"", e);"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,147,} catch (InstantiationException e) {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,148,"throw new ArchiveException(""ArchiverFactory could not create instance"", e);"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,149,} catch (IllegalAccessException e) {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,150,"throw new ArchiveException(""ArchiverFactory could not create instance"", e);"
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,151,} catch (PackableObjectException e) {
True,src/java/org/apache/commons/compress/ArchiverFactory.java,src/java/org/apache/commons/compress/ArchiverFactory.java,152,"throw new ArchiveException(""ArchiverFactory could not create instance"", e);"
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,2,"* Copyright 2002,2004 The Apache Software Foundation."
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,14,* limitations under the License.
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,16,package org.apache.commons.compress;
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,19,* Exception occurs when a exception within
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,20,* the compress actions occurs.
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,22,public class CompressException extends PackableObjectException {
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,24,* Comment for <code>serialVersionUID</code>
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,26,private static final long serialVersionUID = 3257005449554507057L;
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,29,* Calls the IOException constructor
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,31,public CompressException() {
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,32,super();
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,36,* Calls the IOException constructor with a message
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,37,* @param message the message
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,39,public CompressException(String message) {
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,40,super(message);
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,44,* Calls the IOException constructor with a message
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,45,* and fills the stacktrace with the stacktrace of
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,46,* an exception
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,48,* @param message the message
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,49,* @param e the exception
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,51,"public CompressException(String message, Exception e) {"
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,52,super(message);
True,src/java/org/apache/commons/compress/CompressException.java,src/java/org/apache/commons/compress/CompressException.java,53,this.initCause(e);
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,2,"* Copyright 2002,2004 The Apache Software Foundation."
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,14,* limitations under the License.
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,16,package org.apache.commons.compress;
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,18,import java.io.IOException;
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,19,import java.io.InputStream;
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,20,import java.io.OutputStream;
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,23,* Utils for Compress.
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,25,public class CompressUtils {
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,27,* This class should not be constructed
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,29,private CompressUtils() {
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,30,// unused
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,34,* Copy bytes from an <code>InputStream</code> to an <code>OutputStream</code>.
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,36,"public static void copy( final InputStream input,"
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,37,final OutputStream output )
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,38,throws IOException {
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,39,final byte[] buffer = new byte[ 8024 ];
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,40,int n = 0;
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,41,while( -1 != ( n = input.read( buffer ) ) ) {
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,42,"output.write( buffer, 0, n );"
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,47,* Compares one byte array to another
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,48,* @param source- the array to compare to
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,49,* @param headerBytes - the bytearray match
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,51,"public static boolean compareByteArrays(byte[] source, byte[] match) {"
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,52,int i = 0;
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,53,while(source.length < i || i < match.length ) {
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,54,if(source[i] != match[i]) {
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,55,return false;
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,57,i++;
True,src/java/org/apache/commons/compress/CompressUtils.java,src/java/org/apache/commons/compress/CompressUtils.java,59,return true;
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,2,"* Copyright 2002,2004 The Apache Software Foundation."
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,14,* limitations under the License.
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,16,package org.apache.commons.compress;
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,18,import java.io.File;
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,19,import java.io.FileInputStream;
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,20,import java.io.FileOutputStream;
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,21,import java.io.InputStream;
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,23,* The Compressor Interface defines all operations for
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,24,* the compress/decompress actions.
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,26,public interface Compressor {
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,28,* Compresses this file and returns an
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,29,* InputStream to the compressed File
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,31,* @param input File to compress
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,32,* @return FileInputStream of the compressed file
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,33,* @throws CompressException if the Compressor reports an error
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,35,public InputStream compress(File input)
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,36,throws CompressException;
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,39,* Compresses this InputStream and returns an
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,40,* InputStream to the compressed file
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,42,* @param input Stream to compress
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,43,* @return Stream to the compressed file
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,44,* @throws CompressException if the Compressor reports an error
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,46,public InputStream compress(FileInputStream input)
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,47,throws CompressException;
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,50,* Compresses the file input and creates a file in the same
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,51,* directory with the default file extension in its name.
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,53,* @param input the file to compress
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,54,* @throws CompressException if the Compressor reports an error
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,56,public void compressToHere(File input)
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,57,throws CompressException;
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,60,"* Creates the file ""output"" with the compressed"
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,61,"* content of file ""input"""
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,63,* @param input the file to compress
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,64,* @param output the file to create
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,65,* @throws CompressException if the Compressor reports an error
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,67,"public void compressTo(File input, File output)"
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,68,throws CompressException;
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,71,* Compresses the input stream and writes the compressed
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,72,* bytes to the output stream. This method must be implemented
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,73,* by all new compressortypes.
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,75,* @param input InputStream to compress to
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,76,* @param output OutputStream to which the byte shall be written
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,77,* @throws CompressException if the Compressor reports an error
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,79,"public void compressTo(FileInputStream input, FileOutputStream output)"
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,80,throws CompressException;
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,83,* Decompresses a file and returns an InputStream
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,84,* @param input file to decompress
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,85,* @return the decompressed file as an inputstream
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,87,public InputStream decompress(File input)
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,88,throws CompressException;
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,91,* Decompresses a file and returns an InputStream
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,92,* @param input inputstream to decompress
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,93,* @return the decompressed InputStream
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,95,public InputStream decompress(FileInputStream inputStream)
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,96,throws CompressException;;
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,99,* Decompresses this file and writes the decompressed byte to the output file
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,100,* @param input File to decompress
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,101,* @param output File to write the decompressed bytes to
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,102,* @throws DecompressException if the Compressor reports an error
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,104,"public void decompressTo(File input, File output)"
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,105,throws CompressException;
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,108,* Decompresses this file and writes the decompressed file to the output-stream
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,109,* @param input Stream to decompress
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,110,* @param output Stream to write the decompressed bytes to
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,111,* @throws DecompressException if the Compressor reports an error
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,113,"public void decompressTo(FileInputStream input, FileOutputStream output)"
True,src/java/org/apache/commons/compress/Compressor.java,src/java/org/apache/commons/compress/Compressor.java,114,throws CompressException;
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,2,"* Copyright 2002,2004 The Apache Software Foundation."
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,14,* limitations under the License.
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,16,package org.apache.commons.compress;
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,18,import java.io.File;
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,19,import java.util.ArrayList;
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,20,import java.util.Iterator;
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,21,import java.util.List;
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,23,import org.apache.commons.compress.compressors.bzip2.BZip2Compressor;
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,25,* Compressor-Factory.
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,26,* Use CompressorFactory.TYPE.getInstance() for an new Compressor-Instance.
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,28,public abstract class CompressorFactory {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,29,/* Name of this CompressorFactory*/
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,30,private final String name;
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,31,/* internal archiver list */
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,32,private static List compressors;
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,34,// register compressors
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,35,static {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,36,compressors = new ArrayList();
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,37,try {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,38,registerCompressor(BZip2Compressor.class);
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,39,} catch (CompressException e) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,40,e.printStackTrace();
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,45,* Registers a new archiver in the factory.
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,46,* The archiver must implement the archiver interface.
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,48,* @param className full qualified archiver implementation
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,49,* @throws ClassNotFoundException if the new archiver class could not be found
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,50,* @throws ArchiveException if the new archiver does not implement the archiver interface
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,52,public static void registerCompressor(String className)
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,53,"throws ClassNotFoundException, CompressException {"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,54,Class clazz = Class.forName(className);
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,55,registerCompressor(clazz);
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,59,* Registers a new archiver in the factory.
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,60,* The archiver must implement the archiver interface and must
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,61,* be an concrete implementation
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,63,* @param className full qualified archiver implementation
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,64,* @throws ArchiveException if the new archiver does not implement the archiver interface
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,66,public static void registerCompressor(Class clazz)
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,67,throws CompressException {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,68,"// register only, if the class is assignable and not an interface"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,69,if(Compressor.class.isAssignableFrom(clazz) && !(clazz.isInterface())) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,70,try {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,71,compressors.add(clazz.newInstance());
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,72,} catch (InstantiationException e) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,73,"throw new CompressException(""Compressor could not be instantiated"", e);"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,74,} catch (IllegalAccessException e) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,75,"throw new CompressException(""Compressor could not be instantiated"", e);"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,77,} else {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,78,"throw new CompressException(""Compressor does not implement the Compressor.class interface."");"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,83,* Constructor. Takes the name of the implementation.
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,84,* @param _name - name of the implementation
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,86,private CompressorFactory(String name) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,87,this.name = name;
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,91,* Returns a compressor
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,92,* @return the compressor
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,94,public abstract Compressor getInstance();
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,97,"* Returns an empty Compressor, if an matching compressor"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,98,* could be found within this factory.
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,99,"* If two implementations with the same name are registered,"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,100,* the first matching implementation will be instanciated.
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,102,"* @return the compressor, or null, if no matching compressor could be found"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,103,* @throws CompressorException if the compressor could not be created
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,105,public static Compressor getInstance(String compressorName)
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,106,throws CompressException {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,107,try {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,108,if(compressorName == null) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,109,"throw new CompressException(""CompressorFactory could not create instance"");"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,111,Iterator it = compressors.iterator();
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,112,while(it.hasNext()) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,113,PackableObject po = (PackableObject)it.next();
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,114,"if(po.isPackableWith(compressorName, PackableObject.CHOOSE_NAME)) {"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,115,return (Compressor)po.getClass().newInstance();
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,118,return null;
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,119,} catch (InstantiationException e) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,120,"throw new CompressException(""CompressorFactory could not create instance"", e);"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,121,} catch (IllegalAccessException e) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,122,"throw new CompressException(""CompressorFactory could not create instance"", e);"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,127,"* Returns an archiver, filled with an existing archive."
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,128,* Uses the byte header to identify the archiver. If no corresponding
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,129,"* archiver could be found, a filename extension check will be done."
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,130,* @param archivedFile an existing archive
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,131,"* @return an archiver, filled with the archive"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,133,public static Compressor getInstance(File file)
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,134,throws CompressException {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,135,if(file == null && !file.isFile()) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,136,"throw new CompressException(""CompressorFactory could not create instance for this file"");"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,140,/* Archive result */
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,141,PackableObject packable = null;
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,143,try {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,144,"packable = PackableObject.identifyByHeader(file, compressors);"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,146,if(packable == null) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,147,return null;
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,149,Compressor compressor = (Compressor)packable.getClass().newInstance();
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,150,return compressor;
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,151,} catch (SecurityException e) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,152,"throw new CompressException(""A security violation occured while reading the field ARCHIVER_NAME"", e);"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,153,} catch (IllegalArgumentException e) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,154,"throw new CompressException(""Internal factory exception"", e);"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,155,} catch (InstantiationException e) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,156,"throw new CompressException(""CompressorFactory could not create instance"", e);"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,157,} catch (IllegalAccessException e) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,158,"throw new CompressException(""CompressorFactory could not create instance"", e);"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,159,} catch (PackableObjectException e) {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,160,"throw new CompressException(""CompressorFactory could not create instance"", e);"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,164,* <code>BZIP2</code> Compressor Factory
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,166,"public static CompressorFactory BZIP2 = new CompressorFactory(""BZIP2"") {"
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,167,/* (non-Javadoc)
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,168,* @see org.apache.commons.compress.ArchiverFactory#getInstance()
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,170,public Compressor getInstance() {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,171,return new BZip2Compressor();
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,175,/* (non-Javadoc)
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,176,* @see java.lang.Object#toString()
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,178,public String toString() {
True,src/java/org/apache/commons/compress/CompressorFactory.java,src/java/org/apache/commons/compress/CompressorFactory.java,179,return name;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,2,"* Copyright 2002,2004 The Apache Software Foundation."
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,14,* limitations under the License.
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,16,package org.apache.commons.compress;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,18,import java.io.File;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,19,import java.io.FileInputStream;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,20,import java.io.FileNotFoundException;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,21,import java.io.IOException;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,22,import java.util.Iterator;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,23,import java.util.List;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,25,* Abstract super object for Compressor and Archiver classes.
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,27,public abstract class PackableObject {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,28,/* Type for archive choosing: String */
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,29,protected static final int CHOOSE_EXTENSION = 1;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,30,/* Type for archive choosing: Long */
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,31,protected static final int CHOOSE_NAME = 2;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,34,* Header byte array for this archive.
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,36,public abstract byte[] getHeader();
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,39,"* Returns the default FileExtension for this archive,"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,40,"* for example ""zip"", ""tar""..."
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,42,public abstract String getDefaultFileExtension();
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,45,* Returns the ArchiveName for this archive.
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,47,public abstract String getName();
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,50,* String Chooser.
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,51,* @param value
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,52,* @param methodName
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,53,* @return
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,54,* @throws ArchiveException
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,55,* @throws FileNotFoundException
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,57,"protected boolean isPackableWith(Object value, int choose) {"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,58,if(value == null) {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,59,return false;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,61,if(choose == CHOOSE_EXTENSION) {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,62,if(value.equals( getDefaultFileExtension())) {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,63,return true;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,65,} else if (choose == CHOOSE_NAME) {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,66,if(value.equals( getName())) {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,67,return true;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,70,return false;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,74,* Compares a file to a list of packables and identifies an object by header.
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,75,"* If no matching header is found, it identifies the file by file extension."
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,76,"* If identification was not successfull, null is returned"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,78,* @param file the file to identify
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,79,* @param packables a list of packables
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,80,"* @return a matching packable object, or null"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,81,* @throws ArchiveException
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,83,"public static PackableObject identifyByHeader(File file, List packables)"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,84,throws PackableObjectException {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,85,/* FileInputStream for the archive */
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,86,FileInputStream fis = null;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,88,try {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,89,/* Archive result */
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,90,PackableObject packable = null;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,92,//		 identify archive by header
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,93,fis = new FileInputStream(file);
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,94,byte[] headerBytes = new byte[20];
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,95,"fis.read(headerBytes, 0, 20);"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,97,Iterator iter = packables.iterator();
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,98,while(iter.hasNext()) {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,99,PackableObject p = (PackableObject)iter.next();
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,100,byte[] fieldHeader = p.getHeader();
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,101,if(fieldHeader != null) {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,102,"if(CompressUtils.compareByteArrays(headerBytes, fieldHeader)) {"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,103,return p;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,108,"// if we couldn't find an archiver by header bytes, we'll give it a try"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,109,"// with the default name extension. This is useful, cause some archives"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,110,// like tar have no header.
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,111,String name = file.getName();
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,112,String extension = null;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,113,"String[] s = name.split(""\\."");"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,114,if(s.length > 1) {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,115,extension = s[ s.length - 1];
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,117,Iterator it = packables.iterator();
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,118,while(it.hasNext()) {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,119,PackableObject p = (PackableObject)it.next();
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,120,"if(p.isPackableWith(extension, PackableObject.CHOOSE_EXTENSION)) {"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,121,return p;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,125,// No implementation found
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,126,return null;
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,127,} catch (FileNotFoundException e) {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,128,"throw new PackableObjectException(""File not found"", e);"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,129,} catch (IOException e) {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,130,"throw new PackableObjectException(""Internal factory exception"", e);"
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,131,} finally {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,132,try {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,133,fis.close();
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,134,} catch (IOException e1) {
True,src/java/org/apache/commons/compress/PackableObject.java,src/java/org/apache/commons/compress/PackableObject.java,135,"throw new PackableObjectException(""Error while closing InputStream to file"", e1);"
