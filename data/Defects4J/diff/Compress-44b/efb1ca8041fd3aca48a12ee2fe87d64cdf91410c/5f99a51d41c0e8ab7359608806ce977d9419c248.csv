is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,4,*  this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,7,*  the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,14,*  See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,15,*  limitations under the License.
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,18,package org.apache.commons.compress.archivers.zip;
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,20,import java.io.File;
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,21,import java.io.FileNotFoundException;
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,22,import java.io.FileInputStream;
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,23,import java.io.FileOutputStream;
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,24,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,25,import java.io.InputStream;
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,28,* ScatterGatherBackingStore that is backed by a file.
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,30,* @since 1.10
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,32,class FileBasedScatterGatherBackingStore implements ScatterGatherBackingStore {
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,33,private final File target;
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,34,private final FileOutputStream os;
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,36,FileBasedScatterGatherBackingStore(File target) throws FileNotFoundException {
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,37,this.target = target;
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,38,os = new FileOutputStream(target);
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,41,public InputStream getInputStream() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,42,return new FileInputStream(target);
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,45,"@SuppressWarnings(""ResultOfMethodCallIgnored"")"
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,46,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,47,os.close();
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,50,"public void writeOut(byte[] data, int offset, int length) throws IOException {"
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,51,"os.write(data, offset, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,4,*  this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,7,*  the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,14,*  See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,15,*  limitations under the License.
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,18,package org.apache.commons.compress.archivers.zip;
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,20,import java.io.Closeable;
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,21,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,22,import java.io.InputStream;
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,25,* Abstraction over a scatter-output zip archives can be written to
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,26,* with a method to gather all content from an InputStream later on.
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,28,* @since 1.10
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,30,interface ScatterGatherBackingStore extends Closeable {
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,33,* An input stream that contains the scattered payload
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,35,"* @return An InputStream, should be closed by the caller of this method."
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,36,* @throws IOException when something fails
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,38,InputStream getInputStream() throws IOException;
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,41,* Writes a piece of payload.
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,43,* @param data the data to write
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,44,* @param offset offset inside data to start writing from
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,45,* @param length the amount of data to write
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,46,* @throws IOException when something fails
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,48,"void writeOut(byte[] data, int offset, int length) throws IOException ;"
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,47,ublic abstract class ScatterZipOutputStream  {
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,47,public class ScatterZipOutputStream  {
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,49,private final ScatterGatherBackingStore backingStore;
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,50,private final StreamCompressor streamCompressor;
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,76,"public ScatterZipOutputStream(ScatterGatherBackingStore backingStore,"
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,77,StreamCompressor streamCompressor) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,78,this.backingStore = backingStore;
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,79,this.streamCompressor = streamCompressor;
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,83,treamCompressor sc = getStreamCompressor();
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,84,"c.deflate(payload, method);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,91,"streamCompressor.deflate(payload, method);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,86,"tems.add(new CompressedEntry(zipArchiveEntry, sc.getCrc32(), sc.getBytesWritten(), method, sc.getBytesRead()));"
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,93,"items.add(new CompressedEntry(zipArchiveEntry, streamCompressor.getCrc32(),"
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,94,"streamCompressor.getBytesWritten(), method,"
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,95,streamCompressor.getBytesRead()));
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,96,loseBackingStorage();
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,97,nputStream data = getInputStream();
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,105,backingStore.close();
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,106,InputStream data = backingStore.getInputStream();
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,107, Returns a stream compressor that can be used to compress the data.
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,108, <p/>
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,109, This method is expected to return the same instance every time.
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,111, @return The stream compressor
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,112, @throws FileNotFoundException
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,114,rotected abstract StreamCompressor getStreamCompressor() throws FileNotFoundException;
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,117, An input stream that contains the scattered payload
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,119," @return An InputStream, should be closed by the caller of this method."
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,120, @throws IOException when something fails
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,122,rotected abstract InputStream getInputStream() throws IOException;
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,126, Closes whatever storage is backing this scatter stream
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,128,rotected abstract void closeBackingStorage() throws IOException;
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,150,"eturn new FileScatterOutputStream(file, compressionLevel);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,153,rivate static class FileScatterOutputStream extends ScatterZipOutputStream {
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,154,inal File target;
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,155,rivate StreamCompressor streamDeflater;
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,156,inal FileOutputStream os;
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,158,"ileScatterOutputStream(File target, int compressionLevel) throws FileNotFoundException {"
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,159,his.target = target;
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,160,s = new FileOutputStream(target);
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,161,"treamDeflater = StreamCompressor.create(compressionLevel, os);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,164,Override
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,165,rotected StreamCompressor getStreamCompressor() throws FileNotFoundException {
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,166,eturn streamDeflater;
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,169,Override
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,170,rotected InputStream getInputStream() throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,171,eturn new FileInputStream(target);
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,174,"SuppressWarnings(""ResultOfMethodCallIgnored"")"
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,175,ublic void closeBackingStorage() throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,176,s.close();
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,135,ScatterGatherBackingStore bs = new FileBasedScatterGatherBackingStore(file);
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,136,"StreamCompressor sc = StreamCompressor.create(compressionLevel, bs);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,137,"return new ScatterZipOutputStream(bs, sc);"
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,95,* Create a stream compressor with the given compression level.
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,97,* @param compressionLevel The #Deflater compression level
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,98,* @param bs The #ScatterGatherBackingStore to receive output
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,99,* @return A stream compressor
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,101,"public static StreamCompressor create(int compressionLevel, ScatterGatherBackingStore bs) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,102,"final Deflater deflater = new Deflater(compressionLevel, true);"
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,103,"return new ScatterGatherBackingStoreCompressor(deflater, bs);"
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,107,* Create a stream compressor with the default compression level.
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,109,* @param bs The #ScatterGatherBackingStore to receive output
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,110,* @return A stream compressor
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,112,public static StreamCompressor create( ScatterGatherBackingStore bs) {
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,113,"return create(Deflater.DEFAULT_COMPRESSION, bs);"
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,222,private static final class ScatterGatherBackingStoreCompressor extends StreamCompressor {
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,223,private final ScatterGatherBackingStore bs;
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,225,"public ScatterGatherBackingStoreCompressor(Deflater deflater, ScatterGatherBackingStore bs) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,226,super(deflater);
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,227,this.bs = bs;
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,230,"protected final void writeOut(byte[] data, int offset, int length)"
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,231,throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,232,"bs.writeOut(data, offset, length);"
