is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,21,import java.io.ByteArrayOutputStream;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,28,import java.util.zip.Deflater;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,84,private final GzipParameters parameters = new GzipParameters();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,140,* Provides the stream's meta data - may change with each stream
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,141,* when decompressing concatenated streams.
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,142,* @return the stream's meta data
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,143,* @since 1.8
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,145,public GzipParameters getMetaData() {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,146,return parameters;
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,157,f (method != 8) {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,171,if (method != Deflater.DEFLATED) {
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,168,"nData.readInt(); // mtime, ignored"
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,169,"nData.readUnsignedByte(); // extra flags, ignored"
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,170,"nData.readUnsignedByte(); // operating system, ignored"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,182,parameters.setModificationTime(readLittleEndianInt(inData) * 1000);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,183,switch (inData.readUnsignedByte()) { // extra flags
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,184,case 2:
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,185,parameters.setCompressionLevel(Deflater.BEST_COMPRESSION);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,186,break;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,187,case 4:
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,188,parameters.setCompressionLevel(Deflater.BEST_SPEED);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,189,break;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,190,default:
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,191,// ignored for now
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,192,break;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,194,parameters.setOperatingSystem(inData.readUnsignedByte());
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,185,"/ Original file name, ignored"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,209,// Original file name
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,187,eadToNull(inData);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,211,"parameters.setFilename(new String(readToNull(inData), ""ISO-8859-1""));"
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,190,"/ Comment, ignored"
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,214,// Comment
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,192,eadToNull(inData);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,216,"parameters.setComment(new String(readToNull(inData), ""ISO-8859-1""));"
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,212,rivate void readToNull(DataInputStream inData) throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,213,hile (inData.readUnsignedByte() != 0x00) { // NOPMD
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,236,private byte[] readToNull(DataInputStream inData) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,237,ByteArrayOutputStream bos = new ByteArrayOutputStream();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,238,int b = 0;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,239,while ((b = inData.readUnsignedByte()) != 0x00) { // NOPMD
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,240,bos.write(b);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,242,return bos.toByteArray();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,245,private int readLittleEndianInt(DataInputStream inData) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,246,return inData.readUnsignedByte()
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,247,| (inData.readUnsignedByte() << 8)
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,248,| (inData.readUnsignedByte() << 16)
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,249,| (inData.readUnsignedByte() << 24);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,273,public void testMetadataRoundTrip() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,274,ByteArrayOutputStream bout = new ByteArrayOutputStream();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,276,GzipParameters parameters = new GzipParameters();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,277,parameters.setCompressionLevel(Deflater.BEST_COMPRESSION);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,278,parameters.setModificationTime(123456000);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,279,parameters.setOperatingSystem(13);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,280,"parameters.setFilename(""test3.xml"");"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,281,"parameters.setComment(""Umlaute möglich?"");"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,282,"GzipCompressorOutputStream out = new GzipCompressorOutputStream(bout, parameters);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,283,"FileInputStream fis = new FileInputStream(getFile(""test3.xml""));"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,284,try {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,285,"IOUtils.copy(fis, out);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,286,} finally {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,287,fis.close();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,288,out.close();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,291,GzipCompressorInputStream input =
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,292,new GzipCompressorInputStream(new ByteArrayInputStream(bout.toByteArray()));
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,293,input.close();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,294,GzipParameters readParams = input.getMetaData();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,295,"assertEquals(Deflater.BEST_COMPRESSION, readParams.getCompressionLevel());"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,296,"assertEquals(123456000, readParams.getModificationTime());"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,297,"assertEquals(13, readParams.getOperatingSystem());"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,298,"assertEquals(""test3.xml"", readParams.getFilename());"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,299,"assertEquals(""Umlaute möglich?"", readParams.getComment());"
