is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,43,import org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream;
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,541,            {@value LZ4_BLOCK}
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,542,"*            {@value LZ4_BLOCK}, {@value LZ4_FRAMED}"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,593,if (LZ4_FRAMED.equalsIgnoreCase(name)) {
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,594,return new FramedLZ4CompressorOutputStream(out);
False,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,635,"eturn Sets.newHashSet(GZIP, BZIP2, XZ, LZMA, PACK200, DEFLATE, SNAPPY_RAW, SNAPPY_FRAMED, LZ4_BLOCK);"
True,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java,640,"return Sets.newHashSet(GZIP, BZIP2, XZ, LZMA, PACK200, DEFLATE, SNAPPY_FRAMED, LZ4_BLOCK, LZ4_FRAMED);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,19,package org.apache.commons.compress.compressors.lz4;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,21,import java.io.ByteArrayOutputStream;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,22,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,23,import java.io.OutputStream;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,24,import java.util.Arrays;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,25,import java.util.List;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,27,import org.apache.commons.compress.compressors.CompressorOutputStream;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,28,import org.apache.commons.compress.utils.ByteUtils;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,31,* CompressorOutputStream for the LZ4 frame format.
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,33,"* <p>Based on the ""spec"" in the version ""1.5.1 (31/03/2015)""</p>"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,35,"* @see <a href=""http://lz4.github.io/lz4/lz4_Frame_format.html"">LZ4 Frame Format Description</a>"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,36,* @since 1.14
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,37,* @NotThreadSafe
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,39,public class FramedLZ4CompressorOutputStream extends CompressorOutputStream {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,41,* TODO before releasing 1.14:
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,43,"* + xxhash32 checksum creation for headers, content, blocks"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,44,* + block dependence
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,47,private static final int DEFAULT_BLOCK_SIZE = 4096 * 1024;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,48,"private static final List<Integer> BLOCK_SIZES = Arrays.asList(64 * 1024, 256 * 1024, 1024 * 1024,"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,49,DEFAULT_BLOCK_SIZE);
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,50,private static final byte[] END_MARK = new byte[4];
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,52,// used in one-arg write method
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,53,private final byte[] oneByte = new byte[1];
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,55,private final byte[] blockData;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,56,private final OutputStream out;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,57,private boolean finished = false;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,58,private int currentIndex = 0;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,61,* Constructs a new output stream that compresses data using the
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,62,* LZ4 frame format using the default block size of 4MB.
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,63,* @param out the OutputStream to which to write the compressed data
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,64,* @throws IOException if writing the signature fails
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,66,public FramedLZ4CompressorOutputStream(OutputStream out) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,67,"this(out, DEFAULT_BLOCK_SIZE);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,71,* Constructs a new output stream that compresses data using the
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,72,* LZ4 frame format using the given block size.
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,73,* @param out the OutputStream to which to write the compressed data
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,74,"* @param blockSize block size, one of 64 KB, 256 KB, 1 MB or 4 MB."
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,75,* @throws IOException if writing the signature fails
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,76,* @throws IllegalArgumentException if the block size is not supported
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,78,"public FramedLZ4CompressorOutputStream(OutputStream out, int blockSize) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,79,if (!BLOCK_SIZES.contains(blockSize)) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,80,"throw new IllegalArgumentException(""Unsupported block size"");"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,82,blockData = new byte[blockSize];
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,83,this.out = out;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,84,out.write(FramedLZ4CompressorInputStream.LZ4_SIGNATURE);
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,85,writeFrameDescriptor();
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,88,@Override
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,89,public void write(int b) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,90,oneByte[0] = (byte) (b & 0xff);
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,91,write(oneByte);
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,94,@Override
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,95,"public void write(byte[] data, int off, int len) throws IOException {"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,96,if (currentIndex + len > blockData.length) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,97,flushBlock();
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,98,while (len > blockData.length) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,99,"System.arraycopy(data, off, blockData, 0, blockData.length);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,100,off += blockData.length;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,101,len -= blockData.length;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,102,currentIndex = blockData.length;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,103,flushBlock();
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,106,"System.arraycopy(data, off, blockData, currentIndex, len);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,107,currentIndex += len;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,110,@Override
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,111,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,112,finish();
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,113,out.close();
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,117,"* Compresses all remaining data and writes it to the stream,"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,118,* doesn't close the underlying stream.
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,119,* @throws IOException if an error occurs
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,121,public void finish() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,122,if (!finished) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,123,if (currentIndex > 0) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,124,flushBlock();
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,126,writeTrailer();
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,127,finished = true;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,131,private void writeFrameDescriptor() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,132,out.write(FramedLZ4CompressorInputStream.SUPPORTED_VERSION
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,133,| FramedLZ4CompressorInputStream.BLOCK_INDEPENDENCE_MASK);
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,134,out.write(BLOCK_SIZES.indexOf(blockData.length) << 4);
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,135,out.write(0); // TODO header checksum
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,138,private void flushBlock() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,139,ByteArrayOutputStream baos = new ByteArrayOutputStream();
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,140,try (OutputStream o = new BlockLZ4CompressorOutputStream(baos)) {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,141,"o.write(blockData, 0, currentIndex);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,143,byte[] b = baos.toByteArray();
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,144,"if (b.length > currentIndex) { // compression increased size, maybe beyond blocksize"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,145,"ByteUtils.toLittleEndian(out, currentIndex | FramedLZ4CompressorInputStream.UNCOMPRESSED_FLAG_MASK,"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,146,4);
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,147,"out.write(blockData, 0, currentIndex);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,148,} else {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,149,"ByteUtils.toLittleEndian(out, b.length, 4);"
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,150,out.write(b);
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,152,// TODO block checksum
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,153,currentIndex = 0;
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,156,private void writeTrailer() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,157,out.write(END_MARK);
True,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java,158,// TODO content checksum
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,19,package org.apache.commons.compress.compressors.lz4;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,21,import java.io.ByteArrayOutputStream;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,22,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,24,import org.junit.Test;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,26,public final class FramedLZ4CompressorOutputStreamTest {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,28,@Test(expected = IllegalArgumentException.class)
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,29,public void illegalBlockSize() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStreamTest.java,30,"new FramedLZ4CompressorOutputStream(new ByteArrayOutputStream(), 32 * 1024);"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,19,package org.apache.commons.compress.compressors.lz4;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,21,import java.io.File;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,22,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,23,import java.io.FileOutputStream;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,24,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,25,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,26,import java.io.OutputStream;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,27,import java.util.Random;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,28,import org.apache.commons.compress.AbstractTestCase;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,29,import org.apache.commons.compress.compressors.CompressorStreamFactory;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,30,import org.apache.commons.compress.compressors.lz77support.Parameters;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,31,import org.apache.commons.compress.utils.IOUtils;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,32,import org.junit.Assert;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,33,import org.junit.Test;
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,35,public final class FramedLZ4CompressorRoundtripTest extends AbstractTestCase {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,37,private void roundTripTest(String testFile) throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,38,File input = getFile(testFile);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,39,long start = System.currentTimeMillis();
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,40,"final File outputSz = new File(dir, input.getName() + "".framed.lz4"");"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,41,try (FileInputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,42,FileOutputStream os = new FileOutputStream(outputSz);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,43,FramedLZ4CompressorOutputStream los = new FramedLZ4CompressorOutputStream(os)) {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,44,"IOUtils.copy(is, los);"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,46,"System.err.println(input.getName() + "" written, uncompressed bytes: "" + input.length()"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,47,"+ "", compressed bytes: "" + outputSz.length() + "" after "" + (System.currentTimeMillis() - start) + ""ms"");"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,48,start = System.currentTimeMillis();
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,49,try (FileInputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,50,FramedLZ4CompressorInputStream sis = new FramedLZ4CompressorInputStream(new FileInputStream(outputSz))) {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,51,byte[] expected = IOUtils.toByteArray(is);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,52,byte[] actual = IOUtils.toByteArray(sis);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,53,"Assert.assertArrayEquals(expected, actual);"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,55,"System.err.println(outputSz.getName() + "" read after "" + (System.currentTimeMillis() - start) + ""ms"");"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,58,// should yield decent compression
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,59,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,60,public void blaTarRoundtrip() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,61,try {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,62,"roundTripTest(""bla.tar"");"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,63,} catch (Exception e) {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,64,e.printStackTrace();
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,68,// yields no compression at all
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,69,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,70,public void gzippedLoremIpsumRoundtrip() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,71,"roundTripTest(""lorem-ipsum.txt.gz"");"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,74,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,75,public void biggerFileRoundtrip() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,76,"roundTripTest(""COMPRESS-256.7z"");"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,79,@Test
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,80,public void roundtripViaFactory() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,81,"File input = getFile(""bla.tar"");"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,82,long start = System.currentTimeMillis();
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,83,"final File outputSz = new File(dir, input.getName() + "".framed.lz4"");"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,84,try (FileInputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,85,FileOutputStream os = new FileOutputStream(outputSz);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,86,OutputStream los = new CompressorStreamFactory()
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,87,".createCompressorOutputStream(CompressorStreamFactory.getLZ4Framed(), os)) {"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,88,"IOUtils.copy(is, los);"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,90,"System.err.println(input.getName() + "" written, uncompressed bytes: "" + input.length()"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,91,"+ "", compressed bytes: "" + outputSz.length() + "" after "" + (System.currentTimeMillis() - start) + ""ms"");"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,92,start = System.currentTimeMillis();
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,93,try (FileInputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,94,InputStream sis = new CompressorStreamFactory()
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,95,".createCompressorInputStream(CompressorStreamFactory.LZ4_FRAMED, new FileInputStream(outputSz))) {"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,96,byte[] expected = IOUtils.toByteArray(is);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,97,byte[] actual = IOUtils.toByteArray(sis);
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,98,"Assert.assertArrayEquals(expected, actual);"
True,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java,100,"System.err.println(outputSz.getName() + "" read after "" + (System.currentTimeMillis() - start) + ""ms"");"
