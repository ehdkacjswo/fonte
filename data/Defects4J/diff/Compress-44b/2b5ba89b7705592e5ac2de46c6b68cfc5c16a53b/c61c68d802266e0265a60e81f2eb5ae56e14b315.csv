is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,41,rivate static final int recordSize = DumpArchiveConstants.TP_SIZE;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,41,private static final int RECORD_SIZE = DumpArchiveConstants.TP_SIZE;
False,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,71,lockSize = recordSize * recsPerBlock;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,71,blockSize = RECORD_SIZE * recsPerBlock;
False,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,78,"ystem.arraycopy(oldBuffer, 0, blockBuffer, 0, recordSize);"
False,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,79,"eadFully(blockBuffer, recordSize, blockSize - recordSize);"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,78,"System.arraycopy(oldBuffer, 0, blockBuffer, 0, RECORD_SIZE);"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,79,"readFully(blockBuffer, RECORD_SIZE, blockSize - RECORD_SIZE);"
False,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,82,his.readOffset = recordSize;
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,82,this.readOffset = RECORD_SIZE;
False,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,103,"all reads must be multiple of record size ("" + recordSize +"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,103,"""all reads must be multiple of record size ("" + RECORD_SIZE +"
False,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,117,f ((len % recordSize) != 0) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,117,if ((len % RECORD_SIZE) != 0) {
False,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,119,"all reads must be multiple of record size ("" + recordSize +"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,119,"""all reads must be multiple of record size ("" + RECORD_SIZE +"
False,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,163,f ((len % recordSize) != 0) {
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,163,if ((len % RECORD_SIZE) != 0) {
False,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,165,"all reads must be multiple of record size ("" + recordSize +"
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,165,"""all reads must be multiple of record size ("" + RECORD_SIZE +"
False,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,226,inal byte[] b = new byte[recordSize];
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,226,final byte[] b = new byte[RECORD_SIZE];
False,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,239,inal byte[] result = new byte[recordSize];
True,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java,239,final byte[] result = new byte[RECORD_SIZE];
False,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,59,rivate static final int bufferSize = 4096;
False,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,60,rivate final byte[] outputBuffer = new byte[bufferSize];
False,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,61,rivate final byte[] readerBuf = new byte[bufferSize];
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,59,private static final int BUFFER_SIZE = 4096;
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,60,private final byte[] outputBuffer = new byte[BUFFER_SIZE];
True,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,src/main/java/org/apache/commons/compress/archivers/zip/StreamCompressor.java,61,private final byte[] readerBuf = new byte[BUFFER_SIZE];
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,66,ocalCrc = (T[T8_7_start + c0] ^ T[T8_6_start + c1])
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,67, (T[T8_5_start + c2] ^ T[T8_4_start + c3]);
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,66,localCrc = (T[T8_7_START + c0] ^ T[T8_6_START + c1])
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,67,^ (T[T8_5_START + c2] ^ T[T8_4_START + c3]);
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,74,ocalCrc ^= (T[T8_3_start + c4] ^ T[T8_2_start + c5])
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,75, (T[T8_1_start + c6] ^ T[T8_0_start + c7]);
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,74,localCrc ^= (T[T8_3_START + c4] ^ T[T8_2_START + c5])
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,75,^ (T[T8_1_START + c6] ^ T[T8_0_START + c7]);
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,83,ase 7: localCrc = (localCrc >>> 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) & 0xff)];
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,84,ase 6: localCrc = (localCrc >>> 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) & 0xff)];
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,85,ase 5: localCrc = (localCrc >>> 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) & 0xff)];
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,86,ase 4: localCrc = (localCrc >>> 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) & 0xff)];
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,87,ase 3: localCrc = (localCrc >>> 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) & 0xff)];
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,88,ase 2: localCrc = (localCrc >>> 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) & 0xff)];
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,89,ase 1: localCrc = (localCrc >>> 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) & 0xff)];
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,83,case 7: localCrc = (localCrc >>> 8) ^ T[T8_0_START + ((localCrc ^ b[off++]) & 0xff)];
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,84,case 6: localCrc = (localCrc >>> 8) ^ T[T8_0_START + ((localCrc ^ b[off++]) & 0xff)];
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,85,case 5: localCrc = (localCrc >>> 8) ^ T[T8_0_START + ((localCrc ^ b[off++]) & 0xff)];
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,86,case 4: localCrc = (localCrc >>> 8) ^ T[T8_0_START + ((localCrc ^ b[off++]) & 0xff)];
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,87,case 3: localCrc = (localCrc >>> 8) ^ T[T8_0_START + ((localCrc ^ b[off++]) & 0xff)];
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,88,case 2: localCrc = (localCrc >>> 8) ^ T[T8_0_START + ((localCrc ^ b[off++]) & 0xff)];
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,89,case 1: localCrc = (localCrc >>> 8) ^ T[T8_0_START + ((localCrc ^ b[off++]) & 0xff)];
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,100,rc = (crc >>> 8) ^ T[T8_0_start + ((crc ^ b) & 0xff)];
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,100,crc = (crc >>> 8) ^ T[T8_0_START + ((crc ^ b) & 0xff)];
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,107,rivate static final int T8_0_start = 0*256;
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,108,rivate static final int T8_1_start = 1*256;
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,109,rivate static final int T8_2_start = 2*256;
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,110,rivate static final int T8_3_start = 3*256;
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,111,rivate static final int T8_4_start = 4*256;
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,112,rivate static final int T8_5_start = 5*256;
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,113,rivate static final int T8_6_start = 6*256;
False,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,114,rivate static final int T8_7_start = 7*256;
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,107,private static final int T8_0_START = 0*256;
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,108,private static final int T8_1_START = 1*256;
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,109,private static final int T8_2_START = 2*256;
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,110,private static final int T8_3_START = 3*256;
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,111,private static final int T8_4_START = 4*256;
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,112,private static final int T8_5_START = 5*256;
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,113,private static final int T8_6_START = 6*256;
True,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,src/main/java/org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.java,114,private static final int T8_7_START = 7*256;
