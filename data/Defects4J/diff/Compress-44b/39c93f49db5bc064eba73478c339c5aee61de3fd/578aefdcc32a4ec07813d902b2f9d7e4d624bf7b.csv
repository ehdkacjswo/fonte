is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,366,et.setMode(mode);
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java,366,ret.setMode(mode);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,117,his.outStream = outStream;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,117,this.outStream = outStream;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,75,rivate TarUtils(){
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,75,private TarUtils(){
False,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,81,            indicates the this change should replace existing entries
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,81,*            indicates the this change should replace existing entries
False,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,94,f (Change.TYPE_ADD != pChange.type() ||
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,94,if (Change.TYPE_ADD != pChange.type() ||
False,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,130,hange.TYPE_DELETE_DIR != pChange.type()) ||
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,130,Change.TYPE_DELETE_DIR != pChange.type()) ||
False,src/main/java/org/apache/commons/compress/compressors/FileNameUtil.java,src/main/java/org/apache/commons/compress/compressors/FileNameUtil.java,38,"ew HashMap<String, String>();"
True,src/main/java/org/apache/commons/compress/compressors/FileNameUtil.java,src/main/java/org/apache/commons/compress/compressors/FileNameUtil.java,38,"new HashMap<String, String>();"
False,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,31,rivate ArchiveUtils(){
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,31,private ArchiveUtils(){
False,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,53,"ssertTrue(ArchiveUtils.matchAsciiBuffer(""def\0"", buffer2));"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,53,"assertTrue(ArchiveUtils.matchAsciiBuffer(""def\0"", buffer2));"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,78,/ Not yet implemented
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,78,// Not yet implemented
False,src/test/java/org/apache/commons/compress/IOMethodsTest.java,src/test/java/org/apache/commons/compress/IOMethodsTest.java,105,os1.write(byteTest[i]);
True,src/test/java/org/apache/commons/compress/IOMethodsTest.java,src/test/java/org/apache/commons/compress/IOMethodsTest.java,105,aos1.write(byteTest[i]);
False,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,127,"xpected.add(ent.substring(lastSlash+1, ent.length()));"
True,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,127,"expected.add(ent.substring(lastSlash+1, ent.length()));"
False,src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java,57,"ssertEquals(0, value);"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java,57,"assertEquals(0, value);"
False,src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java,60,"ssertEquals(0, value);"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java,60,"assertEquals(0, value);"
False,src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java,184,"ssertEquals(""7777777"", new String(buffer, ""UTF-8""));"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java,184,"assertEquals(""7777777"", new String(buffer, ""UTF-8""));"
