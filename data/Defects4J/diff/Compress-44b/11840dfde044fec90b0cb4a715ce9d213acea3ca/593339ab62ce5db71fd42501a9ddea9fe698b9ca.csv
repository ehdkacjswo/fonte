is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,22,import java.util.Arrays;
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,31,private static final int MAX_SANITIZED_NAME_LENGTH = 255;
False,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,258, replaced with a question mark.
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,261,* replaced with a question mark and the outcome is not longer
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,262,* than 255 chars.
False,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,270,inal char[] chars = s.toCharArray();
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,274,final char[] cs = s.toCharArray();
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,275,"final char[] chars = cs.length <= MAX_SANITIZED_NAME_LENGTH ? cs : Arrays.copyOf(cs, MAX_SANITIZED_NAME_LENGTH);"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,276,if (cs.length > MAX_SANITIZED_NAME_LENGTH) {
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,277,for (int i = MAX_SANITIZED_NAME_LENGTH - 3; i < MAX_SANITIZED_NAME_LENGTH; i++) {
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,278,chars[i] = '.';
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,70,@Test
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,71,public void sanitizeShortensString() {
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,72,"String input = ""012345678901234567890123456789012345678901234567890123456789"""
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,73,"+ ""012345678901234567890123456789012345678901234567890123456789"""
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,74,"+ ""012345678901234567890123456789012345678901234567890123456789"""
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,75,"+ ""012345678901234567890123456789012345678901234567890123456789"""
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,76,"+ ""012345678901234567890123456789012345678901234567890123456789"";"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,77,"String expected = ""012345678901234567890123456789012345678901234567890123456789"""
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,78,"+ ""012345678901234567890123456789012345678901234567890123456789"""
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,79,"+ ""012345678901234567890123456789012345678901234567890123456789"""
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,80,"+ ""012345678901234567890123456789012345678901234567890123456789"""
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,81,"+ ""012345678901..."";"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,82,"assertEquals(expected, ArchiveUtils.sanitize(input));"
