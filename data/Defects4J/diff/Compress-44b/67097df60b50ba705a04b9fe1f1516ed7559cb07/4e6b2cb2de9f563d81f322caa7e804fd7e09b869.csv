is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,46,ublic void close() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,46,public void closeForWriting() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,54,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/FileBasedScatterGatherBackingStore.java,55,target.delete();
False,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,23,mport java.util.Collections;
True,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,31,import static java.util.Collections.synchronizedList;
False,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,41,rivate List<ScatterZipOutputStream> streams = Collections.synchronizedList(new ArrayList<ScatterZipOutputStream>());
True,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,42,private List<ScatterZipOutputStream> streams = synchronizedList(new ArrayList<ScatterZipOutputStream>());
True,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,43,private List<ScatterGatherBackingStore> backingStores = synchronizedList(new ArrayList<ScatterGatherBackingStore>());
False,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,58,ublic static ScatterZipOutputStream createDeferred(ScatterGatherBackingStoreSupplier scatterGatherBackingStoreSupplier)
True,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,60,private ScatterZipOutputStream createDeferred(ScatterGatherBackingStoreSupplier scatterGatherBackingStoreSupplier)
True,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,63,backingStores.add( bs);
False,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,144,/ Maybe close ScatterZipOS. We should do something to get rid of tempfiles.
True,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,147,for (ScatterGatherBackingStore backingStore : backingStores) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java,148,backingStore.close();
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,25, Abstraction over a scatter-output zip archives can be written to
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,26, with a method to gather all content from an InputStream later on.
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,25,* <p></p>Abstraction over a scatter-output zip archives can be written to
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,26,* with a method to gather all content from an InputStream later on.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,28,* <p>It is the responsibility of the allocator of an instance of this class
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,29,* to close this. Closing it should clear off any allocated structures
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,30,* and preferably delete files.</p>
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,48,"oid writeOut(byte[] data, int offset, int length) throws IOException ;"
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,52,"void writeOut(byte[] data, int offset, int length) throws IOException;"
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,55,* Closes this backing store for further writing.
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterGatherBackingStore.java,57,void closeForWriting() throws IOException;
False,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,103,ackingStore.close();
True,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java,103,backingStore.closeForWriting();
