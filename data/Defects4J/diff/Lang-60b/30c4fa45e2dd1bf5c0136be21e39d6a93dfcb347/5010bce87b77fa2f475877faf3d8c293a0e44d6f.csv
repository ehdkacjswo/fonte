is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,5,* reserved.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,9,* are met:
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,17,*    distribution.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,54,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,56,import java.util.HashMap;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,57,import java.util.Map;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,59,import org.apache.commons.lang.builder.ToStringBuilder;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,60,import org.apache.commons.lang.builder.ToStringStyle;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,62,* <code>ArrayUtils</code> contains utility methods for working for
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,63,* arrays.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,65,"* @author <a href=""mailto:scolebourne@apache.org"">Stephen Colebourne</a>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,66,* @author Moritz Petersen
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,67,"* @version $Id: ArrayUtils.java,v 1.1 2002/10/13 22:42:06 scolebourne Exp $"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,69,public class ArrayUtils {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,71,/** An empty immutable object array */
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,72,public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,73,/** An empty immutable class array */
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,74,public static final Class[] EMPTY_CLASS_ARRAY = new Class[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,75,/** An empty immutable string array */
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,76,public static final String[] EMPTY_STRING_ARRAY = new String[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,77,/** An empty immutable long array */
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,78,public static final long[] EMPTY_LONG_ARRAY = new long[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,79,/** An empty immutable int array */
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,80,public static final int[] EMPTY_INT_ARRAY = new int[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,81,/** An empty immutable short array */
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,82,public static final short[] EMPTY_SHORT_ARRAY = new short[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,83,/** An empty immutable byte array */
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,84,public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,85,/** An empty immutable double array */
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,86,public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,87,/** An empty immutable float array */
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,88,public static final float[] EMPTY_FLOAT_ARRAY = new float[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,89,/** An empty immutable boolean array */
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,90,public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,93,* ArrayUtils instances should NOT be constructed in standard programming.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,94,"* Instead, the class should be used as <code>ArrayUtils.clone(new int[] {2})</code>."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,95,* This constructor is public to permit tools that require a JavaBean instance
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,96,* to operate.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,98,public ArrayUtils() {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,104,"* Outputs an array as a String, treating null as an empty array."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,105,* <p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,106,"* Multi-dimensional arrays are handled correctly, including"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,107,* multi-dimensional primitive arrays.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,108,"* The format is that of Java source code, for example {a,b}."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,110,"* @param array  the array to get a toString for, may not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,111,"* @return a String representation of the array, '{}' if null passed in"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,113,public static String toString(Object array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,114,"return toString(array, ""{}"");"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,118,* Outputs an array as a String handling nulls.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,119,* <p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,120,"* Multi-dimensional arrays are handled correctly, including"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,121,* multi-dimensional primitive arrays.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,122,"* The format is that of Java source code, for example {a,b}."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,124,"* @param array  the array to get a toString for, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,125,* @param stringIfNull  the String to return if the array is null
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,126,* @return a String representation of the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,128,"public static String toString(Object array, String stringIfNull) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,129,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,130,return stringIfNull;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,132,"return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,136,* Converts the given array into a {@link Map}. Each element of the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,137,"* must be either a {@link Map.Entry} or an Array, containing at least two"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,138,"* elements, where the first element is used as key and the second as"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,139,* value. This method can be used to initialize:
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,141,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,142,* // Create a Map mapping colors.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,143,* Map colorMap = MapUtils.toMap(new String[][] {{
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,144,"*     {""RED"", ""#FF0000""},"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,145,"*     {""GREEN"", ""#00FF00""},"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,146,"*     {""BLUE"", ""#0000FF""}});"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,147,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,149,* @param array  an array whose elements are either a {@link Map.Entry} or
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,150,*  an Array containing at least two elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,151,* @return a Map that was created from the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,152,* @throws IllegalArgumentException  if the array is null
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,153,* @throws IllegalArgumentException  if one element of this Array is
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,154,*  itself an Array containing less then two elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,155,* @throws IllegalArgumentException  if the array contains elements other
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,156,*  than {@link Map.Entry} and an Array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,158,public static Map toMap(Object[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,159,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,160,"throw new IllegalArgumentException(""The array must not be null"");"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,162,Map map = new HashMap((int) (array.length * 1.5));
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,163,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,164,Object object = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,165,if (object instanceof Map.Entry) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,166,Map.Entry entry = (Map.Entry) object;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,167,"map.put(entry.getKey(), entry.getValue());"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,168,} else if (object instanceof Object[]) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,169,Object[] entry = (Object[]) object;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,170,if (entry.length < 2) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,171,"throw new IllegalArgumentException(""Array element "" + i + "", '"""
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,172,+ object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,173,"+ ""', has a length less than 2"");"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,175,"map.put(entry[0], entry[1]);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,176,} else {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,177,"throw new IllegalArgumentException(""Array element "" + i + "", '"""
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,178,+ object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,179,"+ ""', is neither of type Map.Entry nor an Array"");"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,182,return map;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,186,//     * Output the array as a String.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,187,//     * <p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,188,//     * Multi-dimensional arrays are handled by the Object[] method.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,189,"//     * The format is that of Java source code, for example {1,2}."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,191,"//     * @param array  the array to get a toString for, must not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,192,//     * @return a String representation of the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,193,//     * @throws IllegalArgumentException if the array is null
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,195,//    public static String toString(long[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,196,"//        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,200,//     * Output the array as a String.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,201,//     * <p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,202,//     * Multi-dimensional arrays are handled by the Object[] method.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,203,"//     * The format is that of Java source code, for example {1,2}."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,205,"//     * @param array  the array to get a toString for, must not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,206,//     * @return a String representation of the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,207,//     * @throws IllegalArgumentException if the array is null
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,209,//    public static String toString(int[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,210,"//        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,214,//     * Output the array as a String.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,215,//     * <p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,216,//     * Multi-dimensional arrays are handled by the Object[] method.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,217,"//     * The format is that of Java source code, for example {1,2}."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,219,"//     * @param array  the array to get a toString for, must not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,220,//     * @return a String representation of the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,221,//     * @throws IllegalArgumentException if the array is null
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,223,//    public static String toString(short[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,224,"//        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,228,//     * Output the array as a String.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,229,//     * <p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,230,//     * Multi-dimensional arrays are handled by the Object[] method.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,231,"//     * The format is that of Java source code, for example {1,2}."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,233,"//     * @param array  the array to get a toString for, must not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,234,//     * @return a String representation of the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,235,//     * @throws IllegalArgumentException if the array is null
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,237,//    public static String toString(byte[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,238,"//        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,242,//     * Output the array as a String.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,243,//     * <p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,244,//     * Multi-dimensional arrays are handled by the Object[] method.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,245,"//     * The format is that of Java source code, for example {1.0,2.0}."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,247,"//     * @param array  the array to get a toString for, must not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,248,//     * @return a String representation of the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,249,//     * @throws IllegalArgumentException if the array is null
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,251,//    public static String toString(double[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,252,"//        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,256,//     * Output the array as a String.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,257,//     * <p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,258,//     * Multi-dimensional arrays are handled by the Object[] method.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,259,"//     * The format is that of Java source code, for example {1.0,2.0}."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,261,"//     * @param array  the array to get a toString for, must not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,262,//     * @return a String representation of the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,263,//     * @throws IllegalArgumentException if the array is null
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,265,//    public static String toString(float[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,266,"//        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,270,//     * Output the array as a String.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,271,//     * <p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,272,//     * Multi-dimensional arrays are handled by the Object[] method.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,273,"//     * The format is that of Java source code, for example {true,false}."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,275,"//     * @param array  the array to get a toString for, must not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,276,//     * @return a String representation of the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,277,//     * @throws IllegalArgumentException if the array is null
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,279,//    public static String toString(boolean[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,280,"//        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,286,* Shallow clones an array returning a typecast result and handling null.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,287,* <p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,288,* The objecs in the array are not cloned.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,290,"* @param array  the array to shallow clone, may not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,291,"* @return the cloned array, or null if null passed in"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,293,public static Object[] clone(Object[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,294,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,295,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,297,return (Object[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,301,* Clones an array returning a typecast result and handling null.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,303,"* @param array  the array to clone, may not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,304,"* @return the cloned array, or null if null passed in"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,306,public static long[] clone(long[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,307,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,308,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,310,return (long[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,314,* Clones an array returning a typecast result and handling null.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,316,"* @param array  the array to clone, may not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,317,"* @return the cloned array, or null if null passed in"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,319,public static int[] clone(int[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,320,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,321,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,323,return (int[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,327,* Clones an array returning a typecast result and handling null.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,329,"* @param array  the array to clone, may not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,330,"* @return the cloned array, or null if null passed in"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,332,public static short[] clone(short[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,333,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,334,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,336,return (short[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,340,* Clones an array returning a typecast result and handling null.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,342,"* @param array  the array to clone, may not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,343,"* @return the cloned array, or null if null passed in"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,345,public static byte[] clone(byte[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,346,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,347,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,349,return (byte[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,353,* Clones an array returning a typecast result and handling null.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,355,"* @param array  the array to clone, may not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,356,"* @return the cloned array, or null if null passed in"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,358,public static double[] clone(double[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,359,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,360,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,362,return (double[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,366,* Clones an array returning a typecast result and handling null.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,368,"* @param array  the array to clone, may not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,369,"* @return the cloned array, or null if null passed in"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,371,public static float[] clone(float[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,372,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,373,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,375,return (float[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,379,* Clones an array returning a typecast result and handling null.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,381,"* @param array  the array to clone, may not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,382,"* @return the cloned array, or null if null passed in"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,384,public static boolean[] clone(boolean[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,385,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,386,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,388,return (boolean[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,394,"* Checks whether two arrays are the same length, treating null arrays as length 0."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,395,* Any multi-dimensional aspects of the arrays are ignored.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,397,"* @param array1 the first array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,398,"* @param array2 the second array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,399,"* @param true if length of arrays matches, treating null as an empty array"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,401,"public static boolean isSameLength(Object[] array1, Object[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,402,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,403,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,404,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,405,return false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,407,return true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,411,"* Checks whether two arrays are the same length, treating null arrays as length 0."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,412,* Any multi-dimensional aspects of the arrays are ignored.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,414,"* @param array1 the first array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,415,"* @param array2 the second array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,416,"* @param true if length of arrays matches, treating null as an empty array"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,418,"public static boolean isSameLength(long[] array1, long[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,419,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,420,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,421,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,422,return false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,424,return true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,428,"* Checks whether two arrays are the same length, treating null arrays as length 0."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,429,* Any multi-dimensional aspects of the arrays are ignored.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,431,"* @param array1 the first array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,432,"* @param array2 the second array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,433,"* @param true if length of arrays matches, treating null as an empty array"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,435,"public static boolean isSameLength(int[] array1, int[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,436,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,437,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,438,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,439,return false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,441,return true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,445,"* Checks whether two arrays are the same length, treating null arrays as length 0."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,446,* Any multi-dimensional aspects of the arrays are ignored.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,448,"* @param array1 the first array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,449,"* @param array2 the second array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,450,"* @param true if length of arrays matches, treating null as an empty array"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,452,"public static boolean isSameLength(short[] array1, short[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,453,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,454,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,455,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,456,return false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,458,return true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,462,"* Checks whether two arrays are the same length, treating null arrays as length 0."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,463,* Any multi-dimensional aspects of the arrays are ignored.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,465,"* @param array1 the first array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,466,"* @param array2 the second array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,467,"* @param true if length of arrays matches, treating null as an empty array"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,469,"public static boolean isSameLength(byte[] array1, byte[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,470,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,471,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,472,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,473,return false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,475,return true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,479,"* Checks whether two arrays are the same length, treating null arrays as length 0."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,480,* Any multi-dimensional aspects of the arrays are ignored.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,482,"* @param array1 the first array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,483,"* @param array2 the second array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,484,"* @param true if length of arrays matches, treating null as an empty array"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,486,"public static boolean isSameLength(double[] array1, double[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,487,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,488,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,489,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,490,return false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,492,return true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,496,"* Checks whether two arrays are the same length, treating null arrays as length 0."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,497,* Any multi-dimensional aspects of the arrays are ignored.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,499,"* @param array1 the first array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,500,"* @param array2 the second array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,501,"* @param true if length of arrays matches, treating null as an empty array"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,503,"public static boolean isSameLength(float[] array1, float[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,504,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,505,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,506,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,507,return false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,509,return true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,513,"* Checks whether two arrays are the same length, treating null arrays as length 0."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,514,* Any multi-dimensional aspects of the arrays are ignored.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,516,"* @param array1 the first array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,517,"* @param array2 the second array, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,518,"* @param true if length of arrays matches, treating null as an empty array"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,520,"public static boolean isSameLength(boolean[] array1, boolean[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,521,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,522,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,523,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,524,return false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,526,return true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,530,* Checks whether two arrays are the same type taking into account
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,531,* multi-dimensional arrays.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,533,"* @param array1 the first array, must not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,534,"* @param array2 the second array, must not be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,535,* @param true if type of arrays matches
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,536,* @throws IllegalArgumentException if either array is null
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,538,"public static boolean isSameType(Object array1, Object array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,539,if (array1 == null || array2 == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,540,"throw new IllegalArgumentException(""The array must not be null"");"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,542,return array1.getClass().getName().equals(array2.getClass().getName());
