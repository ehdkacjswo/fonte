is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,21,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,21,import org.apache.commons.math.exception.NoDataException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,22,import org.apache.commons.math.exception.OutOfRangeException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,88, @throws IllegalArgumentException if {@code x} or {@code y} are not strictly
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,89,* @throws NonMonotonousSequenceException if {@code x} or {@code y} are not strictly
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,91,* @throws NoDataException if any of the arrays has zero length.
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,102,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NO_DATA);
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,104,throw new NoDataException();
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,161,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,162,"ocalizedFormats.OUT_OF_RANGE_SIMPLE,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,163,", xval[0], xval[xval.length - 1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,163,"throw new OutOfRangeException(x, xval[0], xval[xval.length - 1]);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,167,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,168,"ocalizedFormats.OUT_OF_RANGE_SIMPLE,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,169,", yval[0], yval[yval.length - 1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,167,"throw new OutOfRangeException(y, yval[0], yval[yval.length - 1]);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,236,"hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,237,", xval[0], xval[xval.length - 1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,234,"throw new OutOfRangeException(x, xval[0], xval[xval.length - 1]);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,241,"hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,242,", yval[0], yval[yval.length - 1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,238,"throw new OutOfRangeException(y, yval[0], yval[yval.length - 1]);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,379,"hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,380,", 0, 1);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,375,"throw new OutOfRangeException(x, 0, 1);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,383,"hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,384,", 0, 1);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,378,"throw new OutOfRangeException(y, 0, 1);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,20,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,20,import org.apache.commons.math.exception.NoDataException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,43,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NO_DATA);
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,43,throw new NoDataException();
False,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,19,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,19,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,20,import org.apache.commons.math.exception.NumberIsTooSmallException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,22,mport org.apache.commons.math.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,23,import org.apache.commons.math.util.MathUtils;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,34,* @throws DimensionMismatchException if {@code x} and {@code y}
True,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,35,* have different sizes.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,36,* @throws NonMonotonousSequenceException if {@code x} is not sorted in
True,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,37,* strict increasing order.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,38,* @throws NumberIsTooSmallException if the size of {@code x} is smaller
True,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,39,* than 2.
False,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,36,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,37,"ocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, x.length, y.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,43,"throw new DimensionMismatchException(x.length, y.length);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,41,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,42,"ocalizedFormats.WRONG_NUMBER_OF_POINTS, 2, x.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,47,"throw new NumberIsTooSmallException(x.length, 2, true);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,48,or (int i = 0; i < n; i++) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,49,f (x[i] >= x[i + 1]) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,50,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,51,"ocalizedFormats.NOT_STRICTLY_INCREASING_NUMBER_OF_POINTS,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,52,", i+1, x[i], x[i+1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java,53,MathUtils.checkOrder(x);
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,25,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,25,import org.apache.commons.math.exception.NoDataException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,145, @throws IllegalArgumentException if there are no data (xval null or zero length)
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,145,* @throws NoDataException if there are no data (xval null or zero length)
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,154,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NO_DATA);
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,154,throw new NoDataException();
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,20,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,20,import org.apache.commons.math.exception.NotPositiveException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,21,import org.apache.commons.math.exception.NotStrictlyPositiveException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,28," <a href=""http://www.dudziak.com/microsphere.pdf"">MS thesis</a>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,29,"* <a href=""http://www.dudziak.com/microsphere.pdf"">MS thesis</a>."
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,62, weights of the sample data
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,69, @param microsphereElements number of surface elements of the microsphere
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,69,* @param microsphereElements number of surface elements of the microsphere.
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,71, weights of the sample data
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,72, @throws IllegalArgumentException if {@code microsphereElements <= 0}
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,73, or {@code brightnessExponent < 0}
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,71,* weights of the sample data.
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,72,* @throws NotPositiveException if {@code microsphereElements <= 0}
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,73,* or {@code brightnessExponent < 0}.
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,97, @param brightnessExponent Exponent for computing the distance dimming
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,97,* @param exponent Exponent for computing the distance dimming
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,99, @throws IllegalArgumentException if {@code brightnessExponent < 0}.
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,99,* @throws NotPositiveException if {@code exponent < 0}.
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,101,ublic void setBrightnessExponent(final int brightnessExponent) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,102,f (brightnessExponent < 0) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,103,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,104,"ocalizedFormats.NEGATIVE_BRIGHTNESS_EXPONENT,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,105,rightnessExponent);
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,101,public void setBrightnessExponent(final int exponent) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,102,if (exponent < 0) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,103,throw new NotPositiveException(exponent);
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,107,his.brightnessExponent = brightnessExponent;
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,105,brightnessExponent = exponent;
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,113, @throws IllegalArgumentException if {@code microsphereElements <= 0}.
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,111,* @throws NotStrictlyPositiveException if {@code elements <= 0}.
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,116,f (microsphereElements < 0) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,117,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,118,"ocalizedFormats.NON_POSITIVE_MICROSPHERE_ELEMENTS,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,119,icrosphereElements);
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,114,if (elements <= 0) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,115,throw new NotStrictlyPositiveException(elements);
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,121,his.microsphereElements = elements;
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,117,microsphereElements = elements;
False,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,19,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,19,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,20,import org.apache.commons.math.exception.NumberIsTooSmallException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,22,mport org.apache.commons.math.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,23,import org.apache.commons.math.util.MathUtils;
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,59,* @throws DimensionMismatchException if {@code x} and {@code y}
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,60,* have different sizes.
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,61,* @throws NonMonotonousSequenceException if {@code x} is not sorted in
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,62,* strict increasing order.
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,63,* @throws NumberIsTooSmallException if the size of {@code x} is smaller
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,64,* than 3.
False,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,61,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,62,"ocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, x.length, y.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,68,"throw new DimensionMismatchException(x.length, y.length);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,66,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,67,"ocalizedFormats.WRONG_NUMBER_OF_POINTS, 3, x.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,72,"throw new NumberIsTooSmallException(x.length, 3, true);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,73,or (int i = 0; i < n; i++) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,74,f (x[i] >= x[i + 1]) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,75,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,76,"ocalizedFormats.NOT_STRICTLY_INCREASING_NUMBER_OF_POINTS,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,77,", i+1, x[i], x[i+1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,78,MathUtils.checkOrder(x);
False,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,27,ublic class NotPositiveException extends MathIllegalNumberException {
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,27,public class NotPositiveException extends NumberIsTooSmallException {
False,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,34,"uper(LocalizedFormats.NOT_POSITIVE, value);"
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,34,"super(value, 0, true);"
False,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,27,ublic class NotStrictlyPositiveException extends MathIllegalNumberException {
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,27,public class NotStrictlyPositiveException extends NumberIsTooSmallException {
False,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,34,"uper(LocalizedFormats.NOT_STRICTLY_POSITIVE, value);"
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,34,"super(value, 0, false);"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,17,package org.apache.commons.math.exception;
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,19,import org.apache.commons.math.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,22,* Exception to be thrown when a number is too large.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,24,* @since 2.2
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,25,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,27,public class NumberIsTooLargeException extends MathIllegalNumberException {
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,29,* Higher bound.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,31,private final Number max;
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,33,* Whether the maximum is included in the allowed range.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,35,private final boolean boundIsAllowed;
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,38,* Construct the exception.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,40,* @param wrong Value that is larger than the maximum.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,41,* @param max maximum.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,43,"public NumberIsTooLargeException(Number wrong,"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,44,"Number max,"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,45,boolean boundIsAllowed) {
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,46,super((boundIsAllowed ?
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,47,LocalizedFormats.NUMBER_TOO_LARGE :
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,48,"LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED),"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,49,"wrong, max);"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,51,this.max = max;
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,52,this.boundIsAllowed = boundIsAllowed;
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,56,* @return {@code true} if the maximum is included in the allowed range.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,58,public boolean getBoundIsAllowed() {
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,59,return boundIsAllowed;
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,63,* @return the maximum.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,65,public Number getMax() {
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,66,return max;
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,17,package org.apache.commons.math.exception;
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,19,import org.apache.commons.math.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,22,* Exception to be thrown when a number is too small.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,24,* @since 2.2
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,25,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,27,public class NumberIsTooSmallException extends MathIllegalNumberException {
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,29,* Higher bound.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,31,private final Number min;
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,33,* Whether the maximum is included in the allowed range.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,35,private final boolean boundIsAllowed;
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,38,* Construct the exception.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,40,* @param wrong Value that is smaller than the minimum.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,41,* @param min minimum.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,43,"public NumberIsTooSmallException(Number wrong,"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,44,"Number min,"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,45,boolean boundIsAllowed) {
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,46,super((boundIsAllowed ?
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,47,LocalizedFormats.NUMBER_TOO_SMALL :
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,48,"LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED),"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,49,"wrong, min);"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,51,this.min = min;
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,52,this.boundIsAllowed = boundIsAllowed;
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,56,* @return {@code true} if the minimum is included in the allowed range.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,58,public boolean getBoundIsAllowed() {
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,59,return boundIsAllowed;
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,63,* @return the minimum.
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,65,public Number getMin() {
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,66,return min;
False,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,169,"OT_STRICTLY_POSITIVE(""{0} is not strictly positive""), /* keep */"
False,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,170,"OT_POSITIVE(""{0} is not positive""), /* keep */"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,220,"NUMBER_TOO_LARGE(""{0} is larger than the maximum ({1})""), /* keep */"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,221,"NUMBER_TOO_SMALL(""{0} is smaller than the minimum ({1})""), /* keep */"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,222,"NUMBER_TOO_LARGE_BOUND_EXCLUDED(""{0} is larger than, or equal to, the maximum ({1})""), /* keep */"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,223,"NUMBER_TOO_SMALL_BOUND_EXCLUDED(""{0} is smaller than, or equal to, the minimum ({1})""), /* keep */"
True,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,20,import org.apache.commons.math.exception.NonMonotonousSequenceException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,21,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,22,import org.apache.commons.math.exception.NumberIsTooSmallException;
False,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,112, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,115,} catch (DimensionMismatchException iae) {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,121, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,124,} catch (NonMonotonousSequenceException iae) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,125,// Expected.
True,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,127,// Not enough data to interpolate.
True,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,128,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,129,double xval[] = { 0.0 };
True,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,130,double yval[] = { 0.0 };
True,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,131,"i.interpolate(xval, yval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,132,"Assert.fail(""Failed to detect unsorted arguments."");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java,133,} catch (NumberIsTooSmallException iae) {
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,19,mport junit.framework.TestCase;
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,20,import org.apache.commons.math.exception.NonMonotonousSequenceException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,21,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,22,import org.apache.commons.math.exception.NumberIsTooSmallException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,27,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,28,import org.junit.Test;
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,32,ublic class SplineInterpolatorTest extends TestCase {
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,35,public class SplineInterpolatorTest {
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,43,ublic SplineInterpolatorTest(String name) {
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,44,uper(name);
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,46,@Test
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,64,"ssertEquals(0.0,f.value(0.0), interpolationTolerance);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,65,"ssertEquals(0.4,f.value(0.4), interpolationTolerance);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,66,"ssertEquals(1.0,f.value(1.0), interpolationTolerance);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,64,"Assert.assertEquals(0.0,f.value(0.0), interpolationTolerance);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,65,"Assert.assertEquals(0.4,f.value(0.4), interpolationTolerance);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,66,"Assert.assertEquals(1.0,f.value(1.0), interpolationTolerance);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,69,@Test
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,87,"ssertEquals(0,f.value(0), interpolationTolerance);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,88,"ssertEquals(1.4,f.value(1.4), interpolationTolerance);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,89,"ssertEquals(1.5,f.value(1.5), interpolationTolerance);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,88,"Assert.assertEquals(0,f.value(0), interpolationTolerance);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,89,"Assert.assertEquals(1.4,f.value(1.4), interpolationTolerance);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,90,"Assert.assertEquals(1.5,f.value(1.5), interpolationTolerance);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,93,@Test
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,110,@Test
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,154,"ssertEquals(Math.sqrt(2d) / 2d,f.value(Math.PI/4d),interpolationTolerance);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,155,"ssertEquals(Math.sqrt(2d) / 2d,f.value(3d*Math.PI/4d),interpolationTolerance);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,157,"Assert.assertEquals(Math.sqrt(2d) / 2d,f.value(Math.PI/4d),interpolationTolerance);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,158,"Assert.assertEquals(Math.sqrt(2d) / 2d,f.value(3d*Math.PI/4d),interpolationTolerance);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,161,@Test
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,166,"ail(""Failed to detect data set array with different sizes."");"
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,167, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,169,"Assert.fail(""Failed to detect data set array with different sizes."");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,170,} catch (DimensionMismatchException iae) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,171,// Expected.
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,174,"ail(""Failed to detect unsorted arguments."");"
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,175, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,178,"Assert.fail(""Failed to detect unsorted arguments."");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,179,} catch (NonMonotonousSequenceException iae) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,180,// Expected.
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,182,// Not enough data to interpolate.
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,183,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,184,"double xval[] = { 0.0, 1.0 };"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,185,"double yval[] = { 0.0, 1.0 };"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,186,"i.interpolate(xval, yval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,187,"Assert.fail(""Failed to detect unsorted arguments."");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,188,} catch (NumberIsTooSmallException iae) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,189,// Expected.
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,185,"ssertEquals(f.value(x[i]), y[i], knotTolerance);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,199,"Assert.assertEquals(f.value(x[i]), y[i], knotTolerance);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,198,"ssertEquals(polynomials[i].value(x[i +1] - x[i]), polynomials[i + 1].value(0), 0.1);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,199,"ssertEquals(polynomials[i].derivative().value(x[i +1] - x[i]),"
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,200,"olynomials[i + 1].derivative().value(0), 0.5);"
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,201,"ssertEquals(polynomials[i].polynomialDerivative().derivative().value(x[i +1] - x[i]),"
False,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,202,"olynomials[i + 1].polynomialDerivative().derivative().value(0), 0.5);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,212,"Assert.assertEquals(polynomials[i].value(x[i +1] - x[i]), polynomials[i + 1].value(0), 0.1);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,213,"Assert.assertEquals(polynomials[i].derivative().value(x[i +1] - x[i]),"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,214,"polynomials[i + 1].derivative().value(0), 0.5);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,215,"Assert.assertEquals(polynomials[i].polynomialDerivative().derivative().value(x[i +1] - x[i]),"
True,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java,216,"polynomials[i + 1].polynomialDerivative().derivative().value(0), 0.5);"
True,src/test/java/org/apache/commons/math/exception/NotPositiveExceptionTest.java,src/test/java/org/apache/commons/math/exception/NotPositiveExceptionTest.java,32,"Assert.assertEquals(0, e.getMin());"
True,src/test/java/org/apache/commons/math/exception/NotPositiveExceptionTest.java,src/test/java/org/apache/commons/math/exception/NotPositiveExceptionTest.java,33,Assert.assertTrue(e.getBoundIsAllowed());
True,src/test/java/org/apache/commons/math/exception/NotStrictlyPositiveExceptionTest.java,src/test/java/org/apache/commons/math/exception/NotStrictlyPositiveExceptionTest.java,32,"Assert.assertEquals(0, e.getMin());"
True,src/test/java/org/apache/commons/math/exception/NotStrictlyPositiveExceptionTest.java,src/test/java/org/apache/commons/math/exception/NotStrictlyPositiveExceptionTest.java,33,Assert.assertFalse(e.getBoundIsAllowed());
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,17,package org.apache.commons.math.exception;
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,19,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,20,import org.junit.Test;
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,23,* Test for {@link NumberIsTooLargeException}.
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,25,* @version $Revision$ $Date$
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,27,public class NumberIsTooLargeExceptionTest {
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,28,@Test
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,29,public void testAccessors() {
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,30,"final NumberIsTooLargeException e = new NumberIsTooLargeException(1, 0, true);"
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,31,"Assert.assertEquals(1, e.getArgument());"
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,32,"Assert.assertEquals(0, e.getMax());"
True,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooLargeExceptionTest.java,33,Assert.assertTrue(e.getBoundIsAllowed());
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,17,package org.apache.commons.math.exception;
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,19,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,20,import org.junit.Test;
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,23,* Test for {@link NumberIsTooSmallException}.
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,25,* @version $Revision$ $Date$
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,27,public class NumberIsTooSmallExceptionTest {
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,28,@Test
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,29,public void testAccessors() {
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,30,"final NumberIsTooSmallException e = new NumberIsTooSmallException(0, 0, false);"
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,31,"Assert.assertEquals(0, e.getArgument());"
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,32,"Assert.assertEquals(0, e.getMin());"
True,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,src/test/java/org/apache/commons/math/exception/NumberIsTooSmallExceptionTest.java,33,Assert.assertFalse(e.getBoundIsAllowed());
