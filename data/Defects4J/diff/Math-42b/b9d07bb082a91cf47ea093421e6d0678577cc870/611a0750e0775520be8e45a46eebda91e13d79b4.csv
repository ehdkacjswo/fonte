is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,23, Computes the (unbiased) sample variance.  Uses the definitional formula:
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,23,"* Computes the variance of the available values.   By default, the unbiased"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,24,"* ""sample variance"" definitional formula is used:"
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,35, <p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,36,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,37,"* The ""population variance""  ( sum((x_i - mean)^2) / n ) can also"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,38,* be computed using this statistic.  The <code>isBiasCorrected</code>
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,39,"* property determines whether the ""population"" or ""sample"" value is"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,40,* returned by the <code>evaluate</code> and <code>getResult</code> methods.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,41,"* To compute population variances, set this property to <code>false.</code>"
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,41, @version $Revision: 1.1 $ $Date: 2004/10/08 05:08:17 $
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,48,* @version $Revision: 1.2 $ $Date: 2004/10/10 20:40:52 $
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,66,* Determines whether or not bias correction is applied when computing the
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,67,* value of the statisic.  True means that bias is corrected.  See
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,68,* {@link Variance} for details on the formula.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,70,private boolean isBiasCorrected = true;
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,91,* Constructs a Variance with the specified <code>isBiasCorrected</code>
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,92,* property
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,94,* @param isBiasCorrected  setting for bias correction - true means
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,95,* bias will be corrected and is equivalent to using the argumentless
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,96,* constructor
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,98,public Variance(boolean isBiasCorrected) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,99,moment = new SecondMoment();
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,100,this.isBiasCorrected = isBiasCorrected;
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,104,* Constructs a Variance with the specified <code>isBiasCorrected</code>
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,105,* property and the supplied external second moment.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,107,* @param isBiasCorrected  setting for bias correction - true means
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,108,* bias will be corrected and is equivalent to using the argumentless
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,109,* constructor
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,110,* @param m2 the SecondMoment (Thrid or Fourth moments work
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,111,* here as well.)
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,113,"public Variance(boolean isBiasCorrected, SecondMoment m2) {"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,114,incMoment = false;
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,115,this.moment = m2;
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,116,this.isBiasCorrected = isBiasCorrected;
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,92,eturn moment.m2 / ((double) moment.n - 1d);
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,137,if (isBiasCorrected) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,138,return moment.m2 / ((double) moment.n - 1d);
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,139,} else {
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,140,return moment.m2 / ((double) moment.n);
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,213,"ar = (accum - (Math.pow(accum2, 2) / ((double) length))) /"
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,214,double) (length - 1);
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,262,if (isBiasCorrected) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,263,"var = (accum - (Math.pow(accum2, 2) / ((double) length))) /"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,264,(double) (length - 1);
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,265,} else {
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,266,"var = (accum - (Math.pow(accum2, 2) / ((double) length))) /"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,267,(double) length;
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,227, The formula used assumes that the supplied mean value is the arithmetic
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,228," mean of the sample data, not a known population parameter.  This method"
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,229, is supplied only to save computation when the mean has already been
False,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,230, computed.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,281,* If <code>isBiasCorrected</code> is <code>true</code> the formula used
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,282,* assumes that the supplied mean value is the arithmetic mean of the
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,283,"* sample data, not a known population parameter.  If the mean is a known"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,284,"* population parameter, or if the ""population"" version of the variance is"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,285,"* desired, set <code>isBiasCorrected</code> to <code>false</code> before"
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,286,* invoking this method.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,304,* @return Returns the isBiasCorrected.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,306,public boolean isBiasCorrected() {
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,307,return isBiasCorrected;
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,311,* @param isBiasCorrected The isBiasCorrected to set.
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,313,public void setBiasCorrected(boolean isBiasCorrected) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,314,this.isBiasCorrected = isBiasCorrected;
False,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,27, @version $Revision: 1.1 $ $Date: 2004/10/08 05:08:20 $
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,27,* @version $Revision: 1.2 $ $Date: 2004/10/10 20:40:52 $
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,72,* Test population version of variance
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,74,public void testPopulation() {
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,75,"double[] values = {-1.0d, 3.1d, 4.0d, -2.1d, 22d, 11.7d, 3d, 14d};"
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,76,SecondMoment m = new SecondMoment();
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,77,m.evaluate(values);  // side effect is to add values
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,78,Variance v1 = new Variance();
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,79,v1.setBiasCorrected(false);
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,80,"assertEquals(populationVariance(values), v1.evaluate(values), 1E-14);"
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,81,v1.incrementAll(values);
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,82,"assertEquals(populationVariance(values), v1.getResult(), 1E-14);"
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,83,"v1 = new Variance(false, m);"
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,84,"assertEquals(populationVariance(values), v1.getResult(), 1E-14);"
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,88,* Definitional formula for population variance
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,90,protected double populationVariance(double[] v) {
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,91,double mean = new Mean().evaluate(v);
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,92,double sum = 0;
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,93,for (int i = 0; i < v.length; i++) {
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,94,sum += (v[i] - mean) * (v[i] - mean);
True,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java,96,return sum / (double) v.length;
