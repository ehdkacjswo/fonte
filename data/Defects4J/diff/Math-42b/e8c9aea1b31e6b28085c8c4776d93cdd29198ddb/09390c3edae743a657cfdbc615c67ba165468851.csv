is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,35,** Serializable version identifier */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,35,/** Serializable version identifier. */
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,198,inal int rowCount    = getRowDimension();
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,199,inal int columnCount = getColumnDimension();
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,200,ouble maxColSum = 0;
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,201,or (int col = 0; col < columnCount; ++col) {
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,202,ouble sum = 0;
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,203,or (int row = 0; row < rowCount; ++row) {
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,204,"um += Math.abs(getEntry(row, col));"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,198,return walkInColumnOrder(new RealMatrixPreservingVisitor() {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,200,/** Serializable version identifier */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,201,private static final long serialVersionUID = -2452270856202894168L;
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,203,/** Last row index. */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,204,private double endRow;
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,206,/** Sum of absolute values on one column. */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,207,private double columnSum;
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,209,/** Maximal sum across all columns. */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,210,private double maxColSum;
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,212,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,213,"public void start(final int rows, final int columns,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,214,"final int startRow, final int endRow,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,215,"final int startColumn, final int endColumn) {"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,216,this.endRow = endRow;
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,217,columnSum   = 0;
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,218,maxColSum   = 0;
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,206,"axColSum = Math.max(maxColSum, sum);"
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,208,eturn maxColSum;
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,221,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,222,"public void visit(final int row, final int column, final double value) {"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,223,columnSum += Math.abs(value);
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,224,if (row == endRow) {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,225,"maxColSum = Math.max(maxColSum, columnSum);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,226,columnSum = 0;
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,230,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,231,public double end() {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,232,return maxColSum;
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,213,inal int rowCount    = getRowDimension();
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,214,inal int columnCount = getColumnDimension();
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,215,ouble sum2 = 0;
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,216,or (int col = 0; col < columnCount; ++col) {
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,217,or (int row = 0; row < rowCount; ++row) {
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,218,"inal double mij = getEntry(row, col);"
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,219,um2 += mij * mij;
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,240,return walkInOptimizedOrder(new RealMatrixPreservingVisitor() {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,242,/** Serializable version identifier */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,243,private static final long serialVersionUID = -6065411033772300640L;
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,245,/** Sum of squared entries. */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,246,private double sum;
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,248,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,249,"public void start(final int rows, final int columns,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,250,"final int startRow, final int endRow,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,251,"final int startColumn, final int endColumn) {"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,252,sum = 0;
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,222,eturn Math.sqrt(sum2);
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,255,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,256,"public void visit(final int row, final int column, final double value) {"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,257,sum += value * value;
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,260,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,261,public double end() {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,262,return Math.sqrt(sum);
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,514,or (int row = 0; row < nRows; ++row) {
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,515,or (int col = 0; col < nCols; ++col) {
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,516,"ut.setEntry(col, row, getEntry(row, col));"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,557,walkInOptimizedOrder(new RealMatrixPreservingVisitor() {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,559,/** Serializable version identifier */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,560,private static final long serialVersionUID = 3807296710038754174L;
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,562,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,563,"public void start(final int rows, final int columns,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,564,"final int startRow, final int endRow,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,565,"final int startColumn, final int endColumn) {"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,568,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,569,"public void visit(final int row, final int column, final double value) {"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,570,"out.setEntry(column, row, value);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,573,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,574,public double end() {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,575,return 0;
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,694,ublic void walkInRowOrder(final RealMatrixChangingVisitor visitor)
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,754,public double walkInRowOrder(final RealMatrixChangingVisitor visitor)
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,758,"visitor.start(rows, columns, 0, rows - 1, 0, columns - 1);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,767,return visitor.end();
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,709,ublic void walkInRowOrder(final RealMatrixPreservingVisitor visitor)
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,771,public double walkInRowOrder(final RealMatrixPreservingVisitor visitor)
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,775,"visitor.start(rows, columns, 0, rows - 1, 0, columns - 1);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,781,return visitor.end();
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,721,"ublic void walkInRowOrder(final RealMatrixChangingVisitor visitor,"
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,722,"inal int startRow, final int endRow,"
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,723,"inal int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,785,"public double walkInRowOrder(final RealMatrixChangingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,786,"final int startRow, final int endRow,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,787,"final int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,790,"visitor.start(getRowDimension(), getColumnDimension(),"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,791,"startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,800,return visitor.end();
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,737,"ublic void walkInRowOrder(final RealMatrixPreservingVisitor visitor,"
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,738,"inal int startRow, final int endRow,"
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,739,"inal int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,804,"public double walkInRowOrder(final RealMatrixPreservingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,805,"final int startRow, final int endRow,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,806,"final int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,809,"visitor.start(getRowDimension(), getColumnDimension(),"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,810,"startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,816,return visitor.end();
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,749,** {@inheritDoc} */
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,750,ublic void walkInInternalOrder(final RealMatrixChangingVisitor visitor)
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,819,public double walkInColumnOrder(final RealMatrixChangingVisitor visitor)
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,752,alkInRowOrder(visitor);
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,821,final int rows    = getRowDimension();
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,822,final int columns = getColumnDimension();
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,823,"visitor.start(rows, columns, 0, rows - 1, 0, columns - 1);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,824,for (int column = 0; column < columns; ++column) {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,825,for (int row = 0; row < rows; ++row) {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,826,"final double oldValue = getEntry(row, column);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,827,"final double newValue = visitor.visit(row, column, oldValue);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,828,"setEntry(row, column, newValue);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,831,lu = null;
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,832,return visitor.end();
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,756,ublic void walkInInternalOrder(final RealMatrixPreservingVisitor visitor)
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,836,public double walkInColumnOrder(final RealMatrixPreservingVisitor visitor)
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,758,alkInRowOrder(visitor);
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,838,final int rows    = getRowDimension();
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,839,final int columns = getColumnDimension();
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,840,"visitor.start(rows, columns, 0, rows - 1, 0, columns - 1);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,841,for (int column = 0; column < columns; ++column) {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,842,for (int row = 0; row < rows; ++row) {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,843,"visitor.visit(row, column, getEntry(row, column));"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,846,return visitor.end();
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,762,"ublic void walkInInternalOrder(final RealMatrixChangingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,850,"public double walkInColumnOrder(final RealMatrixChangingVisitor visitor,"
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,765,"hrows MatrixIndexException, MatrixVisitorException {"
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,766,"alkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,853,"throws MatrixIndexException, MatrixVisitorException {"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,854,"checkSubMatrixIndex(startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,855,"visitor.start(getRowDimension(), getColumnDimension(),"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,856,"startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,857,for (int column = startColumn; column <= endColumn; ++column) {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,858,for (int row = startRow; row <= endRow; ++row) {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,859,"final double oldValue = getEntry(row, column);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,860,"final double newValue = visitor.visit(row, column, oldValue);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,861,"setEntry(row, column, newValue);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,864,lu = null;
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,865,return visitor.end();
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,770,"ublic void walkInInternalOrder(final RealMatrixPreservingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,869,"public double walkInColumnOrder(final RealMatrixPreservingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,872,"throws MatrixIndexException, MatrixVisitorException {"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,873,"checkSubMatrixIndex(startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,874,"visitor.start(getRowDimension(), getColumnDimension(),"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,875,"startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,876,for (int column = startColumn; column <= endColumn; ++column) {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,877,for (int row = startRow; row <= endRow; ++row) {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,878,"visitor.visit(row, column, getEntry(row, column));"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,881,return visitor.end();
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,884,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,885,public double walkInOptimizedOrder(final RealMatrixChangingVisitor visitor)
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,886,throws MatrixVisitorException {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,887,return walkInRowOrder(visitor);
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,890,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,891,public double walkInOptimizedOrder(final RealMatrixPreservingVisitor visitor)
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,892,throws MatrixVisitorException {
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,893,return walkInRowOrder(visitor);
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,896,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,897,"public double walkInOptimizedOrder(final RealMatrixChangingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,898,"final int startRow, final int endRow,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,899,"final int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,900,"throws MatrixIndexException, MatrixVisitorException {"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,901,"return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,904,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,905,"public double walkInOptimizedOrder(final RealMatrixPreservingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,906,"final int startRow, final int endRow,"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,907,"final int startColumn, final int endColumn)"
False,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,774,"alkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/java/org/apache/commons/math/linear/AbstractRealMatrix.java,909,"return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);"
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1287,ublic void walkInRowOrder(final RealMatrixChangingVisitor visitor)
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1287,public double walkInRowOrder(final RealMatrixChangingVisitor visitor)
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1289,"visitor.start(rows, columns, 0, rows - 1, 0, columns - 1);"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1305,return visitor.end();
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1307,ublic void walkInRowOrder(final RealMatrixPreservingVisitor visitor)
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1309,public double walkInRowOrder(final RealMatrixPreservingVisitor visitor)
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1311,"visitor.start(rows, columns, 0, rows - 1, 0, columns - 1);"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1327,return visitor.end();
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1327,"ublic void walkInRowOrder(final RealMatrixChangingVisitor visitor,"
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1328,"inal int startRow, final int endRow,"
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1329,"inal int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1331,"public double walkInRowOrder(final RealMatrixChangingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1332,"final int startRow, final int endRow,"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1333,"final int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1336,"visitor.start(rows, columns, startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1354,return visitor.end();
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1352,"ublic void walkInRowOrder(final RealMatrixPreservingVisitor visitor,"
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1353,"inal int startRow, final int endRow,"
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1354,"inal int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1358,"public double walkInRowOrder(final RealMatrixPreservingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1359,"final int startRow, final int endRow,"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1360,"final int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1363,"visitor.start(rows, columns, startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1381,return visitor.end();
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1377,ublic void walkInInternalOrder(final RealMatrixChangingVisitor visitor)
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1385,public double walkInOptimizedOrder(final RealMatrixChangingVisitor visitor)
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1387,"visitor.start(rows, columns, 0, rows - 1, 0, columns - 1);"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1402,return visitor.end();
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1396,ublic void walkInInternalOrder(final RealMatrixPreservingVisitor visitor)
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1406,public double walkInOptimizedOrder(final RealMatrixPreservingVisitor visitor)
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1408,"visitor.start(rows, columns, 0, rows - 1, 0, columns - 1);"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1423,return visitor.end();
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1415,"ublic void walkInInternalOrder(final RealMatrixChangingVisitor visitor,"
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1416,"inal int startRow, final int endRow,"
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1417,"inal int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1427,"public double walkInOptimizedOrder(final RealMatrixChangingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1428,"final int startRow, final int endRow,"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1429,"final int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1432,"visitor.start(rows, columns, startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1450,return visitor.end();
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1440,"ublic void walkInInternalOrder(final RealMatrixPreservingVisitor visitor,"
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1441,"inal int startRow, final int endRow,"
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1442,"inal int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1454,"public double walkInOptimizedOrder(final RealMatrixPreservingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1455,"final int startRow, final int endRow,"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1456,"final int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1459,"visitor.start(rows, columns, startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,1477,return visitor.end();
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,503,* <p>Row order starts at upper left and iterating through all elements
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,504,* of a row from left to right before going to the leftmost element
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,505,* of the next row.</p>
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,508, @see #walkInInternalOrder(RealMatrixChangingVisitor)
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,509, @see #walkInInternalOrder(RealMatrixPreservingVisitor)
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,510," @see #walkInInternalOrder(RealMatrixChangingVisitor, int, int, int, int)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,511," @see #walkInInternalOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,511,* @see #walkInColumnOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,512,* @see #walkInColumnOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,513,"* @see #walkInColumnOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,514,"* @see #walkInColumnOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,515,* @see #walkInOptimizedOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,516,* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,517,"* @see #walkInOptimizedOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,518,"* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,519,* @return the value returned by {@link RealMatrixChangingVisitor#end()} at the end
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,520,* of the walk
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,513,oid walkInRowOrder(RealMatrixChangingVisitor visitor) throws MatrixVisitorException;
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,522,double walkInRowOrder(RealMatrixChangingVisitor visitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,523,throws MatrixVisitorException;
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,527,* <p>Row order starts at upper left and iterating through all elements
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,528,* of a row from left to right before going to the leftmost element
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,529,* of the next row.</p>
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,522, @see #walkInInternalOrder(RealMatrixChangingVisitor)
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,523, @see #walkInInternalOrder(RealMatrixPreservingVisitor)
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,524," @see #walkInInternalOrder(RealMatrixChangingVisitor, int, int, int, int)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,525," @see #walkInInternalOrder(RealMatrixPreservingVisitor, int, int, int, int)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,527,oid walkInRowOrder(RealMatrixPreservingVisitor visitor) throws MatrixVisitorException;
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,530, Visit (and possibly change) all matrix entries in row order.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,535,* @see #walkInColumnOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,536,* @see #walkInColumnOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,537,"* @see #walkInColumnOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,538,"* @see #walkInColumnOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,539,* @see #walkInOptimizedOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,540,* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,541,"* @see #walkInOptimizedOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,542,"* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,543,* @return the value returned by {@link RealMatrixPreservingVisitor#end()} at the end
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,544,* of the walk
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,546,double walkInRowOrder(RealMatrixPreservingVisitor visitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,547,throws MatrixVisitorException;
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,550,* Visit (and possibly change) some matrix entries in row order.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,551,* <p>Row order starts at upper left and iterating through all elements
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,552,* of a row from left to right before going to the leftmost element
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,553,* of the next row.</p>
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,541, @see #walkInInternalOrder(RealMatrixChangingVisitor)
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,542, @see #walkInInternalOrder(RealMatrixPreservingVisitor)
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,543," @see #walkInInternalOrder(RealMatrixChangingVisitor, int, int, int, int)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,544," @see #walkInInternalOrder(RealMatrixPreservingVisitor, int, int, int, int)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,546,"oid walkInRowOrder(RealMatrixChangingVisitor visitor,"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,547,"nt startRow, int endRow, int startColumn, int endColumn)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,564,* @see #walkInColumnOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,565,* @see #walkInColumnOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,566,"* @see #walkInColumnOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,567,"* @see #walkInColumnOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,568,* @see #walkInOptimizedOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,569,* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,570,"* @see #walkInOptimizedOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,571,"* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,572,* @return the value returned by {@link RealMatrixChangingVisitor#end()} at the end
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,573,* of the walk
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,575,"double walkInRowOrder(RealMatrixChangingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,576,"int startRow, int endRow, int startColumn, int endColumn)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,551, Visit (but don't change) all matrix entries in row order.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,580,* Visit (but don't change) some matrix entries in row order.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,581,* <p>Row order starts at upper left and iterating through all elements
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,582,* of a row from left to right before going to the leftmost element
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,583,* of the next row.</p>
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,562, @see #walkInInternalOrder(RealMatrixChangingVisitor)
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,563, @see #walkInInternalOrder(RealMatrixPreservingVisitor)
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,564," @see #walkInInternalOrder(RealMatrixChangingVisitor, int, int, int, int)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,565," @see #walkInInternalOrder(RealMatrixPreservingVisitor, int, int, int, int)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,567,"oid walkInRowOrder(RealMatrixPreservingVisitor visitor,"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,568,"nt startRow, int endRow, int startColumn, int endColumn)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,594,* @see #walkInColumnOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,595,* @see #walkInColumnOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,596,"* @see #walkInColumnOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,597,"* @see #walkInColumnOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,598,* @see #walkInOptimizedOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,599,* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,600,"* @see #walkInOptimizedOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,601,"* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,602,* @return the value returned by {@link RealMatrixPreservingVisitor#end()} at the end
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,603,* of the walk
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,605,"double walkInRowOrder(RealMatrixPreservingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,606,"int startRow, int endRow, int startColumn, int endColumn)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,572, Visit (and possibly change) all matrix entries in row order.
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,573, <p>The matrix internal order depends on the exact matrix class. It may be
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,574," different from traditional row order, but is generally faster. If there is no need"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,575," for an explicit walk order, this method should be preferred to the {@link"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,576, #walkInRowOrder(RealMatrixChangingVisitor)} one.</p>
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,610,* Visit (and possibly change) all matrix entries in column order.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,611,* <p>Column order starts at upper left and iterating through all elements
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,612,* of a column from top to bottom before going to the topmost element
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,613,* of the next column.</p>
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,583, @see #walkInInternalOrder(RealMatrixPreservingVisitor)
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,584," @see #walkInInternalOrder(RealMatrixChangingVisitor, int, int, int, int)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,585," @see #walkInInternalOrder(RealMatrixPreservingVisitor, int, int, int, int)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,587,oid walkInInternalOrder(RealMatrixChangingVisitor visitor) throws MatrixVisitorException;
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,620,* @see #walkInColumnOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,621,"* @see #walkInColumnOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,622,"* @see #walkInColumnOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,623,* @see #walkInOptimizedOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,624,* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,625,"* @see #walkInOptimizedOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,626,"* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,627,* @return the value returned by {@link RealMatrixChangingVisitor#end()} at the end
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,628,* of the walk
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,630,double walkInColumnOrder(RealMatrixChangingVisitor visitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,631,throws MatrixVisitorException;
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,634,* Visit (but don't change) all matrix entries in column order.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,635,* <p>Column order starts at upper left and iterating through all elements
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,636,* of a column from top to bottom before going to the topmost element
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,637,* of the next column.</p>
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,638,* @param visitor visitor used to process all matrix entries
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,639,* @exception  MatrixVisitorException if the visitor cannot process an entry
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,640,* @see #walkInRowOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,641,* @see #walkInRowOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,642,"* @see #walkInRowOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,643,"* @see #walkInRowOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,644,* @see #walkInColumnOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,645,"* @see #walkInColumnOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,646,"* @see #walkInColumnOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,647,* @see #walkInOptimizedOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,648,* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,649,"* @see #walkInOptimizedOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,650,"* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,651,* @return the value returned by {@link RealMatrixPreservingVisitor#end()} at the end
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,652,* of the walk
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,654,double walkInColumnOrder(RealMatrixPreservingVisitor visitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,655,throws MatrixVisitorException;
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,658,* Visit (and possibly change) some matrix entries in column order.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,659,* <p>Column order starts at upper left and iterating through all elements
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,660,* of a column from top to bottom before going to the topmost element
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,661,* of the next column.</p>
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,662,* @param visitor visitor used to process all matrix entries
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,663,* @param startRow Initial row index
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,664,* @param endRow Final row index (inclusive)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,665,* @param startColumn Initial column index
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,666,* @param endColumn Final column index
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,667,* @exception  MatrixVisitorException if the visitor cannot process an entry
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,668,* @exception MatrixIndexException  if the indices are not valid
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,669,* @see #walkInRowOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,670,* @see #walkInRowOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,671,"* @see #walkInRowOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,672,"* @see #walkInRowOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,673,* @see #walkInColumnOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,674,* @see #walkInColumnOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,675,"* @see #walkInColumnOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,676,* @see #walkInOptimizedOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,677,* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,678,"* @see #walkInOptimizedOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,679,"* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,680,* @return the value returned by {@link RealMatrixChangingVisitor#end()} at the end
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,681,* of the walk
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,683,"double walkInColumnOrder(RealMatrixChangingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,684,"int startRow, int endRow, int startColumn, int endColumn)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,685,"throws MatrixIndexException, MatrixVisitorException;"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,590, Visit (but don't change) all matrix entries in row order.
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,591, <p>The matrix internal order depends on the exact matrix class. It may be
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,592," different from traditional row order, but is generally faster. If there is no need"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,593," for an explicit walk order, this method should be preferred to the {@link"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,594, #walkInRowOrder(RealMatrixPreservingVisitor)} one.</p>
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,688,* Visit (but don't change) some matrix entries in column order.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,689,* <p>Column order starts at upper left and iterating through all elements
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,690,* of a column from top to bottom before going to the topmost element
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,691,* of the next column.</p>
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,693,* @param startRow Initial row index
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,694,* @param endRow Final row index (inclusive)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,695,* @param startColumn Initial column index
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,696,* @param endColumn Final column index
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,698,* @exception MatrixIndexException  if the indices are not valid
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,601, @see #walkInInternalOrder(RealMatrixChangingVisitor)
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,602," @see #walkInInternalOrder(RealMatrixChangingVisitor, int, int, int, int)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,603," @see #walkInInternalOrder(RealMatrixPreservingVisitor, int, int, int, int)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,605,oid walkInInternalOrder(RealMatrixPreservingVisitor visitor) throws MatrixVisitorException;
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,703,* @see #walkInColumnOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,704,* @see #walkInColumnOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,705,"* @see #walkInColumnOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,706,* @see #walkInOptimizedOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,707,* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,708,"* @see #walkInOptimizedOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,709,"* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,710,* @return the value returned by {@link RealMatrixPreservingVisitor#end()} at the end
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,711,* of the walk
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,713,"double walkInColumnOrder(RealMatrixPreservingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,714,"int startRow, int endRow, int startColumn, int endColumn)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,715,"throws MatrixIndexException, MatrixVisitorException;"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,608, Visit (and possibly change) all matrix entries in row order.
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,609, <p>The matrix internal order depends on the exact matrix class. It may be
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,610," different from traditional row order, but is generally faster. If there is no need"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,611," for an explicit walk order, this method should be preferred to the {@link"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,612," #walkInRowOrder(RealMatrixChangingVisitor, int, int, int, int)} one.</p>"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,718,* Visit (and possibly change) all matrix entries using the fastest possible order.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,719,* <p>The fastest walking order depends on the exact matrix class. It may be
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,720,* different from traditional row or column orders.</p>
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,721,* @param visitor visitor used to process all matrix entries
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,722,* @exception  MatrixVisitorException if the visitor cannot process an entry
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,723,* @see #walkInRowOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,724,* @see #walkInRowOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,725,"* @see #walkInRowOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,726,"* @see #walkInRowOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,727,* @see #walkInColumnOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,728,* @see #walkInColumnOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,729,"* @see #walkInColumnOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,730,"* @see #walkInColumnOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,731,* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,732,"* @see #walkInOptimizedOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,733,"* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,734,* @return the value returned by {@link RealMatrixChangingVisitor#end()} at the end
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,735,* of the walk
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,737,double walkInOptimizedOrder(RealMatrixChangingVisitor visitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,738,throws MatrixVisitorException;
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,741,* Visit (but don't change) all matrix entries using the fastest possible order.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,742,* <p>The fastest walking order depends on the exact matrix class. It may be
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,743,* different from traditional row or column orders.</p>
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,744,* @param visitor visitor used to process all matrix entries
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,745,* @exception  MatrixVisitorException if the visitor cannot process an entry
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,746,* @see #walkInRowOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,747,* @see #walkInRowOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,748,"* @see #walkInRowOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,749,"* @see #walkInRowOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,750,* @see #walkInColumnOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,751,* @see #walkInColumnOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,752,"* @see #walkInColumnOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,753,"* @see #walkInColumnOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,754,* @see #walkInOptimizedOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,755,"* @see #walkInOptimizedOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,756,"* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,757,* @return the value returned by {@link RealMatrixPreservingVisitor#end()} at the end
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,758,* of the walk
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,760,double walkInOptimizedOrder(RealMatrixPreservingVisitor visitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,761,throws MatrixVisitorException;
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,764,* Visit (and possibly change) some matrix entries using the fastest possible order.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,765,* <p>The fastest walking order depends on the exact matrix class. It may be
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,766,* different from traditional row or column orders.</p>
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,624, @see #walkInInternalOrder(RealMatrixChangingVisitor)
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,625, @see #walkInInternalOrder(RealMatrixPreservingVisitor)
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,626," @see #walkInInternalOrder(RealMatrixPreservingVisitor, int, int, int, int)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,628,"oid walkInInternalOrder(RealMatrixChangingVisitor visitor,"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,629,"nt startRow, int endRow, int startColumn, int endColumn)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,778,* @see #walkInColumnOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,779,* @see #walkInColumnOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,780,"* @see #walkInColumnOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,781,"* @see #walkInColumnOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,782,* @see #walkInOptimizedOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,783,* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,784,"* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,785,* @return the value returned by {@link RealMatrixChangingVisitor#end()} at the end
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,786,* of the walk
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,788,"double walkInOptimizedOrder(RealMatrixChangingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,789,"int startRow, int endRow, int startColumn, int endColumn)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,633, Visit (but don't change) all matrix entries in row order.
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,634, Visit (and possibly change) all matrix entries in row order.
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,635, <p>The matrix internal order depends on the exact matrix class. It may be
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,636," different from traditional row order, but is generally faster. If there is no need"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,637," for an explicit walk order, this method should be preferred to the {@link"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,638," #walkInRowOrder(RealMatrixPreservingVisitor, int, int, int, int)} one.</p>"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,793,* Visit (but don't change) some matrix entries using the fastest possible order.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,794,* <p>The fastest walking order depends on the exact matrix class. It may be
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,795,* different from traditional row or column orders.</p>
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,650, @see #walkInInternalOrder(RealMatrixChangingVisitor)
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,651, @see #walkInInternalOrder(RealMatrixPreservingVisitor)
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,652," @see #walkInInternalOrder(RealMatrixChangingVisitor, int, int, int, int)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,654,"oid walkInInternalOrder(RealMatrixPreservingVisitor visitor,"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,655,"nt startRow, int endRow, int startColumn, int endColumn)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,807,* @see #walkInColumnOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,808,* @see #walkInColumnOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,809,"* @see #walkInColumnOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,810,"* @see #walkInColumnOrder(RealMatrixPreservingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,811,* @see #walkInOptimizedOrder(RealMatrixChangingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,812,* @see #walkInOptimizedOrder(RealMatrixPreservingVisitor)
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,813,"* @see #walkInOptimizedOrder(RealMatrixChangingVisitor, int, int, int, int)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,814,* @return the value returned by {@link RealMatrixPreservingVisitor#end()} at the end
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,815,* of the walk
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,817,"double walkInOptimizedOrder(RealMatrixPreservingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,818,"int startRow, int endRow, int startColumn, int endColumn)"
True,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,31,* Start visiting a matrix.
True,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,32,* <p>This method is called once before any entry of the matrix is visited.</p>
True,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,33,* @param rows number of rows of the matrix
True,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,34,* @param columns number of columns of the matrix
True,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,35,* @param startRow Initial row index
True,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,36,* @param endRow Final row index (inclusive)
True,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,37,* @param startColumn Initial column index
True,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,38,* @param endColumn Final column index (inclusive)
True,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,40,"void start(int rows, int columns,"
True,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,41,"int startRow, int endRow, int startColumn, int endColumn);"
True,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,55,* End visiting a matrix.
True,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,56,* <p>This method is called once after all entries of the matrix have been visited.</p>
True,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,57,* @return the value that the <code>walkInXxxOrder</code> must return
True,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java,59,double end();
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,463,ublic void walkInRowOrder(final RealMatrixChangingVisitor visitor)
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,463,public double walkInRowOrder(final RealMatrixChangingVisitor visitor)
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,467,"visitor.start(rows, columns, 0, rows - 1, 0, columns - 1);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,474,return visitor.end();
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,476,ublic void walkInRowOrder(final RealMatrixPreservingVisitor visitor)
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,478,public double walkInRowOrder(final RealMatrixPreservingVisitor visitor)
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,482,"visitor.start(rows, columns, 0, rows - 1, 0, columns - 1);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,489,return visitor.end();
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,489,"ublic void walkInRowOrder(final RealMatrixChangingVisitor visitor,"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,490,"inal int startRow, final int endRow,"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,491,"inal int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,493,"public double walkInRowOrder(final RealMatrixChangingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,494,"final int startRow, final int endRow,"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,495,"final int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,498,"visitor.start(getRowDimension(), getColumnDimension(),"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,499,"startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,506,return visitor.end();
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,503,"ublic void walkInRowOrder(final RealMatrixPreservingVisitor visitor,"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,504,"inal int startRow, final int endRow,"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,505,"inal int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,510,"public double walkInRowOrder(final RealMatrixPreservingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,511,"final int startRow, final int endRow,"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,512,"final int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,515,"visitor.start(getRowDimension(), getColumnDimension(),"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,516,"startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,523,return visitor.end();
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,526,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,527,public double walkInColumnOrder(final RealMatrixChangingVisitor visitor)
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,528,throws MatrixVisitorException {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,529,final int rows    = getRowDimension();
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,530,final int columns = getColumnDimension();
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,531,"visitor.start(rows, columns, 0, rows - 1, 0, columns - 1);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,532,for (int j = 0; j < columns; ++j) {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,533,for (int i = 0; i < rows; ++i) {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,534,final double[] rowI = data[i];
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,535,"rowI[j] = visitor.visit(i, j, rowI[j]);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,538,return visitor.end();
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,541,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,542,public double walkInColumnOrder(final RealMatrixPreservingVisitor visitor)
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,543,throws MatrixVisitorException {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,544,final int rows    = getRowDimension();
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,545,final int columns = getColumnDimension();
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,546,"visitor.start(rows, columns, 0, rows - 1, 0, columns - 1);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,547,for (int j = 0; j < columns; ++j) {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,548,for (int i = 0; i < rows; ++i) {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,549,"visitor.visit(i, j, data[i][j]);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,552,return visitor.end();
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,555,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,556,"public double walkInColumnOrder(final RealMatrixChangingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,557,"final int startRow, final int endRow,"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,558,"final int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,559,"throws MatrixIndexException, MatrixVisitorException {"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,560,"checkSubMatrixIndex(startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,561,"visitor.start(getRowDimension(), getColumnDimension(),"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,562,"startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,563,for (int j = startColumn; j <= endColumn; ++j) {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,564,for (int i = startRow; i <= endRow; ++i) {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,565,final double[] rowI = data[i];
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,566,"rowI[j] = visitor.visit(i, j, rowI[j]);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,569,return visitor.end();
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,572,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,573,"public double walkInColumnOrder(final RealMatrixPreservingVisitor visitor,"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,574,"final int startRow, final int endRow,"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,575,"final int startColumn, final int endColumn)"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,576,"throws MatrixIndexException, MatrixVisitorException {"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,577,"checkSubMatrixIndex(startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,578,"visitor.start(getRowDimension(), getColumnDimension(),"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,579,"startRow, endRow, startColumn, endColumn);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,580,for (int j = startColumn; j <= endColumn; ++j) {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,581,for (int i = startRow; i <= endRow; ++i) {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,582,"visitor.visit(i, j, data[i][j]);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,585,return visitor.end();
True,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,31,* Start visiting a matrix.
True,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,32,* <p>This method is called once before any entry of the matrix is visited.</p>
True,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,33,* @param rows number of rows of the matrix
True,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,34,* @param columns number of columns of the matrix
True,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,35,* @param startRow Initial row index
True,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,36,* @param endRow Final row index (inclusive)
True,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,37,* @param startColumn Initial column index
True,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,38,* @param endColumn Final column index (inclusive)
True,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,40,"void start(int rows, int columns,"
True,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,41,"int startRow, int endRow, int startColumn, int endColumn);"
True,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,54,* End visiting a matrix.
True,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,55,* <p>This method is called once after all entries of the matrix have been visited.</p>
True,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,56,* @return the value that the <code>walkInXxxOrder</code> must return
True,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,src/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java,58,double end();
False,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,377,ealMatrix mIT = new LUSolver(new LUDecompositionImpl(m)).getInverse().transpose();
False,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,378,ealMatrix mTI = new LUSolver(new LUDecompositionImpl(m.transpose())).getInverse();
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,377,RealMatrix mIT = new LUDecompositionImpl(m).getSolver().getInverse().transpose();
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,378,RealMatrix mTI = new LUDecompositionImpl(m.transpose()).getSolver().getInverse();
False,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1030,.walkInInternalOrder(getVisitor);
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1030,m.walkInOptimizedOrder(getVisitor);
False,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1036,".walkInInternalOrder(getVisitor, 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1036,"m.walkInOptimizedOrder(getVisitor, 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1047,"m = new DenseRealMatrix(rows, columns);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1048,m.walkInColumnOrder(new SetVisitor());
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1049,getVisitor = new GetVisitor();
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1050,m.walkInOptimizedOrder(getVisitor);
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1051,"assertEquals(rows * columns, getVisitor.getCount());"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1053,"m = new DenseRealMatrix(rows, columns);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1054,"m.walkInColumnOrder(new SetVisitor(), 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1055,getVisitor = new GetVisitor();
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1056,"m.walkInOptimizedOrder(getVisitor, 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1057,"assertEquals((rows - 2) * (columns - 2), getVisitor.getCount());"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1058,for (int i = 0; i < rows; ++i) {
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1059,"assertEquals(0.0, m.getEntry(i, 0), 0);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1060,"assertEquals(0.0, m.getEntry(i, columns - 1), 0);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1062,for (int j = 0; j < columns; ++j) {
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1063,"assertEquals(0.0, m.getEntry(0, j), 0);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1064,"assertEquals(0.0, m.getEntry(rows - 1, j), 0);"
False,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1049,.walkInInternalOrder(new SetVisitor());
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1068,m.walkInOptimizedOrder(new SetVisitor());
False,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1055,".walkInInternalOrder(new SetVisitor(), 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1074,"m.walkInOptimizedOrder(new SetVisitor(), 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1087,"m = new DenseRealMatrix(rows, columns);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1088,m.walkInOptimizedOrder(new SetVisitor());
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1089,getVisitor = new GetVisitor();
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1090,m.walkInColumnOrder(getVisitor);
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1091,"assertEquals(rows * columns, getVisitor.getCount());"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1093,"m = new DenseRealMatrix(rows, columns);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1094,"m.walkInOptimizedOrder(new SetVisitor(), 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1095,getVisitor = new GetVisitor();
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1096,"m.walkInColumnOrder(getVisitor, 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1097,"assertEquals((rows - 2) * (columns - 2), getVisitor.getCount());"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1098,for (int i = 0; i < rows; ++i) {
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1099,"assertEquals(0.0, m.getEntry(i, 0), 0);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1100,"assertEquals(0.0, m.getEntry(i, columns - 1), 0);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1102,for (int j = 0; j < columns; ++j) {
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1103,"assertEquals(0.0, m.getEntry(0, j), 0);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1104,"assertEquals(0.0, m.getEntry(rows - 1, j), 0);"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1111,"public void start(int rows, int columns, int startRow, int endRow,"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1112,"int startColumn, int endColumn) {"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1117,public double end() {
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1118,return 0;
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1125,"public void start(int rows, int columns, int startRow, int endRow,"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1126,"int startColumn, int endColumn) {"
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1135,public double end() {
True,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java,1136,return 0;
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,816,.walkInInternalOrder(getVisitor);
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,816,m.walkInOptimizedOrder(getVisitor);
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,822,".walkInInternalOrder(getVisitor, 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,822,"m.walkInOptimizedOrder(getVisitor, 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,833,"m = new RealMatrixImpl(rows, columns);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,834,m.walkInColumnOrder(new SetVisitor());
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,835,getVisitor = new GetVisitor();
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,836,m.walkInOptimizedOrder(getVisitor);
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,837,"assertEquals(rows * columns, getVisitor.getCount());"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,839,"m = new RealMatrixImpl(rows, columns);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,840,"m.walkInColumnOrder(new SetVisitor(), 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,841,getVisitor = new GetVisitor();
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,842,"m.walkInOptimizedOrder(getVisitor, 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,843,"assertEquals((rows - 2) * (columns - 2), getVisitor.getCount());"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,844,for (int i = 0; i < rows; ++i) {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,845,"assertEquals(0.0, m.getEntry(i, 0), 0);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,846,"assertEquals(0.0, m.getEntry(i, columns - 1), 0);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,848,for (int j = 0; j < columns; ++j) {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,849,"assertEquals(0.0, m.getEntry(0, j), 0);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,850,"assertEquals(0.0, m.getEntry(rows - 1, j), 0);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,835,.walkInInternalOrder(new SetVisitor());
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,854,m.walkInOptimizedOrder(new SetVisitor());
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,841,".walkInInternalOrder(new SetVisitor(), 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,860,"m.walkInOptimizedOrder(new SetVisitor(), 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,873,"m = new RealMatrixImpl(rows, columns);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,874,m.walkInOptimizedOrder(new SetVisitor());
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,875,getVisitor = new GetVisitor();
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,876,m.walkInColumnOrder(getVisitor);
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,877,"assertEquals(rows * columns, getVisitor.getCount());"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,879,"m = new RealMatrixImpl(rows, columns);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,880,"m.walkInOptimizedOrder(new SetVisitor(), 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,881,getVisitor = new GetVisitor();
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,882,"m.walkInColumnOrder(getVisitor, 1, rows - 2, 1, columns - 2);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,883,"assertEquals((rows - 2) * (columns - 2), getVisitor.getCount());"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,884,for (int i = 0; i < rows; ++i) {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,885,"assertEquals(0.0, m.getEntry(i, 0), 0);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,886,"assertEquals(0.0, m.getEntry(i, columns - 1), 0);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,888,for (int j = 0; j < columns; ++j) {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,889,"assertEquals(0.0, m.getEntry(0, j), 0);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,890,"assertEquals(0.0, m.getEntry(rows - 1, j), 0);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,897,"public void start(int rows, int columns, int startRow, int endRow,"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,898,"int startColumn, int endColumn) {"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,903,public double end() {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,904,return 0;
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,911,"public void start(int rows, int columns, int startRow, int endRow,"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,912,"int startColumn, int endColumn) {"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,921,public double end() {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,922,return 0;
