is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,100,"achedQt = MatrixUtils.createRealMatrix(m, m);"
True,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,100,double[][] qta = new double[m][m];
False,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,106,"achedQt.setEntry(k, k, 1);"
True,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,106,qta[k][k] = 1;
False,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,109,"achedQt.setEntry(k, k, 1 + beta * hK[k]);"
True,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,109,qta[k][k] = 1 + beta * hK[k];
False,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,111,"achedQt.setEntry(k, i, beta * hK[i]);"
True,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,111,qta[k][i] = beta * hK[i];
False,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,116,"eta += cachedQt.getEntry(j, i) * hK[i];"
True,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,116,beta += qta[j][i] * hK[i];
False,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,119,"achedQt.setEntry(j, k, beta * hK[k]);"
True,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,119,qta[j][k] = beta * hK[k];
False,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,121,"achedQt.addToEntry(j, i, beta * hK[i]);"
True,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,121,qta[j][i] += beta * hK[i];
False,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,126,"achedQt.setEntry(0, 0, 1);"
True,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,126,qta[0][0] = 1;
True,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,127,cachedQt = MatrixUtils.createRealMatrix(qta);
False,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,140,"achedT = MatrixUtils.createRealMatrix(m, m);"
True,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,141,double[][] ta = new double[m][m];
False,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,142,"achedT.setEntry(i, i, main[i]);"
True,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,143,ta[i][i] = main[i];
False,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,144,"achedT.setEntry(i, i - 1, secondary[i - 1]);"
True,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,145,ta[i][i - 1] = secondary[i - 1];
False,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,147,"achedT.setEntry(i, i + 1, secondary[i]);"
True,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,148,ta[i][i + 1] = secondary[i];
True,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,151,cachedT = MatrixUtils.createRealMatrix(ta);
