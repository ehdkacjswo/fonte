is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,24,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,29,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,60, @throws NullPointerException if {@code c} is {@code null}.
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,62,* @throws NullArgumentException if {@code c} is {@code null}.
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,63,ublic PolynomialFunction(double c[]) {
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,65,public PolynomialFunction(double c[])
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,66,"throws NullArgumentException, NoDataException {"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,68,MathUtils.checkNotNull(c);
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,120, @throws NullPointerException if {@code coefficients} is {@code null}.
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,124,* @throws NullArgumentException if {@code coefficients} is {@code null}.
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,122,"rotected static double evaluate(double[] coefficients, double argument) {"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,126,"protected static double evaluate(double[] coefficients, double argument)"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,127,"throws NullArgumentException, NoDataException {"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,128,MathUtils.checkNotNull(coefficients);
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,227, @throws NullPointerException if {@code coefficients} is {@code null}.
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,233,* @throws NullArgumentException if {@code coefficients} is {@code null}.
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,229,rotected static double[] differentiate(double[] coefficients) {
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,235,protected static double[] differentiate(double[] coefficients)
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,236,"throws NullArgumentException, NoDataException {"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,237,MathUtils.checkNotNull(coefficients);
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,26,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,147, @throws NullPointerException if <code>rhs</code> is null
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,148,* @throws NullArgumentException if <code>rhs</code> is null
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,149,ublic Complex add(Complex rhs) {
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,150,public Complex add(Complex rhs)
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,151,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,152,MathUtils.checkNotNull(rhs);
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,208, @throws NullPointerException if <code>rhs</code> is null
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,211,* @throws NullArgumentException if <code>rhs</code> is null
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,210,ublic Complex divide(Complex rhs) {
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,213,public Complex divide(Complex rhs)
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,214,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,215,MathUtils.checkNotNull(rhs);
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,355, @throws NullPointerException if <code>rhs</code> is null
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,360,* @throws NullArgumentException if <code>rhs</code> is null
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,357,ublic Complex multiply(Complex rhs) {
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,362,public Complex multiply(Complex rhs)
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,363,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,364,MathUtils.checkNotNull(rhs);
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,440, @throws NullPointerException if <code>rhs</code> is null
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,447,* @throws NullArgumentException if <code>rhs</code> is null
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,442,ublic Complex subtract(Complex rhs) {
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,449,public Complex subtract(Complex rhs)
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,450,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,451,MathUtils.checkNotNull(rhs);
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,676, @throws NullPointerException if x is null
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,685,* @throws NullArgumentException if x is null
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,679,ublic Complex pow(Complex x) {
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,680,f (x == null) {
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,681,hrow new NullPointerException();
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,688,public Complex pow(Complex x)
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,689,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,690,MathUtils.checkNotNull(x);
False,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,27, Proagation of {@code NullPointerException} from within Commons-Math is
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,27,* Propagation of {@code NullPointerException} from within Commons-Math is
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,461, @throws NullPointerException
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,461,* @throws NullArgumentException
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,464,ublic BigFraction add(final BigInteger bg) {
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,464,public BigFraction add(final BigInteger bg) throws NullArgumentException {
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,465,MathUtils.checkNotNull(bg);
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,25,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,388,"ublic void setSubMatrix(final double[][] subMatrix, final int row, final int column) {"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,389,"public void setSubMatrix(final double[][] subMatrix, final int row, final int column)"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,390,"throws NoDataException, DimensionMismatchException, NullArgumentException {"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,391,MathUtils.checkNotNull(subMatrix);
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,27,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,29,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,143, @throws org.apache.commons.math.exception.NullArgumentException
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,144, if {@code d} is {@code null}.
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,145,* @throws NullArgumentException if {@code d} is {@code null}.
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,147,"ublic Array2DRowFieldMatrix(final Field<T> field, final T[][] d, final boolean copyArray) {"
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,148,"public Array2DRowFieldMatrix(final Field<T> field, final T[][] d, final boolean copyArray)"
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,149,"throws DimensionMismatchException, NoDataException, NullArgumentException {"
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,152,f (d == null) {
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,153,hrow new NullPointerException();
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,154,MathUtils.checkNotNull(d);
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,27,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,90, @throws NullPointerException if {@code d} is {@code null}.
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,91,* @throws NullArgumentException if {@code d} is {@code null}.
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,93,ublic Array2DRowRealMatrix(final double[][] d) {
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,94,public Array2DRowRealMatrix(final double[][] d)
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,95,"throws DimensionMismatchException, NoDataException, NullArgumentException {"
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,280,MathUtils.checkNotNull(subMatrix);
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,529, @throws org.apache.commons.math.exception.NullArgumentException if
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,532,* @throws NullArgumentException if
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,532,rivate void copyIn(final double[][] in) {
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,535,private void copyIn(final double[][] in)
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,536,"throws DimensionMismatchException, NoDataException, NullArgumentException {"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,28,import org.apache.commons.math.util.MathUtils;
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,763,MathUtils.checkNotNull(subMatrix);
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,25,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,28,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,767,"ublic void setSubMatrix(final double[][] subMatrix, final int row, final int column) {"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,769,"public void setSubMatrix(final double[][] subMatrix, final int row, final int column)"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,770,"throws NoDataException, NullArgumentException {"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,772,MathUtils.checkNotNull(subMatrix);
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,20,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,21,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,22,import org.apache.commons.math.exception.OutOfRangeException;
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,23,import org.apache.commons.math.exception.ZeroException;
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,213, @throws org.apache.commons.math.exception.ZeroException if
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,214, {@code subMatrix} does not contain at least one column.
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,215, @throws org.apache.commons.math.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,216, {@code subMatrix} does not fit into this matrix from element in
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,217," {@code (row, column)}."
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,218, @throws org.apache.commons.math.exception.DimensionMismatchException
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,219, if {@code subMatrix} is not rectangular.
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,218,* @throws ZeroException if {@code subMatrix} does not contain at least one column.
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,219,* @throws OutOfRangeException if {@code subMatrix} does not fit into
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,220,"* this matrix from element in {@code (row, column)}."
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,221,* @throws DimensionMismatchException if {@code subMatrix} is not rectangular.
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,221, @throws org.apache.commons.math.exception.NullArgumentException if
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,222, {@code subMatrix} is {@code null}.
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,223,* @throws NullArgumentException if {@code subMatrix} is {@code null}.
False,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,225,"oid setSubMatrix(double[][] subMatrix, int row, int column);"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,226,"void setSubMatrix(double[][] subMatrix, int row, int column)"
True,src/main/java/org/apache/commons/math/linear/RealMatrix.java,src/main/java/org/apache/commons/math/linear/RealMatrix.java,227,"throws ZeroException, OutOfRangeException, DimensionMismatchException, NullArgumentException;"
True,src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java,src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java,25,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java,src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java,66,* @throws NullArgumentException if file is null
True,src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java,src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java,75,* @throws NullArgumentException if url is null
False,src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java,src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java,74,oid load(URL url) throws IOException;
True,src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java,src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java,77,"void load(URL url) throws IOException, NullArgumentException;"
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,31,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,36,import org.apache.commons.math.util.MathUtils;
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,120,* @exception NullArgumentException if in is null
False,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,119,ublic void load(double[] in) {
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,122,public void load(double[] in) throws NullArgumentException {
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,139,* @throws NullArgumentException if url is null
False,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,137,ublic void load(URL url) throws IOException {
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,141,"public void load(URL url) throws IOException, NullArgumentException {"
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,142,MathUtils.checkNotNull(url);
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,169,* @throws NullArgumentException if file is null
False,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,165,ublic void load(File file) throws IOException {
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,171,"public void load(File file) throws IOException, NullArgumentException {"
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,172,MathUtils.checkNotNull(file);
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,298,* @throws NullArgumentException if in is null
False,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,292,ublic ArrayDataAdapter(double[] in){
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,300,public ArrayDataAdapter(double[] in) throws NullArgumentException {
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,302,MathUtils.checkNotNull(in);
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,24,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,36,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,702, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,704,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,704,"ublic static void copy(DescriptiveStatistics source, DescriptiveStatistics dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,706,"public static void copy(DescriptiveStatistics source, DescriptiveStatistics dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,707,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,708,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,709,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,22,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,655, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,656,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,657,"ublic static void copy(SummaryStatistics source, SummaryStatistics dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,658,"public static void copy(SummaryStatistics source, SummaryStatistics dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,659,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,660,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,661,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,19,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,20,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,162, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,165,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,165,ynchronizedDescriptiveStatistics dest) {
True,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,168,SynchronizedDescriptiveStatistics dest)
True,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,169,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,170,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,171,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,19,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,20,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,322, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,325,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,325,ynchronizedSummaryStatistics dest) {
True,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,328,SynchronizedSummaryStatistics dest)
True,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,329,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,330,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java,331,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,21,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,23,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,151, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,154,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,153,"ublic static void copy(FirstMoment source, FirstMoment dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,156,"public static void copy(FirstMoment source, FirstMoment dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,157,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,158,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java,159,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,21,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,22,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,136, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,139,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,138,"ublic static void copy(FourthMoment source, FourthMoment dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,141,"public static void copy(FourthMoment source, FourthMoment dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,142,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,143,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java,144,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,22,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,28,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,186, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,188,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,188,"ublic static void copy(GeometricMean source, GeometricMean dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,190,"public static void copy(GeometricMean source, GeometricMean dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,191,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,192,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,193,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,22,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,26,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,214, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,216,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,216,"ublic static void copy(Kurtosis source, Kurtosis dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,218,"public static void copy(Kurtosis source, Kurtosis dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,219,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,220,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,221,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,21,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,25,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,265, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,267,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,267,"ublic static void copy(Mean source, Mean dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,269,"public static void copy(Mean source, Mean dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,270,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,271,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java,272,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,21,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,22,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,117, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,120,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,119,"ublic static void copy(SecondMoment source, SecondMoment dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,122,"public static void copy(SecondMoment source, SecondMoment dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,123,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,124,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java,125,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,24,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,159, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,160,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,161,"ublic static void copy(final SemiVariance source, SemiVariance dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,162,"public static void copy(final SemiVariance source, SemiVariance dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,163,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,164,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,165,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,21,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,24,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,206, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,208,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,208,"ublic static void copy(Skewness source, Skewness dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,210,"public static void copy(Skewness source, Skewness dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,211,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,212,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java,213,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,21,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,24,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,264, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,266,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,266,"ublic static void copy(StandardDeviation source, StandardDeviation dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,268,"public static void copy(StandardDeviation source, StandardDeviation dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,269,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,270,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java,271,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,21,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,22,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,131, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,134,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,133,"ublic static void copy(ThirdMoment source, ThirdMoment dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,136,"public static void copy(ThirdMoment source, ThirdMoment dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,137,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,138,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java,139,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,25,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,598, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,599,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,600,"ublic static void copy(Variance source, Variance dest) {"
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,601,f (source == null ||
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,602,est == null) {
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,603,hrow new NullArgumentException();
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,601,"public static void copy(Variance source, Variance dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,602,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,603,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,604,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,21,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,23,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,156, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,158,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,158,"ublic static void copy(Max source, Max dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,160,"public static void copy(Max source, Max dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,161,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,162,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java,163,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,21,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,23,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,156, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,158,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,158,"ublic static void copy(Min source, Min dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,160,"public static void copy(Min source, Min dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,161,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,162,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java,163,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,22,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,27,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,485, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,487,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,487,"ublic static void copy(Percentile source, Percentile dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,489,"public static void copy(Percentile source, Percentile dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,490,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,491,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,492,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,21,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,25,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,213, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,215,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,215,"ublic static void copy(Product source, Product dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,217,"public static void copy(Product source, Product dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,218,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,219,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java,220,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,21,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,23,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,209, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,211,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,211,"ublic static void copy(Sum source, Sum dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,213,"public static void copy(Sum source, Sum dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,214,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,215,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java,216,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,21,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,24,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,155, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,157,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,157,"ublic static void copy(SumOfLogs source, SumOfLogs dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,159,"public static void copy(SumOfLogs source, SumOfLogs dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,160,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,161,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java,162,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,21,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,23,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,143, @throws NullPointerException if either source or dest is null
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,145,* @throws NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,145,"ublic static void copy(SumOfSquares source, SumOfSquares dest) {"
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,147,"public static void copy(SumOfSquares source, SumOfSquares dest)"
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,148,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,149,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java,150,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,22,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,31,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,340, @throws NullPointerException if input array is null
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,342,* @throws NullArgumentException if input array is null
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,343,rivate void checkRectangular(long[][] in) {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,345,private void checkRectangular(long[][] in)
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,346,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,347,MathUtils.checkNotNull(in);
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,2328,ublic static void checkNotNull(Object o) {
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,2328,public static void checkNotNull(Object o)
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,2329,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,23,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,280, on original.  Original may not be null; otherwise a NullPointerException
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,281,* on original.  Original may not be null; otherwise a {@link NullArgumentException}
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,285,* @exception NullArgumentException if original is null
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,286,ublic ResizableDoubleArray(ResizableDoubleArray original) {
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,288,public ResizableDoubleArray(ResizableDoubleArray original)
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,289,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,290,MathUtils.checkNotNull(original);
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,826, <p>Neither source nor dest may be null; otherwise a NullPointerException
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,830,* <p>Neither source nor dest may be null; otherwise a {@link NullArgumentException}
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,835,* @exception NullArgumentException if either source or dest is null
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,834,"ublic static void copy(ResizableDoubleArray source, ResizableDoubleArray dest) {"
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,835,ynchronized(source) {
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,839,"public static void copy(ResizableDoubleArray source, ResizableDoubleArray dest)"
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,840,throws NullArgumentException {
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,841,MathUtils.checkNotNull(source);
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,842,MathUtils.checkNotNull(dest);
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,843,synchronized(source) {
True,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,21,import org.apache.commons.math.exception.NullArgumentException;
False,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,635,Test
True,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,636,@Test(expected=NullArgumentException.class)
False,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,637,ry {
False,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,638,omplex.ONE.pow(null);
False,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,639,"ssert.fail(""Expecting NullPointerException"");"
False,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,640, catch (NullPointerException ex) {
False,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,641,/ expected
True,src/test/java/org/apache/commons/math/complex/ComplexTest.java,src/test/java/org/apache/commons/math/complex/ComplexTest.java,638,Complex.ONE.pow(null);
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,26,import org.apache.commons.math.exception.NullArgumentException;
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,933,"ssert.fail(""expecting NullPointerException"");"
False,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,934, catch (NullPointerException e) {
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,934,"Assert.fail(""expecting NullArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java,935,} catch (NullArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,30,import org.apache.commons.math.exception.NullArgumentException;
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1216,"ssert.fail(""expecting NullPointerException"");"
False,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1217, catch (NullPointerException e) {
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1217,"Assert.fail(""expecting NullArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java,1218,} catch (NullArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,28,import org.apache.commons.math.exception.NullArgumentException;
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,1116,"ssert.fail(""expecting NullPointerException"");"
False,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,1117, catch (NullPointerException e) {
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,1117,"Assert.fail(""expecting NullArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java,1118,} catch (NullArgumentException e) {
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,23,import org.apache.commons.math.exception.NullArgumentException;
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,632,"ssert.fail(""expecting NullPointerException"");"
False,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,633, catch (NullPointerException e) {
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,633,"Assert.fail(""expecting NullArgumentException"");"
True,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java,634,} catch (NullArgumentException e) {
True,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,28,import org.apache.commons.math.exception.NullArgumentException;
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,187,Test
True,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,188,@Test(expected=NullArgumentException.class)
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,189,mpiricalDistribution dist = new EmpiricalDistributionImpl();
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,190,ry {
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,191,ist.load((double[]) null);
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,192,"ssert.fail(""load((double[]) null) expected NullPointerException"");"
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,193, catch (NullPointerException e) {
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,194,/ expected
True,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,190,new EmpiricalDistributionImpl().load((double[]) null);
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,198,Test
True,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,193,@Test(expected=NullArgumentException.class)
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,200,mpiricalDistribution dist = new EmpiricalDistributionImpl();
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,201,ry {
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,202,ist.load((URL) null);
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,203,"ssert.fail(""load((URL) null) expected NullPointerException"");"
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,204, catch (NullPointerException e) {
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,205,/ expected
True,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,195,new EmpiricalDistributionImpl().load((URL) null);
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,209,Test
True,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,198,@Test(expected=NullArgumentException.class)
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,211,mpiricalDistribution dist = new EmpiricalDistributionImpl();
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,212,ry {
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,213,ist.load((File) null);
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,214,"ssert.fail(""load((File) null) expected NullPointerException"");"
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,215, catch (NullPointerException e) {
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,216,/ expected
True,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,200,new EmpiricalDistributionImpl().load((File) null);
