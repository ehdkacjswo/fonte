is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,18,package org.apache.commons.math.analysis;
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,20,import org.apache.commons.math.FunctionEvaluationException;
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,23,* An interface representing a trivariate real function.
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,25,* @since 2.2
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,28,public interface TrivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,30,* Compute the value for the function.
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,32,* @param x x-coordinate for which the function value should be computed.
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,33,* @param y y-coordinate for which the function value should be computed.
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,34,* @param z z-coordinate for which the function value should be computed.
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,35,* @return the value.
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,36,* @throws FunctionEvaluationException if the function evaluation fails.
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,38,"public double value(double x, double y, double z)"
True,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java,39,throws FunctionEvaluationException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,21,import org.apache.commons.math.FunctionEvaluationException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,61,** Set of cubic splines pacthing the whole data grid */
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,62,/** Set of cubic splines patching the whole data grid */
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,65,* Partial derivatives
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,66,* The value of the first index determines the kind of derivatives:
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,67,* 0 = first partial derivatives wrt x
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,68,* 1 = first partial derivatives wrt y
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,69,* 2 = second partial derivatives wrt x
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,70,* 3 = second partial derivatives wrt y
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,71,* 4 = cross partial derivatives
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,73,private BivariateRealFunction[][][] partialDerivatives = null;
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,65," @param x Sample values of the x-coordinate, in increasing order"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,66," @param y Sample values of the y-coordinate, in increasing order"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,67, @param z Values of the function on every grid point
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,68, @param dZdX Values of the partial derivative of function with respect
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,69, to x on every grid point
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,70, @param dZdY Values of the partial derivative of function with respect
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,71, to y on every grid point
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,72, @param dZdXdY Values of the cross partial derivative of function on
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,73, every grid point
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,76,"* @param x Sample values of the x-coordinate, in increasing order."
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,77,"* @param y Sample values of the y-coordinate, in increasing order."
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,78,* @param f Values of the function on every grid point.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,79,* @param dFdX Values of the partial derivative of function with respect
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,80,* to x on every grid point.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,81,* @param dFdY Values of the partial derivative of function with respect
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,82,* to y on every grid point.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,83,* @param d2FdXdY Values of the cross partial derivative of function on
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,84,* every grid point.
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,81,"ouble[][] z,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,82,"ouble[][] dZdX,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,83,"ouble[][] dZdY,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,84,ouble[][] dZdXdY)
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,92,"double[][] f,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,93,"double[][] dFdX,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,94,"double[][] dFdY,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,95,double[][] d2FdXdY)
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,89,f (xLen == 0 || yLen == 0 || z.length == 0 || z[0].length == 0) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,100,if (xLen == 0 || yLen == 0 || f.length == 0 || f[0].length == 0) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,92,f (xLen != z.length) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,93,"hrow new DimensionMismatchException(xLen, z.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,103,if (xLen != f.length) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,104,"throw new DimensionMismatchException(xLen, f.length);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,95,f (xLen != dZdX.length) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,96,"hrow new DimensionMismatchException(xLen, dZdX.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,106,if (xLen != dFdX.length) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,107,"throw new DimensionMismatchException(xLen, dFdX.length);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,98,f (xLen != dZdY.length) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,99,"hrow new DimensionMismatchException(xLen, dZdY.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,109,if (xLen != dFdY.length) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,110,"throw new DimensionMismatchException(xLen, dFdY.length);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,101,f (xLen != dZdXdY.length) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,102,"hrow new DimensionMismatchException(xLen, dZdXdY.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,112,if (xLen != d2FdXdY.length) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,113,"throw new DimensionMismatchException(xLen, d2FdXdY.length);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,116,f (z[i].length != yLen) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,117,"hrow new DimensionMismatchException(z[i].length, yLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,127,if (f[i].length != yLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,128,"throw new DimensionMismatchException(f[i].length, yLen);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,119,f (dZdX[i].length != yLen) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,120,"hrow new DimensionMismatchException(dZdX[i].length, yLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,130,if (dFdX[i].length != yLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,131,"throw new DimensionMismatchException(dFdX[i].length, yLen);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,122,f (dZdY[i].length != yLen) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,123,"hrow new DimensionMismatchException(dZdY[i].length, yLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,133,if (dFdY[i].length != yLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,134,"throw new DimensionMismatchException(dFdY[i].length, yLen);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,125,f (dZdXdY[i].length != yLen) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,126,"hrow new DimensionMismatchException(dZdXdY[i].length, yLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,136,if (d2FdXdY[i].length != yLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,137,"throw new DimensionMismatchException(d2FdXdY[i].length, yLen);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,132,"[i][j],      z[ip1][j],      z[i][jp1],      z[ip1][jp1],"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,133,"ZdX[i][j],   dZdX[ip1][j],   dZdX[i][jp1],   dZdX[ip1][jp1],"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,134,"ZdY[i][j],   dZdY[ip1][j],   dZdY[i][jp1],   dZdY[ip1][jp1],"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,135,"ZdXdY[i][j], dZdXdY[ip1][j], dZdXdY[i][jp1], dZdXdY[ip1][jp1]"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,143,"f[i][j], f[ip1][j], f[i][jp1], f[ip1][jp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,144,"dFdX[i][j], dFdX[ip1][j], dFdX[i][jp1], dFdX[ip1][jp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,145,"dFdY[i][j], dFdY[ip1][j], dFdY[i][jp1], dFdY[ip1][jp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,146,"d2FdXdY[i][j], d2FdXdY[ip1][j], d2FdXdY[i][jp1], d2FdXdY[ip1][jp1]"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,165, @param c coordinate
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,166, @param val coordinate samples
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,176,* @param x x-coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,177,* @param y y-coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,178,"* @return the value at point (x, y) of the first partial derivative with"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,179,* respect to x.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,181,"public double partialDerivativeX(double x, double y) {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,182,"return partialDerivative(0, x, y);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,185,* @param x x-coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,186,* @param y y-coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,187,"* @return the value at point (x, y) of the first partial derivative with"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,188,* respect to y.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,190,"public double partialDerivativeY(double x, double y) {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,191,"return partialDerivative(1, x, y);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,194,* @param x x-coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,195,* @param y y-coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,196,"* @return the value at point (x, y) of the second partial derivative with"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,197,* respect to x.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,199,"public double partialDerivativeXX(double x, double y) {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,200,"return partialDerivative(2, x, y);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,203,* @param x x-coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,204,* @param y y-coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,205,"* @return the value at point (x, y) of the second partial derivative with"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,206,* respect to y.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,208,"public double partialDerivativeYY(double x, double y) {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,209,"return partialDerivative(3, x, y);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,212,* @param x x-coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,213,* @param y y-coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,214,"* @return the value at point (x, y) of the second partial cross-derivative."
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,216,"public double partialDerivativeXY(double x, double y) {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,217,"return partialDerivative(4, x, y);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,221,* @param which First index in {@link #partialDerivatives}.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,222,* @param x x-coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,223,* @param y y-coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,224,"* @return the value at point (x, y) of the selected partial derivative."
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,226,"private double partialDerivative(int which, double x, double y) {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,227,if (partialDerivatives == null) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,228,computePartialDerivatives();
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,231,"final int i = searchIndex(x, xval);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,232,if (i == -1) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,233,"throw MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,234,"x, xval[0], xval[xval.length - 1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,236,"final int j = searchIndex(y, yval);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,237,if (j == -1) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,238,"throw MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,239,"y, yval[0], yval[yval.length - 1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,242,final double xN = (x - xval[i]) / (xval[i + 1] - xval[i]);
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,243,final double yN = (y - yval[j]) / (yval[j + 1] - yval[j]);
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,245,double result = Double.NaN;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,246,"try { // Workaround to avoid carrying around ""try"" blocks for an"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,247,// exception that will never happen
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,248,"result = partialDerivatives[which][i][j].value(xN, yN);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,249,} catch (FunctionEvaluationException e) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,250,// Will never happen
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,253,return result;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,257,* Compute all partial derivatives.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,259,private void computePartialDerivatives() {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,260,final int lastI = xval.length - 1;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,261,final int lastJ = yval.length - 1;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,262,partialDerivatives = new BivariateRealFunction[5][lastI][lastJ];
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,264,for (int i = 0; i < lastI; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,265,for (int j = 0; j < lastJ; j++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,266,final BicubicSplineFunction f = splines[i][j];
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,267,partialDerivatives[0][i][j] = f.partialDerivativeX();
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,268,partialDerivatives[1][i][j] = f.partialDerivativeY();
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,269,partialDerivatives[2][i][j] = f.partialDerivativeXX();
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,270,partialDerivatives[3][i][j] = f.partialDerivativeYY();
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,271,partialDerivatives[4][i][j] = f.partialDerivativeXY();
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,277,* @param c Coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,278,* @param val Coordinate samples.
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,169, range defined by the end values of {@code val}
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,281,* range defined by the end values of {@code val}.
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,176,nt max = val.length;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,288,final int max = val.length;
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,195,"  <li>fx(0,0)</li>"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,196,"  <li>fx(1,0)</li>"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,197,"  <li>fx(0,1)</li>"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,198,"  <li>fx(1,1)</li>"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,199,"  <li>fy(0,0)</li>"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,200,"  <li>fy(1,0)</li>"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,201,"  <li>fy(0,1)</li>"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,202,"  <li>fy(1,1)</li>"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,203,"  <li>fxy(0,0)</li>"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,204,"  <li>fxy(1,0)</li>"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,205,"  <li>fxy(0,1)</li>"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,206,"  <li>fxy(1,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,307,"*  <li>f<sub>x</sub>(0,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,308,"*  <li>f<sub>x</sub>(1,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,309,"*  <li>f<sub>x</sub>(0,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,310,"*  <li>f<sub>x</sub>(1,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,311,"*  <li>f<sub>y</sub>(0,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,312,"*  <li>f<sub>y</sub>(1,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,313,"*  <li>f<sub>y</sub>(0,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,314,"*  <li>f<sub>y</sub>(1,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,315,"*  <li>f<sub>xy</sub>(0,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,316,"*  <li>f<sub>xy</sub>(1,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,317,"*  <li>f<sub>xy</sub>(0,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,318,"*  <li>f<sub>xy</sub>(1,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,320,* where the subscripts indicate the partial derivative with respect to
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,321,* the corresponding variable(s).
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,209, values
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,210, @return the spline coefficients
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,324,* values.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,325,* @return the spline coefficients.
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,234,/CHECKSTYLE: stop MultipleVariableDeclarations
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,350,private static final short N = 4;
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,236,rivate final double
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,237,"00, a01, a02, a03,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,238,"10, a11, a12, a13,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,239,"20, a21, a22, a23,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,240,"30, a31, a32, a33;"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,241,/CHECKSTYLE: resume MultipleVariableDeclarations
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,352,private final double[][] a = new double[N][N];
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,353,/** Partial derivatives */
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,354,BivariateRealFunction partialDerivativeX = null;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,355,BivariateRealFunction partialDerivativeY = null;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,356,BivariateRealFunction partialDerivativeXX = null;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,357,BivariateRealFunction partialDerivativeYY = null;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,358,BivariateRealFunction partialDerivativeXY = null;
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,246,ublic BicubicSplineFunction(double[] a) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,247,his.a00 = a[0];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,248,his.a10 = a[1];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,249,his.a20 = a[2];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,250,his.a30 = a[3];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,251,his.a01 = a[4];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,252,his.a11 = a[5];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,253,his.a21 = a[6];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,254,his.a31 = a[7];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,255,his.a02 = a[8];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,256,his.a12 = a[9];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,257,his.a22 = a[10];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,258,his.a32 = a[11];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,259,his.a03 = a[12];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,260,his.a13 = a[13];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,261,his.a23 = a[14];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,262,his.a33 = a[15];
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,363,public BicubicSplineFunction(double[] aV) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,364,for (int i = 0; i < N; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,365,for (int j = 0; j < N; j++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,366,a[i][j] = aV[i + N * j];
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,266, @param x x-coordinate of the interpolation point
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,267, @param y y-coordinate of the interpolation point
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,268, @return the interpolated value.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,372,* {@inheritDoc}
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,386,"final double[] pX = {1, x, x2, x3};"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,390,"final double[] pY = {1, y, y2, y3};"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,392,"return apply(pX, pY, a);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,396,* Compute the value of the bicubic polynomial.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,398,* @param pX Powers of the x-coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,399,* @param pY Powers of the y-coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,400,* @param coeff Spline coefficients.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,401,* @return the interpolated value.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,403,"private double apply(double[] pX, double[] pY, double[][] coeff) {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,404,double result = 0;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,405,for (int i = 0; i < N; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,406,for (int j = 0; j < N; j++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,407,result += coeff[i][j] * pX[i] * pY[j];
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,411,return result;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,415,* @return the partial derivative wrt {@code x}.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,417,public BivariateRealFunction partialDerivativeX() {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,418,if (partialDerivativeX == null) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,419,computePartialDerivatives();
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,422,return partialDerivativeX;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,425,* @return the partial derivative wrt {@code y}.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,427,public BivariateRealFunction partialDerivativeY() {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,428,if (partialDerivativeY == null) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,429,computePartialDerivatives();
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,432,return partialDerivativeY;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,435,* @return the second partial derivative wrt {@code x}.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,437,public BivariateRealFunction partialDerivativeXX() {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,438,if (partialDerivativeXX == null) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,439,computePartialDerivatives();
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,442,return partialDerivativeXX;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,445,* @return the second partial derivative wrt {@code y}.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,447,public BivariateRealFunction partialDerivativeYY() {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,448,if (partialDerivativeYY == null) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,449,computePartialDerivatives();
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,452,return partialDerivativeYY;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,455,* @return the second partial cross-derivative.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,457,public BivariateRealFunction partialDerivativeXY() {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,458,if (partialDerivativeXY == null) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,459,computePartialDerivatives();
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,462,return partialDerivativeXY;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,466,* Compute all partial derivatives functions.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,468,private void computePartialDerivatives() {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,469,final double[][] aX = new double[N][N];
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,470,final double[][] aY = new double[N][N];
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,471,final double[][] aXX = new double[N][N];
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,472,final double[][] aYY = new double[N][N];
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,473,final double[][] aXY = new double[N][N];
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,475,for (int i = 0; i < N; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,476,for (int j = 0; j < N; j++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,477,final double c = a[i][j];
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,478,aX[i][j] = i * c;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,479,aY[i][j] = j * c;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,480,aXX[i][j] = (i - 1) * aX[i][j];
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,481,aYY[i][j] = (j - 1) * aY[i][j];
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,482,aXY[i][j] = j * aX[i][j];
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,486,partialDerivativeX = new BivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,487,"public double value(double x, double y)  {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,488,final double x2 = x * x;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,489,"final double[] pX = {0, 1, x, x2};"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,491,final double y2 = y * y;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,492,final double y3 = y2 * y;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,493,"final double[] pY = {1, y, y2, y3};"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,495,"return apply(pX, pY, aX);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,498,partialDerivativeY = new BivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,499,"public double value(double x, double y)  {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,500,final double x2 = x * x;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,501,final double x3 = x2 * x;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,502,"final double[] pX = {1, x, x2, x3};"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,504,final double y2 = y * y;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,505,"final double[] pY = {0, 1, y, y2};"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,507,"return apply(pX, pY, aY);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,510,partialDerivativeXX = new BivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,511,"public double value(double x, double y)  {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,512,"final double[] pX = {0, 0, 1, x};"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,514,final double y2 = y * y;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,515,final double y3 = y2 * y;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,516,"final double[] pY = {1, y, y2, y3};"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,518,"return apply(pX, pY, aXX);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,521,partialDerivativeYY = new BivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,522,"public double value(double x, double y)  {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,523,final double x2 = x * x;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,524,final double x3 = x2 * x;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,525,"final double[] pX = {1, x, x2, x3};"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,527,"final double[] pY = {0, 0, 1, y};"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,529,"return apply(pX, pY, aYY);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,532,partialDerivativeXY = new BivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,533,"public double value(double x, double y)  {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,534,final double x2 = x * x;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,535,"final double[] pX = {0, 1, x, x2};"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,537,final double y2 = y * y;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,538,"final double[] pY = {0, 1, y, y2};"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,285,eturn a00 + a01 * y + a02 * y2 + a03 * y3 +
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,286,10 * x + a11 * x * y + a12 * x * y2 + a13 * x * y3 +
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,287,20 * x2 + a21 * x2 * y + a22 * x2 * y2 + a23 * x2 * y3 +
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,288,30 * x3 + a31 * x3 * y + a32 * x3 * y2 + a33 * x3 * y3;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,540,"return apply(pX, pY, aXY);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,43, Default constructor. The degree of the fitting polynomials are set to 3.
True,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,43,* Default constructor. The degree of the fitting polynomials is set to 3.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,17,package org.apache.commons.math.analysis.interpolation;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,19,import org.apache.commons.math.util.MathUtils;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,20,import org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,21,import org.apache.commons.math.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,22,import org.apache.commons.math.analysis.TrivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,25,* Function that implements the
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,26,"* <a href=""http://en.wikipedia.org/wiki/Tricubic_interpolation"">"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,27,"* tricubic spline interpolation</a>, as proposed in"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,28,* <quote>
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,29,*  Tricubic interpolation in three dimensions<br/>
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,30,*  F. Lekien and J. Marsden<br/>
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,31,*  <em>Int. J. Numer. Meth. Engng</em> 2005; <b>63</b>:455-471
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,32,* </quote>
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,34,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,35,* @since 2.2
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,37,public class TricubicSplineInterpolatingFunction
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,38,implements TrivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,40,* Matrix to compute the spline coefficients from the function values
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,41,* and function derivatives values
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,43,private static final double[][] AINV = {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,44,"{ 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,45,"{ 0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,46,"{ -3,3,0,0,0,0,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,47,"{ 2,-2,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,48,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,49,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,50,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,51,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,52,"{ -3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,53,"{ 0,0,0,0,0,0,0,0,-3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,54,"{ 9,-9,-9,9,0,0,0,0,6,3,-6,-3,0,0,0,0,6,-6,3,-3,0,0,0,0,0,0,0,0,0,0,0,0,4,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,55,"{ -6,6,6,-6,0,0,0,0,-3,-3,3,3,0,0,0,0,-4,4,-2,2,0,0,0,0,0,0,0,0,0,0,0,0,-2,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,56,"{ 2,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,57,"{ 0,0,0,0,0,0,0,0,2,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,58,"{ -6,6,6,-6,0,0,0,0,-4,-2,4,2,0,0,0,0,-3,3,-3,3,0,0,0,0,0,0,0,0,0,0,0,0,-2,-1,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,59,"{ 4,-4,-4,4,0,0,0,0,2,2,-2,-2,0,0,0,0,2,-2,2,-2,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,60,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,61,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,62,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,63,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,64,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,65,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,66,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,3,0,0,0,0,0,0,-2,-1,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,67,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,-2,0,0,0,0,0,0,1,1,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,68,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,69,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,-1,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,70,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,-9,-9,9,0,0,0,0,0,0,0,0,0,0,0,0,6,3,-6,-3,0,0,0,0,6,-6,3,-3,0,0,0,0,4,2,2,1,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,71,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,6,6,-6,0,0,0,0,0,0,0,0,0,0,0,0,-3,-3,3,3,0,0,0,0,-4,4,-2,2,0,0,0,0,-2,-2,-1,-1,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,72,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,73,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,74,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,6,6,-6,0,0,0,0,0,0,0,0,0,0,0,0,-4,-2,4,2,0,0,0,0,-3,3,-3,3,0,0,0,0,-2,-1,-2,-1,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,75,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,-4,-4,4,0,0,0,0,0,0,0,0,0,0,0,0,2,2,-2,-2,0,0,0,0,2,-2,2,-2,0,0,0,0,1,1,1,1,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,76,"{-3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,77,"{ 0,0,0,0,0,0,0,0,-3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,78,"{ 9,-9,0,0,-9,9,0,0,6,3,0,0,-6,-3,0,0,0,0,0,0,0,0,0,0,6,-6,0,0,3,-3,0,0,0,0,0,0,0,0,0,0,4,2,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,79,"{ -6,6,0,0,6,-6,0,0,-3,-3,0,0,3,3,0,0,0,0,0,0,0,0,0,0,-4,4,0,0,-2,2,0,0,0,0,0,0,0,0,0,0,-2,-2,0,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,80,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,81,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,-1,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,82,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,-9,0,0,-9,9,0,0,0,0,0,0,0,0,0,0,6,3,0,0,-6,-3,0,0,0,0,0,0,0,0,0,0,6,-6,0,0,3,-3,0,0,4,2,0,0,2,1,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,83,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,6,0,0,6,-6,0,0,0,0,0,0,0,0,0,0,-3,-3,0,0,3,3,0,0,0,0,0,0,0,0,0,0,-4,4,0,0,-2,2,0,0,-2,-2,0,0,-1,-1,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,84,"{ 9,0,-9,0,-9,0,9,0,0,0,0,0,0,0,0,0,6,0,3,0,-6,0,-3,0,6,0,-6,0,3,0,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,2,0,2,0,1,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,85,"{ 0,0,0,0,0,0,0,0,9,0,-9,0,-9,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,3,0,-6,0,-3,0,6,0,-6,0,3,0,-3,0,0,0,0,0,0,0,0,0,4,0,2,0,2,0,1,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,86,"{ -27,27,27,-27,27,-27,-27,27,-18,-9,18,9,18,9,-18,-9,-18,18,-9,9,18,-18,9,-9,-18,18,18,-18,-9,9,9,-9,-12,-6,-6,-3,12,6,6,3,-12,-6,12,6,-6,-3,6,3,-12,12,-6,6,-6,6,-3,3,-8,-4,-4,-2,-4,-2,-2,-1 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,87,"{ 18,-18,-18,18,-18,18,18,-18,9,9,-9,-9,-9,-9,9,9,12,-12,6,-6,-12,12,-6,6,12,-12,-12,12,6,-6,-6,6,6,6,3,3,-6,-6,-3,-3,6,6,-6,-6,3,3,-3,-3,8,-8,4,-4,4,-4,2,-2,4,4,2,2,2,2,1,1 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,88,"{ -6,0,6,0,6,0,-6,0,0,0,0,0,0,0,0,0,-3,0,-3,0,3,0,3,0,-4,0,4,0,-2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,-2,0,-1,0,-1,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,89,"{ 0,0,0,0,0,0,0,0,-6,0,6,0,6,0,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,0,-3,0,3,0,3,0,-4,0,4,0,-2,0,2,0,0,0,0,0,0,0,0,0,-2,0,-2,0,-1,0,-1,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,90,"{ 18,-18,-18,18,-18,18,18,-18,12,6,-12,-6,-12,-6,12,6,9,-9,9,-9,-9,9,-9,9,12,-12,-12,12,6,-6,-6,6,6,3,6,3,-6,-3,-6,-3,8,4,-8,-4,4,2,-4,-2,6,-6,6,-6,3,-3,3,-3,4,2,4,2,2,1,2,1 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,91,"{ -12,12,12,-12,12,-12,-12,12,-6,-6,6,6,6,6,-6,-6,-6,6,-6,6,6,-6,6,-6,-8,8,8,-8,-4,4,4,-4,-3,-3,-3,-3,3,3,3,3,-4,-4,4,4,-2,-2,2,2,-4,4,-4,4,-2,2,-2,2,-2,-2,-2,-2,-1,-1,-1,-1 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,92,"{ 2,0,0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,93,"{ 0,0,0,0,0,0,0,0,2,0,0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,94,"{ -6,6,0,0,6,-6,0,0,-4,-2,0,0,4,2,0,0,0,0,0,0,0,0,0,0,-3,3,0,0,-3,3,0,0,0,0,0,0,0,0,0,0,-2,-1,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,95,"{ 4,-4,0,0,-4,4,0,0,2,2,0,0,-2,-2,0,0,0,0,0,0,0,0,0,0,2,-2,0,0,2,-2,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,96,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,97,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,98,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,6,0,0,6,-6,0,0,0,0,0,0,0,0,0,0,-4,-2,0,0,4,2,0,0,0,0,0,0,0,0,0,0,-3,3,0,0,-3,3,0,0,-2,-1,0,0,-2,-1,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,99,"{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,-4,0,0,-4,4,0,0,0,0,0,0,0,0,0,0,2,2,0,0,-2,-2,0,0,0,0,0,0,0,0,0,0,2,-2,0,0,2,-2,0,0,1,1,0,0,1,1,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,100,"{ -6,0,6,0,6,0,-6,0,0,0,0,0,0,0,0,0,-4,0,-2,0,4,0,2,0,-3,0,3,0,-3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,-1,0,-2,0,-1,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,101,"{ 0,0,0,0,0,0,0,0,-6,0,6,0,6,0,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,0,-2,0,4,0,2,0,-3,0,3,0,-3,0,3,0,0,0,0,0,0,0,0,0,-2,0,-1,0,-2,0,-1,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,102,"{ 18,-18,-18,18,-18,18,18,-18,12,6,-12,-6,-12,-6,12,6,12,-12,6,-6,-12,12,-6,6,9,-9,-9,9,9,-9,-9,9,8,4,4,2,-8,-4,-4,-2,6,3,-6,-3,6,3,-6,-3,6,-6,3,-3,6,-6,3,-3,4,2,2,1,4,2,2,1 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,103,"{ -12,12,12,-12,12,-12,-12,12,-6,-6,6,6,6,6,-6,-6,-8,8,-4,4,8,-8,4,-4,-6,6,6,-6,-6,6,6,-6,-4,-4,-2,-2,4,4,2,2,-3,-3,3,3,-3,-3,3,3,-4,4,-2,2,-4,4,-2,2,-2,-2,-1,-1,-2,-2,-1,-1 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,104,"{ 4,0,-4,0,-4,0,4,0,0,0,0,0,0,0,0,0,2,0,2,0,-2,0,-2,0,2,0,-2,0,2,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,105,"{ 0,0,0,0,0,0,0,0,4,0,-4,0,-4,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,-2,0,-2,0,2,0,-2,0,2,0,-2,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,106,"{ -12,12,12,-12,12,-12,-12,12,-8,-4,8,4,8,4,-8,-4,-6,6,-6,6,6,-6,6,-6,-6,6,6,-6,-6,6,6,-6,-4,-2,-4,-2,4,2,4,2,-4,-2,4,2,-4,-2,4,2,-3,3,-3,3,-3,3,-3,3,-2,-1,-2,-1,-2,-1,-2,-1 },"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,107,"{ 8,-8,-8,8,-8,8,8,-8,4,4,-4,-4,-4,-4,4,4,4,-4,4,-4,-4,4,-4,4,4,-4,-4,4,4,-4,-4,4,2,2,2,2,-2,-2,-2,-2,2,2,-2,-2,2,2,-2,-2,2,-2,2,-2,2,-2,2,-2,1,1,1,1,1,1,1,1 }"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,110,/** Samples x-coordinates */
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,111,private final double[] xval;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,112,/** Samples y-coordinates */
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,113,private final double[] yval;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,114,/** Samples z-coordinates */
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,115,private final double[] zval;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,116,/** Set of cubic splines pacthing the whole data grid */
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,117,private final TricubicSplineFunction[][][] splines;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,120,"* @param x Sample values of the x-coordinate, in increasing order."
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,121,"* @param y Sample values of the y-coordinate, in increasing order."
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,122,"* @param z Sample values of the y-coordinate, in increasing order."
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,123,* @param f Values of the function on every grid point.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,124,* @param dFdX Values of the partial derivative of function with respect
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,125,* to x on every grid point.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,126,* @param dFdY Values of the partial derivative of function with respect
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,127,* to y on every grid point.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,128,* @param d2FdXdY Values of the cross partial derivative of function on
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,129,* every grid point.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,130,* @param d2FdXdZ Values of the cross partial derivative of function on
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,131,* every grid point.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,132,* @param d2FdYdZ Values of the cross partial derivative of function on
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,133,* every grid point.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,134,* @param d3FdXdYdZ Values of the cross partial derivative of function on
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,135,* every grid point.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,136,* @throws DimensionMismatchException if the various arrays do not contain
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,137,* the expected number of elements.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,138,"* @throws IllegalArgumentException if {@code x}, {@code y} or {@code z}"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,139,* are not strictly increasing.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,141,"public TricubicSplineInterpolatingFunction(double[] x,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,142,"double[] y,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,143,"double[] z,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,144,"double[][][] f,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,145,"double[][][] dFdX,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,146,"double[][][] dFdY,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,147,"double[][][] dFdZ,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,148,"double[][][] d2FdXdY,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,149,"double[][][] d2FdXdZ,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,150,"double[][][] d2FdYdZ,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,151,double[][][] d3FdXdYdZ)
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,152,throws DimensionMismatchException {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,153,final int xLen = x.length;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,154,final int yLen = y.length;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,155,final int zLen = z.length;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,157,if (xLen == 0 || yLen == 0 || z.length == 0
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,158,|| f.length == 0 || f[0].length == 0) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,159,"throw MathRuntimeException.createIllegalArgumentException(""no data"");"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,161,if (xLen != f.length) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,162,"throw new DimensionMismatchException(xLen, f.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,164,if (xLen != dFdX.length) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,165,"throw new DimensionMismatchException(xLen, dFdX.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,167,if (xLen != dFdY.length) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,168,"throw new DimensionMismatchException(xLen, dFdY.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,170,if (xLen != dFdZ.length) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,171,"throw new DimensionMismatchException(xLen, dFdZ.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,173,if (xLen != d2FdXdY.length) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,174,"throw new DimensionMismatchException(xLen, d2FdXdY.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,176,if (xLen != d2FdXdZ.length) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,177,"throw new DimensionMismatchException(xLen, d2FdXdZ.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,179,if (xLen != d2FdYdZ.length) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,180,"throw new DimensionMismatchException(xLen, d2FdYdZ.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,182,if (xLen != d3FdXdYdZ.length) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,183,"throw new DimensionMismatchException(xLen, d3FdXdYdZ.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,186,"MathUtils.checkOrder(x, 1, true);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,187,"MathUtils.checkOrder(y, 1, true);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,188,"MathUtils.checkOrder(z, 1, true);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,190,xval = x.clone();
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,191,yval = y.clone();
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,192,zval = z.clone();
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,194,final int lastI = xLen - 1;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,195,final int lastJ = yLen - 1;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,196,final int lastK = zLen - 1;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,197,splines = new TricubicSplineFunction[lastI][lastJ][lastK];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,199,for (int i = 0; i < lastI; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,200,if (f[i].length != yLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,201,"throw new DimensionMismatchException(f[i].length, yLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,203,if (dFdX[i].length != yLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,204,"throw new DimensionMismatchException(dFdX[i].length, yLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,206,if (dFdY[i].length != yLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,207,"throw new DimensionMismatchException(dFdY[i].length, yLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,209,if (dFdZ[i].length != yLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,210,"throw new DimensionMismatchException(dFdZ[i].length, yLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,212,if (d2FdXdY[i].length != yLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,213,"throw new DimensionMismatchException(d2FdXdY[i].length, yLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,215,if (d2FdXdZ[i].length != yLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,216,"throw new DimensionMismatchException(d2FdXdZ[i].length, yLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,218,if (d2FdYdZ[i].length != yLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,219,"throw new DimensionMismatchException(d2FdYdZ[i].length, yLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,221,if (d3FdXdYdZ[i].length != yLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,222,"throw new DimensionMismatchException(d3FdXdYdZ[i].length, yLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,225,final int ip1 = i + 1;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,226,for (int j = 0; j < lastJ; j++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,227,if (f[i][j].length != zLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,228,"throw new DimensionMismatchException(f[i][j].length, zLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,230,if (dFdX[i][j].length != zLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,231,"throw new DimensionMismatchException(dFdX[i][j].length, zLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,233,if (dFdY[i][j].length != zLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,234,"throw new DimensionMismatchException(dFdY[i][j].length, zLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,236,if (dFdZ[i][j].length != zLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,237,"throw new DimensionMismatchException(dFdZ[i][j].length, zLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,239,if (d2FdXdY[i][j].length != zLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,240,"throw new DimensionMismatchException(d2FdXdY[i][j].length, zLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,242,if (d2FdXdZ[i][j].length != zLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,243,"throw new DimensionMismatchException(d2FdXdZ[i][j].length, zLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,245,if (d2FdYdZ[i][j].length != zLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,246,"throw new DimensionMismatchException(d2FdYdZ[i][j].length, zLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,248,if (d3FdXdYdZ[i][j].length != zLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,249,"throw new DimensionMismatchException(d3FdXdYdZ[i][j].length, zLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,252,final int jp1 = j + 1;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,253,for (int k = 0; k < lastK; k++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,254,final int kp1 = k + 1;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,256,final double[] beta = new double[] {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,257,"f[i][j][k], f[ip1][j][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,258,"f[i][jp1][k], f[ip1][jp1][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,259,"f[i][j][kp1], f[ip1][j][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,260,"f[i][jp1][kp1], f[ip1][jp1][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,262,"dFdX[i][j][k], dFdX[ip1][j][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,263,"dFdX[i][jp1][k], dFdX[ip1][jp1][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,264,"dFdX[i][j][kp1], dFdX[ip1][j][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,265,"dFdX[i][jp1][kp1], dFdX[ip1][jp1][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,267,"dFdY[i][j][k], dFdY[ip1][j][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,268,"dFdY[i][jp1][k], dFdY[ip1][jp1][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,269,"dFdY[i][j][kp1], dFdY[ip1][j][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,270,"dFdY[i][jp1][kp1], dFdY[ip1][jp1][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,272,"dFdZ[i][j][k], dFdZ[ip1][j][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,273,"dFdZ[i][jp1][k], dFdZ[ip1][jp1][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,274,"dFdZ[i][j][kp1], dFdZ[ip1][j][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,275,"dFdZ[i][jp1][kp1], dFdZ[ip1][jp1][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,277,"d2FdXdY[i][j][k], d2FdXdY[ip1][j][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,278,"d2FdXdY[i][jp1][k], d2FdXdY[ip1][jp1][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,279,"d2FdXdY[i][j][kp1], d2FdXdY[ip1][j][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,280,"d2FdXdY[i][jp1][kp1], d2FdXdY[ip1][jp1][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,282,"d2FdXdZ[i][j][k], d2FdXdZ[ip1][j][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,283,"d2FdXdZ[i][jp1][k], d2FdXdZ[ip1][jp1][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,284,"d2FdXdZ[i][j][kp1], d2FdXdZ[ip1][j][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,285,"d2FdXdZ[i][jp1][kp1], d2FdXdZ[ip1][jp1][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,287,"d2FdYdZ[i][j][k], d2FdYdZ[ip1][j][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,288,"d2FdYdZ[i][jp1][k], d2FdYdZ[ip1][jp1][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,289,"d2FdYdZ[i][j][kp1], d2FdYdZ[ip1][j][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,290,"d2FdYdZ[i][jp1][kp1], d2FdYdZ[ip1][jp1][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,292,"d3FdXdYdZ[i][j][k], d3FdXdYdZ[ip1][j][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,293,"d3FdXdYdZ[i][jp1][k], d3FdXdYdZ[ip1][jp1][k],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,294,"d3FdXdYdZ[i][j][kp1], d3FdXdYdZ[ip1][j][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,295,"d3FdXdYdZ[i][jp1][kp1], d3FdXdYdZ[ip1][jp1][kp1],"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,298,splines[i][j][k] = new TricubicSplineFunction(computeSplineCoefficients(beta));
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,305,* {@inheritDoc}
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,307,"public double value(double x, double y, double z) {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,308,"final int i = searchIndex(x, xval);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,309,if (i == -1) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,310,"throw MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,311,"x, xval[0], xval[xval.length - 1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,313,"final int j = searchIndex(y, yval);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,314,if (j == -1) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,315,"throw MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,316,"y, yval[0], yval[yval.length - 1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,318,"final int k = searchIndex(z, zval);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,319,if (k == -1) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,320,"throw MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,321,"z, zval[0], zval[zval.length - 1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,324,final double xN = (x - xval[i]) / (xval[i + 1] - xval[i]);
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,325,final double yN = (y - yval[j]) / (yval[j + 1] - yval[j]);
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,326,final double zN = (z - zval[k]) / (zval[k + 1] - zval[k]);
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,328,"return splines[i][j][k].value(xN, yN, zN);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,332,* @param c Coordinate.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,333,* @param val Coordinate samples.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,334,* @return the index in {@code val} corresponding to the interval
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,335,"* containing {@code c}, or {@code -1} if {@code c} is out of the"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,336,* range defined by the end values of {@code val}.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,338,"private int searchIndex(double c, double[] val) {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,339,if (c < val[0]) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,340,return -1;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,343,final int max = val.length;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,344,for (int i = 1; i < max; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,345,if (c <= val[i]) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,346,return i - 1;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,350,return -1;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,354,* Compute the spline coefficients from the list of function values and
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,355,* function partial derivatives values at the four corners of a grid
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,356,* element. They must be specified in the following order:
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,357,* <ul>
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,358,"*  <li>f(0,0,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,359,"*  <li>f(1,0,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,360,"*  <li>f(0,1,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,361,"*  <li>f(1,1,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,362,"*  <li>f(0,0,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,363,"*  <li>f(1,0,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,364,"*  <li>f(0,1,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,365,"*  <li>f(1,1,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,367,"*  <li>f<sub>x</sub>(0,0,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,368,*  <li>... <em>(same order as above)</em></li>
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,369,"*  <li>f<sub>x</sub>(1,1,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,371,"*  <li>f<sub>y</sub>(0,0,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,372,*  <li>... <em>(same order as above)</em></li>
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,373,"*  <li>f<sub>y</sub>(1,1,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,375,"*  <li>f<sub>z</sub>(0,0,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,376,*  <li>... <em>(same order as above)</em></li>
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,377,"*  <li>f<sub>z</sub>(1,1,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,379,"*  <li>f<sub>xy</sub>(0,0,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,380,*  <li>... <em>(same order as above)</em></li>
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,381,"*  <li>f<sub>xy</sub>(1,1,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,383,"*  <li>f<sub>xz</sub>(0,0,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,384,*  <li>... <em>(same order as above)</em></li>
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,385,"*  <li>f<sub>xz</sub>(1,1,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,387,"*  <li>f<sub>yz</sub>(0,0,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,388,*  <li>... <em>(same order as above)</em></li>
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,389,"*  <li>f<sub>yz</sub>(1,1,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,391,"*  <li>f<sub>xyz</sub>(0,0,0)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,392,*  <li>... <em>(same order as above)</em></li>
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,393,"*  <li>f<sub>xyz</sub>(1,1,1)</li>"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,394,* </ul>
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,395,* where the subscripts indicate the partial derivative with respect to
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,396,* the corresponding variable(s).
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,398,* @param beta List of function values and function partial derivatives
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,399,* values.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,400,* @return the spline coefficients.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,402,private double[] computeSplineCoefficients(double[] beta) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,403,final int sz = 64;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,404,final double[] a = new double[sz];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,406,for (int i = 0; i < sz; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,407,double result = 0;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,408,final double[] row = AINV[i];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,409,for (int j = 0; j < sz; j++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,410,result += row[j] * beta[j];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,412,a[i] = result;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,415,return a;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,420,* 3D-spline function.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,422,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,424,class TricubicSplineFunction
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,425,implements TrivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,426,private static final short N = 4;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,427,private static final short N2 = N * N;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,428,/** Coefficients */
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,429,private final double[][][] a = new double[N][N][N];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,432,* @param aV List of spline coefficients.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,434,public TricubicSplineFunction(double[] aV) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,435,for (int i = 0; i < N; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,436,for (int j = 0; j < N; j++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,437,for (int k = 0; k < N; k++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,438,a[i][j][k] = aV[i + N * j + N2 * k];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,445,* @param x x-coordinate of the interpolation point.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,446,* @param y y-coordinate of the interpolation point.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,447,* @param z z-coordinate of the interpolation point.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,448,* @return the interpolated value.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,450,"public double value(double x, double y, double z) {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,451,if (x < 0 || x > 1) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,452,"throw MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,453,"x, 0, 1);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,455,if (y < 0 || y > 1) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,456,"throw MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,457,"y, 0, 1);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,459,if (z < 0 || z > 1) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,460,"throw MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,461,"z, 0, 1);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,464,final double x2 = x * x;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,465,final double x3 = x2 * x;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,466,"final double[] pX = { 1, x, x2, x3 };"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,468,final double y2 = y * y;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,469,final double y3 = y2 * y;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,470,"final double[] pY = { 1, y, y2, y3 };"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,472,final double z2 = z * z;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,473,final double z3 = z2 * z;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,474,"final double[] pZ = { 1, z, z2, z3 };"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,476,double result = 0;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,477,for (int i = 0; i < N; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,478,for (int j = 0; j < N; j++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,479,for (int k = 0; k < N; k++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,480,result += a[i][j][k] * pX[i] * pY[j] * pZ[k];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,485,return result;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,17,package org.apache.commons.math.analysis.interpolation;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,19,import org.apache.commons.math.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,20,import org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,21,import org.apache.commons.math.MathException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,22,import org.apache.commons.math.util.MathUtils;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,23,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,24,import org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,27,* Generates a tricubic interpolating function.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,29,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,30,* @since 2.2
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,32,public class TricubicSplineInterpolator
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,33,implements TrivariateRealGridInterpolator {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,35,* {@inheritDoc}
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,37,"public TricubicSplineInterpolatingFunction interpolate(final double[] xval,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,38,"final double[] yval,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,39,"final double[] zval,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,40,final double[][][] fval)
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,41,"throws MathException, IllegalArgumentException {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,42,if (xval.length == 0 || yval.length == 0 || zval.length == 0 || fval.length == 0) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,43,"throw MathRuntimeException.createIllegalArgumentException(""no data"");"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,45,if (xval.length != fval.length) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,46,"throw new DimensionMismatchException(xval.length, fval.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,49,"MathUtils.checkOrder(xval, 1, true);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,50,"MathUtils.checkOrder(yval, 1, true);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,51,"MathUtils.checkOrder(zval, 1, true);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,53,final int xLen = xval.length;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,54,final int yLen = yval.length;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,55,final int zLen = zval.length;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,57,"// Samples, re-ordered as (z, x, y) and (y, z, x) tuplets"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,58,"// fvalXY[k][i][j] = f(xval[i], yval[j], zval[k])"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,59,"// fvalZX[j][k][i] = f(xval[i], yval[j], zval[k])"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,60,final double[][][] fvalXY = new double[zLen][xLen][yLen];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,61,final double[][][] fvalZX = new double[yLen][zLen][xLen];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,62,for (int i = 0; i < xLen; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,63,if (fval[i].length != yLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,64,"throw new DimensionMismatchException(fval[i].length, yLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,67,for (int j = 0; j < yLen; j++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,68,if (fval[i][j].length != zLen) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,69,"throw new DimensionMismatchException(fval[i][j].length, zLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,72,for (int k = 0; k < zLen; k++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,73,final double v = fval[i][j][k];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,74,fvalXY[k][i][j] = v;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,75,fvalZX[j][k][i] = v;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,80,final BicubicSplineInterpolator bsi = new BicubicSplineInterpolator();
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,82,"// For each line x[i] (0 <= i < xLen), construct a 2D spline in y and z"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,83,final BicubicSplineInterpolatingFunction[] xSplineYZ
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,84,= new BicubicSplineInterpolatingFunction[xLen];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,85,for (int i = 0; i < xLen; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,86,"xSplineYZ[i] = bsi.interpolate(yval, zval, fval[i]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,89,"// For each line y[j] (0 <= j < yLen), construct a 2D spline in z and x"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,90,final BicubicSplineInterpolatingFunction[] ySplineZX
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,91,= new BicubicSplineInterpolatingFunction[yLen];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,92,for (int j = 0; j < yLen; j++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,93,"ySplineZX[j] = bsi.interpolate(zval, xval, fvalZX[j]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,96,"// For each line z[k] (0 <= k < zLen), construct a 2D spline in x and y"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,97,final BicubicSplineInterpolatingFunction[] zSplineXY
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,98,= new BicubicSplineInterpolatingFunction[zLen];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,99,for (int k = 0; k < zLen; k++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,100,"zSplineXY[k] = bsi.interpolate(xval, yval, fvalXY[k]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,103,// Partial derivatives wrt x and wrt y
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,104,final double[][][] dFdX = new double[xLen][yLen][zLen];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,105,final double[][][] dFdY = new double[xLen][yLen][zLen];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,106,final double[][][] d2FdXdY = new double[xLen][yLen][zLen];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,107,for (int k = 0; k < zLen; k++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,108,final BicubicSplineInterpolatingFunction f = zSplineXY[k];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,109,for (int i = 0; i < xLen; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,110,final double x = xval[i];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,111,for (int j = 0; j < yLen; j++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,112,final double y = yval[j];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,113,"dFdX[i][j][k] = f.partialDerivativeX(x, y);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,114,"dFdY[i][j][k] = f.partialDerivativeY(x, y);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,115,"d2FdXdY[i][j][k] = f.partialDerivativeXY(x, y);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,120,// Partial derivatives wrt y and wrt z
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,121,final double[][][] dFdZ = new double[xLen][yLen][zLen];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,122,final double[][][] d2FdYdZ = new double[xLen][yLen][zLen];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,123,for (int i = 0; i < xLen; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,124,final BicubicSplineInterpolatingFunction f = xSplineYZ[i];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,125,for (int j = 0; j < yLen; j++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,126,final double y = yval[j];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,127,for (int k = 0; k < zLen; k++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,128,final double z = zval[k];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,129,"dFdZ[i][j][k] = f.partialDerivativeY(y, z);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,130,"d2FdYdZ[i][j][k] = f.partialDerivativeXY(y, z);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,135,// Partial derivatives wrt x and wrt z
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,136,final double[][][] d2FdZdX = new double[xLen][yLen][zLen];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,137,for (int j = 0; j < yLen; j++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,138,final BicubicSplineInterpolatingFunction f = ySplineZX[j];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,139,for (int k = 0; k < zLen; k++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,140,final double z = zval[k];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,141,for (int i = 0; i < xLen; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,142,final double x = xval[i];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,143,"d2FdZdX[i][j][k] = f.partialDerivativeXY(z, x);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,148,// Third partial cross-derivatives
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,149,final double[][][] d3FdXdYdZ = new double[xLen][yLen][zLen];
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,150,for (int i = 0; i < xLen ; i++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,151,"final int nI = nextIndex(i, xLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,152,final int pI = previousIndex(i);
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,153,for (int j = 0; j < yLen; j++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,154,"final int nJ = nextIndex(j, yLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,155,final int pJ = previousIndex(j);
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,156,for (int k = 0; k < zLen; k++) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,157,"final int nK = nextIndex(k, zLen);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,158,final int pK = previousIndex(k);
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,160,// XXX Not sure about this formula
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,161,d3FdXdYdZ[i][j][k] = (fval[nI][nJ][nK] - fval[nI][pJ][nK] -
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,162,fval[pI][nJ][nK] + fval[pI][pJ][nK] -
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,163,fval[nI][nJ][pK] + fval[nI][pJ][pK] +
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,164,fval[pI][nJ][pK] - fval[pI][pJ][pK]) /
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,165,((xval[nI] - xval[pI]) * (yval[nJ] - yval[pJ]) * (zval[nK] - zval[pK])) ;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,170,// Create the interpolating splines
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,171,"return new TricubicSplineInterpolatingFunction(xval, yval, zval, fval,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,172,"dFdX, dFdY, dFdZ,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,173,"d2FdXdY, d2FdZdX, d2FdYdZ,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,174,d3FdXdYdZ);
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,178,"* Compute the next index of an array, clipping if necessary."
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,179,* It is assumed (but not checked) that {@code i} is larger than or equal to 0}.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,181,* @param i Index
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,182,* @param max Upper limit of the array
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,183,* @return the next index
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,185,"private int nextIndex(int i, int max) {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,186,final int index = i + 1;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,187,return index < max ? index : index - 1;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,190,"* Compute the previous index of an array, clipping if necessary."
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,191,* It is assumed (but not checked) that {@code i} is smaller than the size of the array.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,193,* @param i Index
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,194,* @return the previous index
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,196,private int previousIndex(int i) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,197,final int index = i - 1;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,198,return index >= 0 ? index : 0;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,17,package org.apache.commons.math.analysis.interpolation;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,19,import org.apache.commons.math.MathException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,20,import org.apache.commons.math.analysis.TrivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,23,* Interface representing a trivariate real interpolating function where the
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,24,* sample points must be specified on a regular grid.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,28,public interface TrivariateRealGridInterpolator {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,30,* Computes an interpolating function for the data set.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,32,"* @param xval All the x-coordinates of the interpolation points, sorted"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,33,* in increasing order.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,34,"* @param yval All the y-coordinates of the interpolation points, sorted"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,35,* in increasing order.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,36,"* @param zval All the z-coordinates of the interpolation points, sorted"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,37,* in increasing order.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,38,* @param fval the values of the interpolation points on all the grid knots:
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,39,"* {@code fval[i][j][k] = f(xval[i], yval[j], zval[k])}."
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,40,* @return a function which interpolates the data set.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,41,* @throws MathException if arguments violate assumptions made by the
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,42,*         interpolation algorithm.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,44,"TrivariateRealFunction interpolate(double[] xval, double[] yval, double[] zval, double[][][] fval)"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,45,throws MathException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,262,* Test for partial derivatives of {@link BicubicSplineFunction}.
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,263,* <p>
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,264,"* f(x, y) = &Sigma;<sub>i</sub>&Sigma;<sub>j</sub> (i+1) (j+2) x<sup>i</sup> y<sup>j</sup>"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,266,@Test
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,267,public void testSplinePartialDerivatives() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,268,final int N = 4;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,269,final double[] coeff = new double[16];
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,271,for (int i = 0; i < N; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,272,for (int j = 0; j < N; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,273,final int index = i + N * j;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,274,coeff[i + N * j] = (i + 1) * (j + 2);
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,278,final BicubicSplineFunction f = new BicubicSplineFunction(coeff);
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,279,BivariateRealFunction derivative;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,280,final double x = 0.435;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,281,final double y = 0.776;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,282,final double tol = 1e-13;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,284,derivative = new BivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,285,"public double value(double x, double y) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,286,final double x2 = x * x;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,287,final double y2 = y * y;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,288,final double y3 = y2 * y;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,289,final double yFactor = 2 + 3 * y + 4 * y2 + 5 * y3;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,290,return yFactor * (2 + 6 * x + 12 * x2);
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,293,"Assert.assertEquals(""dFdX"", derivative.value(x, y),"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,294,"f.partialDerivativeX().value(x, y), tol);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,296,derivative = new BivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,297,"public double value(double x, double y) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,298,final double x2 = x * x;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,299,final double x3 = x2 * x;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,300,final double y2 = y * y;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,301,final double xFactor = 1 + 2 * x + 3 * x2 + 4 * x3;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,302,return xFactor * (3 + 8 * y + 15 * y2);
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,305,"Assert.assertEquals(""dFdY"", derivative.value(x, y),"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,306,"f.partialDerivativeY().value(x, y), tol);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,308,derivative = new BivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,309,"public double value(double x, double y) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,310,final double y2 = y * y;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,311,final double y3 = y2 * y;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,312,final double yFactor = 2 + 3 * y + 4 * y2 + 5 * y3;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,313,return yFactor * (6 + 24 * x);
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,316,"Assert.assertEquals(""d2FdX2"", derivative.value(x, y),"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,317,"f.partialDerivativeXX().value(x, y), tol);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,319,derivative = new BivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,320,"public double value(double x, double y) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,321,final double x2 = x * x;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,322,final double x3 = x2 * x;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,323,final double xFactor = 1 + 2 * x + 3 * x2 + 4 * x3;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,324,return xFactor * (8 + 30 * y);
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,327,"Assert.assertEquals(""d2FdY2"", derivative.value(x, y),"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,328,"f.partialDerivativeYY().value(x, y), tol);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,330,derivative = new BivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,331,"public double value(double x, double y) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,332,final double x2 = x * x;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,333,final double y2 = y * y;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,334,final double yFactor = 3 + 8 * y + 15 * y2;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,335,return yFactor * (2 + 6 * x + 12 * x2);
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,338,"Assert.assertEquals(""d2FdXdY"", derivative.value(x, y),"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,339,"f.partialDerivativeXY().value(x, y), tol);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,343,* Test that the partial derivatives computed from a
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,344,* {@link BicubicSplineInterpolatingFunction} match the input data.
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,345,* <p>
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,346,"* f(x, y) = 5"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,347,*           - 3 x + 2 y
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,348,*           - x y + 2 x<sup>2</sup> - 3 y<sup>2</sup>
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,349,*           + 4 x<sup>2</sup> y - x y<sup>2</sup> - 3 x<sup>3</sup> + y<sup>3</sup>
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,351,@Test
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,352,public void testMatchingPartialDerivatives() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,353,final int sz = 21;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,354,double[] val = new double[sz];
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,355,// Coordinate values
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,356,final double delta = 1d / (sz - 1);
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,357,for (int i = 0; i < sz; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,358,val[i] = i * delta;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,360,// Function values
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,361,BivariateRealFunction f = new BivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,362,"public double value(double x, double y) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,363,final double x2 = x * x;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,364,final double x3 = x2 * x;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,365,final double y2 = y * y;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,366,final double y3 = y2 * y;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,368,return 5
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,369,- 3 * x + 2 * y
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,370,- x * y + 2 * x2 - 3 * y2
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,371,+ 4 * x2 * y - x * y2 - 3 * x3 + y3;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,374,double[][] fval = new double[sz][sz];
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,375,for (int i = 0; i < sz; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,376,for (int j = 0; j < sz; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,377,"fval[i][j] = f.value(val[i], val[j]);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,380,// Partial derivatives with respect to x
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,381,double[][] dFdX = new double[sz][sz];
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,382,BivariateRealFunction dfdX = new BivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,383,"public double value(double x, double y) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,384,final double x2 = x * x;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,385,final double y2 = y * y;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,386,return - 3 - y + 4 * x + 8 * x * y - y2 - 9 * x2;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,389,for (int i = 0; i < sz; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,390,for (int j = 0; j < sz; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,391,"dFdX[i][j] = dfdX.value(val[i], val[j]);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,394,// Partial derivatives with respect to y
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,395,double[][] dFdY = new double[sz][sz];
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,396,BivariateRealFunction dfdY = new BivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,397,"public double value(double x, double y) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,398,final double x2 = x * x;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,399,final double y2 = y * y;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,400,return 2 - x - 6 * y + 4 * x2 - 2 * x * y + 3 * y2;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,403,for (int i = 0; i < sz; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,404,for (int j = 0; j < sz; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,405,"dFdY[i][j] = dfdY.value(val[i], val[j]);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,408,// Partial cross-derivatives
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,409,double[][] d2FdXdY = new double[sz][sz];
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,410,BivariateRealFunction d2fdXdY = new BivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,411,"public double value(double x, double y) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,412,return -1 + 8 * x - 2 * y;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,415,for (int i = 0; i < sz; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,416,for (int j = 0; j < sz; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,417,"d2FdXdY[i][j] = d2fdXdY.value(val[i], val[j]);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,421,BicubicSplineInterpolatingFunction bcf
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,422,"= new BicubicSplineInterpolatingFunction(val, val, fval, dFdX, dFdY, d2FdXdY);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,424,"double x, y;"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,425,"double expected, result;"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,427,final double tol = 1e-12;
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,428,for (int i = 0; i < sz; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,429,x = val[i];
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,430,for (int j = 0; j < sz; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,431,y = val[j];
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,433,"expected = dfdX.value(x, y);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,434,"result = bcf.partialDerivativeX(x, y);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,435,"Assert.assertEquals(x + "" "" + y + "" dFdX"", expected, result, tol);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,437,"expected = dfdY.value(x, y);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,438,"result = bcf.partialDerivativeY(x, y);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,439,"Assert.assertEquals(x + "" "" + y + "" dFdY"", expected, result, tol);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,441,"expected = d2fdXdY.value(x, y);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,442,"result = bcf.partialDerivativeXY(x, y);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java,443,"Assert.assertEquals(x + "" "" + y + "" d2FdXdY"", expected, result, tol);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,17,package org.apache.commons.math.analysis.interpolation;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,19,import org.apache.commons.math.MathException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,20,import org.apache.commons.math.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,21,import org.apache.commons.math.analysis.TrivariateRealFunction;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,22,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,23,import org.junit.Test;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,26,* Testcase for the bicubic function.
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,28,"* @version $Revision: 821626 $ $Date: 2009-10-04 23:57:30 +0200 (Sun, 04 Oct 2009) $"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,30,public final class TricubicSplineInterpolatingFunctionTest {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,32,* Test preconditions.
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,34,@Test
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,35,public void testPreconditions() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,36,"double[] xval = new double[] {3, 4, 5, 6.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,37,"double[] yval = new double[] {-4, -3, -1, 2.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,38,"double[] zval = new double[] {-12, -8, -5.5, -3, 0, 2.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,39,double[][][] fval = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,41,"@SuppressWarnings(""unused"")"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,42,"TrivariateRealFunction tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,43,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,44,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,46,"double[] wxval = new double[] {3, 2, 5, 6.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,47,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,48,"tcf = new TricubicSplineInterpolatingFunction(wxval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,49,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,50,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,51,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,52,} catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,53,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,55,"double[] wyval = new double[] {-4, -1, -1, 2.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,56,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,57,"tcf = new TricubicSplineInterpolatingFunction(xval, wyval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,58,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,59,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,60,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,61,} catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,62,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,64,"double[] wzval = new double[] {-12, -8, -9, -3, 0, 2.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,65,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,66,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, wzval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,67,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,68,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,69,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,70,} catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,71,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,73,double[][][] wfval = new double[xval.length - 1][yval.length - 1][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,74,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,75,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,76,"wfval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,77,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,78,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,79,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,80,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,82,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,83,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,84,"fval, wfval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,85,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,86,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,87,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,88,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,90,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,91,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,92,"fval, fval, wfval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,93,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,94,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,95,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,96,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,98,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,99,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,100,"fval, fval, fval, wfval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,101,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,102,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,103,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,104,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,106,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,107,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,108,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,109,"wfval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,110,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,111,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,112,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,114,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,115,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,116,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,117,"fval, wfval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,118,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,119,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,120,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,122,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,123,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,124,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,125,"fval, fval, wfval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,126,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,127,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,128,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,130,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,131,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,132,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,133,"fval, fval, fval, wfval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,134,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,135,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,136,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,138,wfval = new double[xval.length][yval.length - 1][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,139,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,140,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,141,"wfval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,142,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,143,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,144,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,145,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,147,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,148,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,149,"fval, wfval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,150,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,151,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,152,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,153,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,155,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,156,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,157,"fval, fval, wfval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,158,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,159,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,160,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,161,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,163,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,164,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,165,"fval, fval, fval, wfval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,166,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,167,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,168,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,169,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,171,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,172,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,173,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,174,"wfval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,175,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,176,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,177,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,179,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,180,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,181,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,182,"fval, wfval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,183,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,184,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,185,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,187,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,188,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,189,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,190,"fval, fval, wfval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,191,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,192,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,193,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,195,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,196,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,197,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,198,"fval, fval, fval, wfval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,199,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,200,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,201,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,203,wfval = new double[xval.length][yval.length][zval.length - 1];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,204,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,205,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,206,"wfval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,207,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,208,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,209,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,210,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,212,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,213,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,214,"fval, wfval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,215,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,216,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,217,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,218,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,220,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,221,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,222,"fval, fval, wfval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,223,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,224,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,225,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,226,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,228,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,229,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,230,"fval, fval, fval, wfval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,231,"fval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,232,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,233,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,234,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,236,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,237,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,238,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,239,"wfval, fval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,240,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,241,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,242,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,244,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,245,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,246,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,247,"fval, wfval, fval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,248,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,249,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,250,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,252,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,253,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,254,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,255,"fval, fval, wfval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,256,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,257,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,258,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,260,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,261,"tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,262,"fval, fval, fval, fval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,263,"fval, fval, fval, wfval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,264,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,265,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,266,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,271,* Test for a plane.
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,272,* <p>
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,273,"*  f(x, y, z) = 2 x - 3 y - 4 z + 5"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,274,* </p>
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,276,@Test
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,277,public void testPlane() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,278,"double[] xval = new double[] {3, 4, 5, 6.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,279,"double[] yval = new double[] {-4, -3, -1, 2, 2.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,280,"double[] zval = new double[] {-12, -8, -5.5, -3, 0, 2.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,282,// Function values
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,283,TrivariateRealFunction f = new TrivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,284,"public double value(double x, double y, double z) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,285,return 2 * x - 3 * y - 4 * z + 5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,289,double[][][] fval = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,291,for (int i = 0; i < xval.length; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,292,for (int j = 0; j < yval.length; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,293,for (int k = 0; k < zval.length; k++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,294,"fval[i][j][k] = f.value(xval[i], yval[j], zval[k]);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,298,// Partial derivatives with respect to x
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,299,double[][][] dFdX = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,300,for (int i = 0; i < xval.length; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,301,for (int j = 0; j < yval.length; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,302,for (int k = 0; k < zval.length; k++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,303,dFdX[i][j][k] = 2;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,307,// Partial derivatives with respect to y
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,308,double[][][] dFdY = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,309,for (int i = 0; i < xval.length; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,310,for (int j = 0; j < yval.length; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,311,for (int k = 0; k < zval.length; k++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,312,dFdY[i][j][k] = -3;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,317,// Partial derivatives with respect to z
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,318,double[][][] dFdZ = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,319,for (int i = 0; i < xval.length; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,320,for (int j = 0; j < yval.length; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,321,for (int k = 0; k < zval.length; k++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,322,dFdZ[i][j][k] = -4;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,326,// Partial cross-derivatives
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,327,double[][][] d2FdXdY = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,328,double[][][] d2FdXdZ = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,329,double[][][] d2FdYdZ = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,330,double[][][] d3FdXdYdZ = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,331,for (int i = 0; i < xval.length; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,332,for (int j = 0; j < yval.length; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,333,for (int k = 0; k < zval.length; k++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,334,d2FdXdY[i][j][k] = 0;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,335,d2FdXdZ[i][j][k] = 0;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,336,d2FdYdZ[i][j][k] = 0;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,337,d3FdXdYdZ[i][j][k] = 0;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,342,"TrivariateRealFunction tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,343,"fval, dFdX, dFdY, dFdZ,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,344,"d2FdXdY, d2FdXdZ, d2FdYdZ,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,345,d3FdXdYdZ);
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,346,"double x, y, z;"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,347,"double expected, result;"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,349,x = 4;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,350,y = -3;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,351,z = 0;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,352,"expected = f.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,353,"result = tcf.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,354,"Assert.assertEquals(""On sample point"","
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,355,"expected, result, 1e-15);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,357,x = 4.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,358,y = -1.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,359,z = -4.25;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,360,"expected = f.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,361,"result = tcf.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,362,"Assert.assertEquals(""Half-way between sample points (middle of the patch)"","
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,363,"expected, result, 0.3);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,365,x = 3.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,366,y = -3.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,367,z = -10;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,368,"expected = f.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,369,"result = tcf.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,370,"Assert.assertEquals(""Half-way between sample points (border of the patch)"","
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,371,"expected, result, 0.3);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,375,* Sine wave.
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,376,* <p>
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,377,"*  f(x, y, z) = a cos [&omega; z - k<sub>y</sub> x - k<sub>y</sub> y]"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,378,* </p>
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,379,"* with A = 0.2, &omega; = 0.5, k<sub>x</sub> = 2, k<sub>y</sub> = 1."
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,381,@Test
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,382,public void testWave() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,383,"double[] xval = new double[] {3, 4, 5, 6.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,384,"double[] yval = new double[] {-4, -3, -1, 2, 2.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,385,"double[] zval = new double[] {-12, -8, -5.5, -3, 0, 4};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,387,final double a = 0.2;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,388,final double omega = 0.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,389,final double kx = 2;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,390,final double ky = 1;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,392,// Function values
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,393,TrivariateRealFunction f = new TrivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,394,"public double value(double x, double y, double z) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,395,return a * Math.cos(omega * z - kx * x - ky * y);
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,399,double[][][] fval = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,400,for (int i = 0; i < xval.length; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,401,for (int j = 0; j < yval.length; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,402,for (int k = 0; k < zval.length; k++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,403,"fval[i][j][k] = f.value(xval[i], yval[j], zval[k]);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,408,// Partial derivatives with respect to x
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,409,double[][][] dFdX = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,410,TrivariateRealFunction dFdX_f = new TrivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,411,"public double value(double x, double y, double z) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,412,return a * Math.sin(omega * z - kx * x - ky * y) * kx;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,415,for (int i = 0; i < xval.length; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,416,for (int j = 0; j < yval.length; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,417,for (int k = 0; k < zval.length; k++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,418,"dFdX[i][j][k] = dFdX_f.value(xval[i], yval[j], zval[k]);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,423,// Partial derivatives with respect to y
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,424,double[][][] dFdY = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,425,TrivariateRealFunction dFdY_f = new TrivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,426,"public double value(double x, double y, double z) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,427,return a * Math.sin(omega * z - kx * x - ky * y) * ky;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,430,for (int i = 0; i < xval.length; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,431,for (int j = 0; j < yval.length; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,432,for (int k = 0; k < zval.length; k++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,433,"dFdY[i][j][k] = dFdY_f.value(xval[i], yval[j], zval[k]);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,438,// Partial derivatives with respect to z
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,439,double[][][] dFdZ = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,440,TrivariateRealFunction dFdZ_f = new TrivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,441,"public double value(double x, double y, double z) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,442,return -a * Math.sin(omega * z - kx * x - ky * y) * omega;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,445,for (int i = 0; i < xval.length; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,446,for (int j = 0; j < yval.length; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,447,for (int k = 0; k < zval.length; k++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,448,"dFdZ[i][j][k] = dFdZ_f.value(xval[i], yval[j], zval[k]);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,453,"// Partial second derivatives w.r.t. (x, y)"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,454,double[][][] d2FdXdY = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,455,TrivariateRealFunction d2FdXdY_f = new TrivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,456,"public double value(double x, double y, double z) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,457,return -a * Math.cos(omega * z - kx * x - ky * y) * kx * ky;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,460,for (int i = 0; i < xval.length; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,461,for (int j = 0; j < yval.length; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,462,for (int k = 0; k < zval.length; k++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,463,"d2FdXdY[i][j][k] = d2FdXdY_f.value(xval[i], yval[j], zval[k]);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,468,"// Partial second derivatives w.r.t. (x, z)"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,469,double[][][] d2FdXdZ = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,470,TrivariateRealFunction d2FdXdZ_f = new TrivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,471,"public double value(double x, double y, double z) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,472,return a * Math.cos(omega * z - kx * x - ky * y) * kx * omega;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,475,for (int i = 0; i < xval.length; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,476,for (int j = 0; j < yval.length; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,477,for (int k = 0; k < zval.length; k++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,478,"d2FdXdZ[i][j][k] = d2FdXdZ_f.value(xval[i], yval[j], zval[k]);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,483,"// Partial second derivatives w.r.t. (y, z)"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,484,double[][][] d2FdYdZ = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,485,TrivariateRealFunction d2FdYdZ_f = new TrivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,486,"public double value(double x, double y, double z) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,487,return a * Math.cos(omega * z - kx * x - ky * y) * ky * omega;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,490,for (int i = 0; i < xval.length; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,491,for (int j = 0; j < yval.length; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,492,for (int k = 0; k < zval.length; k++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,493,"d2FdYdZ[i][j][k] = d2FdYdZ_f.value(xval[i], yval[j], zval[k]);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,498,// Partial third derivatives
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,499,double[][][] d3FdXdYdZ = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,500,TrivariateRealFunction d3FdXdYdZ_f = new TrivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,501,"public double value(double x, double y, double z) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,502,return a * Math.sin(omega * z - kx * x - ky * y) * kx * ky * omega;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,505,for (int i = 0; i < xval.length; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,506,for (int j = 0; j < yval.length; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,507,for (int k = 0; k < zval.length; k++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,508,"d3FdXdYdZ[i][j][k] = d3FdXdYdZ_f.value(xval[i], yval[j], zval[k]);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,513,"TrivariateRealFunction tcf = new TricubicSplineInterpolatingFunction(xval, yval, zval,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,514,"fval, dFdX, dFdY, dFdZ,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,515,"d2FdXdY, d2FdXdZ, d2FdYdZ,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,516,d3FdXdYdZ);
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,517,"double x, y, z;"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,518,"double expected, result;"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,520,x = 4;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,521,y = -3;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,522,z = 0;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,523,"expected = f.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,524,"result = tcf.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,525,"Assert.assertEquals(""On sample point"","
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,526,"expected, result, 1e-14);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,528,x = 4.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,529,y = -1.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,530,z = -4.25;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,531,"expected = f.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,532,"result = tcf.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,533,"Assert.assertEquals(""Half-way between sample points (middle of the patch)"","
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,534,"expected, result, 0.1);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,536,x = 3.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,537,y = -3.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,538,z = -10;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,539,"expected = f.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,540,"result = tcf.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,541,"Assert.assertEquals(""Half-way between sample points (border of the patch)"","
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java,542,"expected, result, 0.1);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,17,package org.apache.commons.math.analysis.interpolation;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,19,import org.apache.commons.math.MathException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,20,import org.apache.commons.math.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,21,import org.apache.commons.math.analysis.TrivariateRealFunction;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,22,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,23,import org.junit.Test;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,26,* Testcase for the tricubic interpolator.
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,28,* @version $Revision$ $Date$
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,30,public final class TricubicSplineInterpolatorTest {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,32,* Test preconditions.
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,34,@Test
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,35,public void testPreconditions() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,36,"double[] xval = new double[] {3, 4, 5, 6.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,37,"double[] yval = new double[] {-4, -3, -1, 2.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,38,"double[] zval = new double[] {-12, -8, -5.5, -3, 0, 2.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,39,double[][][] fval = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,41,TrivariateRealGridInterpolator interpolator = new TricubicSplineInterpolator();
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,43,"@SuppressWarnings(""unused"")"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,44,"TrivariateRealFunction p = interpolator.interpolate(xval, yval, zval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,46,"double[] wxval = new double[] {3, 2, 5, 6.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,47,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,48,"p = interpolator.interpolate(wxval, yval, zval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,49,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,50,} catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,51,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,54,"double[] wyval = new double[] {-4, -3, -1, -1};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,55,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,56,"p = interpolator.interpolate(xval, wyval, zval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,57,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,58,} catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,59,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,62,"double[] wzval = new double[] {-12, -8, -5.5, -3, -4, 2.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,63,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,64,"p = interpolator.interpolate(xval, yval, wzval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,65,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,66,} catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,67,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,70,double[][][] wfval = new double[xval.length][yval.length + 1][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,71,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,72,"p = interpolator.interpolate(xval, yval, zval, wfval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,73,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,74,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,75,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,77,wfval = new double[xval.length - 1][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,78,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,79,"p = interpolator.interpolate(xval, yval, zval, wfval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,80,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,81,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,82,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,84,wfval = new double[xval.length][yval.length][zval.length - 1];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,85,try {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,86,"p = interpolator.interpolate(xval, yval, zval, wfval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,87,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,88,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,89,// Expected
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,94,* Test of interpolator for a plane.
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,95,* <p>
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,96,"* f(x, y, z) = 2 x - 3 y - z + 5"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,98,@Test
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,99,public void testPlane() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,100,TrivariateRealFunction f = new TrivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,101,"public double value(double x, double y, double z) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,102,return 2 * x - 3 * y - z + 5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,106,TrivariateRealGridInterpolator interpolator = new TricubicSplineInterpolator();
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,108,"double[] xval = new double[] {3, 4, 5, 6.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,109,"double[] yval = new double[] {-4, -3, -1, 2, 2.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,110,"double[] zval = new double[] {-12, -8, -5.5, -3, 0, 2.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,111,double[][][] fval = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,112,for (int i = 0; i < xval.length; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,113,for (int j = 0; j < yval.length; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,114,for (int k = 0; k < zval.length; k++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,115,"fval[i][j][k] = f.value(xval[i], yval[j], zval[k]);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,120,"TrivariateRealFunction p = interpolator.interpolate(xval, yval, zval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,121,"double x, y, z;"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,122,"double expected, result;"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,124,x = 4;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,125,y = -3;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,126,z = 0;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,127,"expected = f.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,128,"result = p.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,129,"Assert.assertEquals(""On sample point"", expected, result, 1e-15);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,131,x = 4.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,132,y = -1.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,133,z = -4.25;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,134,"expected = f.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,135,"result = p.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,136,"Assert.assertEquals(""half-way between sample points (middle of the patch)"", expected, result, 0.3);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,138,x = 3.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,139,y = -3.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,140,z = -10;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,141,"expected = f.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,142,"result = p.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,143,"Assert.assertEquals(""half-way between sample points (border of the patch)"", expected, result, 0.3);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,147,* Test of interpolator for a sine wave.
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,148,* <p>
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,149,* <p>
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,150,"*  f(x, y, z) = a cos [&omega; z - k<sub>y</sub> x - k<sub>y</sub> y]"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,151,* </p>
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,152,"* with A = 0.2, &omega; = 0.5, k<sub>x</sub> = 2, k<sub>y</sub> = 1."
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,154,@Test
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,155,public void testWave() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,156,"double[] xval = new double[] {3, 4, 5, 6.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,157,"double[] yval = new double[] {-4, -3, -1, 2, 2.5};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,158,"double[] zval = new double[] {-12, -8, -5.5, -3, 0, 4};"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,160,final double a = 0.2;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,161,final double omega = 0.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,162,final double kx = 2;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,163,final double ky = 1;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,165,// Function values
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,166,TrivariateRealFunction f = new TrivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,167,"public double value(double x, double y, double z) {"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,168,return a * Math.cos(omega * z - kx * x - ky * y);
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,172,double[][][] fval = new double[xval.length][yval.length][zval.length];
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,173,for (int i = 0; i < xval.length; i++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,174,for (int j = 0; j < yval.length; j++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,175,for (int k = 0; k < zval.length; k++) {
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,176,"fval[i][j][k] = f.value(xval[i], yval[j], zval[k]);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,181,TrivariateRealGridInterpolator interpolator = new TricubicSplineInterpolator();
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,183,"TrivariateRealFunction p = interpolator.interpolate(xval, yval, zval, fval);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,184,"double x, y, z;"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,185,"double expected, result;"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,187,x = 4;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,188,y = -3;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,189,z = 0;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,190,"expected = f.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,191,"result = p.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,192,"Assert.assertEquals(""On sample point"","
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,193,"expected, result, 1e-12);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,195,x = 4.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,196,y = -1.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,197,z = -4.25;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,198,"expected = f.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,199,"result = p.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,200,"Assert.assertEquals(""Half-way between sample points (middle of the patch)"","
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,201,"expected, result, 0.1);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,203,x = 3.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,204,y = -3.5;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,205,z = -10;
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,206,"expected = f.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,207,"result = p.value(x, y, z);"
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,208,"Assert.assertEquals(""Half-way between sample points (border of the patch)"","
True,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java,209,"expected, result, 0.1);"
