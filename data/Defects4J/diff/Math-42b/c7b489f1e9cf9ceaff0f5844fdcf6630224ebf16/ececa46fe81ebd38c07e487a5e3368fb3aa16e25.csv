is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,74,"{ ""Overflow trying to convert {0} to fraction ({1}/{2})"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,75,"""D\u00e9passement de capacit\u00e9 lors de la conversion de {0} en fraction ({1}/{2})"" },"
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,37,rivate static final long serialVersionUID = 5463066929751300926L;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,37,private static final long serialVersionUID = -8958519416450949235L;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,131,long overflow = Integer.MAX_VALUE;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,132,nt a0 = (int)Math.floor(r0);
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,133,long a0 = (long)Math.floor(r0);
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,134,if (a0 > overflow) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,135,"throw new FractionConversionException(value, a0, 1l);"
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,137,his.numerator = a0;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,141,this.numerator = (int) a0;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,142,nt p0 = 1;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,143,nt q0 = 0;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,144,nt p1 = a0;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,145,nt q1 = 1;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,147,nt p2 = 0;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,148,nt q2 = 1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,146,long p0 = 1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,147,long q0 = 0;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,148,long p1 = a0;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,149,long q1 = 1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,151,long p2 = 0;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,152,long q2 = 1;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,155,nt a1 = (int)Math.floor(r1);
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,159,long a1 = (long)Math.floor(r1);
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,162,if ((p2 > overflow) || (q2 > overflow)) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,163,"throw new FractionConversionException(value, p2, q2);"
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,177,his.numerator = p2;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,178,his.denominator = q2;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,184,this.numerator = (int) p2;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,185,this.denominator = (int) q2;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,180,his.numerator = p1;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,181,his.denominator = q1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,187,this.numerator = (int) p1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,188,this.denominator = (int) q1;
False,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,20,mport org.apache.commons.math.MaxIterationsExceededException;
True,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,20,import org.apache.commons.math.ConvergenceException;
False,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,28,ublic class FractionConversionException extends MaxIterationsExceededException {
True,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,28,public class FractionConversionException extends ConvergenceException {
False,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,31,rivate static final long serialVersionUID = 4588659344016668813L;
True,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,31,private static final long serialVersionUID = -4661812640132576263L;
False,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,40,"uper(maxIterations,"
False,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,41,"Unable to convert {0} to fraction after {1} iterations"","
True,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,40,"super(""Unable to convert {0} to fraction after {1} iterations"","
True,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,45,* Constructs an exception with specified formatted detail message.
True,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,46,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,47,* @param value double value to convert
True,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,48,* @param p current numerator
True,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,49,* @param q current denominator
True,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,51,"public FractionConversionException(double value, long p, long q) {"
True,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,52,"super(""Overflow trying to convert {0} to fraction ({1}/{2})"","
True,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,53,"new Object[] { new Double(value), new Long(p), new Long(q) });"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,136,public void testIntegerOverflow() {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,137,checkIntegerOverflow(0.75000000001455192);
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,138,checkIntegerOverflow(1.0e10);
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,141,private void checkIntegerOverflow(double a) {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,142,try {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,143,"new Fraction(a, 1.0e-12, 1000);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,144,"fail(""an exception should have been thrown"");"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,145,} catch (ConvergenceException ce) {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,146,// expected behavior
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,147,} catch (Exception e) {
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,148,"fail(""wrong exception caught"");"
