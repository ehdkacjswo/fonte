is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,125,ublic void testIsMonotone() {
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,126,"f(MathArrays.isMonotonic(new double[] { -15, -5.5, -1, -1, 2, 15 },"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,127,"athArrays.OrderDirection.INCREASING, true)) {"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,128,"ssert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,131,"f(MathArrays.isMonotonic(new double[] { -15, -5.5, -1, -2, 2 },"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,132,"athArrays.OrderDirection.INCREASING, false)) {"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,133,"ssert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,136,"f(MathArrays.isMonotonic(new double[] { 3, 3, -5.5, -11, -27.5 },"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,137,"athArrays.OrderDirection.DECREASING, true)) {"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,138,"ssert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,140,"f( MathArrays.isMonotonic(new double[] { 3, -1, 0, -5.5, -11, -27.5 },"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,141,"athArrays.OrderDirection.DECREASING, false)) {"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,142,"ssert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,125,public void testIsMonotonic() {
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,126,"Assert.assertFalse(MathArrays.isMonotonic(new double[] { -15, -5.5, -1, -1, 2, 15 },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,127,"MathArrays.OrderDirection.INCREASING, true));"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,128,"Assert.assertTrue(MathArrays.isMonotonic(new double[] { -15, -5.5, -1, 0, 2, 15 },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,129,"MathArrays.OrderDirection.INCREASING, true));"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,130,"Assert.assertFalse(MathArrays.isMonotonic(new double[] { -15, -5.5, -1, -2, 2 },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,131,"MathArrays.OrderDirection.INCREASING, false));"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,132,"Assert.assertTrue(MathArrays.isMonotonic(new double[] { -15, -5.5, -1, -1, 2 },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,133,"MathArrays.OrderDirection.INCREASING, false));"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,134,"Assert.assertFalse(MathArrays.isMonotonic(new double[] { 3, 3, -5.5, -11, -27.5 },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,135,"MathArrays.OrderDirection.DECREASING, true));"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,136,"Assert.assertTrue(MathArrays.isMonotonic(new double[] { 3, 2, -5.5, -11, -27.5 },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,137,"MathArrays.OrderDirection.DECREASING, true));"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,138,"Assert.assertFalse(MathArrays.isMonotonic(new double[] { 3, -1, 0, -5.5, -11, -27.5 },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,139,"MathArrays.OrderDirection.DECREASING, false));"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,140,"Assert.assertTrue(MathArrays.isMonotonic(new double[] { 3, 0, 0, -5.5, -11, -27.5 },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,141,"MathArrays.OrderDirection.DECREASING, false));"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,147,ublic void testIsMonotoneComparable() {
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,148,"f (MathArrays.isMonotonic(new Double[] { new Double(-15),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,149,"ew Double(-5.5),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,150,"ew Double(-1),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,151,"ew Double(-1),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,152,"ew Double(2),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,153,"ew Double(15)},"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,154,"athArrays.OrderDirection.INCREASING, true)) {"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,155,"ssert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,158,"f (MathArrays.isMonotonic(new Double[] { new Double(-15),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,159,"ew Double(-5.5),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,160,"ew Double(-1),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,161,"ew Double(-2),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,162,"ew Double(2)},"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,163,"athArrays.OrderDirection.INCREASING, false)) {"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,164,"ssert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,167,"f (MathArrays.isMonotonic(new Double[] { new Double(3),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,168,"ew Double(3),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,169,"ew Double(-5.5),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,170,"ew Double(-11),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,171,"ew Double(-27.5)},"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,172,"athArrays.OrderDirection.DECREASING, true)) {"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,173,"ssert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,175,"f (MathArrays.isMonotonic(new Double[] {new Double(3),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,176,"ew Double(-1),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,177,"ew Double(0),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,178,"ew Double(-5.5),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,179,"ew Double(-11),"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,180,"ew Double(-27.5)},"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,181,"athArrays.OrderDirection.DECREASING, false)) {"
False,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,182,"ssert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,145,public void testIsMonotonicComparable() {
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,146,"Assert.assertFalse(MathArrays.isMonotonic(new Double[] { new Double(-15),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,147,"new Double(-5.5),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,148,"new Double(-1),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,149,"new Double(-1),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,150,"new Double(2),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,151,"new Double(15) },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,152,"MathArrays.OrderDirection.INCREASING, true));"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,153,"Assert.assertTrue(MathArrays.isMonotonic(new Double[] { new Double(-15),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,154,"new Double(-5.5),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,155,"new Double(-1),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,156,"new Double(0),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,157,"new Double(2),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,158,"new Double(15) },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,159,"MathArrays.OrderDirection.INCREASING, true));"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,160,"Assert.assertFalse(MathArrays.isMonotonic(new Double[] { new Double(-15),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,161,"new Double(-5.5),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,162,"new Double(-1),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,163,"new Double(-2),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,164,"new Double(2) },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,165,"MathArrays.OrderDirection.INCREASING, false));"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,166,"Assert.assertTrue(MathArrays.isMonotonic(new Double[] { new Double(-15),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,167,"new Double(-5.5),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,168,"new Double(-1),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,169,"new Double(-1),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,170,"new Double(2) },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,171,"MathArrays.OrderDirection.INCREASING, false));"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,172,"Assert.assertFalse(MathArrays.isMonotonic(new Double[] { new Double(3),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,173,"new Double(3),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,174,"new Double(-5.5),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,175,"new Double(-11),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,176,"new Double(-27.5) },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,177,"MathArrays.OrderDirection.DECREASING, true));"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,178,"Assert.assertTrue(MathArrays.isMonotonic(new Double[] { new Double(3),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,179,"new Double(2),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,180,"new Double(-5.5),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,181,"new Double(-11),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,182,"new Double(-27.5) },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,183,"MathArrays.OrderDirection.DECREASING, true));"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,184,"Assert.assertFalse(MathArrays.isMonotonic(new Double[] { new Double(3),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,185,"new Double(-1),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,186,"new Double(0),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,187,"new Double(-5.5),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,188,"new Double(-11),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,189,"new Double(-27.5) },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,190,"MathArrays.OrderDirection.DECREASING, false));"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,191,"Assert.assertTrue(MathArrays.isMonotonic(new Double[] { new Double(3),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,192,"new Double(0),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,193,"new Double(0),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,194,"new Double(-5.5),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,195,"new Double(-11),"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,196,"new Double(-27.5) },"
True,src/test/java/org/apache/commons/math/util/MathArraysTest.java,src/test/java/org/apache/commons/math/util/MathArraysTest.java,197,"MathArrays.OrderDirection.DECREASING, false));"
