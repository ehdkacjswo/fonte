is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,65,"org.apache.commons.math.distribution.DistributionFactoryImpl"");"
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,65,"""org.apache.commons.math.distribution.TestFactoryImpl"");"
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,14,* limitations under the License.
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,16,package org.apache.commons.math.stat.inference;
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,17,import org.apache.commons.discovery.tools.DiscoverClass;
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,20,* Abstract factory to create inference test instances.
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,22,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,24,public abstract class TestFactory {
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,26,* Default constructor.
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,28,protected TestFactory() {
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,29,super();
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,33,* Create an instance of a <code>TestFactory</code>
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,35,* @return a new factory.
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,37,public static TestFactory newInstance() {
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,38,TestFactory factory = null;
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,39,try {
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,40,DiscoverClass dc = new DiscoverClass();
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,41,factory = (TestFactory) dc.newInstance(
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,42,"TestFactory.class,"
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,43,"""org.apache.commons.math.stat.inference.TestFactoryImpl"");"
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,44,} catch(Throwable t) {
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,45,return new TestFactoryImpl();
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,47,return factory;
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,51,* Create a TTest instance.
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,53,* @return a new TTest instance
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,55,public abstract TTest createTTest();
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,58,* Create a ChiSquareTest instance.
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,60,* @return a new ChiSquareTest instance
True,src/java/org/apache/commons/math/stat/inference/TestFactory.java,src/java/org/apache/commons/math/stat/inference/TestFactory.java,62,public abstract ChiSquareTest createChiSquareTest();
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,14,* limitations under the License.
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,16,package org.apache.commons.math.stat.inference;
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,19,* A concrete inference test factory.  This is the default factory used by
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,20,* Commons-Math.
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,22,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,24,public class TestFactoryImpl extends TestFactory {
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,27,* Default constructor.
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,29,public TestFactoryImpl() {
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,30,super();
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,34,* Create a TTest instance.
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,36,* @return a new TTest instance
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,38,public TTest createTTest() {
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,39,return new TTestImpl();
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,43,* Create a ChiSquareTest instance.
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,45,* @return a new ChiSquareTest instance
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,47,public ChiSquareTest createChiSquareTest() {
True,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java,48,return new ChiSquareTestImpl();
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,14,* limitations under the License.
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,16,package org.apache.commons.math.stat.inference;
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,18,import org.apache.commons.math.MathException;
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,19,import org.apache.commons.math.stat.descriptive.StatisticalSummary;
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,22,* A collection of static methods to create inference test instances or to
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,23,* perform inference tests.
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,25,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,27,public class TestUtils  {
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,29,* Prevent instantiation.
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,31,protected TestUtils() {
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,32,super();
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,35,/** Singleton TTest instance initialized using configured factory */
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,36,private static TTest tTest = TestFactory.newInstance().createTTest();
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,38,/** Singleton ChiSquareTest instance initialized using configured factory */
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,39,private static ChiSquareTest chiSquareTest =
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,40,TestFactory.newInstance().createChiSquareTest();
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,43,* Return a (singleton) TTest instance.  Does not create a new instance.
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,45,* @return a TTest instance
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,47,public static TTest getTTest() {
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,48,return tTest;
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,52,* Return a (singleton) ChiSquareTest instance.  Does not create a new instance.
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,54,* @return a ChiSquareTest instance
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,56,public static ChiSquareTest getChiSquareTest() {
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,57,return chiSquareTest;
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,61,"* @see org.apache.commons.math.stat.inference.TTest#homoscedasticT(double[], double[])"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,63,"public static double homoscedasticT(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,64,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,65,"return tTest.homoscedasticT(sample1, sample2);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,69,"* @see org.apache.commons.math.stat.inference.TTest#homoscedasticT(org.apache.commons.math.stat.descriptive.StatisticalSummary, org.apache.commons.math.stat.descriptive.StatisticalSummary)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,71,"public static double homoscedasticT(StatisticalSummary sampleStats1,"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,72,StatisticalSummary sampleStats2)
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,73,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,74,"return tTest.homoscedasticT(sampleStats1, sampleStats2);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,78,"* @see org.apache.commons.math.stat.inference.TTest#homoscedasticTTest(double[], double[], double)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,80,"public static boolean homoscedasticTTest(double[] sample1, double[] sample2,"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,81,double alpha)
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,82,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,83,"return tTest. homoscedasticTTest(sample1, sample2, alpha);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,87,"* @see org.apache.commons.math.stat.inference.TTest#homoscedasticTTest(double[], double[])"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,89,"public static double homoscedasticTTest(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,90,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,91,"return tTest.homoscedasticTTest(sample1, sample2);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,95,"* @see org.apache.commons.math.stat.inference.TTest#homoscedasticTTest(org.apache.commons.math.stat.descriptive.StatisticalSummary, org.apache.commons.math.stat.descriptive.StatisticalSummary)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,97,"public static double homoscedasticTTest(StatisticalSummary sampleStats1,"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,98,StatisticalSummary sampleStats2)
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,99,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,100,"return tTest.homoscedasticTTest(sampleStats1, sampleStats2);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,104,"* @see org.apache.commons.math.stat.inference.TTest#pairedT(double[], double[])"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,106,"public static double pairedT(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,107,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,108,"return tTest.pairedT(sample1, sample2);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,112,"* @see org.apache.commons.math.stat.inference.TTest#pairedTTest(double[], double[], double)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,114,"public static boolean pairedTTest(double[] sample1, double[] sample2,"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,115,double alpha)
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,116,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,117,"return tTest.pairedTTest(sample1, sample2, alpha);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,121,"* @see org.apache.commons.math.stat.inference.TTest#pairedTTest(double[], double[])"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,123,"public static double pairedTTest(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,124,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,125,"return tTest.pairedTTest(sample1, sample2);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,129,"* @see org.apache.commons.math.stat.inference.TTest#t(double, double[])"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,131,"public static double t(double mu, double[] observed)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,132,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,133,"return tTest.t(mu, observed);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,137,"* @see org.apache.commons.math.stat.inference.TTest#t(double, org.apache.commons.math.stat.descriptive.StatisticalSummary)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,139,"public static double t(double mu, StatisticalSummary sampleStats)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,140,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,141,"return tTest.t(mu, sampleStats);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,145,"* @see org.apache.commons.math.stat.inference.TTest#t(double[], double[])"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,147,"public static double t(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,148,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,149,"return tTest.t(sample1, sample2);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,153,"* @see org.apache.commons.math.stat.inference.TTest#t(org.apache.commons.math.stat.descriptive.StatisticalSummary, org.apache.commons.math.stat.descriptive.StatisticalSummary)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,155,"public static double t(StatisticalSummary sampleStats1,"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,156,StatisticalSummary sampleStats2)
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,157,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,158,"return tTest.t(sampleStats1, sampleStats2);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,162,"* @see org.apache.commons.math.stat.inference.TTest#tTest(double, double[], double)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,164,"public static boolean tTest(double mu, double[] sample, double alpha)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,165,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,166,"return tTest.tTest(mu, sample, alpha);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,170,"* @see org.apache.commons.math.stat.inference.TTest#tTest(double, double[])"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,172,"public static double tTest(double mu, double[] sample)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,173,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,174,"return tTest.tTest(mu, sample);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,178,"* @see org.apache.commons.math.stat.inference.TTest#tTest(double, org.apache.commons.math.stat.descriptive.StatisticalSummary, double)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,180,"public static boolean tTest(double mu, StatisticalSummary sampleStats,"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,181,double alpha)
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,182,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,183,"return tTest. tTest(mu, sampleStats, alpha);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,187,"* @see org.apache.commons.math.stat.inference.TTest#tTest(double, org.apache.commons.math.stat.descriptive.StatisticalSummary)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,189,"public static double tTest(double mu, StatisticalSummary sampleStats)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,190,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,191,"return tTest.tTest(mu, sampleStats);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,195,"* @see org.apache.commons.math.stat.inference.TTest#tTest(double[], double[], double)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,197,"public static boolean tTest(double[] sample1, double[] sample2, double alpha)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,198,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,199,"return tTest.tTest(sample1, sample2, alpha);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,203,"* @see org.apache.commons.math.stat.inference.TTest#tTest(double[], double[])"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,205,"public static double tTest(double[] sample1, double[] sample2)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,206,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,207,"return tTest.tTest(sample1, sample2);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,211,"* @see org.apache.commons.math.stat.inference.TTest#tTest(org.apache.commons.math.stat.descriptive.StatisticalSummary, org.apache.commons.math.stat.descriptive.StatisticalSummary, double)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,213,"public static boolean tTest(StatisticalSummary sampleStats1,"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,214,"StatisticalSummary sampleStats2, double alpha)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,215,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,216,"return tTest. tTest(sampleStats1, sampleStats2, alpha);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,220,"* @see org.apache.commons.math.stat.inference.TTest#tTest(org.apache.commons.math.stat.descriptive.StatisticalSummary, org.apache.commons.math.stat.descriptive.StatisticalSummary)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,222,"public static double tTest(StatisticalSummary sampleStats1,"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,223,StatisticalSummary sampleStats2)
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,224,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,225,"return tTest.tTest(sampleStats1, sampleStats2);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,229,"* @see org.apache.commons.math.stat.inference.ChiSquareTest#chiSquare(double[], long[])"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,231,"public static double chiSquare(double[] expected, long[] observed)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,232,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,233,"return chiSquareTest.chiSquare(expected, observed);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,237,* @see org.apache.commons.math.stat.inference.ChiSquareTest#chiSquare(long[][])
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,239,public static double chiSquare(long[][] counts)
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,240,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,241,return chiSquareTest.chiSquare(counts);
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,245,"* @see org.apache.commons.math.stat.inference.ChiSquareTest#chiSquareTest(double[], long[], double)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,247,"public static boolean chiSquareTest(double[] expected, long[] observed,"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,248,double alpha)
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,249,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,250,"return chiSquareTest.chiSquareTest(expected, observed, alpha);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,254,"* @see org.apache.commons.math.stat.inference.ChiSquareTest#chiSquareTest(double[], long[])"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,256,"public static double chiSquareTest(double[] expected, long[] observed)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,257,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,258,"return chiSquareTest.chiSquareTest(expected, observed);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,262,"* @see org.apache.commons.math.stat.inference.ChiSquareTest#chiSquareTest(long[][], double)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,264,"public static boolean chiSquareTest(long[][] counts, double alpha)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,265,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,266,"return chiSquareTest. chiSquareTest(counts, alpha);"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,270,* @see org.apache.commons.math.stat.inference.ChiSquareTest#chiSquareTest(long[][])
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,272,public static double chiSquareTest(long[][] counts)
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,273,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,274,return chiSquareTest. chiSquareTest(counts);
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,16,package org.apache.commons.math.stat.inference;
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,17,import junit.framework.Test;
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,18,import junit.framework.TestSuite;
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,21,* Test cases for the ChiSquareTestFactory.
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,23,* @version $Revision$ $Date$
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,26,public class ChiSquareFactoryTest extends ChiSquareTestTest {
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,28,public ChiSquareFactoryTest(String name) {
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,29,super(name);
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,32,public void setUp() {
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,33,testStatistic = TestUtils.getChiSquareTest();
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,36,public static Test suite() {
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,37,TestSuite suite = new TestSuite(ChiSquareFactoryTest.class);
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,38,"suite.setName(""ChiSquareTestFactory Tests"");"
True,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareFactoryTest.java,39,return suite;
False,src/test/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,28,ublic final class ChiSquareTestTest extends TestCase {
True,src/test/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,28,public class ChiSquareTestTest extends TestCase {
False,src/test/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,30,rivate ChiSquareTestImpl testStatistic = new ChiSquareTestImpl();
True,src/test/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,src/test/org/apache/commons/math/stat/inference/ChiSquareTestTest.java,30,protected ChiSquareTest testStatistic = new ChiSquareTestImpl();
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,16,package org.apache.commons.math.stat.inference;
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,17,import junit.framework.Test;
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,18,import junit.framework.TestSuite;
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,21,* Test cases for the TTestTestFactory.
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,23,* @version $Revision$ $Date$
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,26,public class TTestFactoryTest extends TTestTest {
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,28,public TTestFactoryTest(String name) {
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,29,super(name);
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,32,public void setUp() {
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,33,testStatistic = TestUtils.getTTest();
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,36,public static Test suite() {
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,37,TestSuite suite = new TestSuite(TTestFactoryTest.class);
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,38,"suite.setName(""TTestFactory Tests"");"
True,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,src/test/org/apache/commons/math/stat/inference/TTestFactoryTest.java,39,return suite;
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,29,ublic final class TTestTest extends TestCase {
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,29,public class TTestTest extends TestCase {
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,31,rivate TTestImpl testStatistic = new TTestImpl();
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,31,protected TTest testStatistic = new TTestImpl();
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,16,package org.apache.commons.math.stat.inference;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,18,import junit.framework.Test;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,19,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,20,import junit.framework.TestSuite;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,21,import org.apache.commons.math.stat.descriptive.SummaryStatistics;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,23,* Test cases for the TestUtils class.
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,25,* @version $Revision$ $Date$
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,28,public class TestUtilsTest extends TestCase {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,30,public TestUtilsTest(String name) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,31,super(name);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,34,public void setUp() {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,37,public static Test suite() {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,38,TestSuite suite = new TestSuite(TestUtilsTest.class);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,39,"suite.setName(""TestUtils Tests"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,40,return suite;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,43,public void testChiSquare() throws Exception {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,45,// Target values computed using R version 1.8.1
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,46,// Some assembly required ;-)
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,47,//      Use sum((obs - exp)^2/exp) for the chi-square statistic and
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,48,"//      1 - pchisq(sum((obs - exp)^2/exp), length(obs) - 1) for the p-value"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,50,"long[] observed = {10, 9, 11};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,51,"double[] expected = {10, 10, 10};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,52,"assertEquals(""chi-square statistic"", 0.2,  TestUtils.chiSquare(expected, observed), 10E-12);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,53,"assertEquals(""chi-square p-value"", 0.904837418036, TestUtils.chiSquareTest(expected, observed), 1E-10);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,55,"long[] observed1 = { 500, 623, 72, 70, 31 };"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,56,"double[] expected1 = { 485, 541, 82, 61, 37 };"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,57,"assertEquals( ""chi-square test statistic"", 16.4131070362, TestUtils.chiSquare(expected1, observed1), 1E-10);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,58,"assertEquals(""chi-square p-value"", 0.002512096, TestUtils.chiSquareTest(expected1, observed1), 1E-9);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,59,"assertTrue(""chi-square test reject"", TestUtils.chiSquareTest(expected1, observed1, 0.003));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,60,"assertTrue(""chi-square test accept"", !TestUtils.chiSquareTest(expected1, observed1, 0.002));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,62,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,63,"TestUtils.chiSquareTest(expected1, observed1, 95);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,64,"fail(""alpha out of range, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,65,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,66,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,69,long[] tooShortObs = { 0 };
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,70,double[] tooShortEx = { 1 };
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,71,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,72,"TestUtils.chiSquare(tooShortEx, tooShortObs);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,73,"fail(""arguments too short, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,74,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,75,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,78,// unmatched arrays
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,79,"long[] unMatchedObs = { 0, 1, 2, 3 };"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,80,"double[] unMatchedEx = { 1, 1, 2 };"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,81,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,82,"TestUtils.chiSquare(unMatchedEx, unMatchedObs);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,83,"fail(""arrays have different lengths, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,84,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,85,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,88,// 0 expected count
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,89,expected[0] = 0;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,90,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,91,"TestUtils.chiSquareTest(expected, observed, .01);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,92,"fail(""bad expected count, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,93,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,94,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,97,// negative observed count
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,98,expected[0] = 1;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,99,observed[0] = -1;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,100,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,101,"TestUtils.chiSquareTest(expected, observed, .01);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,102,"fail(""bad expected count, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,103,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,104,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,109,public void testChiSquareIndependence() throws Exception {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,111,// Target values computed using R version 1.8.1
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,113,"long[][] counts = { {40, 22, 43}, {91, 21, 28}, {60, 10, 22}};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,114,"assertEquals( ""chi-square test statistic"", 22.709027688, TestUtils.chiSquare(counts), 1E-9);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,115,"assertEquals(""chi-square p-value"", 0.000144751460134, TestUtils.chiSquareTest(counts), 1E-9);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,116,"assertTrue(""chi-square test reject"", TestUtils.chiSquareTest(counts, 0.0002));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,117,"assertTrue(""chi-square test accept"", !TestUtils.chiSquareTest(counts, 0.0001));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,119,"long[][] counts2 = {{10, 15}, {30, 40}, {60, 90} };"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,120,"assertEquals( ""chi-square test statistic"", 0.168965517241, TestUtils.chiSquare(counts2), 1E-9);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,121,"assertEquals(""chi-square p-value"",0.918987499852, TestUtils.chiSquareTest(counts2), 1E-9);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,122,"assertTrue(""chi-square test accept"", !TestUtils.chiSquareTest(counts2, 0.1));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,124,// ragged input array
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,125,"long[][] counts3 = { {40, 22, 43}, {91, 21, 28}, {60, 10}};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,126,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,127,TestUtils.chiSquare(counts3);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,128,"fail(""Expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,129,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,130,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,133,// insufficient data
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,134,"long[][] counts4 = {{40, 22, 43}};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,135,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,136,TestUtils.chiSquare(counts4);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,137,"fail(""Expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,138,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,139,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,141,"long[][] counts5 = {{40}, {40}, {30}, {10}};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,142,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,143,TestUtils.chiSquare(counts5);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,144,"fail(""Expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,145,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,146,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,149,// negative counts
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,150,"long[][] counts6 = {{10, -2}, {30, 40}, {60, 90} };"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,151,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,152,TestUtils.chiSquare(counts6);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,153,"fail(""Expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,154,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,155,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,158,// bad alpha
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,159,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,160,"TestUtils.chiSquareTest(counts, 0);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,161,"fail(""Expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,162,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,163,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,167,public void testChiSquareLargeTestStatistic() throws Exception {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,168,double[] exp = new double[] {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,169,"3389119.5, 649136.6, 285745.4, 25357364.76, 11291189.78, 543628.0,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,170,"232921.0, 437665.75"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,173,long[] obs = new long[] {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,174,"2372383, 584222, 257170, 17750155, 7903832, 489265, 209628, 393899"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,176,org.apache.commons.math.stat.inference.ChiSquareTestImpl csti =
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,177,new org.apache.commons.math.stat.inference.ChiSquareTestImpl();
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,178,"double cst = csti.chiSquareTest(exp, obs);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,179,"assertEquals(""chi-square p-value"", 0.0, cst, 1E-3);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,180,"assertEquals( ""chi-square test statistic"","
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,181,"3624883.342907764, TestUtils.chiSquare(exp, obs), 1E-9);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,184,/** Contingency table containing zeros - PR # 32531 */
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,185,public void testChiSquareZeroCount() throws Exception {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,186,// Target values computed using R version 1.8.1
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,187,"long[][] counts = { {40, 0, 4}, {91, 1, 2}, {60, 2, 0}};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,188,"assertEquals( ""chi-square test statistic"", 9.67444662263,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,189,"TestUtils.chiSquare(counts), 1E-9);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,190,"assertEquals(""chi-square p-value"", 0.0462835770603,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,191,"TestUtils.chiSquareTest(counts), 1E-9);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,194,private double[] tooShortObs = { 1.0 };
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,195,private double[] nullObserved = null;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,196,private double[] emptyObs = {};
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,197,private SummaryStatistics emptyStats = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,198,private SummaryStatistics nullStats = null;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,199,SummaryStatistics tooShortStats = null;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,201,public void testOneSampleT() throws Exception {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,202,double[] observed =
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,203,"{93.0, 103.0, 95.0, 101.0, 91.0, 105.0, 96.0, 94.0, 101.0,  88.0, 98.0, 94.0, 101.0, 92.0, 95.0 };"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,204,double mu = 100.0;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,205,SummaryStatistics sampleStats = null;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,206,sampleStats = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,207,for (int i = 0; i < observed.length; i++) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,208,sampleStats.addValue(observed[i]);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,211,// Target comparison values computed using R version 1.8.1 (Linux version)
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,212,"assertEquals(""t statistic"",  -2.81976445346,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,213,"TestUtils.t(mu, observed), 10E-10);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,214,"assertEquals(""t statistic"",  -2.81976445346,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,215,"TestUtils.t(mu, sampleStats), 10E-10);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,216,"assertEquals(""p value"", 0.0136390585873,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,217,"TestUtils.tTest(mu, observed), 10E-10);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,218,"assertEquals(""p value"", 0.0136390585873,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,219,"TestUtils.tTest(mu, sampleStats), 10E-10);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,221,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,222,"TestUtils.t(mu, nullObserved);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,223,"fail(""arguments too short, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,224,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,225,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,228,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,229,"TestUtils.t(mu, nullStats);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,230,"fail(""arguments too short, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,231,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,232,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,235,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,236,"TestUtils.t(mu, emptyObs);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,237,"fail(""arguments too short, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,238,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,239,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,242,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,243,"TestUtils.t(mu, emptyStats);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,244,"fail(""arguments too short, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,245,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,246,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,249,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,250,"TestUtils.t(mu, tooShortObs);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,251,"fail(""insufficient data to compute t statistic, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,252,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,253,// exptected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,255,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,256,"TestUtils.tTest(mu, tooShortObs);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,257,"fail(""insufficient data to perform t test, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,258,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,259,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,262,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,263,"TestUtils.t(mu, tooShortStats);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,264,"fail(""insufficient data to compute t statistic, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,265,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,266,// exptected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,268,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,269,"TestUtils.tTest(mu, tooShortStats);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,270,"fail(""insufficient data to perform t test, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,271,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,272,// exptected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,276,public void testOneSampleTTest() throws Exception {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,277,double[] oneSidedP =
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,278,"{2d, 0d, 6d, 6d, 3d, 3d, 2d, 3d, -6d, 6d, 6d, 6d, 3d, 0d, 1d, 1d, 0d, 2d, 3d, 3d };"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,279,SummaryStatistics oneSidedPStats = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,280,for (int i = 0; i < oneSidedP.length; i++) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,281,oneSidedPStats.addValue(oneSidedP[i]);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,283,// Target comparison values computed using R version 1.8.1 (Linux version)
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,284,"assertEquals(""one sample t stat"", 3.86485535541,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,285,"TestUtils.t(0d, oneSidedP), 10E-10);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,286,"assertEquals(""one sample t stat"", 3.86485535541,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,287,"TestUtils.t(0d, oneSidedPStats),1E-10);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,288,"assertEquals(""one sample p value"", 0.000521637019637,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,289,"TestUtils.tTest(0d, oneSidedP) / 2d, 10E-10);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,290,"assertEquals(""one sample p value"", 0.000521637019637,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,291,"TestUtils.tTest(0d, oneSidedPStats) / 2d, 10E-5);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,292,"assertTrue(""one sample t-test reject"", TestUtils.tTest(0d, oneSidedP, 0.01));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,293,"assertTrue(""one sample t-test reject"", TestUtils.tTest(0d, oneSidedPStats, 0.01));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,294,"assertTrue(""one sample t-test accept"", !TestUtils.tTest(0d, oneSidedP, 0.0001));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,295,"assertTrue(""one sample t-test accept"", !TestUtils.tTest(0d, oneSidedPStats, 0.0001));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,297,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,298,"TestUtils.tTest(0d, oneSidedP, 95);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,299,"fail(""alpha out of range, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,300,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,301,// exptected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,304,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,305,"TestUtils.tTest(0d, oneSidedPStats, 95);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,306,"fail(""alpha out of range, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,307,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,308,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,313,public void testTwoSampleTHeterscedastic() throws Exception {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,314,"double[] sample1 = { 7d, -4d, 18d, 17d, -3d, -5d, 1d, 10d, 11d, -2d };"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,315,"double[] sample2 = { -1d, 12d, -1d, -3d, 3d, -5d, 5d, 2d, -11d, -1d, -3d };"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,316,SummaryStatistics sampleStats1 = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,317,for (int i = 0; i < sample1.length; i++) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,318,sampleStats1.addValue(sample1[i]);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,320,SummaryStatistics sampleStats2 = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,321,for (int i = 0; i < sample2.length; i++) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,322,sampleStats2.addValue(sample2[i]);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,325,// Target comparison values computed using R version 1.8.1 (Linux version)
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,326,"assertEquals(""two sample heteroscedastic t stat"", 1.60371728768,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,327,"TestUtils.t(sample1, sample2), 1E-10);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,328,"assertEquals(""two sample heteroscedastic t stat"", 1.60371728768,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,329,"TestUtils.t(sampleStats1, sampleStats2), 1E-10);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,330,"assertEquals(""two sample heteroscedastic p value"", 0.128839369622,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,331,"TestUtils.tTest(sample1, sample2), 1E-10);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,332,"assertEquals(""two sample heteroscedastic p value"", 0.128839369622,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,333,"TestUtils.tTest(sampleStats1, sampleStats2), 1E-10);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,334,"assertTrue(""two sample heteroscedastic t-test reject"","
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,335,"TestUtils.tTest(sample1, sample2, 0.2));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,336,"assertTrue(""two sample heteroscedastic t-test reject"","
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,337,"TestUtils.tTest(sampleStats1, sampleStats2, 0.2));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,338,"assertTrue(""two sample heteroscedastic t-test accept"","
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,339,"!TestUtils.tTest(sample1, sample2, 0.1));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,340,"assertTrue(""two sample heteroscedastic t-test accept"","
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,341,"!TestUtils.tTest(sampleStats1, sampleStats2, 0.1));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,343,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,344,"TestUtils.tTest(sample1, sample2, .95);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,345,"fail(""alpha out of range, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,346,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,347,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,350,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,351,"TestUtils.tTest(sampleStats1, sampleStats2, .95);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,352,"fail(""alpha out of range, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,353,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,354,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,357,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,358,"TestUtils.tTest(sample1, tooShortObs, .01);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,359,"fail(""insufficient data, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,360,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,361,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,364,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,365,"TestUtils.tTest(sampleStats1, tooShortStats, .01);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,366,"fail(""insufficient data, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,367,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,368,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,371,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,372,"TestUtils.tTest(sample1, tooShortObs);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,373,"fail(""insufficient data, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,374,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,375,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,378,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,379,"TestUtils.tTest(sampleStats1, tooShortStats);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,380,"fail(""insufficient data, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,381,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,382,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,385,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,386,"TestUtils.t(sample1, tooShortObs);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,387,"fail(""insufficient data, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,388,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,389,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,392,try {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,393,"TestUtils.t(sampleStats1, tooShortStats);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,394,"fail(""insufficient data, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,395,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,396,// expected
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,399,public void testTwoSampleTHomoscedastic() throws Exception {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,400,"double[] sample1 ={2, 4, 6, 8, 10, 97};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,401,"double[] sample2 = {4, 6, 8, 10, 16};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,402,SummaryStatistics sampleStats1 = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,403,for (int i = 0; i < sample1.length; i++) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,404,sampleStats1.addValue(sample1[i]);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,406,SummaryStatistics sampleStats2 = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,407,for (int i = 0; i < sample2.length; i++) {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,408,sampleStats2.addValue(sample2[i]);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,411,// Target comparison values computed using R version 1.8.1 (Linux version)
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,412,"assertEquals(""two sample homoscedastic t stat"", 0.73096310086,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,413,"TestUtils.homoscedasticT(sample1, sample2), 10E-11);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,414,"assertEquals(""two sample homoscedastic p value"", 0.4833963785,"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,415,"TestUtils.homoscedasticTTest(sampleStats1, sampleStats2), 1E-10);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,416,"assertTrue(""two sample homoscedastic t-test reject"","
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,417,"TestUtils.homoscedasticTTest(sample1, sample2, 0.49));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,418,"assertTrue(""two sample homoscedastic t-test accept"","
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,419,"!TestUtils.homoscedasticTTest(sample1, sample2, 0.48));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,422,public void testSmallSamples() throws Exception {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,423,"double[] sample1 = {1d, 3d};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,424,"double[] sample2 = {4d, 5d};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,426,"// Target values computed using R, version 1.8.1 (linux version)"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,427,"assertEquals(-2.2360679775, TestUtils.t(sample1, sample2),"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,428,1E-10);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,429,"assertEquals(0.198727388935, TestUtils.tTest(sample1, sample2),"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,430,1E-10);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,433,public void testPaired() throws Exception {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,434,"double[] sample1 = {1d, 3d, 5d, 7d};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,435,"double[] sample2 = {0d, 6d, 11d, 2d};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,436,"double[] sample3 = {5d, 7d, 8d, 10d};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,437,"double[] sample4 = {0d, 2d};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,439,"// Target values computed using R, version 1.8.1 (linux version)"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,440,"assertEquals(-0.3133, TestUtils.pairedT(sample1, sample2), 1E-4);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,441,"assertEquals(0.774544295819, TestUtils.pairedTTest(sample1, sample2), 1E-10);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,442,"assertEquals(0.001208, TestUtils.pairedTTest(sample1, sample3), 1E-6);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,443,"assertFalse(TestUtils.pairedTTest(sample1, sample3, .001));"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,444,"assertTrue(TestUtils.pairedTTest(sample1, sample3, .002));"
