is_addition,old_file_path,new_file_path,line_num,content
False,src/mantissa/src/org/spaceroots/mantissa/geometry/Rotation.java,src/mantissa/src/org/spaceroots/mantissa/geometry/Rotation.java,497,"ouble alpha1,"
False,src/mantissa/src/org/spaceroots/mantissa/geometry/Rotation.java,src/mantissa/src/org/spaceroots/mantissa/geometry/Rotation.java,498,"ouble alpha2,"
False,src/mantissa/src/org/spaceroots/mantissa/geometry/Rotation.java,src/mantissa/src/org/spaceroots/mantissa/geometry/Rotation.java,499,ouble alpha3) {
True,src/mantissa/src/org/spaceroots/mantissa/geometry/Rotation.java,src/mantissa/src/org/spaceroots/mantissa/geometry/Rotation.java,497,"double alpha1,"
True,src/mantissa/src/org/spaceroots/mantissa/geometry/Rotation.java,src/mantissa/src/org/spaceroots/mantissa/geometry/Rotation.java,498,"double alpha2,"
True,src/mantissa/src/org/spaceroots/mantissa/geometry/Rotation.java,src/mantissa/src/org/spaceroots/mantissa/geometry/Rotation.java,499,double alpha3) {
False,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,205,ouble norm = v.getNorm();
False,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,206,f (norm == 0) {
True,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,205,double norm = v.getNorm();
True,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,206,if (norm == 0) {
False,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,209,ouble inv = 1.0 / norm;
False,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,210,"eturn new Vector3D(inv * v.x, inv * v.y, inv * v.z);"
True,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,209,double inv = 1.0 / norm;
True,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java,210,"return new Vector3D(inv * v.x, inv * v.y, inv * v.z);"
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,111,"tring source = ""10"";"
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,112,ry {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,111,"String source = ""10"";"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,112,try {
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,120,ry {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,120,try {
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,131,"tring source = ""a"";"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,131,"String source = ""a"";"
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,133,ry {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,133,try {
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,135,ail(msg);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,135,fail(msg);
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,137,/ success
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,137,// success
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,139,ry {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,139,try {
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,141,ail(msg);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,141,fail(msg);
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,143,/ success
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,143,// success
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,148,"tring source = ""10 / a"";"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,148,"String source = ""10 / a"";"
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,150,ry {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,150,try {
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,152,ail(msg);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,152,fail(msg);
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,154,/ success
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,154,// success
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,156,ry {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,156,try {
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,158,ail(msg);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,158,fail(msg);
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,160,/ success
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,160,// success
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,250,umberFormat old = properFormat.getNumeratorFormat();
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,250,NumberFormat old = properFormat.getNumeratorFormat();
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,253,roperFormat.setNumeratorFormat(nf);
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,254,"ssertEquals(nf, properFormat.getNumeratorFormat());"
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,255,roperFormat.setNumeratorFormat(old);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,253,properFormat.setNumeratorFormat(nf);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,254,"assertEquals(nf, properFormat.getNumeratorFormat());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,255,properFormat.setNumeratorFormat(old);
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,257,ld = improperFormat.getNumeratorFormat();
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,257,old = improperFormat.getNumeratorFormat();
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,260,mproperFormat.setNumeratorFormat(nf);
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,261,"ssertEquals(nf, improperFormat.getNumeratorFormat());"
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,262,mproperFormat.setNumeratorFormat(old);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,260,improperFormat.setNumeratorFormat(nf);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,261,"assertEquals(nf, improperFormat.getNumeratorFormat());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,262,improperFormat.setNumeratorFormat(old);
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,266,umberFormat old = properFormat.getDenominatorFormat();
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,266,NumberFormat old = properFormat.getDenominatorFormat();
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,269,roperFormat.setDenominatorFormat(nf);
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,270,"ssertEquals(nf, properFormat.getDenominatorFormat());"
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,271,roperFormat.setDenominatorFormat(old);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,269,properFormat.setDenominatorFormat(nf);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,270,"assertEquals(nf, properFormat.getDenominatorFormat());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,271,properFormat.setDenominatorFormat(old);
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,273,ld = improperFormat.getDenominatorFormat();
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,273,old = improperFormat.getDenominatorFormat();
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,276,mproperFormat.setDenominatorFormat(nf);
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,277,"ssertEquals(nf, improperFormat.getDenominatorFormat());"
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,278,mproperFormat.setDenominatorFormat(old);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,276,improperFormat.setDenominatorFormat(nf);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,277,"assertEquals(nf, improperFormat.getDenominatorFormat());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,278,improperFormat.setDenominatorFormat(old);
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,282,roperFractionFormat format = (ProperFractionFormat)properFormat;
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,284,umberFormat old = format.getWholeFormat();
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,282,ProperFractionFormat format = (ProperFractionFormat)properFormat;
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,284,NumberFormat old = format.getWholeFormat();
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,287,ormat.setWholeFormat(nf);
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,288,"ssertEquals(nf, format.getWholeFormat());"
False,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,289,ormat.setWholeFormat(old);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,287,format.setWholeFormat(nf);
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,288,"assertEquals(nf, format.getWholeFormat());"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,289,format.setWholeFormat(old);
