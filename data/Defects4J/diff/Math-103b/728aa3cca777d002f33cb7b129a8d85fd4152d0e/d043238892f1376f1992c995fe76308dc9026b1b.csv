is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,29, @version $Revision: 1.11 $ $Date: 2004/02/21 21:35:17 $
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,29,* @version $Revision: 1.12 $ $Date: 2004/03/07 00:57:11 $
False,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,72,"ssertEquals(""two cumulative frequency"", 4,  f.getCumFreq(5));"
False,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,73,"ssertEquals(""two cumulative frequency"", 0,  f.getCumFreq(""foo""));"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,72,"assertEquals(""five cumulative frequency"", 4,  f.getCumFreq(5));"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,73,"assertEquals(""foo cumulative frequency"", 0,  f.getCumFreq(""foo""));"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,78,// userguide examples -------------------------------------------------------------------
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,79,"f.addValue(""one"");"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,80,"f.addValue(""One"");"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,81,"f.addValue(""oNe"");"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,82,"f.addValue(""Z"");"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,83,"assertEquals(""one cumulative frequency"", 1 ,  f.getCount(""one""));"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,84,"assertEquals(""Z cumulative pct"", 0.5,  f.getCumPct(""Z""), tolerance);"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,85,"assertEquals(""z cumulative pct"", 1.0,  f.getCumPct(""z""), tolerance);"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,86,"assertEquals(""Ot cumulative pct"", 0.25,  f.getCumPct(""Ot""), tolerance);"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,87,f.clear();
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,89,f = null;
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,90,f = new Frequency(String.CASE_INSENSITIVE_ORDER);
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,91,"f.addValue(""one"");"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,92,"f.addValue(""One"");"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,93,"f.addValue(""oNe"");"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,94,"f.addValue(""Z"");"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,95,"assertEquals(""one count"", 3 ,  f.getCount(""one""));"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,96,"assertEquals(""Z cumulative pct -- case insensitive"", 1 ,  f.getCumPct(""Z""), tolerance);"
True,src/test/org/apache/commons/math/stat/FrequencyTest.java,src/test/org/apache/commons/math/stat/FrequencyTest.java,97,"assertEquals(""z cumulative pct -- case insensitive"", 1 ,  f.getCumPct(""z""), tolerance);"
