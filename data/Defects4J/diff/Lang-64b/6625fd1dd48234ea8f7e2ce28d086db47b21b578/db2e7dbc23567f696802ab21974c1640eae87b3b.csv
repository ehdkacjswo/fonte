is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,323,"* <p>From version 2.2, this method handles recursive cause structures"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,324,* that might otherwise cause infinite loops. If the throwable parameter
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,325,"* has a cause of itself, then null will be returned. If the throwable"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,326,"* parameter cause chain loops, the last element in the chain before the"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,327,* loop is returned.</p>
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,327,hrowable cause = getCause(throwable);
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,328,f (cause != null) {
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,329,hrowable = cause;
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,330,hile ((throwable = getCause(throwable)) != null) {
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,331,ause = throwable;
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,334,eturn cause;
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,334,List list = getThrowableList(throwable);
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,335,return (list.size() < 2 ? null : (Throwable)list.get(list.size() - 1));
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,494,"* <p>From version 2.2, this method handles recursive cause structures"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,495,* that might otherwise cause infinite loops. The cause chain is
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,496,"* processed until the end is reached, or until the next item in the"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,497,* chain is already in the result set.</p>
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,497,nt count = 0;
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,498,hile (throwable != null) {
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,499,ount++;
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,500,hrowable = ExceptionUtils.getCause(throwable);
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,502,eturn count;
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,503,return getThrowableList(throwable).size();
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,513, A <code>null</code> throwable will return an array size zero.</p>
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,514,* A <code>null</code> throwable will return an array of size zero.</p>
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,516,"* <p>From version 2.2, this method handles recursive cause structures"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,517,* that might otherwise cause infinite loops. The cause chain is
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,518,"* processed until the end is reached, or until the next item in the"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,519,* chain is already in the result set.</p>
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,521,* @see #getThrowableList(Throwable)
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,526,List list = getThrowableList(throwable);
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,527,return (Throwable[]) list.toArray(new Throwable[list.size()]);
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,531,* <p>Returns the list of <code>Throwable</code> objects in the
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,532,* exception chain.</p>
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,534,* <p>A throwable without cause will return a list containing
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,535,* one element - the input throwable.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,536,* A throwable with one cause will return a list containing
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,537,* two elements. - the input throwable and the cause throwable.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,538,* A <code>null</code> throwable will return a list of size zero.</p>
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,540,* <p>This method handles recursive cause structures that might
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,541,* otherwise cause infinite loops. The cause chain is processed until
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,542,"* the end is reached, or until the next item in the chain is already"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,543,* in the result set.</p>
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,545,"* @param throwable  the throwable to inspect, may be null"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,546,"* @return the list of throwables, never null"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,547,* @since Commons Lang 2.2
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,549,public static List getThrowableList(Throwable throwable) {
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,520,hile (throwable != null) {
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,551,while (throwable != null && list.contains(throwable) == false) {
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,524,eturn (Throwable[]) list.toArray(new Throwable[list.size()]);
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,555,return list;
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,25,import java.util.List;
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,47,private Throwable jdkNoCause;
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,48,private ExceptionWithCause selfCause;
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,49,private ExceptionWithCause recursiveCause;
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,63,jdkNoCause = new NullPointerException();
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,64,selfCause = new ExceptionWithCause(null);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,65,selfCause.setCause(selfCause);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,66,ExceptionWithCause a = new ExceptionWithCause(null);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,67,ExceptionWithCause b = new ExceptionWithCause(a);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,68,a.setCause(b);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,69,recursiveCause = new ExceptionWithCause(a);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,72,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,73,withoutCause = null;
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,74,nested = null;
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,75,withCause = null;
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,76,jdkNoCause = null;
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,77,selfCause = null;
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,78,recursiveCause = null;
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,132,"assertSame(null, ExceptionUtils.getCause(jdkNoCause));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,133,"assertSame(selfCause, ExceptionUtils.getCause(selfCause));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,134,"assertSame(recursiveCause.getCause(), ExceptionUtils.getCause(recursiveCause));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,135,"assertSame(recursiveCause.getCause().getCause(), ExceptionUtils.getCause(recursiveCause.getCause()));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,136,"assertSame(recursiveCause.getCause(), ExceptionUtils.getCause(recursiveCause.getCause().getCause()));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,167,"assertSame(null, ExceptionUtils.getRootCause(jdkNoCause));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,168,"assertSame(null, ExceptionUtils.getRootCause(selfCause));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,169,"assertSame(recursiveCause.getCause().getCause(), ExceptionUtils.getRootCause(recursiveCause));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,221,"assertEquals(1, ExceptionUtils.getThrowableCount(jdkNoCause));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,222,"assertEquals(1, ExceptionUtils.getThrowableCount(selfCause));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,223,"assertEquals(3, ExceptionUtils.getThrowableCount(recursiveCause));"
False,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,195,ublic void testGetThrowables_Throwable() {
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,227,public void testGetThrowables_Throwable_null() {
False,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,197,"ssertEquals(1, ExceptionUtils.getThrowables(withoutCause).length);"
False,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,198,"ssertSame(withoutCause, ExceptionUtils.getThrowables(withoutCause)[0]);"
False,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,200,"ssertEquals(2, ExceptionUtils.getThrowables(nested).length);"
False,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,201,"ssertSame(nested, ExceptionUtils.getThrowables(nested)[0]);"
False,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,202,"ssertSame(withoutCause, ExceptionUtils.getThrowables(nested)[1]);"
False,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,204,"ssertEquals(3, ExceptionUtils.getThrowables(withCause).length);"
False,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,205,"ssertSame(withCause, ExceptionUtils.getThrowables(withCause)[0]);"
False,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,206,"ssertSame(nested, ExceptionUtils.getThrowables(withCause)[1]);"
False,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,207,"ssertSame(withoutCause, ExceptionUtils.getThrowables(withCause)[2]);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,231,public void testGetThrowables_Throwable_withoutCause() {
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,232,Throwable[] throwables = ExceptionUtils.getThrowables(withoutCause);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,233,"assertEquals(1, throwables.length);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,234,"assertSame(withoutCause, throwables[0]);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,237,public void testGetThrowables_Throwable_nested() {
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,238,Throwable[] throwables = ExceptionUtils.getThrowables(nested);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,239,"assertEquals(2, throwables.length);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,240,"assertSame(nested, throwables[0]);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,241,"assertSame(withoutCause, throwables[1]);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,244,public void testGetThrowables_Throwable_withCause() {
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,245,Throwable[] throwables = ExceptionUtils.getThrowables(withCause);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,246,"assertEquals(3, throwables.length);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,247,"assertSame(withCause, throwables[0]);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,248,"assertSame(nested, throwables[1]);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,249,"assertSame(withoutCause, throwables[2]);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,252,public void testGetThrowables_Throwable_jdkNoCause() {
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,253,Throwable[] throwables = ExceptionUtils.getThrowables(jdkNoCause);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,254,"assertEquals(1, throwables.length);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,255,"assertSame(jdkNoCause, throwables[0]);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,258,public void testGetThrowables_Throwable_selfCause() {
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,259,Throwable[] throwables = ExceptionUtils.getThrowables(selfCause);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,260,"assertEquals(1, throwables.length);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,261,"assertSame(selfCause, throwables[0]);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,264,public void testGetThrowables_Throwable_recursiveCause() {
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,265,Throwable[] throwables = ExceptionUtils.getThrowables(recursiveCause);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,266,"assertEquals(3, throwables.length);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,267,"assertSame(recursiveCause, throwables[0]);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,268,"assertSame(recursiveCause.getCause(), throwables[1]);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,269,"assertSame(recursiveCause.getCause().getCause(), throwables[2]);"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,273,public void testGetThrowableList_Throwable_null() {
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,274,List throwables = ExceptionUtils.getThrowableList(null);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,275,"assertEquals(0, throwables.size());"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,278,public void testGetThrowableList_Throwable_withoutCause() {
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,279,List throwables = ExceptionUtils.getThrowableList(withoutCause);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,280,"assertEquals(1, throwables.size());"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,281,"assertSame(withoutCause, throwables.get(0));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,284,public void testGetThrowableList_Throwable_nested() {
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,285,List throwables = ExceptionUtils.getThrowableList(nested);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,286,"assertEquals(2, throwables.size());"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,287,"assertSame(nested, throwables.get(0));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,288,"assertSame(withoutCause, throwables.get(1));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,291,public void testGetThrowableList_Throwable_withCause() {
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,292,List throwables = ExceptionUtils.getThrowableList(withCause);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,293,"assertEquals(3, throwables.size());"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,294,"assertSame(withCause, throwables.get(0));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,295,"assertSame(nested, throwables.get(1));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,296,"assertSame(withoutCause, throwables.get(2));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,299,public void testGetThrowableList_Throwable_jdkNoCause() {
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,300,List throwables = ExceptionUtils.getThrowableList(jdkNoCause);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,301,"assertEquals(1, throwables.size());"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,302,"assertSame(jdkNoCause, throwables.get(0));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,305,public void testGetThrowableList_Throwable_selfCause() {
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,306,List throwables = ExceptionUtils.getThrowableList(selfCause);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,307,"assertEquals(1, throwables.size());"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,308,"assertSame(selfCause, throwables.get(0));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,311,public void testGetThrowableList_Throwable_recursiveCause() {
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,312,List throwables = ExceptionUtils.getThrowableList(recursiveCause);
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,313,"assertEquals(3, throwables.size());"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,314,"assertSame(recursiveCause, throwables.get(0));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,315,"assertSame(recursiveCause.getCause(), throwables.get(1));"
True,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java,316,"assertSame(recursiveCause.getCause().getCause(), throwables.get(2));"
