is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,34," @version $Id: DateUtils.java,v 1.31 2004/10/08 00:09:01 scolebourne Exp $"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,34,"* @version $Id: DateUtils.java,v 1.32 2004/10/13 21:48:00 scolebourne Exp $"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,122,* <p>Checks if two date objects are on the same day ignoring time.</p>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,124,* <p>28 Mar 2002 13:45 and 28 Mar 2002 06:01 would return true.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,125,* 28 Mar 2002 13:45 and 12 Mar 2002 13:45 would return false.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,126,* </p>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,128,"* @param date1  the first date, not null"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,129,"* @param date2  the second date, not null"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,130,* @return true if they represent the same day
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,131,* @throws IllegalArgumentException if either date is <code>null</code>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,132,* @since 2.1
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,134,"public static boolean isSameDay(Date date1, Date date2) {"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,135,if (date1 == null || date2 == null) {
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,136,"throw new IllegalArgumentException(""The date must not be null"");"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,138,Calendar cal1 = Calendar.getInstance();
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,139,cal1.setTime(date1);
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,140,Calendar cal2 = Calendar.getInstance();
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,141,cal2.setTime(date2);
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,142,"return isSameDay(cal1, cal2);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,156,ublic void testIsSameDay() {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,156,public void testIsSameDay_Date() {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,157,"Date date1 = new GregorianCalendar(2004, 6, 9, 13, 45).getTime();"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,158,"Date date2 = new GregorianCalendar(2004, 6, 9, 13, 45).getTime();"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,159,"assertEquals(true, DateUtils.isSameDay(date1, date2));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,160,"date2 = new GregorianCalendar(2004, 6, 10, 13, 45).getTime();"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,161,"assertEquals(false, DateUtils.isSameDay(date1, date2));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,162,"date1 = new GregorianCalendar(2004, 6, 10, 13, 45).getTime();"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,163,"assertEquals(true, DateUtils.isSameDay(date1, date2));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,164,"date2 = new GregorianCalendar(2005, 6, 10, 13, 45).getTime();"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,165,"assertEquals(false, DateUtils.isSameDay(date1, date2));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,169,public void testIsSameDay_Cal() {
