is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,1,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,7,* reserved.
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,11,* are met:
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,19,*    distribution.
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,35,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,57,import junit.framework.Test;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,58,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,59,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,60,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,62,* Unit tests {@link org.apache.commons.lang.ObjectUtils}.
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,64,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,65,"* @author <a href=""mailto:ridesmet@users.sourceforge.net"">Ringo De Smet</a>"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,66,"* @version $Id: HashCodeUtilsTest.java,v 1.1 2002/08/10 12:13:10 scolebourne Exp $"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,68,public class HashCodeUtilsTest extends TestCase {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,70,public HashCodeUtilsTest(String name) {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,71,super(name);
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,74,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,75,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,78,public static Test suite() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,79,TestSuite suite = new TestSuite(HashCodeUtilsTest.class);
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,80,"suite.setName(""HashCodeUtils Tests"");"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,81,return suite;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,84,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,85,super.setUp();
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,88,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,89,super.tearDown();
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,94,public void testObject() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,95,Object obj = null;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,96,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,97,obj = new Object();
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,98,"assertEquals(17 * 37 + obj.hashCode(), HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,101,public void testLong() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,102,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (long) 0L));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,103,"assertEquals(17 * 37 + (int) (123456789L ^ (123456789L >> 32)), HashCodeUtils.buildHashCode(17, (long) 123456789L));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,106,public void testInt() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,107,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (int) 0));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,108,"assertEquals(17 * 37 + 123456, HashCodeUtils.buildHashCode(17, (int) 123456));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,111,public void testShort() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,112,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (short) 0));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,113,"assertEquals(17 * 37 + 12345, HashCodeUtils.buildHashCode(17, (short) 12345));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,116,public void testChar() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,117,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (char) 0));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,118,"assertEquals(17 * 37 + 1234, HashCodeUtils.buildHashCode(17, (char) 1234));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,121,public void testByte() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,122,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (byte) 0));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,123,"assertEquals(17 * 37 + 123, HashCodeUtils.buildHashCode(17, (byte) 123));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,126,public void testDouble() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,127,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (double) 0d));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,128,double d = 1234567.89;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,129,long l = Double.doubleToLongBits(d);
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,130,"assertEquals(17 * 37 + (int) (l ^ (l >> 32)), HashCodeUtils.buildHashCode(17, d));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,133,public void testFloat() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,134,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (float) 0f));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,135,float f = 1234.89f;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,136,int i = Float.floatToIntBits(f);
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,137,"assertEquals(17 * 37 + i, HashCodeUtils.buildHashCode(17, f));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,140,public void testBoolean() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,141,"assertEquals(17 * 37 + 0, HashCodeUtils.buildHashCode(17, true));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,142,"assertEquals(17 * 37 + 1, HashCodeUtils.buildHashCode(17, false));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,145,public void testObjectArray() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,146,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (Object[]) null));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,147,Object[] obj = new Object[2];
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,148,"assertEquals((17 * 37) * 37 , HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,149,obj[0] = new Object();
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,150,"assertEquals((17 * 37 + obj[0].hashCode()) * 37, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,151,obj[1] = new Object();
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,152,"assertEquals( (17 * 37 + obj[0].hashCode()) * 37 + obj[1].hashCode(), HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,155,public void testLongArray() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,156,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (long[]) null));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,157,long[] obj = new long[2];
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,158,"assertEquals((17 * 37) * 37 , HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,159,obj[0] = 5L;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,160,int h1 = (int) (5L ^ (5L >> 32));
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,161,"assertEquals((17 * 37 + h1) * 37, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,162,obj[1] = 6L;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,163,int h2 = (int) (6L ^ (6L >> 32));
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,164,"assertEquals( (17 * 37 + h1) * 37 + h2, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,167,public void testIntArray() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,168,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (int[]) null));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,169,int[] obj = new int[2];
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,170,"assertEquals((17 * 37) * 37 , HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,171,obj[0] = 5;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,172,"assertEquals((17 * 37 + 5) * 37, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,173,obj[1] = 6;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,174,"assertEquals( (17 * 37 + 5) * 37 + 6, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,177,public void testShortArray() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,178,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (short[]) null));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,179,short[] obj = new short[2];
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,180,"assertEquals((17 * 37) * 37 , HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,181,obj[0] = (short) 5;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,182,"assertEquals((17 * 37 + 5) * 37, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,183,obj[1] = (short) 6;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,184,"assertEquals( (17 * 37 + 5) * 37 + 6, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,187,public void testCharArray() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,188,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (char[]) null));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,189,char[] obj = new char[2];
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,190,"assertEquals((17 * 37) * 37 , HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,191,obj[0] = (char) 5;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,192,"assertEquals((17 * 37 + 5) * 37, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,193,obj[1] = (char) 6;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,194,"assertEquals( (17 * 37 + 5) * 37 + 6, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,197,public void testByteArray() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,198,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (byte[]) null));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,199,byte[] obj = new byte[2];
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,200,"assertEquals((17 * 37) * 37 , HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,201,obj[0] = (byte) 5;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,202,"assertEquals((17 * 37 + 5) * 37, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,203,obj[1] = (byte) 6;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,204,"assertEquals( (17 * 37 + 5) * 37 + 6, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,207,public void testDoubleArray() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,208,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (double[]) null));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,209,double[] obj = new double[2];
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,210,"assertEquals((17 * 37) * 37 , HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,211,obj[0] = 5.4d;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,212,long l1 = Double.doubleToLongBits(5.4d);
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,213,int h1 = (int) (l1 ^ (l1 >> 32));
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,214,"assertEquals((17 * 37 + h1) * 37, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,215,obj[1] = 6.3d;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,216,long l2 = Double.doubleToLongBits(6.3d);
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,217,int h2 = (int) (l2 ^ (l2 >> 32));
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,218,"assertEquals( (17 * 37 + h1) * 37 + h2, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,221,public void testFloatArray() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,222,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (float[]) null));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,223,float[] obj = new float[2];
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,224,"assertEquals((17 * 37) * 37 , HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,225,obj[0] = 5.4f;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,226,int h1 = Float.floatToIntBits(5.4f);
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,227,"assertEquals((17 * 37 + h1) * 37, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,228,obj[1] = 6.3f;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,229,int h2 = Float.floatToIntBits(6.3f);
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,230,"assertEquals( (17 * 37 + h1) * 37 + h2, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,233,public void testBooleanArray() {
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,234,"assertEquals(17 * 37, HashCodeUtils.buildHashCode(17, (boolean[]) null));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,235,boolean[] obj = new boolean[2];
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,236,"assertEquals((17 * 37 + 1) * 37 + 1 , HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,237,obj[0] = true;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,238,"assertEquals((17 * 37 + 0) * 37 + 1, HashCodeUtils.buildHashCode(17, obj));"
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,239,obj[1] = false;
True,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,src/test/org/apache/commons/lang/HashCodeUtilsTest.java,240,"assertEquals( (17 * 37 + 0) * 37 + 1, HashCodeUtils.buildHashCode(17, obj));"
