is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,73,ption option = options.getOption(arg);
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,73,String opt = Util.stripLeadingHyphens(arg);
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,75,"tring head = arg.substring(0, 2); // ""--"" if --foo, ""-f"" if -foo"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,76,"tring tail = arg.substring(2);    // ""foo"" if -foo, ""oo"" if -foo"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,78,/ this is not an Option
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,79,f (option == null)
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,75,if (options.hasOption(opt))
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,81,/ handle special properties Option (-Dproperty=value for example)
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,82,ption specialOption = options.getOption(head);
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,84,f (specialOption != null)
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,77,tokens.add(arg);
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,79,else
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,81,"if (opt.indexOf('=') != -1 && options.hasOption(opt.substring(0, opt.indexOf('='))))"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,86,okens.add(head); // -D
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,87,okens.add(tail); // property=value
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,83,// the format is --foo=value or -foo=value
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,84,"tokens.add(arg.substring(0, arg.indexOf('='))); // --foo"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,85,tokens.add(arg.substring(arg.indexOf('=') + 1)); // value
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,87,"else if (options.hasOption(arg.substring(0, 2)))"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,89,// the format is a special properties option (-Dproperty=value)
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,90,"tokens.add(arg.substring(0, 2)); // -D"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,91,tokens.add(arg.substring(2)); // property=value
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,95,lse
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,97,okens.add(arg);
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,199,public void testShortWithEqual() throws Exception
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,201,"String[] args = new String[] { ""-f=bar"" };"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,203,Options options = new Options();
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,204,"options.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,206,Parser parser = new GnuParser();
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,207,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,209,"assertEquals(""bar"", cl.getOptionValue(""foo""));"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,212,public void testShortWithoutEqual() throws Exception
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,214,"String[] args = new String[] { ""-fbar"" };"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,216,Options options = new Options();
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,217,"options.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,219,Parser parser = new GnuParser();
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,220,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,222,"assertEquals(""bar"", cl.getOptionValue(""foo""));"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,225,public void testLongWithEqual() throws Exception
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,227,"String[] args = new String[] { ""--foo=bar"" };"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,229,Options options = new Options();
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,230,"options.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,232,Parser parser = new GnuParser();
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,233,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,235,"assertEquals(""bar"", cl.getOptionValue(""foo""));"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,238,public void testLongWithEqualSingleDash() throws Exception
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,240,"String[] args = new String[] { ""-foo=bar"" };"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,242,Options options = new Options();
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,243,"options.addOption(OptionBuilder.withLongOpt(""foo"").hasArg().create('f'));"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,245,Parser parser = new GnuParser();
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,246,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,248,"assertEquals(""bar"", cl.getOptionValue(""foo""));"
