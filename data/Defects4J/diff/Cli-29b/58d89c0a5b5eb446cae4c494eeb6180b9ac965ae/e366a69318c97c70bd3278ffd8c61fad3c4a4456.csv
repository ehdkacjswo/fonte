is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,27,import java.util.StringTokenizer;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,28,import java.io.InputStream;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,29,import java.io.ByteArrayOutputStream;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,141,* Flag to determine if we try to determine terminal width
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,143,public boolean autoWidth = false;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,333,* Sets the 'autoWidth'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,335,* @param flag the new value of 'autoWidth'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,337,public void setAutoWidth(boolean flag)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,339,this.autoWidth = flag;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,340,int newWidth = (flag ? getTerminalWidth() : DEFAULT_WIDTH);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,341,setWidth(newWidth);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,345,* Returns the 'autoWidth'.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,347,* @return the 'autoWidth'
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,349,public boolean getAutoWidth()
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,351,return autoWidth;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,665,* Returns the auto-detected Terminal width as reported by stty -a
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,669,private static int getTerminalWidth()
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,671,int ret = DEFAULT_WIDTH;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,672,"if (System.getProperty(""os.name"").toLowerCase().indexOf(""windows"") == -1) {"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,673,"String sttya = unixCmdOut(""stty -a < /dev/tty"");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,674,"StringTokenizer stok = new StringTokenizer(sttya, "";"");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,675,while (stok.hasMoreTokens()) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,676,String out = stok.nextToken().trim();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,677,"if (out.startsWith(""columns"")) {"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,678,"int index = out.lastIndexOf("" "");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,679,ret = Integer.parseInt(out.substring(index).trim());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,680,break;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,681,"} else if (out.endsWith(""columns"")) {"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,682,"int index = out.indexOf("" "");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,683,"ret = Integer.parseInt(out.substring(0, index).trim());"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,684,break;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,688,return ret;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,692,* Runs the provided Unix command line and returns stdout
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,694,* @param program the program to run
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,696,private static String unixCmdOut(String program)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,698,int c;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,699,InputStream in;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,700,String rstr;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,701,ByteArrayOutputStream sout = new ByteArrayOutputStream();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,702,try {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,703,"Process p = Runtime.getRuntime().exec(new String[] {""sh"",""-c"",program});"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,704,in = p.getInputStream();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,705,while ((c = in.read()) != -1) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,706,sout.write(c);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,708,p.waitFor();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,709,rstr = new String(sout.toString());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,710,} catch (Exception e) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,711,"rstr = new String(DEFAULT_WIDTH + "" columns;"");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,713,return rstr;
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,454,public void testAutoWidth()
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,456,// related to Bugzilla #19383 (CLI-67)
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,457,Options options = new Options();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,458,"options.addOption(new Option(""a"", ""aaa"", false, ""aaaaaaa aaaa aaaaa aaaaaaaa aaaaaa aa aaaaa aaaaaaaaaaaaa""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,459,"options.addOption(new Option(null, ""bbb"", false, ""bbbbbbb  bbbb bbbbbb bbbbb bbbbbb bbbb bbbbbbbb bbbbbbbb bbbbbbbbbb""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,460,"options.addOption(new Option(""c"", null, false, ""ccccccc ccccccccccc ccccccccccccc ccc ccccc cccccccc cccccccccccc ccccc ccc ccc ccccccccccccccccc cc""));"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,462,HelpFormatter formatter = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,463,formatter.setAutoWidth(true);
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,464,StringWriter out = new StringWriter();
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,465,"formatter.printHelp(""foobar"", options);"
True,src/test/org/apache/commons/cli/HelpFormatterTest.java,src/test/org/apache/commons/cli/HelpFormatterTest.java,466,"assertEquals(""1"", ""1"");"
