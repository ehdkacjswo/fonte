is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,2,"* $Header: /home/cvs/jakarta-commons-sandbox/cli/src/java/org/apache/commons/cli/AlreadySelectedException.java,v 1.4 2002/06/06 09:37:26 jstrachan Exp $"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,3,* $Revision: 1.4 $
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,4,* $Date: 2002/06/06 09:37:26 $
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,10,* Copyright (c) 1999-2001 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,11,* reserved.
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,15,* are met:
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,23,*    distribution.
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,62,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,64,/** <p>Exception thrown when more than one option in an option group
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,65,* has been provided.</p>
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,67,* @author John Keyes (john @ integralsource.com)
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,68,* @version $Revision: 1.4 $
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,70,class AlreadySelectedException extends ParseException {
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,72,/** Construct a new Exception with a message
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,74,* @param message Explanation of the exception
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,76,public AlreadySelectedException( String message ) {
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,77,super( message );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,2,"* $Header: /home/cvs/jakarta-commons-sandbox/cli/src/java/org/apache/commons/cli/CommandLine.java,v 1.4 2002/06/06 22:32:37 bayard Exp $"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,3,* $Revision: 1.4 $
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,4,* $Date: 2002/06/06 22:32:37 $
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,10,* Copyright (c) 1999-2001 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,11,* reserved.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,15,* are met:
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,23,*    distribution.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,62,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,64,import java.util.List;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,65,import java.util.LinkedList;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,66,import java.util.Map;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,67,import java.util.HashMap;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,69,/** <p>Represents list of arguments parsed against
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,70,* a {@link Options} descriptor.<p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,72,"* <p>It allows querying of a boolean {@link #hasOption(char opt)},"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,73,* in addition to retrieving the {@link #getOptionValue(char opt)}
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,74,* for options requiring arguments.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,76,"* <p>Additionally, any left-over or unrecognized arguments,"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,77,* are available for further processing.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,79,* @author bob mcwhirter (bob @ werken.com)
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,80,"* @author <a href=""mailto:jstrachan@apache.org"">James Strachan</a>"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,81,* @version $Revision: 1.4 $
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,83,public class CommandLine {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,85,/** the unrecognised options/arguments */
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,86,private List args    = new LinkedList();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,88,/** the recognised options/arguments */
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,89,private Map  options = new HashMap();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,91,/** the option types */
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,92,private Map  types   = new HashMap();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,95,* <p>Creates a command line.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,97,CommandLine() {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,100,/** <p>Query to see if an option has been set.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,102,* @param opt Short single-character name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,103,"* @return true if set, false if not"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,105,public boolean hasOption(char opt) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,106,return options.containsKey( new Character(opt) );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,109,public Object getOptionObject(char opt) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,110,String[] result = (String[])options.get( new Character(opt) );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,111,Object type = types.get( new Character(opt) );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,112,String res = result == null ? null : result[0];
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,113,if(res == null) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,114,return null;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,116,"return TypeHandler.createValue(res, type);"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,119,"/** <p>Retrieve the argument, if any,  of an option.</p>"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,121,* @param opt Short single-character name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,122,"* @return Value of the argument if option is set, and has an argument, else null."
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,124,public String getOptionValue(char opt) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,125,String[] result = (String[])options.get( new Character(opt) );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,126,return result == null ? null : result[0];
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,129,"/** <p>Retrieves the array of values, if any, of an option.</p>"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,131,* @param opt Single-character name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,132,"* @return An array of values if the option is set, and has an argument, else null."
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,134,public String[] getOptionValues(char opt) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,135,String[] result = (String[])options.get( new Character(opt) );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,136,return result == null ? null : result;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,139,"/** <p>Retrieve the argument, if any,  of an option.</p>"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,141,* @param opt Short single-character name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,142,* @param defaultValue is the default value to be returned if the option is not specified
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,143,"* @return Value of the argument if option is set, and has an argument, else null."
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,145,"public String getOptionValue(char opt, String defaultValue) {"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,146,String answer = getOptionValue(opt);
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,147,return (answer != null) ? answer : defaultValue;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,150,/** <p>Retrieve any left-over non-recognized options and arguments</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,152,* @return an array of remaining items passed in but not parsed
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,154,public String[] getArgs() {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,155,String[] answer = new String[ args.size() ];
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,156,args.toArray( answer );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,157,return answer;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,160,/** <p>Retrieve any left-over non-recognized options and arguments</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,162,* @return List of remaining items passed in but not parsed
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,164,public List getArgList() {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,165,return args;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,168,"/** <p>Dump state, suitable for debugging.</p>"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,170,* @return Stringified form of this object
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,172,public String toString() {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,173,StringBuffer buf = new StringBuffer();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,175,"buf.append( ""[ CommandLine: [ options: "" );"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,176,buf.append( options.toString() );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,177,"buf.append( "" ] [ args: "");"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,178,buf.append( args.toString() );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,179,"buf.append( "" ] ]"" );"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,181,return buf.toString();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,185,* <p>Add left-over unrecognized option/argument.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,187,* @param arg the unrecognised option/argument.
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,189,void addArg(String arg) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,190,args.add( arg );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,194,* <p>Add an option that does not have any value to the
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,195,* command line.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,197,* @param opt the processed option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,199,void setOpt(char opt) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,200,"options.put( new Character(opt), null );"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,204,* <p>Add an option with the specified value to the
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,205,* command line.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,207,* @param opt the processed option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,208,* @param value the value of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,210,"void setOpt(char opt, String value) {"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,211,"options.put( new Character(opt), value );"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,215,* <p>Add an option to the command line.  The values of
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,216,* the option are stored.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,218,* @param opt the processed option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,220,void setOpt(Option opt) {
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,221,Character chr = new Character( opt.getOpt() );
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,222,"options.put( chr, opt.getValues() );"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,223,"types.put( chr, opt.getType() );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,2,* Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,4,* This software is published under the terms of the Apache Software License
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,5,"* version 1.1, a copy of which has been included with this distribution in"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,6,* the LICENSE file.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,8,"* $Id: HelpFormatter.java,v 1.2 2002/05/17 11:44:32 jstrachan Exp $"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,10,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,12,import java.io.PrintWriter;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,13,import java.util.Iterator;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,14,import java.util.List;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,15,import java.util.ArrayList;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,16,import java.util.Collections;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,17,import java.util.Comparator;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,20,* A formatter of help messages for the current command line options
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,22,* @author Slawek Zachcial
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,24,public class HelpFormatter
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,26,// --------------------------------------------------------------- Constants
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,28,public static final int DEFAULT_WIDTH              = 80;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,29,public static final int DEFAULT_LEFT_PAD           = 1;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,30,public static final int DEFAULT_DESC_PAD           = 3;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,31,"public static final String DEFAULT_SYNTAX_PREFIX   = ""usage: "";"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,32,"public static final String DEFAULT_OPT_PREFIX      = ""-"";"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,33,"public static final String DEFAULT_LONG_OPT_PREFIX = ""--"";"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,34,"public static final String DEFAULT_ARG_NAME        = ""arg"";"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,36,// ------------------------------------------------------------------ Static
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,38,// -------------------------------------------------------------- Attributes
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,40,public int defaultWidth;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,41,public int defaultLeftPad;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,42,public int defaultDescPad;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,43,public String defaultSyntaxPrefix;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,44,public String defaultNewLine;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,45,public String defaultOptPrefix;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,46,public String defaultLongOptPrefix;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,47,public String defaultArgName;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,49,// ------------------------------------------------------------ Constructors
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,50,public HelpFormatter()
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,52,defaultWidth = DEFAULT_WIDTH;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,53,defaultLeftPad = DEFAULT_LEFT_PAD;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,54,defaultDescPad = DEFAULT_DESC_PAD;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,55,defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,56,"defaultNewLine = System.getProperty(""line.separator"");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,57,defaultOptPrefix = DEFAULT_OPT_PREFIX;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,58,defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,59,defaultArgName = DEFAULT_ARG_NAME;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,62,// ------------------------------------------------------------------ Public
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,64,"public void printHelp( String cmdLineSyntax,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,65,Options options )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,67,"printHelp( defaultWidth, cmdLineSyntax, null, options, null );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,70,"public void printHelp( String cmdLineSyntax,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,71,"String header,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,72,"Options options,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,73,String footer )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,75,"printHelp(defaultWidth, cmdLineSyntax, header, options, footer);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,78,"public void printHelp( int width,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,79,"String cmdLineSyntax,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,80,"String header,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,81,"Options options,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,82,String footer )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,84,PrintWriter pw = new PrintWriter(System.out);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,85,"printHelp( pw, width, cmdLineSyntax, header,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,86,"options, defaultLeftPad, defaultDescPad, footer );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,87,pw.flush();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,90,"public void printHelp( PrintWriter pw,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,91,"int width,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,92,"String cmdLineSyntax,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,93,"String header,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,94,"Options options,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,95,"int leftPad,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,96,"int descPad,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,97,String footer )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,98,throws IllegalArgumentException
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,100,if ( cmdLineSyntax == null || cmdLineSyntax.length() == 0 )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,102,"throw new IllegalArgumentException(""cmdLineSyntax not provided"");"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,105,"printUsage( pw, width, cmdLineSyntax );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,106,if ( header != null && header.trim().length() > 0 )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,108,"printWrapped( pw, width, header );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,110,"printOptions( pw, width, options, leftPad, descPad );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,111,if ( footer != null && footer.trim().length() > 0 )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,113,"printWrapped( pw, width, footer );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,117,"public void printUsage( PrintWriter pw, int width, String cmdLineSyntax )"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,119,int argPos = cmdLineSyntax.indexOf(' ') + 1;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,120,"printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,121,defaultSyntaxPrefix + cmdLineSyntax);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,124,"public void printOptions( PrintWriter pw, int width, Options options, int leftPad, int descPad )"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,126,StringBuffer sb = new StringBuffer();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,127,"renderOptions(sb, width, options, leftPad, descPad);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,128,pw.println(sb.toString());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,131,"public void printWrapped( PrintWriter pw, int width, String text )"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,133,"printWrapped(pw, width, 0, text);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,136,"public void printWrapped( PrintWriter pw, int width, int nextLineTabStop, String text )"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,138,StringBuffer sb = new StringBuffer(text.length());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,139,"renderWrappedText(sb, width, nextLineTabStop, text);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,140,pw.println(sb.toString());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,143,// --------------------------------------------------------------- Protected
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,145,"protected StringBuffer renderOptions( StringBuffer sb,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,146,"int width,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,147,"Options options,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,148,"int leftPad,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,149,int descPad )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,151,final String lpad = createPadding(leftPad);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,152,final String dpad = createPadding(descPad);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,154,"//first create list containing only <lpad>-a,--aaa where -a is opt and --aaa is"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,155,//long opt; in parallel look for the longest opt string
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,156,//this list will be then used to sort options ascending
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,157,int max = 0;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,158,StringBuffer optBuf;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,159,List prefixList = new ArrayList();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,160,Option option;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,161,for ( Iterator i = options.getOptions().iterator(); i.hasNext(); )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,163,option = (Option) i.next();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,164,optBuf = new StringBuffer(8);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,165,optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,166,if ( option.hasLongOpt() )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,168,"optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,170,if ( option.hasArg() )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,172,//FIXME - should have a way to specify arg name per option
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,173,optBuf.append(' ').append(defaultArgName);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,175,prefixList.add(optBuf);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,176,max = optBuf.length() > max ? optBuf.length() : max;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,179,//right pad the prefixes
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,180,for ( Iterator i = prefixList.iterator(); i.hasNext(); )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,182,optBuf = (StringBuffer) i.next();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,183,if ( optBuf.length() < max )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,185,optBuf.append(createPadding(max-optBuf.length()));
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,187,optBuf.append(dpad);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,190,//sort this list ascending
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,191,"Collections.sort(prefixList, new StringBufferComparator());"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,193,//finally render options
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,194,int nextLineTabStop = max + descPad;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,195,char opt;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,196,int optOffset = leftPad + defaultOptPrefix.length();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,198,for ( Iterator i = prefixList.iterator(); i.hasNext(); )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,200,optBuf = (StringBuffer) i.next();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,201,opt = optBuf.charAt(optOffset);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,202,option = options.getOption(opt);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,203,"renderWrappedText(sb, width, nextLineTabStop,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,204,optBuf.append(option.getDescription()).toString());
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,205,if ( i.hasNext() )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,207,sb.append(defaultNewLine);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,211,return sb;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,214,"protected StringBuffer renderWrappedText( StringBuffer sb,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,215,"int width,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,216,"int nextLineTabStop,"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,217,String text )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,219,"int pos = findWrapPos( text, width, 0);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,220,if ( pos == -1 )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,222,sb.append(rtrim(text));
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,223,return sb;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,225,else
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,227,"sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,230,//all following lines must be padded with nextLineTabStop space characters
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,231,final String padding = createPadding(nextLineTabStop);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,233,while ( true )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,235,text = padding + text.substring(pos).trim();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,236,"pos = findWrapPos( text, width, nextLineTabStop );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,237,if ( pos == -1 )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,239,sb.append(text);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,240,return sb;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,243,"sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,249,* Finds the next text wrap position after <code>startPos</code> for the text
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,250,* in <code>sb</code> with the column width <code>width</code>.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,251,* The wrap point is the last postion before startPos+width having a whitespace
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,252,"* character (space, \n, \r)."
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,254,* @param sb text to be analyzed
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,255,* @param width width of the wrapped text
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,256,* @param startPos position from which to start the lookup whitespace character
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,257,* @return postion on which the text must be wrapped or -1 if the wrap position is at the end
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,258,*         of the text
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,260,"protected int findWrapPos( String text, int width, int startPos )"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,262,int pos = -1;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,263,// the line ends before the max wrap pos or a new line char found
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,264,"if ( ((pos = text.indexOf('\n', startPos)) != -1 && pos <= width)  ||"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,265,"((pos = text.indexOf('\t', startPos)) != -1 && pos <= width) )"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,267,return pos;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,269,else if ( (startPos + width) >= text.length() )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,271,return -1;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,274,//look for the last whitespace character before startPos+width
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,275,pos = startPos + width;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,276,char c;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,277,while ( pos >= startPos && (c = text.charAt(pos)) != ' ' && c != '\n' && c != '\r' )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,279,--pos;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,281,//if we found it - just return
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,282,if ( pos > startPos )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,284,return pos;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,286,else
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,288,//must look for the first whitespace chearacter after startPos + width
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,289,pos = startPos + width;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,290,while ( pos <= text.length() && (c = text.charAt(pos)) != ' ' && c != '\n' && c != '\r' )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,292,++pos;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,294,return pos == text.length() ? -1 : pos;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,298,protected String createPadding(int len)
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,300,StringBuffer sb = new StringBuffer(len);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,301,for ( int i = 0; i < len; ++i )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,303,sb.append(' ');
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,305,return sb.toString();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,308,protected String rtrim( String s )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,310,if ( s == null || s.length() == 0 )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,312,return s;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,315,int pos = s.length();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,316,while ( pos >= 0 && Character.isWhitespace(s.charAt(pos-1)) )
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,318,--pos;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,320,"return s.substring(0, pos);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,323,// ------------------------------------------------------- Package protected
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,325,// ----------------------------------------------------------------- Private
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,327,// ----------------------------------------------------------- Inner classes
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,329,private static class StringBufferComparator
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,330,implements Comparator
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,332,"public int compare( Object o1, Object o2 )"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,334,return ((StringBuffer) o1).toString().compareTo(((StringBuffer) o2).toString());
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,2,"* $Header: /home/cvs/jakarta-commons-sandbox/cli/src/java/org/apache/commons/cli/MissingArgumentException.java,v 1.2 2002/06/06 09:37:26 jstrachan Exp $"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,3,* $Revision: 1.2 $
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,4,* $Date: 2002/06/06 09:37:26 $
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,10,* Copyright (c) 1999-2001 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,11,* reserved.
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,15,* are met:
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,23,*    distribution.
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,62,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,64,/** <p>Exception thrown when an option requiring an argument
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,65,* is not provided with an argument.</p>
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,67,* @author bob mcwhirter (bob @ werken.com)
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,68,* @version $Revision: 1.2 $
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,70,public class MissingArgumentException extends ParseException {
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,72,/** Construct a new Exception with a message
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,74,* @param msg Explanation of the exception
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,76,public MissingArgumentException(String msg) {
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,77,super(msg);
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,2,"* $Header: /home/cvs/jakarta-commons-sandbox/cli/src/java/org/apache/commons/cli/MissingOptionException.java,v 1.2 2002/06/06 09:37:26 jstrachan Exp $"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,3,* $Revision: 1.2 $
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,4,* $Date: 2002/06/06 09:37:26 $
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,10,* Copyright (c) 1999-2001 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,11,* reserved.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,15,* are met:
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,23,*    distribution.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,62,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,64,/** <p>Exception thrown when an option requiring an argument
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,65,* is not provided with an argument.</p>
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,67,* @author bob mcwhirter (bob @ werken.com)
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,68,* @version $Revision: 1.2 $
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,70,public class MissingOptionException extends ParseException {
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,72,/** Construct a new Exception with a message
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,74,* @param msg Explanation of the exception
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,76,public MissingOptionException(String msg) {
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,77,super(msg);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,2,"* $Header: /home/cvs/jakarta-commons-sandbox/cli/src/java/org/apache/commons/cli/Option.java,v 1.6 2002/06/06 22:50:14 bayard Exp $"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,3,* $Revision: 1.6 $
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,4,* $Date: 2002/06/06 22:50:14 $
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,10,* Copyright (c) 1999-2001 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,11,* reserved.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,15,* are met:
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,23,*    distribution.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,63,* Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,65,* This software is published under the terms of the Apache Software License
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,66,"* version 1.1, a copy of which has been included with this distribution in"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,67,* the LICENSE file.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,69,"* $Id: Option.java,v 1.6 2002/06/06 22:50:14 bayard Exp $"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,72,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,74,import java.util.ArrayList;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,76,/** <p>Describes a single command-line option.  It maintains
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,77,"* information regarding the short-name of the option, the long-name,"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,78,"* if any exists, a flag indicating if an argument is required for"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,79,"* this option, and a self-documenting description of the option.</p>"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,81,"* <p>An Option is not created independantly, but is create through"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,82,* an instance of {@link Options}.<p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,84,* @see org.apache.commons.cli.Options
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,85,* @see org.apache.commons.cli.CommandLine
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,87,* @author bob mcwhirter (bob @ werken.com)
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,88,"* @author <a href=""mailto:jstrachan@apache.org"">James Strachan</a>"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,89,* @version $Revision: 1.6 $
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,92,public class Option {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,94,/** opt the single character representation of the option */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,95,private Character  opt          = null;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,97,/** longOpt is the long representation of the option */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,98,private String     longOpt      = null;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,100,/** hasArg specifies whether this option has an associated argument */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,101,private boolean    hasArg       = false;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,103,/** description of the option */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,104,private String     description  = null;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,106,/** required specifies whether this option is required to be present */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,107,private boolean    required     = false;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,109,/** multipleArgs specifies whether this option has multiple argument values */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,110,private boolean    multipleArgs = false;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,112,/** the type of this Option */
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,113,private Object     type         = null;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,116,private ArrayList  values       = new ArrayList();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,120,* Creates an Option using the specified parameters.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,122,* @param opt character representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,123,* @param hasArg specifies whether the Option takes an argument or not
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,124,* @param description describes the function of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,126,"public Option(char opt, boolean hasArg, String description) {"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,127,"this(opt, null, hasArg, description, false, false);"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,131,* Creates an Option using the specified parameters.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,133,* @param opt character representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,134,* @param longOpt the long representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,135,* @param hasArg specifies whether the Option takes an argument or not
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,136,* @param description describes the function of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,138,"public Option(char opt, String longOpt, boolean hasArg, String description) {"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,139,"this(opt, longOpt, hasArg, description, false, false );"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,143,* Creates an Option using the specified parameters.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,145,* @param opt character representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,146,* @param longOpt the long representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,147,* @param hasArg specifies whether the Option takes an argument or not
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,148,* @param description describes the function of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,149,* @param required specifies whether the option is required or not
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,151,"public Option(char opt, String longOpt, boolean hasArg, String description,"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,152,boolean required ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,153,"this(opt, longOpt, hasArg, description, required, false );"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,157,* Creates an Option using the specified parameters.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,159,* @param opt character representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,160,* @param longOpt the long representation of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,161,* @param hasArg specifies whether the Option takes an argument or not
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,162,* @param description describes the function of the option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,163,* @param required specifies whether the option is required or not
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,164,* @param multipleArgs specifies whether the option has multiple argument
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,165,* values
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,167,"public Option(char opt, String longOpt, boolean hasArg, String description,"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,168,"boolean required, boolean multipleArgs ) {"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,169,"this(opt, longOpt, hasArg, description, required, multipleArgs, null );"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,171,"public Option(char opt, String longOpt, boolean hasArg, String description,"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,172,"boolean required, boolean multipleArgs, Object type ) {"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,173,this.opt          = new Character( opt );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,174,this.longOpt      = longOpt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,175,this.hasArg       = hasArg;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,176,this.description  = description;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,177,this.required     = required;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,178,this.multipleArgs = multipleArgs;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,179,this.type         = type;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,182,/** <p>Retrieve the single-character name of this Option</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,184,* <p>It is this character which can be used with
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,185,* {@link CommandLine#hasOption(char opt)} and
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,186,* {@link CommandLine#getOptionValue(char opt)} to check
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,187,* for existence and argument.<p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,189,* @return Single character name of this option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,191,public char getOpt() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,192,return this.opt.charValue();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,195,public Object getType() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,196,return this.type;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,199,/** <p>Retrieve the long name of this Option</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,201,"* @return Long name of this option, or null, if there is no long name"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,203,public String getLongOpt() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,204,return this.longOpt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,207,/** <p>Query to see if this Option has a long name</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,209,* @return boolean flag indicating existence of a long name
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,211,public boolean hasLongOpt() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,212,return ( this.longOpt != null );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,215,/** <p>Query to see if this Option requires an argument</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,217,* @return boolean flag indicating if an argument is required
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,219,public boolean hasArg() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,220,return this.hasArg;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,223,/** <p>Retrieve the self-documenting description of this Option</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,225,* @return The string description of this option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,227,public String getDescription() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,228,return this.description;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,231,/** <p>Query to see if this Option requires an argument</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,233,* @return boolean flag indicating if an argument is required
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,235,public boolean isRequired() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,236,return this.required;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,239,/** <p>Query to see if this Option can take multiple values</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,241,* @return boolean flag indicating if multiple values are allowed
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,243,public boolean hasMultipleArgs() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,244,return this.multipleArgs;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,247,"/** <p>Dump state, suitable for debugging.</p>"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,249,* @return Stringified form of this object
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,251,public String toString() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,252,"StringBuffer buf = new StringBuffer().append(""[ option: "");"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,254,buf.append( this.opt );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,256,if ( this.longOpt != null ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,257,"buf.append("" "")"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,258,.append(this.longOpt);
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,261,"buf.append("" "");"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,263,if ( hasArg ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,264,"buf.append( ""+ARG"" );"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,267,"buf.append("" :: "")"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,268,.append( this.description );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,270,if ( this.type != null ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,271,"buf.append("" :: "")"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,272,.append( this.type );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,275,"buf.append("" ]"");"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,276,return buf.toString();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,280,* Adds the specified value to this Option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,282,* @param value is a/the value of this Option
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,284,public void addValue( String value ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,285,this.values.add( value );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,289,* @return the value/first value of this Option or null if there are no
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,290,* values
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,292,public String getValue() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,293,return this.values.size()==0 ? null : (String)this.values.get( 0 );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,297,* @return the values of this Option or null if there are no
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,298,* values
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,300,public String[] getValues() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,301,return this.values.size()==0 ? null : (String[])this.values.toArray(new String[]{});
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,2,"* $Header: /home/cvs/jakarta-commons-sandbox/cli/src/java/org/apache/commons/cli/OptionGroup.java,v 1.2 2002/06/06 09:37:26 jstrachan Exp $"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,3,* $Revision: 1.2 $
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,4,* $Date: 2002/06/06 09:37:26 $
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,10,* Copyright (c) 1999-2001 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,11,* reserved.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,15,* are met:
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,23,*    distribution.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,62,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,64,import java.util.Collection;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,65,import java.util.HashMap;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,66,import java.util.Iterator;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,69,* A group of mutually exclusive options.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,70,* @author John Keyes ( john at integralsource.com )
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,71,* @version $Revision: 1.2 $
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,73,public class OptionGroup {
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,74,/** hold the options */
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,75,private HashMap optionMap = new HashMap();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,77,/** the name of the selected option */
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,78,private Option selected;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,81,* add <code>opt</code> to this group
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,83,* @param opt the option to add to this group
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,84,* @return this option group with opt added
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,86,public OptionGroup addOption(Option opt) {
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,87,// key   - option name
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,88,// value - the option
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,89,"optionMap.put( ""-"" + opt.getOpt(), opt );"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,90,return this;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,94,* @return the names of the options in this group as a
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,95,* <code>Collection</code>
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,97,private Collection getNames() {
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,98,// the key set is the collection of names
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,99,return optionMap.keySet();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,103,* @return the options in this group as a <code>Collection</code>
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,105,public Collection getOptions() {
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,106,// the values are the collection of options
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,107,return optionMap.values();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,111,* set the selected option of this group to <code>name</code>.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,112,* @param opt the option that is selected
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,113,* @throws AlreadySelectedException if an option from this group has
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,114,* already been selected.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,116,public void setSelected(Option opt) throws AlreadySelectedException {
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,117,// if no option has already been selected or the
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,118,// same option is being reselected then set the
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,119,// selected member variable
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,120,if ( this.selected == null || this.selected.equals( opt ) ) {
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,121,this.selected = opt;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,123,else {
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,124,"throw new AlreadySelectedException( ""an option from this group has "" +"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,125,"""already been selected: '"" +"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,126,"selected + ""'"");"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,131,* @return the selected option name
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,133,public Option getSelected() {
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,134,return selected;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,138,* @return the usage string for this option group
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,141,public String usageString()
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,143,StringBuffer buff = new StringBuffer();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,145,"buff.append( ""<\n"");"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,147,Iterator oiter = getOptions().iterator();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,149,while( oiter.hasNext() )
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,151,Option option = (Option)oiter.next();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,152,Collection names = option.getNames();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,154,Iterator iter = names.iterator();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,156,while( iter.hasNext() )
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,158,buff.append( option.getPrefix() );
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,159,buff.append( iter.next() );
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,160,if( iter.hasNext() )
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,162,"buff.append( "" | "" );"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,165,"buff.append( "" "" );"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,166,buff.append( option.getDescription( ) );
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,167,if ( oiter.hasNext() )
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,169,"buff.append( ""\n  or\n"" );"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,172,"buff.append( ""\n>"");"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,173,"buff.append( ""\n"" );"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,174,return buff.toString();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,179,* <p>Returns the stringified version of this OptionGroup.</p>
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,180,* @return the stringified representation of this group
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,182,public String toString() {
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,183,StringBuffer buff = new StringBuffer();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,185,Iterator iter = getOptions().iterator();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,187,"buff.append( ""["" );"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,188,while( iter.hasNext() ) {
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,189,Option option = (Option)iter.next();
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,191,"buff.append( ""-"" );"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,192,buff.append( option.getOpt() );
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,193,"buff.append( "" "" );"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,194,buff.append( option.getDescription( ) );
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,196,if( iter.hasNext() ) {
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,197,"buff.append( "", "" );"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,200,"buff.append( ""]"" );"
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,202,return buff.toString();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,2,"* $Header: /home/cvs/jakarta-commons-sandbox/cli/src/java/org/apache/commons/cli/Options.java,v 1.5 2002/06/06 22:32:37 bayard Exp $"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,3,* $Revision: 1.5 $
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,4,* $Date: 2002/06/06 22:32:37 $
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,10,* Copyright (c) 1999-2001 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,11,* reserved.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,15,* are met:
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,23,*    distribution.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,62,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,64,import java.util.Map;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,65,import java.util.Set;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,66,import java.util.HashMap;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,67,import java.util.List;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,68,import java.util.ListIterator;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,69,import java.util.ArrayList;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,70,import java.util.LinkedList;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,71,import java.util.Iterator;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,72,import java.util.Collections;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,74,/** <p>Main entry-point into the <code>werken.opt</code> library.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,76,"* <p>Options represents a collection of {@link Option} objects, which"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,77,* describe the possible options for a command-line.<p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,79,"* <p>It may flexibly parse long and short options, with or without"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,80,"* values.  Additionally, it may parse only a portion of a commandline,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,81,* allowing for flexible multi-stage parsing.<p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,83,* @see org.apache.commons.cli.CommandLine
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,85,* @author bob mcwhirter (bob @ werken.com)
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,86,"* @author <a href=""mailto:jstrachan@apache.org"">James Strachan</a>"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,87,* @version $Revision: 1.5 $
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,89,public class Options {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,91,/** the list of options */
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,92,private List options      = new ArrayList();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,94,/** a map of the options with the character key */
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,95,private Map  shortOpts    = new HashMap();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,97,/** a map of the options with the long key */
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,98,private Map  longOpts     = new HashMap();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,100,/** a map of the required options */
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,101,private Map  requiredOpts = new HashMap();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,103,/** a map of the option groups */
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,104,private Map optionGroups  = new HashMap();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,106,/** <p>Construct a new Options descriptor</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,108,public Options() {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,112,* <p>Add the specified option group.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,114,* @param group the OptionGroup that is to be added
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,115,* @return the resulting Options instance
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,117,public Options addOptionGroup( OptionGroup group ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,118,Iterator options = group.getOptions().iterator();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,120,while( options.hasNext() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,121,Option option = (Option)options.next();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,122,addOption( option );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,123,"optionGroups.put( option, group );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,126,return this;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,129,/** <p>Add an option that only contains a short-name</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,130,* <p>It may be specified as requiring an argument.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,132,* @param opt Short single-character name of the option.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,133,* @param hasArg flag signally if an argument is required after this option
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,134,* @param description Self-documenting description
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,135,* @return the resulting Options instance
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,137,"public Options addOption(char opt, boolean hasArg, String description) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,138,"addOption( opt, null, hasArg, description, false );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,139,return this;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,142,/** <p>Add an option that contains a short-name and a long-name</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,143,* <p>It may be specified as requiring an argument.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,145,* @param opt Short single-character name of the option.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,146,* @param longOpt Long multi-character name of the option.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,147,* @param hasArg flag signally if an argument is required after this option
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,148,* @param description Self-documenting description
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,149,* @return the resulting Options instance
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,151,"public Options addOption(char opt, String longOpt, boolean hasArg, String description) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,152,"addOption( opt, longOpt, hasArg, description, false );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,153,return this;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,156,/** <p>Add an option that contains a short-name and a long-name</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,157,* <p>It may be specified as requiring an argument.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,159,* @param opt Short single-character name of the option.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,160,* @param longOpt Long multi-character name of the option.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,161,* @param hasArg flag signally if an argument is required after this option
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,162,* @param description Self-documenting description
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,163,* @param required specifies if this option is required
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,164,* @return the resulting Options instance
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,166,"public Options addOption(char opt, String longOpt, boolean hasArg, String description,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,167,boolean required) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,168,"addOption( new Option(opt, longOpt, hasArg, description, required) );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,169,return this;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,172,/** <p>Add an option that contains a short-name and a long-name</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,173,* <p>It may be specified as requiring an argument.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,175,* @param opt Short single-character name of the option.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,176,* @param longOpt Long multi-character name of the option.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,177,* @param hasArg flag signally if an argument is required after this option
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,178,* @param description Self-documenting description
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,179,* @param required specifies if this option is required
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,180,* @param multipleArgs specifies if this option can accept multiple argument values
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,181,* @return the resulting Options instance
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,183,"public Options addOption(char opt, String longOpt, boolean hasArg, String description,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,184,"boolean required, boolean multipleArgs) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,185,"addOption( new Option(opt, longOpt, hasArg, description, required, multipleArgs) );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,186,return this;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,189,"public Options addOption(char opt, String longOpt, boolean hasArg, String description,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,190,"boolean required, boolean multipleArgs, Object type) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,191,"addOption( new Option(opt, longOpt, hasArg, description, required, multipleArgs, type) );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,192,return this;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,195,/** <p>Parse the given list of arguments against this descriptor<p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,197,* @param args Args to parse
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,199,* @return {@link CommandLine} containing information related to parse state
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,201,* @throws MissingArgumentException if an argument value for an option is not present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,202,* @throws UnrecognizedOptionException if an unrecognised option is present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,203,* @throws MissingOptionException if a required option is not present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,204,* @throws AlreadySelectedException if the same option appears more than once
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,206,public CommandLine parse(String[] args)
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,207,"throws MissingArgumentException, UnrecognizedOptionException,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,208,"MissingOptionException, AlreadySelectedException {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,209,"return parse( args, 0, args.length, false);"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,212,/** <p>Parse the given list of arguments against this descriptor</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,214,"* <p>This method will cease parsing upon the first non-option token,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,215,* storing the rest of the tokens for access through {@link CommandLine#getArgs()}.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,217,"* <p>This is useful for parsing a command-line in pieces, such as:</p>"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,219,* <p><code>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,220,* <pre>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,221,* myApp -s &lt;server&gt; -p &lt;port&gt; command -p &lt;printer&gt; -s &lt;style&gt;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,222,* </pre>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,223,* </code></p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,225,"* <p>Here, it'll parse up-to, but not including <code>command</code>. The"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,226,* tokens <code>command -p &lt;printer&gt; -s &lt;style&gt;</code> are available
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,227,"* through {@link CommandLine#getArgs()}, which may subsequently be parsed by"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,228,* another different <code>Options</code> instance.<p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,230,* @param args Args to parse
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,231,* @param stopAtNonOption stop parsing at the first non-option token
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,233,* @return {@link CommandLine} containing information related to parse state
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,235,* @throws MissingArgumentException if an argument value for an option is not present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,236,* @throws UnrecognizedOptionException if an unrecognised option is present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,237,* @throws MissingOptionException if a required option is not present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,238,* @throws AlreadySelectedException if the same option appears more than once
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,240,"public CommandLine parse(String[] args, boolean stopAtNonOption)"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,241,"throws MissingArgumentException, UnrecognizedOptionException,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,242,"MissingOptionException, AlreadySelectedException {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,243,"return parse( args, 0, args.length, stopAtNonOption);"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,246,/** <p>Parse the given list of arguments against this descriptor</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,248,* <p>This method allows parsing from <code>formIndex</code> inclusive
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,249,"* to <code>toIndex</code> exclusive, of the <code>args</code> parameter,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,250,* to allow parsing a specific portion of a command-line.<p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,252,* @param args Args to parse
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,253,* @param fromIndex index of args to start parsing
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,254,* @param toIndex index of args to stop parsing
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,256,* @return {@link CommandLine} containing information related to parse state
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,258,* @throws MissingArgumentException if an argument value for an option is not present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,259,* @throws UnrecognizedOptionException if an unrecognised option is present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,260,* @throws MissingOptionException if a required option is not present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,261,* @throws AlreadySelectedException if the same option appears more than once
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,263,"public CommandLine parse(String[] args, int fromIndex, int toIndex)"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,264,"throws MissingArgumentException, UnrecognizedOptionException,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,265,"MissingOptionException, AlreadySelectedException {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,266,"return parse( args, fromIndex, toIndex, false );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,269,/** <p>Parse the given list of arguments against this descriptor</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,271,"* <p>This method will cease parsing upon the first non-option token,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,272,* storing the rest of the tokens for access through {@link CommandLine#getArgs()}.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,274,"* <p>This is useful for parsing a command-line in pieces, such as:</p>"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,276,* <p><code>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,277,* <pre>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,278,* myApp -s &lt;server&gt; -p &lt;port&gt; command -p &lt;printer&gt; -s &lt;style&gt;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,279,* </pre>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,280,* </code></p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,282,"* <p>Here, it'll parse up-to, but not including <code>command</code>. The"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,283,* tokens <code>command -p &lt;printer&gt; -s &lt;style&gt;</code> are available
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,284,"* through {@link CommandLine#getArgs()}, which may subsequently be parsed by"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,285,* another different <code>Options</code> instance.<p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,287,* <p>This method also allows parsing from <code>formIndex</code> inclusive
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,288,"* to <code>toIndex</code> exclusive, of the <code>args</code> parameter,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,289,* to allow parsing a specific portion of a command-line.<p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,291,* @param args Args to parse
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,292,* @param fromIndex index of args to start parsing
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,293,* @param toIndex index of args to stop parsing
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,294,* @param stopAtNonOption stop parsing at the first non-option token
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,296,* @return {@link CommandLine} containing information related to parse state
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,298,* @throws MissingArgumentException if an argument value for an option is not present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,299,* @throws UnrecognizedOptionException if an unrecognised option is present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,300,* @throws MissingOptionException if a required option is not present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,301,* @throws AlreadySelectedException if the same option appears more than once
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,303,"public CommandLine parse(String[] args, int fromIndex, int toIndex, boolean stopAtNonOption)"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,304,"throws MissingArgumentException, UnrecognizedOptionException,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,305,"MissingOptionException, AlreadySelectedException {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,306,List argList = java.util.Arrays.asList( args );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,308,"return parse( argList, stopAtNonOption);"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,311,/** <p>Parse the given list of arguments against this descriptor</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,313,* @param args Args to parse
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,315,* @return {@link CommandLine} containing information related to parse state
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,317,* @throws MissingArgumentException if an argument value for an option is not present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,318,* @throws UnrecognizedOptionException if an unrecognised option is present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,319,* @throws MissingOptionException if a required option is not present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,320,* @throws AlreadySelectedException if the same option appears more than once
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,322,public CommandLine parse(List args)
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,323,"throws MissingArgumentException, UnrecognizedOptionException,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,324,"MissingOptionException, AlreadySelectedException {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,325,"return parse( args, false );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,328,/** <p>Parse the given list of arguments against this descriptor</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,330,"* <p>This method will cease parsing upon the first non-option token,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,331,* storing the rest of the tokens for access through {@link CommandLine#getArgs()}.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,333,"* <p>This is useful for parsing a command-line in pieces, such as:</p>"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,335,* <p><code>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,336,* <pre>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,337,* myApp -s &lt;server&gt; -p &lt;port&gt; command -p &lt;printer&gt; -s &lt;style&gt;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,338,* </pre>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,339,* </code></p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,341,"* <p>Here, it'll parse up-to, but not including <code>command</code>. The"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,342,* tokens <code>command -p &lt;printer&gt; -s &lt;style&gt;</code> are available
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,343,"* through {@link CommandLine#getArgs()}, which may subsequently be parsed by"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,344,* another different <code>Options</code> instance.<p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,346,* <p>This method also allows parsing from <code>formIndex</code> inclusive
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,347,"* to <code>toIndex</code> exclusive, of the <code>args</code> parameter,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,348,* to allow parsing a specific portion of a command-line.<p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,350,* @param inArgs Arguments to parse
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,351,* @param stopAtNonOption stop parsing at the first non-option token
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,353,* @return {@link CommandLine} containing information related to parse state
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,355,* @throws MissingArgumentException if an argument value for an option is not present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,356,* @throws UnrecognizedOptionException if an unrecognised option is present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,357,* @throws MissingOptionException if a required option is not present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,358,* @throws AlreadySelectedException if the same option appears more than once
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,360,"public CommandLine parse(List inArgs, boolean stopAtNonOption)"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,361,"throws MissingArgumentException, UnrecognizedOptionException,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,362,"MissingOptionException, AlreadySelectedException {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,363,CommandLine cl = new CommandLine();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,365,"List args = burst( inArgs, stopAtNonOption );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,367,ListIterator argIter = args.listIterator();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,368,String   eachArg = null;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,369,Option   eachOpt = null;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,370,boolean  eatTheRest = false;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,372,while ( argIter.hasNext() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,374,eachArg = (String) argIter.next();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,376,"if ( eachArg.equals(""--"") ) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,377,// signalled end-of-opts.  Eat the rest
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,379,eatTheRest = true;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,381,"else if ( eachArg.startsWith(""--"") ) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,382,eachOpt = (Option) longOpts.get( eachArg );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,383,"processOption( eachArg, eachOpt, argIter, cl );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,385,"else if ( eachArg.equals(""-"") ) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,386,// Just-another-argument
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,388,if ( stopAtNonOption ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,389,eatTheRest = true;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,391,else {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,392,cl.addArg( eachArg );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,395,"else if ( eachArg.startsWith(""-"") ) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,396,eachOpt = (Option) shortOpts.get( eachArg );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,397,"processOption( eachArg, eachOpt, argIter, cl );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,399,else {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,400,cl.addArg( eachArg );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,401,if ( stopAtNonOption ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,402,eatTheRest = true;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,406,if ( eatTheRest ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,407,while ( argIter.hasNext() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,408,eachArg = (String) argIter.next();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,409,cl.addArg( eachArg );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,414,// this will throw a MissingOptionException
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,415,checkRequiredOptions();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,417,return cl;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,421,* @throws MissingOptionException if all of the required options are
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,422,* not present.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,424,private void checkRequiredOptions() throws MissingOptionException {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,425,if( requiredOpts.size() > 0 ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,426,Set optKeys = requiredOpts.keySet();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,428,Iterator iter = optKeys.iterator();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,430,StringBuffer buff = new StringBuffer();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,432,while( iter.hasNext() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,433,Option missing = (Option)requiredOpts.get( iter.next() );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,434,"buff.append( ""-"" );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,435,buff.append( missing.getOpt() );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,436,"buff.append( "" "" );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,437,buff.append( missing.getDescription() );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,440,throw new MissingOptionException( buff.toString() );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,445,* <p>processOption rakes the current option and checks if it is
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,446,"* an unrecognised option, whether the argument value is missing or"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,447,* whether the option has already been selected.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,449,* @param eachArg the current option read from command line
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,450,* @param option the current option corresponding to eachArg
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,451,* @param argIter the argument iterator
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,452,* @param cl the current command line
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,454,* @throws MissingArgumentException if an argument value for an option is not present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,455,* @throws UnrecognizedOptionException if an unrecognised option is present
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,456,* @throws AlreadySelectedException if the same option appears more than once
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,458,"private void processOption( String eachArg, Option option, ListIterator argIter,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,459,CommandLine cl)
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,460,"throws UnrecognizedOptionException, AlreadySelectedException,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,461,MissingArgumentException {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,463,if ( option == null ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,464,"throw new UnrecognizedOptionException(""Unrecognized option: "" + eachArg);"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,466,else {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,468,if ( optionGroups.get( option ) != null ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,469,( (OptionGroup)( optionGroups.get( option ) ) ).setSelected( option );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,472,// if required remove from list
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,473,if ( option.isRequired() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,474,"requiredOpts.remove( ""-"" + option.getOpt() );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,477,if ( option.hasArg() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,478,if ( argIter.hasNext() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,479,eachArg = (String) argIter.next();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,480,option.addValue( eachArg );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,482,if( option.hasMultipleArgs() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,483,while( argIter.hasNext() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,484,eachArg = (String)argIter.next();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,485,"if( eachArg.startsWith(""-"") ) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,486,argIter.previous();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,487,cl.setOpt( option );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,488,break;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,490,else {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,491,option.addValue( eachArg );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,495,else {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,496,cl.setOpt( option );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,497,return;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,499,if( !argIter.hasNext() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,500,cl.setOpt( option );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,503,else {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,504,"throw new MissingArgumentException( eachArg + "" requires an argument."");"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,508,else {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,509,//option.addValue( null );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,510,cl.setOpt( option );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,516,* <p>Processes the argument list according to POSIX command line
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,517,* processing rules.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,519,* @param inArgs the argument list
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,520,* @param stopAtNonOption stop processing when the first non option
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,521,* is encountered.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,522,* @return the processed list of arguments.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,524,"private List burst(List inArgs, boolean stopAtNonOption) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,525,List args = new LinkedList();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,527,Iterator argIter = inArgs.iterator();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,528,String   eachArg = null;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,530,boolean eatTheRest = false;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,532,while ( argIter.hasNext() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,533,eachArg = (String) argIter.next();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,535,"if ( eachArg.equals(""--"") ) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,536,"// Look for -- to indicate end-of-options, and"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,537,"// just stuff it, along with everything past it"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,538,// into the returned list.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,540,args.add( eachArg );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,541,eatTheRest = true;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,543,"else if ( eachArg.startsWith(""--"") ) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,544,"// It's a long-option, so doesn't need any"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,545,// bursting applied to it.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,547,args.add( eachArg );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,549,"else if ( eachArg.startsWith(""-"") ) {"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,550,// It might be a short arg needing
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,551,// some bursting
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,553,if ( eachArg.length() == 1) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,554,"// It's not really an option, so"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,555,// just drop it on the list
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,557,if ( stopAtNonOption ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,558,eatTheRest = true;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,560,else {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,561,args.add( eachArg );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,564,else if ( eachArg.length() == 2 ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,565,// No bursting required
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,567,args.add( eachArg );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,569,else {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,570,// Needs bursting.  Figure out
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,571,"// if we have multiple options,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,572,"// or maybe an option plus an arg,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,573,// or some combination thereof.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,575,for ( int i = 1 ; i < eachArg.length() ; ++i ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,576,"String optStr = ""-"" + eachArg.charAt(i);"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,577,Option opt    = (Option) shortOpts.get( optStr );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,579,if ( (opt != null) && (opt.hasArg()) ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,580,"// If the current option has an argument,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,581,// then consider the rest of the eachArg
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,582,// to be that argument.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,584,args.add( optStr );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,586,if ( (i+1) < eachArg.length() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,587,String optArg = eachArg.substring(i+1);
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,588,args.add( optArg );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,590,break;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,592,else {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,593,"// No argument, so prepend the single dash,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,594,// and then drop it into the arglist.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,596,args.add( optStr );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,601,else {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,602,"// It's just a normal non-option arg,"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,603,// so dump it into the list of returned
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,604,// values.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,606,args.add( eachArg );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,608,if ( stopAtNonOption ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,609,eatTheRest = true;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,613,if ( eatTheRest ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,614,while ( argIter.hasNext() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,615,args.add( argIter.next() );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,620,return args;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,624,* <p>Adds the option to the necessary member lists</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,626,* @param opt the option that is to be added
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,628,private void addOption(Option opt)  {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,629,"String shortOptStr = ""-"" + opt.getOpt();"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,631,if ( opt.hasLongOpt() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,632,"longOpts.put( ""--"" + opt.getLongOpt(), opt );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,635,if ( opt.isRequired() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,636,"requiredOpts.put( ""-"" + opt.getOpt(), opt );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,639,"shortOpts.put( ""-"" + opt.getOpt(), opt );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,641,options.add( opt );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,644,/** <p>Retrieve a read-only list of options in this set</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,646,* @return read-only List of {@link Option} objects in this descriptor
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,648,public List getOptions() {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,649,return Collections.unmodifiableList(options);
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,652,/** <p>Retrieve the named {@link Option}<p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,654,* @param opt short single-character name of the {@link Option}
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,655,* @return the option represented by opt
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,657,public Option getOption(char opt) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,658,"return (Option) shortOpts.get( ""-"" + opt );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,661,/** <p>Retrieve the named {@link Option}<p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,663,* @param longOpt long name of the {@link Option}
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,664,* @return the option represented by longOpt
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,666,public Option getOption(String longOpt) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,667,return (Option) longOpts.get( longOpt );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,670,"/** <p>Dump state, suitable for debugging.</p>"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,672,* @return Stringified form of this object
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,674,public String toString() {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,675,StringBuffer buf = new StringBuffer();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,677,"buf.append(""[ Options: [ short "");"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,678,buf.append( shortOpts.toString() );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,679,"buf.append( "" ] [ long "" );"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,680,buf.append( longOpts );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,681,"buf.append( "" ]"");"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,683,return buf.toString();
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,2,"* $Header: /home/cvs/jakarta-commons-sandbox/cli/src/java/org/apache/commons/cli/ParseException.java,v 1.2 2002/06/06 09:37:26 jstrachan Exp $"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,3,* $Revision: 1.2 $
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,4,* $Date: 2002/06/06 09:37:26 $
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,10,* Copyright (c) 1999-2001 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,11,* reserved.
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,15,* are met:
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,23,*    distribution.
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,62,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,64,/** <p>Base for Exceptions thrown during parsing of a command-line<p>
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,66,* @author bob mcwhirter (bob @ werken.com)
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,67,* @version $Revision: 1.2 $
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,69,public class ParseException extends Exception
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,72,/** Construct a new Exception with a message
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,74,* @param msg Explanation of the exception
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,76,public ParseException(String msg) {
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,77,super(msg);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,2,"* $Header: /home/cvs/jakarta-commons-sandbox/cli/src/java/org/apache/commons/cli/PatternOptionBuilder.java,v 1.2 2002/06/06 22:49:36 bayard Exp $"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,3,* $Revision: 1.2 $
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,4,* $Date: 2002/06/06 22:49:36 $
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,10,* Copyright (c) 1999-2001 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,11,* reserved.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,15,* are met:
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,23,*    distribution.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,62,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,65,* Allows Options to be created from a single String.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,68,* @author Henri Yandell (bayard @ generationjava.com)
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,69,* @version $Revision: 1.2 $
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,71,public class PatternOptionBuilder {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,73,/// TODO: These need to break out to OptionType and also to be pluggable.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,75,static public final Class STRING_VALUE        = java.lang.String.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,76,static public final Class OBJECT_VALUE        = java.lang.Object.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,77,static public final Class NUMBER_VALUE        = java.lang.Number.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,78,static public final Class DATE_VALUE          = java.util.Date.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,79,static public final Class CLASS_VALUE         = java.lang.Class.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,81,/// can we do this one??
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,82,"// is meant to check that the file exists, else it errors."
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,83,// ie) it's for reading not writing.
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,84,static public final Class EXISTING_FILE_VALUE = java.io.FileInputStream.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,85,static public final Class FILE_VALUE          = java.io.File.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,86,static public final Class FILES_VALUE         = java.io.File[].class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,87,static public final Class URL_VALUE           = java.net.URL.class;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,89,static public Object getValueClass(char ch) {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,90,if (ch == '@') {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,91,return PatternOptionBuilder.OBJECT_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,92,} else if (ch == ':') {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,93,return PatternOptionBuilder.STRING_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,94,} else if (ch == '%') {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,95,return PatternOptionBuilder.NUMBER_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,96,} else if (ch == '+') {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,97,return PatternOptionBuilder.CLASS_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,98,} else if (ch == '#') {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,99,return PatternOptionBuilder.DATE_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,100,} else if (ch == '<') {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,101,return PatternOptionBuilder.EXISTING_FILE_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,102,} else if (ch == '>') {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,103,return PatternOptionBuilder.FILE_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,104,} else if (ch == '*') {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,105,return PatternOptionBuilder.FILES_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,106,} else if (ch == '/') {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,107,return PatternOptionBuilder.URL_VALUE;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,109,return null;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,112,static public boolean isValueCode(char ch) {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,113,if( (ch != '@') &&
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,114,(ch != ':') &&
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,115,(ch != '%') &&
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,116,(ch != '+') &&
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,117,(ch != '#') &&
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,118,(ch != '<') &&
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,119,(ch != '>') &&
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,120,(ch != '*') &&
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,121,(ch != '/')
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,124,return false;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,126,return true;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,129,static public Options parsePattern(String pattern) {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,130,int sz = pattern.length();
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,132,char opt = ' ';
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,133,char ch = ' ';
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,134,boolean required = false;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,135,Object type = null;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,137,Options options = new Options();
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,139,for(int i=0; i<sz; i++) {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,140,ch = pattern.charAt(i);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,142,// a value code comes after an option and specifies
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,143,// details about it
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,144,if(!isValueCode(ch)) {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,145,if(opt != ' ') {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,146,// we have a previous one to deal with
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,147,"options.addOption(opt, null, (type != null), """", required, false, type);"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,148,required = false;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,149,type = null;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,150,opt = ' ';
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,152,opt = ch;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,153,} else
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,154,if(ch == '!') {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,155,required = true;
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,156,} else {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,157,type = getValueClass(ch);
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,161,if(opt != ' ') {
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,162,// we have a final one to deal with
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,163,"options.addOption(opt, null, (type != null), """", required, false, type);"
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,166,return options;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,2,"* $Header: /home/cvs/jakarta-commons-sandbox/cli/src/java/org/apache/commons/cli/TypeHandler.java,v 1.2 2002/06/06 22:49:36 bayard Exp $"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,3,* $Revision: 1.2 $
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,4,* $Date: 2002/06/06 22:49:36 $
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,10,* Copyright (c) 1999-2001 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,11,* reserved.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,15,* are met:
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,23,*    distribution.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,62,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,64,import java.io.File;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,65,import java.net.URL;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,66,import java.net.MalformedURLException;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,67,import java.util.Date;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,69,import org.apache.commons.lang.Numbers;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,72,* This is a temporary implementation. TypeHandler will handle the
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,73,* pluggableness of OptionTypes and it will direct all of these types
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,74,* of conversion functionalities to ConvertUtils component in Commons
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,75,* alreayd. BeanUtils I think.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,77,* @author Henri Yandell (bayard @ generationjava.com)
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,78,* @version $Revision: 1.2 $
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,80,public class TypeHandler {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,82,"static public Object createValue(String str, Object obj) {"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,83,"return createValue(str, (Class)obj);"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,85,"static public Object createValue(String str, Class clazz) {"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,86,if( PatternOptionBuilder.STRING_VALUE == clazz) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,87,return str;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,88,} else
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,89,if( PatternOptionBuilder.OBJECT_VALUE == clazz) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,90,return createObject(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,91,} else
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,92,if( PatternOptionBuilder.NUMBER_VALUE == clazz) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,93,return createNumber(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,94,} else
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,95,if( PatternOptionBuilder.DATE_VALUE   == clazz) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,96,return createDate(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,97,} else
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,98,if( PatternOptionBuilder.CLASS_VALUE  == clazz) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,99,return createClass(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,100,} else
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,101,if( PatternOptionBuilder.FILE_VALUE   == clazz) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,102,return createFile(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,103,} else
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,104,if( PatternOptionBuilder.EXISTING_FILE_VALUE   == clazz) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,105,return createFile(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,106,} else
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,107,if( PatternOptionBuilder.FILES_VALUE  == clazz) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,108,return createFiles(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,109,} else
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,110,if( PatternOptionBuilder.URL_VALUE    == clazz) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,111,return createURL(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,112,} else {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,113,return null;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,118,* Create an Object from the classname and empty constructor.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,119,* Returns null if it couldn't create the Object.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,121,static public Object createObject(String str) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,122,Class cl = null;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,123,try {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,124,cl = Class.forName(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,125,} catch (ClassNotFoundException cnfe) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,126,"System.err.println(""Unable to find: ""+str);"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,127,return null;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,130,Object instance = null;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,132,try {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,133,instance = cl.newInstance();
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,134,} catch (InstantiationException cnfe) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,135,"System.err.println(""InstantiationException; Unable to create: ""+str);"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,136,return null;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,138,catch (IllegalAccessException cnfe) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,139,"System.err.println(""IllegalAccessException; Unable to create: ""+str);"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,140,return null;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,143,return instance;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,147,* Create a number from a String.
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,149,static public Number createNumber(String str) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,150,// Needs to be able to create
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,151,try {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,152,"// do searching for decimal point etc, but atm just make an Integer"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,153,return Numbers.createNumber(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,154,} catch (NumberFormatException nfe) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,155,System.err.println(nfe.getMessage());
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,156,return null;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,160,static public Class createClass(String str) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,161,try {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,162,return Class.forName(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,163,} catch (ClassNotFoundException cnfe) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,164,"System.err.println(""Unable to find: ""+str);"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,165,return null;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,169,static public Date createDate(String str) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,170,Date date = null;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,171,if(date == null) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,172,"System.err.println(""Unable to parse: ""+str);"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,174,return date;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,177,static public URL createURL(String str) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,178,try {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,179,return new URL(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,180,} catch (MalformedURLException mue) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,181,"System.err.println(""Unable to parse: ""+str);"
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,182,return null;
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,186,static public File createFile(String str) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,187,return new File(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,190,static public File[] createFiles(String str) {
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,191,// to implement/port:
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,192,//        return FileW.findFiles(str);
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,193,return null;
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,2,"* $Header: /home/cvs/jakarta-commons-sandbox/cli/src/java/org/apache/commons/cli/UnrecognizedOptionException.java,v 1.2 2002/06/06 09:37:26 jstrachan Exp $"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,3,* $Revision: 1.2 $
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,4,* $Date: 2002/06/06 09:37:26 $
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,10,* Copyright (c) 1999-2001 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,11,* reserved.
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,15,* are met:
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,23,*    distribution.
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,62,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,64,/** <p>Exception thrown during parsing signalling an unrecognized
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,65,* option was seen.<p>
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,68,* @author bob mcwhiter (bob @ werken.com)
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,69,* @version $Revision: 1.2 $
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,71,public class UnrecognizedOptionException extends ParseException {
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,73,/** Construct a new Exception with a message
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,75,* @param msg Explanation of the exception
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,77,public UnrecognizedOptionException(String msg) {
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,78,super(msg);
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,2,* Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,4,* This software is published under the terms of the Apache Software License
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,5,"* version 1.1, a copy of which has been included with this distribution in"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,6,* the LICENSE file.
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,8,"* $Id: BuildTest.java,v 1.1 2001/12/19 18:16:25 jstrachan Exp $"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,11,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,13,import junit.framework.Test;
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,14,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,15,import junit.framework.TestSuite;
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,17,public class BuildTest extends TestCase
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,20,public static Test suite() {
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,21,return new TestSuite(BuildTest.class);
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,24,public BuildTest(String name)
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,26,super(name);
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,29,public void setUp()
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,34,public void tearDown()
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,39,public void testSimple()
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,41,Options opts = new Options();
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,43,"opts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,44,"false,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,45,"""toggle -a"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,47,"opts.addOption('b',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,48,"true,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,49,"""toggle -b"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,51,try
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,53,"opts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,54,"false,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,55,"""toggle -a"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,57,"opts.addOption('b',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,58,"true,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,59,"""toggle -b"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,61,catch (DuplicateOptionException e)
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,63,fail(e.toString());
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,68,public void testDuplicateSimple()
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,70,Options opts = new Options();
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,71,"opts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,72,"false,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,73,"""toggle -a"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,75,"opts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,76,"true,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,77,"""toggle -a*"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,79,"assertEquals( ""last one in wins"", ""toggle -a*"", opts.getOption('a').getDescription() );"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,81,try
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,83,"opts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,84,"false,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,85,"""toggle -a"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,87,"opts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,88,"true,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,89,"""toggle -a"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,91,"fail(""Should've thrown DuplicateOptionException"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,93,catch (DuplicateOptionException e)
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,99,public void testLong()
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,101,Options opts = new Options();
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,103,"opts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,104,"""--a"","
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,105,"false,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,106,"""toggle -a"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,108,"opts.addOption('b',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,109,"""--b"","
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,110,"true,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,111,"""set -b"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,114,try
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,116,"opts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,117,"""--a"","
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,118,"false,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,119,"""toggle -a"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,121,"opts.addOption('b',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,122,"""--b"","
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,123,"true,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,124,"""set -b"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,126,catch (DuplicateOptionException e)
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,128,fail(e.toString());
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,133,public void testDuplicateLong()
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,135,Options opts = new Options();
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,136,"opts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,137,"""--a"","
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,138,"false,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,139,"""toggle -a"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,141,"opts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,142,"""--a"","
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,143,"false,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,144,"""toggle -a*"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,145,"assertEquals( ""last one in wins"", ""toggle -a*"", opts.getOption('a').getDescription() );"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,147,try
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,149,"opts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,150,"""--a"","
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,151,"false,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,152,"""toggle -a"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,154,"opts.addOption('a',"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,155,"""--a"","
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,156,"false,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,157,"""toggle -a"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,159,"fail(""Should've thrown DuplicateOptionException"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,161,catch (DuplicateOptionException e)
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,2,* Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,4,* This software is published under the terms of the Apache Software License
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,5,"* version 1.1, a copy of which has been included with this distribution in"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,6,* the LICENSE file.
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,8,"* $Id: HelpFormatterExamples.java,v 1.2 2002/05/17 11:44:32 jstrachan Exp $"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,10,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,13,* A sample program shpwing the use of Options and the HelpFormatter class
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,15,* @author Slawek Zachcial
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,17,public class HelpFormatterExamples
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,19,// --------------------------------------------------------------- Constants
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,21,// ------------------------------------------------------------------ Static
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,23,public static void main( String[] args )
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,25,"System.out.println(""\n#\n# 'man' example\n#"");"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,26,manExample();
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,28,"System.out.println(""\n#\n# 'bzip2' example\n#"");"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,29,bzip2Example();
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,30,"System.out.println(""\n#\n# 'ls' example\n#"");"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,31,lsExample();
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,35,static void manExample()
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,37,String cmdLine =
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,38,"""man [-c|-f|-k|-w|-tZT device] [-adlhu7V] [-Mpath] [-Ppager] [-Slist] "" +"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,39,"""[-msystem] [-pstring] [-Llocale] [-eextension] [section] page ..."";"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,40,Options opts =
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,41,new Options().
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,42,"addOption('a', ""all"",            false, ""find all matching manual pages."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,43,"addOption('d', ""debug"",          false, ""emit debugging messages."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,44,"addOption('e', ""extension"",      false, ""limit search to extension type 'extension'."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,45,"addOption('f', ""whatis"",         false, ""equivalent to whatis."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,46,"addOption('k', ""apropos"",        false, ""equivalent to apropos."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,47,"addOption('w', ""location"",       false, ""print physical location of man page(s)."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,48,"addOption('l', ""local-file"",     false, ""interpret 'page' argument(s) as local filename(s)"")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,49,"addOption('u', ""update"",         false, ""force a cache consistency check."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,50,"//FIXME - should generate -r,--prompt string"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,51,"addOption('r', ""prompt"",         true,  ""provide 'less' pager with prompt."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,52,"addOption('c', ""catman"",         false, ""used by catman to reformat out of date cat pages."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,53,"addOption('7', ""ascii"",          false, ""display ASCII translation or certain latin1 chars."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,54,"addOption('t', ""troff"",          false, ""use troff format pages."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,55,"//FIXME - should generate -T,--troff-device device"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,56,"addOption('T', ""troff-device"",   true,  ""use groff with selected device."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,57,"addOption('Z', ""ditroff"",        false, ""use groff with selected device."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,58,"addOption('D', ""default"",        false, ""reset all options to their default values."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,59,"//FIXME - should generate -M,--manpath path"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,60,"addOption('M', ""manpath"",        true,  ""set search path for manual pages to 'path'."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,61,"//FIXME - should generate -P,--pager pager"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,62,"addOption('P', ""pager"",          true,  ""use program 'pager' to display output."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,63,"//FIXME - should generate -S,--sections list"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,64,"addOption('S', ""sections"",       true,  ""use colon separated section list."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,65,"//FIXME - should generate -m,--systems system"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,66,"addOption('m', ""systems"",        true,  ""search for man pages from other unix system(s)."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,67,"//FIXME - should generate -L,--locale locale"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,68,"addOption('L', ""locale"",         true,  ""defaine the locale for this particular man search."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,69,"//FIXME - should generate -p,--preprocessor string"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,70,"addOption('p', ""preprocessor"",   true,  ""string indicates which preprocessor to run.\n"" +"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,71,""" e - [n]eqn  p - pic     t - tbl\n"" +"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,72,""" g - grap    r - refer   v - vgrind"")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,73,"addOption('V', ""version"",        false, ""show version."")."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,74,"addOption('h', ""help"",           false, ""show this usage message."");"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,76,HelpFormatter hf = new HelpFormatter();
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,77,"//hf.printHelp(cmdLine, opts);"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,78,"hf.printHelp(60, cmdLine, null, opts, null);"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,81,static void bzip2Example()
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,83,"System.out.println( ""Coming soon"" );"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,86,static void lsExample()
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,88,"System.out.println( ""Coming soon"" );"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,92,// -------------------------------------------------------------- Attributes
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,94,// ------------------------------------------------------------ Constructors
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,96,// ------------------------------------------------------------------ Public
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,98,// --------------------------------------------------------------- Protected
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,100,// ------------------------------------------------------- Package protected
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,102,// ----------------------------------------------------------------- Private
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,104,// ----------------------------------------------------------- Inner classes
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,2,* Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,4,* This software is published under the terms of the Apache Software License
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,5,"* version 1.1, a copy of which has been included with this distribution in"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,6,* the LICENSE file.
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,8,"* $Id: OptionGroupTest.java,v 1.1 2002/04/23 16:08:02 jstrachan Exp $"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,11,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,13,import junit.framework.Test;
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,14,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,15,import junit.framework.TestSuite;
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,18,* @author John Keyes (john at integralsource.com)
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,19,* @version $Revision: 1.1 $
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,21,public class OptionGroupTest extends TestCase
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,24,private Options _options = null;
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,26,public static Test suite()
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,28,return new TestSuite ( OptionGroupTest.class );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,31,public OptionGroupTest( String name )
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,33,super( name );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,36,public void setUp()
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,38,"Option file = new Option( 'f', ""file"", false, ""file to process"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,39,"Option dir = new Option( 'd', ""directory"", false, ""directory to process"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,40,OptionGroup group = new OptionGroup();
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,41,group.addOption( file );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,42,group.addOption( dir );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,43,_options = new Options().addOptionGroup( group );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,45,"Option section = new Option( 's', ""section"", false, ""section to process"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,46,"Option chapter = new Option( 'c', ""chapter"", false, ""chapter to process"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,47,OptionGroup group2 = new OptionGroup();
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,48,group2.addOption( section );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,49,group2.addOption( chapter );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,51,_options.addOptionGroup( group2 );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,52,"_options.addOption( 'r', ""revision"", false, ""revision number"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,55,public void tearDown()
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,59,public void testSingleOptionFromGroup()
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,61,"String[] args = new String[] { ""-f"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,63,try
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,65,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,67,"assertTrue( ""Confirm -r is NOT set"", !cl.hasOption('r') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,68,"assertTrue( ""Confirm -f is set"", cl.hasOption('f') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,69,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption('d') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,70,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption('s') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,71,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,72,"assertTrue( ""Confirm no extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,74,catch (ParseException e)
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,76,fail( e.toString() );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,80,public void testSingleOption()
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,82,"String[] args = new String[] { ""-r"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,84,try
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,86,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,88,"assertTrue( ""Confirm -r is set"", cl.hasOption('r') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,89,"assertTrue( ""Confirm -f is NOT set"", !cl.hasOption('f') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,90,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption('d') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,91,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption('s') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,92,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,93,"assertTrue( ""Confirm no extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,95,catch (ParseException e)
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,97,fail( e.toString() );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,101,public void testTwoValidOptions()
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,103,"String[] args = new String[] { ""-r"", ""-f"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,105,try
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,107,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,109,"assertTrue( ""Confirm -r is set"", cl.hasOption('r') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,110,"assertTrue( ""Confirm -f is set"", cl.hasOption('f') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,111,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption('d') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,112,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption('s') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,113,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,114,"assertTrue( ""Confirm no extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,116,catch (ParseException e)
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,118,fail( e.toString() );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,122,public void testSingleLongOption()
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,124,"String[] args = new String[] { ""--file"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,126,try
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,128,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,130,"assertTrue( ""Confirm -r is NOT set"", !cl.hasOption('r') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,131,"assertTrue( ""Confirm -f is set"", cl.hasOption('f') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,132,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption('d') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,133,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption('s') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,134,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,135,"assertTrue( ""Confirm no extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,137,catch (ParseException e)
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,139,fail( e.toString() );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,143,public void testTwoValidLongOptions()
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,145,"String[] args = new String[] { ""--revision"", ""--file"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,147,try
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,149,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,151,"assertTrue( ""Confirm -r is set"", cl.hasOption('r') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,152,"assertTrue( ""Confirm -f is set"", cl.hasOption('f') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,153,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption('d') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,154,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption('s') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,155,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,156,"assertTrue( ""Confirm no extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,158,catch (ParseException e)
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,160,fail( e.toString() );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,164,public void testNoOptionsExtraArgs()
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,166,"String[] args = new String[] { ""arg1"", ""arg2"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,168,try
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,170,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,172,"assertTrue( ""Confirm -r is NOT set"", !cl.hasOption('r') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,173,"assertTrue( ""Confirm -f is NOT set"", !cl.hasOption('f') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,174,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption('d') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,175,"assertTrue( ""Confirm -s is NOT set"", !cl.hasOption('s') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,176,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,177,"assertTrue( ""Confirm TWO extra args"", cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,179,catch (ParseException e)
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,181,fail( e.toString() );
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,185,public void testTwoOptionsFromGroup()
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,187,"String[] args = new String[] { ""-f"", ""-d"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,189,try
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,191,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,192,"fail( ""two arguments from group not allowed"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,194,catch (ParseException e)
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,196,if( !( e instanceof AlreadySelectedException ) )
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,198,"fail( ""incorrect exception caught:"" + e.getMessage() );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,203,public void testTwoLongOptionsFromGroup()
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,205,"String[] args = new String[] { ""--file"", ""--directory"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,207,try
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,209,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,210,"fail( ""two arguments from group not allowed"" );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,212,catch (ParseException e)
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,214,if( !( e instanceof AlreadySelectedException ) )
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,216,"fail( ""incorrect exception caught:"" + e.getMessage() );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,221,public void testTwoOptionsFromDifferentGroup()
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,223,"String[] args = new String[] { ""-f"", ""-s"" };"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,225,try
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,227,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,228,"assertTrue( ""Confirm -r is NOT set"", !cl.hasOption('r') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,229,"assertTrue( ""Confirm -f is set"", cl.hasOption('f') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,230,"assertTrue( ""Confirm -d is NOT set"", !cl.hasOption('d') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,231,"assertTrue( ""Confirm -s is set"", cl.hasOption('s') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,232,"assertTrue( ""Confirm -c is NOT set"", !cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,233,"assertTrue( ""Confirm NO extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,235,catch (ParseException e)
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,237,fail( e.toString() );
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,2,* Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,4,* This software is published under the terms of the Apache Software License
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,5,"* version 1.1, a copy of which has been included with this distribution in"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,6,* the LICENSE file.
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,8,"* $Id: ParseRequiredTest.java,v 1.1 2002/04/23 16:08:02 jstrachan Exp $"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,11,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,13,import junit.framework.Test;
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,14,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,15,import junit.framework.TestSuite;
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,18,* @author John Keyes (john at integralsource.com)
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,19,* @version $Revision: 1.1 $
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,21,public class ParseRequiredTest extends TestCase
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,24,private Options _options = null;
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,26,public static Test suite() {
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,27,return new TestSuite(ParseRequiredTest.class);
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,30,public ParseRequiredTest(String name)
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,32,super(name);
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,35,public void setUp()
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,37,_options = new Options()
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,38,".addOption('a',"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,39,"""enable-a"","
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,40,"false,"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,41,"""turn [a] on or off"")"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,42,".addOption('b',"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,43,"""bfile"","
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,44,"true,"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,45,"""set the value of [b]"","
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,46,true);
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,49,public void tearDown()
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,54,public void testWithRequiredOption()
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,56,"String[] args = new String[] {  ""-b"", ""file"" };"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,58,try
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,60,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,62,"assertTrue( ""Confirm -a is NOT set"", !cl.hasOption('a') );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,63,"assertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,64,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""file"") );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,65,"assertTrue( ""Confirm NO of extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,67,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,69,fail( e.toString() );
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,73,public void testOptionAndRequiredOption()
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,75,"String[] args = new String[] {  ""-a"", ""-b"", ""file"" };"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,77,try
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,79,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,81,"assertTrue( ""Confirm -a is set"", cl.hasOption('a') );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,82,"assertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,83,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""file"") );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,84,"assertTrue( ""Confirm NO of extra args"", cl.getArgList().size() == 0);"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,86,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,88,fail( e.toString() );
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,92,public void testMissingRequiredOption()
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,94,"String[] args = new String[] { ""-a"" };"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,96,try
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,98,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,99,"fail( ""exception should have been thrown"" );"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,101,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,103,if( !( e instanceof MissingOptionException ) )
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,105,"fail( ""expected to catch MissingOptionException"" );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,2,* Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,4,* This software is published under the terms of the Apache Software License
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,5,"* version 1.1, a copy of which has been included with this distribution in"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,6,* the LICENSE file.
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,8,"* $Id: ParseTest.java,v 1.1 2001/12/19 18:16:25 jstrachan Exp $"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,11,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,13,import junit.framework.Test;
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,14,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,15,import junit.framework.TestSuite;
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,17,public class ParseTest extends TestCase
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,20,private Options _options = null;
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,22,public static Test suite() {
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,23,return new TestSuite(ParseTest.class);
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,26,public ParseTest(String name)
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,28,super(name);
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,31,public void setUp()
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,33,_options = new Options()
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,34,".addOption('a',"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,35,"""enable-a"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,36,"false,"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,37,"""turn [a] on or off"")"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,38,".addOption('b',"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,39,"""bfile"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,40,"true,"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,41,"""set the value of [b]"")"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,42,".addOption('c',"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,43,"""copt"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,44,"false,"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,45,"""turn [c] on or off"");"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,47,try
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,49,_options
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,50,".addOption('a',"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,51,"""enable-a"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,52,"false,"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,53,"""turn [a] on or off"")"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,54,".addOption('b',"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,55,"""bfile"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,56,"true,"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,57,"""set the value of [b]"")"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,58,".addOption('c',"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,59,"""copt"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,60,"false,"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,61,"""turn [c] on or off"");"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,64,catch (CLIException e)
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,66,e.printStackTrace();
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,71,public void tearDown()
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,76,public void testSimpleShort()
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,78,"String[] args = new String[] { ""-a"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,79,"""-b"", ""toast"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,80,"""foo"", ""bar"" };"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,82,try
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,84,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,86,"assertTrue( ""Confirm -a is set"", cl.hasOption('a') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,87,"assertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,88,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""toast"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,89,"assertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,91,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,93,fail( e.toString() );
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,97,public void testSimpleLong()
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,99,"String[] args = new String[] { ""--enable-a"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,100,"""--bfile"", ""toast"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,101,"""foo"", ""bar"" };"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,103,try
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,105,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,107,"assertTrue( ""Confirm -a is set"", cl.hasOption('a') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,108,"assertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,109,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""toast"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,110,"assertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,112,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,114,fail( e.toString() );
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,118,public void testComplexShort()
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,120,"String[] args = new String[] { ""-acbtoast"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,121,"""foo"", ""bar"" };"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,123,try
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,125,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,127,"assertTrue( ""Confirm -a is set"", cl.hasOption('a') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,128,"assertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,129,"assertTrue( ""Confirm -c is set"", cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,130,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""toast"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,131,"assertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,133,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,135,fail( e.toString() );
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,139,public void testExtraOption()
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,141,"String[] args = new String[] { ""-adbtoast"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,142,"""foo"", ""bar"" };"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,144,boolean caught = false;
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,146,try
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,148,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,150,"assertTrue( ""Confirm -a is set"", cl.hasOption('a') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,151,"assertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,152,"assertTrue( ""confirm arg of -b"", cl.getOptionValue('b').equals(""toast"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,153,"assertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 3);"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,155,catch (UnrecognizedOptionException e)
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,157,caught = true;
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,159,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,161,fail( e.toString() );
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,163,"assertTrue( ""Confirm UnrecognizedOptionException caught"", caught );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,166,public void testMissingArg()
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,169,"String[] args = new String[] { ""-acb"" };"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,171,boolean caught = false;
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,173,try
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,175,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,177,catch (MissingArgumentException e)
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,179,caught = true;
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,181,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,183,fail( e.toString() );
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,186,"assertTrue( ""Confirm MissingArgumentException caught"", caught );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,189,public void testStop()
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,191,"String[] args = new String[] { ""-c"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,192,"""foober"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,193,"""-btoast"" };"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,195,try
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,197,"CommandLine cl = _options.parse(args,"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,198,true);
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,199,"assertTrue( ""Confirm -c is set"", cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,200,"assertTrue( ""Confirm  2 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,202,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,204,fail( e.toString() );
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,208,public void testMultiple()
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,210,"String[] args = new String[] { ""-c"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,211,"""foobar"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,212,"""-btoast"" };"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,214,try
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,216,"CommandLine cl = _options.parse(args,"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,217,true);
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,218,"assertTrue( ""Confirm -c is set"", cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,219,"assertTrue( ""Confirm  2 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,221,cl = _options.parse( cl.getArgList() );
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,223,"assertTrue( ""Confirm -c is not set"", ! cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,224,"assertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,225,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""toast"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,226,"assertTrue( ""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,227,"assertTrue( ""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,229,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,231,fail( e.toString() );
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,235,public void testMultipleWithLong()
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,237,"String[] args = new String[] { ""--copt"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,238,"""foobar"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,239,"""--bfile"", ""toast"" };"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,241,try
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,243,"CommandLine cl = _options.parse(args,"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,244,true);
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,245,"assertTrue( ""Confirm -c is set"", cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,246,"assertTrue( ""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,248,cl = _options.parse( cl.getArgList() );
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,250,"assertTrue( ""Confirm -c is not set"", ! cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,251,"assertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,252,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""toast"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,253,"assertTrue( ""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,254,"assertTrue( ""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,256,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,258,fail( e.toString() );
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,262,public void testDoubleDash()
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,264,"String[] args = new String[] { ""--copt"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,266,"""-b"", ""toast"" };"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,268,try
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,270,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,272,"assertTrue( ""Confirm -c is set"", cl.hasOption('c') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,273,"assertTrue( ""Confirm -b is not set"", ! cl.hasOption('b') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,274,"assertTrue( ""Confirm 2 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 2);"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,277,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,279,fail( e.toString() );
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,283,public void testSingleDash()
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,285,"String[] args = new String[] { ""--copt"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,286,"""-b"", ""-"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,287,"""-a"","
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,290,try
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,292,CommandLine cl = _options.parse(args);
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,294,"assertTrue( ""Confirm -a is set"", cl.hasOption('a') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,295,"assertTrue( ""Confirm -b is set"", cl.hasOption('b') );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,296,"assertTrue( ""Confirm arg of -b"", cl.getOptionValue('b').equals(""-"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,297,"assertTrue( ""Confirm 1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,298,"assertTrue( ""Confirm value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""-"") );"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,300,catch (ParseException e)
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,302,fail( e.toString() );
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,2,* Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,4,* This software is published under the terms of the Apache Software License
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,5,"* version 1.1, a copy of which has been included with this distribution in"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,6,* the LICENSE file.
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,8,"* $Id: PatternOptionBuilderTest.java,v 1.1 2002/06/06 22:09:25 bayard Exp $"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,10,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,12,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,13,import junit.framework.TestSuite;
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,15,import java.io.StringWriter;
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,16,import java.io.PrintWriter;
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,19,* Test case for the PatternOptionBuilder class
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,21,* @author Henri Yandell
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,23,public class PatternOptionBuilderTest
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,24,extends TestCase
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,26,public static void main( String[] args )
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,28,String[] testName = { PatternOptionBuilderTest.class.getName() };
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,29,junit.textui.TestRunner.main(testName);
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,32,public static TestSuite suite()
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,34,return new TestSuite(PatternOptionBuilderTest.class);
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,37,public PatternOptionBuilderTest( String s )
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,39,super( s );
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,42,public void testSimplePattern()
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,43,throws Exception
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,45,"Options options = PatternOptionBuilder.parsePattern(""a:b@cde>f+n%t/"");"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,46,"String[] args = new String[] { ""-c"", ""-a"", ""foo"", ""-b"", ""java.util.Vector"", ""-e"", ""build.xml"", ""-f"", ""java.util.Calendar"", ""-n"", ""4.5"", ""-t"", ""http://jakarta.apache.org/"" };"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,48,CommandLine line = options.parse(args);
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,49,"assertEquals(""flag a"", ""foo"", line.getOptionValue('a'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,50,"assertEquals(""string flag a"", ""foo"", line.getOptionObject('a'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,51,"assertEquals(""object flag b"", new java.util.Vector(), line.getOptionObject('b'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,52,"assertEquals(""boolean true flag c"", true, line.hasOption('c'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,53,"assertEquals(""boolean false flag d"", false, line.hasOption('d'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,54,"assertEquals(""file flag e"", new java.io.File(""build.xml""), line.getOptionObject('e'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,55,"assertEquals(""class flag f"", java.util.Calendar.class, line.getOptionObject('f'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,56,"assertEquals(""number flag n"", new Float(4.5), line.getOptionObject('n'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,57,"assertEquals(""url flag t"", new java.net.URL(""http://jakarta.apache.org/""), line.getOptionObject('t'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,58,/// DATES NOT SUPPORTED YET.
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,59,"//      assertEquals(""number flag t"", new java.util.Date(1023400137276L), line.getOptionObject('z'));"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,60,"//     input is:  ""Thu Jun 06 17:48:57 EDT 2002"""
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,2,* Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,4,* This software is published under the terms of the Apache Software License
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,5,"* version 1.1, a copy of which has been included with this distribution in"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,6,* the LICENSE file.
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,8,"* $Id: TestHelpFormatter.java,v 1.2 2002/05/17 11:44:32 jstrachan Exp $"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,10,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,12,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,13,import junit.framework.TestSuite;
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,15,import java.io.StringWriter;
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,16,import java.io.PrintWriter;
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,19,* Test case for the HelpFormatter class
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,21,* @author Slawek Zachcial
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,23,public class TestHelpFormatter
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,24,extends TestCase
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,26,// --------------------------------------------------------------- Constants
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,28,// ------------------------------------------------------------------ Static
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,30,public static void main( String[] args )
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,32,String[] testName = { TestHelpFormatter.class.getName() };
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,33,junit.textui.TestRunner.main(testName);
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,36,public static TestSuite suite()
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,38,return new TestSuite(TestHelpFormatter.class);
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,41,// -------------------------------------------------------------- Attributes
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,43,// ------------------------------------------------------------ Constructors
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,44,public TestHelpFormatter( String s )
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,46,super( s );
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,48,// ------------------------------------------------------------------ Public
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,50,public void testFindWrapPos()
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,51,throws Exception
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,53,HelpFormatter hf = new HelpFormatter();
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,55,"String text = ""This is a test."";"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,56,//text width should be max 8; the wrap postition is 7
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,57,"assertEquals(""wrap position"", 7, hf.findWrapPos(text, 8, 0));"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,58,//starting from 8 must give -1 - the wrap pos is after end
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,59,"assertEquals(""wrap position 2"", -1, hf.findWrapPos(text, 8, 8));"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,60,//if there is no a good position before width to make a wrapping look for the next one
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,61,"text = ""aaaa aa"";"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,62,"assertEquals(""wrap position 3"", 4, hf.findWrapPos(text, 3, 0));"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,65,public void testPrintWrapped()
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,66,throws Exception
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,68,StringBuffer sb = new StringBuffer();
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,69,HelpFormatter hf = new HelpFormatter();
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,71,"String text = ""This is a test."";"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,72,String expected;
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,74,"expected = ""This is a"" + hf.defaultNewLine + ""test."";"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,75,"hf.renderWrappedText(sb, 12, 0, text);"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,76,"assertEquals(""single line text"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,78,sb.setLength(0);
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,79,"expected = ""This is a"" + hf.defaultNewLine + ""    test."";"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,80,"hf.renderWrappedText(sb, 12, 4, text);"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,81,"assertEquals(""single line padded text"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,83,text =
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,84,"""aaaa aaaa aaaa"" + hf.defaultNewLine +"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,85,"""aaaaaa"" + hf.defaultNewLine +"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,86,"""aaaaa"";"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,88,expected = text;
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,89,sb.setLength(0);
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,90,"hf.renderWrappedText(sb, 16, 0, text);"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,91,"assertEquals(""multi line text"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,93,expected =
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,94,"""aaaa aaaa aaaa"" + hf.defaultNewLine +"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,95,"""    aaaaaa"" + hf.defaultNewLine +"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,96,"""    aaaaa"";"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,97,sb.setLength(0);
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,98,"hf.renderWrappedText(sb, 16, 4, text);"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,99,"assertEquals(""multi-line padded text"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,102,public void testPrintOptions()
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,103,throws Exception
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,105,StringBuffer sb = new StringBuffer();
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,106,HelpFormatter hf = new HelpFormatter();
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,107,final int leftPad = 1;
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,108,final int descPad = 3;
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,109,final String lpad = hf.createPadding(leftPad);
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,110,final String dpad = hf.createPadding(descPad);
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,111,Options options = null;
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,112,String expected = null;
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,114,"options = new Options().addOption('a', false, ""aaaa aaaa aaaa aaaa aaaa"");"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,115,"expected = lpad + ""-a"" + dpad + ""aaaa aaaa aaaa aaaa aaaa"";"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,116,"hf.renderOptions(sb, 60, options, leftPad, descPad);"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,117,"assertEquals(""simple non-wrapped option"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,119,"int nextLineTabStop = leftPad+descPad+""-a"".length();"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,120,expected =
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,121,"lpad + ""-a"" + dpad + ""aaaa aaaa aaaa"" + hf.defaultNewLine +"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,122,"hf.createPadding(nextLineTabStop) + ""aaaa aaaa"";"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,123,sb.setLength(0);
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,124,"hf.renderOptions(sb, nextLineTabStop+17, options, leftPad, descPad);"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,125,"assertEquals(""simple wrapped option"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,128,"options = new Options().addOption('a', ""aaa"", false, ""dddd dddd dddd dddd"");"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,129,"expected = lpad + ""-a,--aaa"" + dpad + ""dddd dddd dddd dddd"";"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,130,sb.setLength(0);
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,131,"hf.renderOptions(sb, 60, options, leftPad, descPad);"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,132,"assertEquals(""long non-wrapped option"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,134,"nextLineTabStop = leftPad+descPad+""-a,--aaa"".length();"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,135,expected =
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,136,"lpad + ""-a,--aaa"" + dpad + ""dddd dddd"" + hf.defaultNewLine +"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,137,"hf.createPadding(nextLineTabStop) + ""dddd dddd"";"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,138,sb.setLength(0);
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,139,"hf.renderOptions(sb, 25, options, leftPad, descPad);"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,140,"assertEquals(""long wrapped option"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,142,options = new Options().
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,143,"addOption('a', ""aaa"", false, ""dddd dddd dddd dddd"")."
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,144,"addOption('b', false, ""feeee eeee eeee eeee"");"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,145,expected =
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,146,"lpad + ""-a,--aaa"" + dpad + ""dddd dddd"" + hf.defaultNewLine +"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,147,"hf.createPadding(nextLineTabStop) + ""dddd dddd"" + hf.defaultNewLine +"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,148,"lpad + ""-b      "" + dpad + ""feeee eeee"" + hf.defaultNewLine +"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,149,"hf.createPadding(nextLineTabStop) + ""eeee eeee"";"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,150,sb.setLength(0);
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,151,"hf.renderOptions(sb, 25, options, leftPad, descPad);"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,152,"assertEquals(""multiple wrapped options"", expected, sb.toString());"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,155,// --------------------------------------------------------------- Protected
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,157,// ------------------------------------------------------- Package protected
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,159,// ----------------------------------------------------------------- Private
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,161,// ----------------------------------------------------------- Inner classes
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,2,* Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,4,* This software is published under the terms of the Apache Software License
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,5,"* version 1.1, a copy of which has been included with this distribution in"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,6,* the LICENSE file.
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,8,"* $Id: ValueTest.java,v 1.1 2001/12/19 18:16:25 jstrachan Exp $"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,11,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,13,import junit.framework.Test;
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,14,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,15,import junit.framework.TestSuite;
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,17,public class ValueTest extends TestCase
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,20,public static Test suite() {
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,21,return new TestSuite(ValueTest.class);
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,23,TestSuite suite = new TestSuite();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,25,"suite.addTest( new ValueTest(""testLongNoArg"") );"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,27,return suite;
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,31,private CommandLine _cl = null;
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,34,public ValueTest(String name)
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,36,super(name);
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,39,public void setUp()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,41,Options opts = new Options();
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,42,"opts.addOption('a',"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,43,"false,"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,44,"""toggle -a"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,46,"opts.addOption('b',"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,47,"true,"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,48,"""set -b"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,50,"opts.addOption('c',"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,51,"""c"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,52,"false,"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,53,"""toggle -c"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,55,"opts.addOption('d',"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,56,"""d"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,57,"true,"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,58,"""set -d"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,61,try
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,63,"opts.addOption('a',"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,64,"false,"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,65,"""toggle -a"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,67,"opts.addOption('b',"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,68,"true,"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,69,"""set -b"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,71,"opts.addOption('c',"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,72,"""c"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,73,"false,"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,74,"""toggle -c"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,76,"opts.addOption('d',"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,77,"""d"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,78,"true,"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,79,"""set -d"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,81,catch (DuplicateOptionException e)
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,83,"fail(""Cannot setUp() Options: "" + e.toString());"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,87,"String[] args = new String[] { ""-a"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,88,"""-b"", ""foo"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,89,"""--c"","
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,90,"""--d"", ""bar"" };"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,92,try
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,94,_cl = opts.parse(args);
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,96,catch (ParseException e)
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,98,"fail(""Cannot setUp() CommandLine: "" + e.toString());"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,102,public void tearDown()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,107,public void testShortNoArg()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,109,assertTrue( _cl.hasOption('a') );
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,110,assertNull( _cl.getOptionValue('a') );
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,113,public void testShortWithArg()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,115,assertTrue( _cl.hasOption('b') );
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,116,assertNotNull( _cl.getOptionValue('b') );
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,117,"assertEquals( _cl.getOptionValue('b'), ""foo"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,120,public void testLongNoArg()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,122,assertTrue( _cl.hasOption('c') );
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,123,assertNull( _cl.getOptionValue('c') );
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,126,public void testLongWithArg()
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,128,assertTrue( _cl.hasOption('d') );
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,129,assertNotNull( _cl.getOptionValue('d') );
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,130,"assertEquals( _cl.getOptionValue('d'), ""bar"");"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,2,* Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,4,* This software is published under the terms of the Apache Software License
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,5,"* version 1.1, a copy of which has been included with this distribution in"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,6,* the LICENSE file.
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,8,"* $Id: ValueTest.java,v 1.1 2001/12/19 18:16:25 jstrachan Exp $"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,11,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,13,import junit.framework.Test;
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,14,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,15,import junit.framework.TestSuite;
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,17,public class ValuesTest extends TestCase
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,20,public static Test suite() {
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,21,return new TestSuite(ValuesTest.class);
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,23,TestSuite suite = new TestSuite();
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,25,"suite.addTest( new ValueTest(""testLongNoArg"") );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,27,return suite;
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,31,private CommandLine _cl = null;
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,34,public ValuesTest(String name)
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,36,super(name);
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,39,public void setUp()
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,41,Options opts = new Options();
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,42,"opts.addOption('a',"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,43,"false,"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,44,"""toggle -a"");"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,46,"opts.addOption('b',"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,47,"true,"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,48,"""set -b"");"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,50,"opts.addOption('c',"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,51,"""c"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,52,"false,"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,53,"""toggle -c"");"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,55,"opts.addOption('d',"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,56,"""d"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,57,"true,"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,58,"""set -d"");"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,60,"opts.addOption('e',"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,61,"""e"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,62,"true,"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,63,"""set -e"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,64,"false,"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,65,true);
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,67,"opts.addOption('f',"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,68,"""f"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,69,"false,"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,70,"""jk"");"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,72,"String[] args = new String[] { ""-a"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,73,"""-b"", ""foo"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,74,"""--c"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,75,"""--d"", ""bar"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,76,"""-e"", ""one"", ""two"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,77,"""-f"","
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,78,"""arg1"", ""arg2"" };"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,80,try
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,82,_cl = opts.parse(args);
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,84,catch (ParseException e)
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,86,"fail(""Cannot setUp() CommandLine: "" + e.toString());"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,90,public void tearDown()
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,95,public void testShortArgs()
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,97,assertTrue( _cl.hasOption('a') );
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,98,assertTrue( _cl.hasOption('c') );
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,100,assertNull( _cl.getOptionValues('a') );
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,101,assertNull( _cl.getOptionValues('c') );
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,104,public void testShortArgsWithValue()
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,106,assertTrue( _cl.hasOption('b') );
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,107,"assertTrue( _cl.getOptionValue('b').equals(""foo""));"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,108,assertTrue( _cl.getOptionValues('b').length == 1);
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,110,assertTrue( _cl.hasOption('d') );
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,111,"assertTrue( _cl.getOptionValue('d').equals(""bar""));"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,112,assertTrue( _cl.getOptionValues('d').length == 1);
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,115,public void testMultipleArgValues()
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,117,String[] result = _cl.getOptionValues('e');
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,118,"String[] values = new String[] { ""one"", ""two"" };"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,119,assertTrue( _cl.hasOption('e') );
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,120,assertTrue( _cl.getOptionValues('e').length == 2);
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,121,"assertTrue( java.util.Arrays.equals( values, _cl.getOptionValues('e') ) );"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,124,public void testExtraArgs()
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,126,"String[] args = new String[] { ""arg1"", ""arg2"" };"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,127,assertTrue( _cl.getArgs().length == 2);
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,128,"assertTrue( java.util.Arrays.equals( args, _cl.getArgs() ) );"
