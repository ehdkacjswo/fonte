is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,15, limitations under the License.
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,18,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,20,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,23, @author brianegge
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,25,ublic class OptionTest extends TestCase {
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,27,rivate static class TestOption extends Option {
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,28,"ublic TestOption(String opt, boolean hasArg, String description) throws IllegalArgumentException {"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,29,"uper(opt, hasArg, description);"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,31,ublic boolean addValue(String value) {
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,32,ddValueForProcessing(value);
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,33,eturn true;
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,37,ublic void testClear() {
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,38,"estOption option = new TestOption(""x"", true, """");"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,39,"ssertEquals(0, option.getValuesList().size());"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,40,"ption.addValue(""a"");"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,41,"ssertEquals(1, option.getValuesList().size());"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,42,ption.clearValues();
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,43,"ssertEquals(0, option.getValuesList().size());"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,46,/ See http://issues.apache.org/jira/browse/CLI-21
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,47,ublic void testClone() throws CloneNotSupportedException {
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,48,"estOption a = new TestOption(""a"", true, """");"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,49,estOption b = (TestOption) a.clone();
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,50,"ssertEquals(a, b);"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,51,"ssertNotSame(a, b);"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,52,".setDescription(""a"");"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,53,"ssertEquals("""", b.getDescription());"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,54,.setArgs(2);
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,55,".addValue(""b1"");"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,56,".addValue(""b2"");"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,57,"ssertEquals(1, a.getArgs());"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,58,"ssertEquals(0, a.getValuesList().size());"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,59,"ssertEquals(2, b.getValues().length);"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,62,rivate static class DefaultOption extends Option {
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,64,rivate final String defaultValue;
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,66,"ublic DefaultOption(String opt, String description, String defaultValue) throws IllegalArgumentException {"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,67,"uper(opt, true, description);"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,68,his.defaultValue = defaultValue;
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,71,ublic String getValue() {
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,72,eturn super.getValue() != null ? super.getValue() : defaultValue;
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,76,ublic void testSubclass() throws CloneNotSupportedException {
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,77,"ption option = new DefaultOption(""f"", ""file"", ""myfile.txt"");"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,78,ption clone = (Option) option.clone();
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,79,"ssertEquals(""myfile.txt"", clone.getValue());"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,80,"ssertEquals(DefaultOption.class, clone.getClass());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,18,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,20,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,23,* @author brianegge
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,25,public class OptionTest extends TestCase {
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,27,private static class TestOption extends Option {
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,28,"public TestOption(String opt, boolean hasArg, String description) throws IllegalArgumentException {"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,29,"super(opt, hasArg, description);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,31,public boolean addValue(String value) {
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,32,addValueForProcessing(value);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,33,return true;
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,37,public void testClear() {
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,38,"TestOption option = new TestOption(""x"", true, """");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,39,"assertEquals(0, option.getValuesList().size());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,40,"option.addValue(""a"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,41,"assertEquals(1, option.getValuesList().size());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,42,option.clearValues();
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,43,"assertEquals(0, option.getValuesList().size());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,46,// See http://issues.apache.org/jira/browse/CLI-21
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,47,public void testClone() throws CloneNotSupportedException {
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,48,"TestOption a = new TestOption(""a"", true, """");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,49,TestOption b = (TestOption) a.clone();
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,50,"assertEquals(a, b);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,51,"assertNotSame(a, b);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,52,"a.setDescription(""a"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,53,"assertEquals("""", b.getDescription());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,54,b.setArgs(2);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,55,"b.addValue(""b1"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,56,"b.addValue(""b2"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,57,"assertEquals(1, a.getArgs());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,58,"assertEquals(0, a.getValuesList().size());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,59,"assertEquals(2, b.getValues().length);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,62,private static class DefaultOption extends Option {
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,64,private final String defaultValue;
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,66,"public DefaultOption(String opt, String description, String defaultValue) throws IllegalArgumentException {"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,67,"super(opt, true, description);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,68,this.defaultValue = defaultValue;
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,71,public String getValue() {
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,72,return super.getValue() != null ? super.getValue() : defaultValue;
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,76,public void testSubclass() throws CloneNotSupportedException {
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,77,"Option option = new DefaultOption(""f"", ""file"", ""myfile.txt"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,78,Option clone = (Option) option.clone();
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,79,"assertEquals(""myfile.txt"", clone.getValue());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,80,"assertEquals(DefaultOption.class, clone.getClass());"
