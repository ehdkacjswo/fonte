is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,2,* Copyright 2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,16,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,18,import java.util.HashSet;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,19,import java.util.Iterator;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,20,import java.util.List;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,21,import java.util.ListIterator;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,22,import java.util.Set;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,24,import org.apache.commons.cli2.Group;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,25,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,26,import org.apache.commons.cli2.builder.ArgumentBuilder;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,27,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,28,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,29,import org.apache.commons.cli2.validation.InvalidArgumentException;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,30,import org.apache.commons.cli2.validation.Validator;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,33,* A utility class for converting data structures version 1 to
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,34,* version 2 Option instances.
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,36,public class CLI2Converter {
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,38,private CLI2Converter(){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,39,// prevent creation of static utility class
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,43,* Creates a version 2 Option instance from a version 1 Option instance.
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,45,* @param option1 the version 1 Option to convert
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,46,* @return a version 2 Option
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,48,public static Option option(final org.apache.commons.cli.Option option1){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,50,final DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,51,obuilder.withRequired(option1.isRequired());
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,53,final String shortName = option1.getOpt();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,54,"if(shortName!=null && !"" "".equals(shortName)){"
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,55,obuilder.withShortName(shortName);
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,58,final String longName = option1.getLongOpt();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,59,if(longName!=null){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,60,obuilder.withLongName(longName);
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,62,obuilder.withId(option1.getId());
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,64,final String description = option1.getDescription();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,65,if(description!=null){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,66,obuilder.withDescription(description);
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,69,if(option1.hasArg()){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,70,final ArgumentBuilder abuilder = new ArgumentBuilder();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,71,final String argName = option1.getArgName();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,72,abuilder.withName(argName);
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,73,abuilder.withMaximum(option1.getArgs());
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,74,if(option1.hasValueSeparator()){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,75,abuilder.withSubsequentSeparator(option1.getValueSeparator());
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,77,if(option1.hasOptionalArg()){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,78,abuilder.withMinimum(0);
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,80,else{
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,81,//TODO check what non-optional arg means
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,82,abuilder.withMinimum(option1.getArgs());
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,85,final Object type = option1.getType();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,86,if(type!=null){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,87,abuilder.withValidator(new TypeHandlerValidator(type));
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,90,obuilder.withArgument(abuilder.create());
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,93,return obuilder.create();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,97,* Creates a version 2 Group instance from a version 1 OptionGroup instance.
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,99,* @param optionGroup1 the version 1 OptionGroup to convert
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,100,* @return a version 2 Group
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,102,public static Group group(final OptionGroup optionGroup1){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,104,final GroupBuilder gbuilder = new GroupBuilder();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,106,for(final Iterator i = optionGroup1.getOptions().iterator();i.hasNext();){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,107,final org.apache.commons.cli.Option option1 = (org.apache.commons.cli.Option)i.next();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,108,final Option option2 = option(option1);
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,109,gbuilder.withOption(option2);
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,112,gbuilder.withMaximum(1);
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,114,if(optionGroup1.isRequired()){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,115,gbuilder.withMinimum(1);
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,118,return gbuilder.create();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,122,* Creates a version 2 Group instance from a version 1 Options instance.
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,124,* @param options1 the version 1 Options to convert
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,125,* @return a version 2 Group
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,127,public static Group group(final Options options1){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,129,final GroupBuilder gbuilder = new GroupBuilder();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,131,final Set optionGroups = new HashSet();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,133,for(final Iterator i = options1.getOptionGroups().iterator();i.hasNext();){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,134,final OptionGroup optionGroup1 = (OptionGroup)i.next();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,135,Group group = group(optionGroup1);
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,136,gbuilder.withOption(group);
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,137,optionGroups.add(optionGroup1);
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,140,for(final Iterator i = options1.getOptions().iterator();i.hasNext();){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,141,final org.apache.commons.cli.Option option1 = (org.apache.commons.cli.Option)i.next();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,142,"if(!optionInAGroup(option1,optionGroups)){"
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,143,final Option option2 = option(option1);
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,144,gbuilder.withOption(option2);
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,148,return gbuilder.create();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,151,"private static boolean optionInAGroup(final org.apache.commons.cli.Option option1, final Set optionGroups) {"
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,152,for (Iterator i = optionGroups.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,153,OptionGroup group = (OptionGroup) i.next();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,154,if(group.getOptions().contains(option1)){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,155,return true;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,158,return false;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,162,class TypeHandlerValidator implements Validator{
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,164,private final Object type;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,167,* Creates a new Validator using the TypeHandler class.
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,169,* @see TypeHandler
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,170,* @param type The required type for valid elements
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,172,public TypeHandlerValidator(final Object type){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,173,this.type = type;
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,176,/* (non-Javadoc)
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,177,* @see org.apache.commons.cli2.validation.Validator#validate(java.util.List)
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,179,public void validate(final List values) throws InvalidArgumentException {
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,180,final ListIterator i = values.listIterator();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,181,while(i.hasNext()){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,182,final String value = (String)i.next();
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,183,"final Object converted = TypeHandler.createValue(value,type);"
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,184,if(converted==null){
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,185,"throw new InvalidArgumentException(""Unable to understand value: "" + value);"
True,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,187,i.set(converted);
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,58, <p>Creates a command line.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,58,* Creates a command line.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,65, <p>Query to see if an option has been set.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,65,* Query to see if an option has been set.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,76, <p>Query to see if an option has been set.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,76,* Query to see if an option has been set.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,87, <p>Return the <code>Object</code> type of this <code>Option</code>.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,87,* Return the <code>Object</code> type of this <code>Option</code>.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,107, <p>Return the <code>Object</code> type of this <code>Option</code>.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,107,* Return the <code>Object</code> type of this <code>Option</code>.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,118," <p>Retrieve the argument, if any, of this option.</p>"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,118,"* Retrieve the argument, if any, of this option."
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,132," <p>Retrieve the argument, if any, of this option.</p>"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,132,"* Retrieve the argument, if any, of this option."
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,144," <p>Retrieves the array of values, if any, of an option.</p>"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,144,"* Retrieves the array of values, if any, of an option."
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,172," <p>Retrieves the array of values, if any, of an option.</p>"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,172,"* Retrieves the array of values, if any, of an option."
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,184," <p>Retrieve the argument, if any, of an option.</p>"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,184,"* Retrieve the argument, if any, of an option."
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,200," <p>Retrieve the argument, if any, of an option.</p>"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,200,"* Retrieve the argument, if any, of an option."
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,214, <p>Retrieve any left-over non-recognized options and arguments</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,214,* Retrieve any left-over non-recognized options and arguments
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,228, <p>Retrieve any left-over non-recognized options and arguments</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,228,* Retrieve any left-over non-recognized options and arguments
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,260, <p>Add left-over unrecognized option/argument.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,260,* Add left-over unrecognized option/argument.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,270, <p>Add an option to the command line.  The values of
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,271, the option are stored.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,270,* Add an option to the command line.  The values of
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,271,* the option are stored.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,294, <p>Returns an iterator over the Option members of CommandLine.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,294,* Returns an iterator over the Option members of CommandLine.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,305, <p>Returns an array of the processed {@link Option}s.</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,305,* Returns an array of the processed {@link Option}s.
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,26, @version $Revision: 1.13 $
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,26,* @version $Revision: 1.14 $
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,660,"ollections.sort(optList, new StringBufferComparator());"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,660,"Collections.sort(optList, new OptionComparator());"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,888, for comparing StringBuffers.</p>
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,888,* for comparing Options.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,890,rivate static class StringBufferComparator
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,890,private static class OptionComparator
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,898, @param o1 The first StringBuffer to be compared.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,899, @param o2 The second StringBuffer to be compared.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,898,* @param o1 The first Option to be compared.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,899,* @param o2 The second Option to be compared.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,907,tring str1 = stripPrefix(o1.toString());
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,908,tring str2 = stripPrefix(o2.toString());
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,910,eturn (str1.compareTo(str2));
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,914, <p>Removes any leading hyphens from <code>strOption</code>.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,916, @param strOption The String from which to strip the leading
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,917, hyphens.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,919, @return The String without any leading hyphens.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,921,rivate String stripPrefix(String strOption)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,923,/ Strip any leading '-' characters
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,924,nt iStartIndex = strOption.lastIndexOf('-');
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,926,f (iStartIndex == -1)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,928,StartIndex = 0;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,907,Option opt1 = (Option)o1;
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,908,Option opt2 = (Option)o2;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,931,eturn strOption.substring(iStartIndex);
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,910,return opt1.getKey().compareToIgnoreCase(opt2.getKey());
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,112, <p>Creates an Option using the specified parameters.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,112,* Creates an Option using the specified parameters.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,143, <p>Returns the id of this Option.  This is only set when the
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,143,* Returns the id of this Option.  This is only set when the
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,145, statements.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,145,* statements.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,155, <p>Returns the 'unique' Option identifier.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,155,* Returns the 'unique' Option identifier.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,170,** <p>Retrieve the name of this Option.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,171,* Retrieve the name of this Option.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,172, <p>It is this String which can be used with
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,173,* It is this String which can be used with
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,175, for existence and argument.<p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,176,* for existence and argument.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,185, <p>Retrieve the type of this Option.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,186,* Retrieve the type of this Option.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,195, <p>Sets the type of this Option.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,196,* Sets the type of this Option.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,205, <p>Retrieve the long name of this Option.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,206,* Retrieve the long name of this Option.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,215, <p>Sets the long name of this Option.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,216,* Sets the long name of this Option.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,225, <p>Sets whether this Option can have an optional argument.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,226,* Sets whether this Option can have an optional argument.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,243,** <p>Query to see if this Option has a long name</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,245,* Query to see if this Option has a long name
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,252,** <p>Query to see if this Option requires an argument</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,255,* Query to see if this Option requires an argument
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,261,** <p>Retrieve the self-documenting description of this Option</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,265,* Retrieve the self-documenting description of this Option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,271, <p>Query to see if this Option requires an argument</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,275,* Query to see if this Option requires an argument
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,281, <p>Sets whether this Option is mandatory.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,285,* Sets whether this Option is mandatory.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,291, <p>Sets the display name for the argument value.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,295,* Sets the display name for the argument value.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,301, <p>Gets the display name for the argument value.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,305,* Gets the display name for the argument value.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,311, <p>Returns whether the display name for the argument value
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,312, has been set.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,315,* Returns whether the display name for the argument value
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,316,* has been set.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,323, <p>Query to see if this Option can take many values</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,327,* Query to see if this Option can take many values.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,334, <p>Sets the number of argument values this Option can take.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,338,* Sets the number of argument values this Option can take.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,344, <p>Sets the value separator.  For example if the argument value
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,345," was a Java property, the value separator would be '='.</p>"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,348,* Sets the value separator.  For example if the argument value
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,349,"* was a Java property, the value separator would be '='."
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,355, <p>Returns the value separator character.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,359,* Returns the value separator character.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,365, <p>Return whether this Option has specified a value separator.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,369,* Return whether this Option has specified a value separator.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,367, @return whether this Option has specified a value separator.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,371,* @return whether this Option has specified a value separator.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,375, <p>Returns the number of argument values this Option can take.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,379,* Returns the number of argument values this Option can take.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,385, <p>Adds the specified value to this Option.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,389,* Adds the specified value to this Option.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,402, <p>Processes the value.  If this Option has a value separator
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,406,* Processes the value.  If this Option has a value separator
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,406, added as a single token.</p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,410,* added as a single token.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,452, <p>Add the value to this Option.  If the number of arguments
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,456,* Add the value to this Option.  If the number of arguments
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,455, </p>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,560," <p>Dump state, suitable for debugging.</p>"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,563,"* Dump state, suitable for debugging."
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,65, <p>Resets the member variables to their default values.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,65,* Resets the member variables to their default values.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,83, <p>The next Option created will have the following long option value.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,83,* The next Option created will have the following long option value.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,96, <p>The next Option created will require an argument value.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,96,* The next Option created will require an argument value.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,108, <p>The next Option created will require an argument value if
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,109, <code>hasArg</code> is true.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,108,* The next Option created will require an argument value if
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,109,* <code>hasArg</code> is true.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,122, <p>The next Option created will have the specified argument value
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,123, name.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,122,* The next Option created will have the specified argument value
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,123,* name.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,136, <p>The next Option created will be required.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,136,* The next Option created will be required.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,148, <p>The next Option created uses <code>sep</code> as a means to
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,149, separate argument values.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,148,* The next Option created uses <code>sep</code> as a means to
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,149,* separate argument values.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,173, <p>The next Option created uses '<code>=</code>' as a means to
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,174, separate argument values.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,173,* The next Option created uses '<code>=</code>' as a means to
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,174,* separate argument values.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,196, <p>The next Option created will be required if <code>required</code>
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,197, is true.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,196,* The next Option created will be required if <code>required</code>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,197,* is true.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,210, <p>The next Option created can have unlimited argument values.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,210,* The next Option created can have unlimited argument values.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,222, <p>The next Option created can have <code>num</code>
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,223, argument values.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,222,* The next Option created can have <code>num</code>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,223,* argument values.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,236, <p>The next Option can have an optional argument.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,236,* The next Option can have an optional argument.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,249, <p>The next Option can have an unlimited number of
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,250, optional arguments.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,249,* The next Option can have an unlimited number of
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,250,* optional arguments.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,263, <p>The next Option can have the specified number of
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,264, optional arguments.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,263,* The next Option can have the specified number of
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,264,* optional arguments.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,279, <p>The next Option created will have a value that will be an instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,280, of <code>type</code>.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,279,* The next Option created will have a value that will be an instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,280,* of <code>type</code>.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,293, <p>The next Option created will have the specified description</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,293,* The next Option created will have the specified description
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,306, <p>Create an Option using the current settings and with
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,307, the specified Option <code>char</code>.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,306,* Create an Option using the current settings and with
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,307,* the specified Option <code>char</code>.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,321, <p>Create an Option using the current settings</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,321,* Create an Option using the current settings
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,339, <p>Create an Option using the current settings and with
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,340, the specified Option <code>char</code>.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,339,* Create an Option using the current settings and with
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,340,* the specified Option <code>char</code>.
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,22,import java.util.HashSet;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,55,** <p>Construct a new Options descriptor</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,56,/** Construct a new Options descriptor
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,62, <p>Add the specified option group.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,63,* Add the specified option group.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,95,* Lists the OptionGroups that are members of this Options instance.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,96,* @return a Collection of OptionGroup instances.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,98,Collection getOptionGroups(){
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,99,return new HashSet(optionGroups.values());
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,93,** <p>Add an option that only contains a short-name</p>
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,94, <p>It may be specified as requiring an argument.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,103,* Add an option that only contains a short-name.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,104,* It may be specified as requiring an argument.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,108,** <p>Add an option that contains a short-name and a long-name</p>
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,109, <p>It may be specified as requiring an argument.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,119,* Add an option that contains a short-name and a long-name.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,120,* It may be specified as requiring an argument.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,126, <p>Adds an option instance</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,137,* Adds an option instance
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,155,** <p>Retrieve a read-only list of options in this set</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,167,* Retrieve a read-only list of options in this set
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,165, <p>Returns the Options for use by the HelpFormatter.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,177,* Returns the Options for use by the HelpFormatter.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,190,** <p>Returns the required options as a
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,191, <code>java.util.Collection</code>.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,203,* Returns the required options as a
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,204,* <code>java.util.Collection</code>.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,200,** <p>Retrieve the named {@link Option}</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,214,* Retrieve the named {@link Option}
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,218, <p>Returns whether the named {@link Option} is a member
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,219, of this {@link Options}</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,232,* Returns whether the named {@link Option} is a member
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,233,* of this {@link Options}.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,232,** <p>Returns the OptionGroup the <code>opt</code>
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,233, belongs to.</p>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,247,* Returns the OptionGroup the <code>opt</code>
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,248,* belongs to.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,244,"** <p>Dump state, suitable for debugging.</p>"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,260,"* Dump state, suitable for debugging."
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,30, @version $Revision: 1.14 $
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,30,* @version $Revision: 1.15 $
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,349,"hrow new MissingArgumentException(""no argument for:"""
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,349,"throw new MissingArgumentException(""Missing argument for option:"""
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,28, @version $Revision: 1.14 $
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,28,* @version $Revision: 1.15 $
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,16,package org.apache.commons.cli2;
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,18,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,21,* An Option that can process values passed on the command line in the form
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,22,"* ""--file README""."
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,24,public interface Argument extends Option {
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,27,* Returns the initial separator character or
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,28,* '\0' if no character has been set.
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,30,* @return char the initial separator character
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,32,char getInitialSeparator();
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,35,"* Processes the ""README"" style element of the argument."
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,37,* Values identified should be added to the CommandLine object in
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,38,* association with this Argument.
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,40,"* @see WriteableCommandLine#addValue(Option,Object)"
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,42,* @param commandLine The CommandLine object to store results in.
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,43,* @param args The arguments to process.
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,44,* @param option The option to register value against.
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,45,* @throws OptionException if any problems occur.
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,47,void processValues(
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,48,"final WriteableCommandLine commandLine,"
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,49,"final ListIterator args,"
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,50,final Option option)
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,51,throws OptionException;
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,54,* Performs any necessary validation on the values added to the
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,55,* CommandLine.
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,57,* Validation will typically involve using the
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,58,* CommandLine.getValues(option) method to retrieve the values
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,59,* and then either checking each value.  Optionally the String
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,60,* value can be replaced by another Object such as a Number
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,61,* instance or a File instance.
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,63,* @see CommandLine#getValues(Option)
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,65,* @param commandLine The CommandLine object to query.
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,66,* @param option The option to lookup values with.
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,67,* @throws OptionException if any problems occur.
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,69,"void validate(final WriteableCommandLine commandLine, final Option option)"
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,70,throws OptionException;
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,73,* Indicates whether argument values must be present for the CommandLine to
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,74,* be valid.
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,76,* @see #getMinimum()
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,77,* @see #getMaximum()
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,78,* @return true iff the CommandLine will be invalid without at least one
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,79,*         value
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,81,boolean isRequired();
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,84,* Retrieves the minimum number of values required for a valid Argument
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,86,* @return the minimum number of values
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,88,int getMinimum();
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,91,* Retrieves the maximum number of values acceptable for a valid Argument
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,93,* @return the maximum number of values
True,src/java/org/apache/commons/cli2/Argument.java,src/java/org/apache/commons/cli2/Argument.java,95,int getMaximum();
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,16,package org.apache.commons.cli2;
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,18,import java.util.List;
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,19,import java.util.Set;
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,22,* Instances of CommandLine represent a command line that has been processed
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,23,* according to the definition supplied to the parser.
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,25,public interface CommandLine {
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,28,* Detects the presence of an option with the specified trigger in this
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,29,* CommandLine.
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,31,* @param trigger the trigger to search for
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,32,* @return true iff an option with this trigger is present
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,34,boolean hasOption(final String trigger);
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,37,* Detects the presence of an option in this CommandLine.
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,39,* @param option the Option to search for
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,40,* @return true iff the option is present
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,42,boolean hasOption(final Option option);
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,45,* Finds the Option with the specified trigger
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,47,* @param trigger the name of the option to retrieve
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,48,* @return the Option matching the trigger or null if none exists
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,50,Option getOption(final String trigger);
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,53,* Retrieves the Argument values associated with the specified Option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,55,* @param trigger a trigger used to lookup the Option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,56,* @return a list of values or an empty List if none are found
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,58,List getValues(final String trigger);
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,61,* Retrieves the Argument values associated with the specified Option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,63,* @param trigger a trigger used to lookup the Option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,64,* @param defaultValues the result to return if no values are found
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,65,* @return a list of values or defaultValues if none are found
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,67,"List getValues(final String trigger, final List defaultValues);"
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,70,* Retrieves the Argument values associated with the specified Option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,72,* @param option the Option associated with the values
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,73,* @return a list of values or an empty List if none are found
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,75,List getValues(final Option option);
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,78,* Retrieves the Argument values associated with the specified Option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,80,* @param option the Option associated with the values
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,81,* @param defaultValues the result to return if no values are found
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,82,* @return a list of values or defaultValues if none are found
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,84,"List getValues(final Option option, final List defaultValues);"
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,87,* Retrieves the single Argument value associated with the specified Option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,89,* @param trigger a trigger used to lookup the Option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,90,* @return the matching value or null if none exists
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,91,* @throws IllegalStateException if more than one values are found
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,93,Object getValue(final String trigger) throws IllegalStateException;
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,96,* Retrieves the single Argument value associated with the specified Option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,98,* @param trigger a trigger used to lookup the Option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,99,* @param defaultValue the result to use if no values are found
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,100,* @return the matching value or defaultValue if none exists
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,101,* @throws IllegalStateException if more than one values are found
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,103,"Object getValue(final String trigger, final Object defaultValue) throws IllegalStateException;"
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,106,* Retrieves the single Argument value associated with the specified Option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,108,* @param option the Option associated with the value
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,109,* @return the matching value or null if none exists
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,110,* @throws IllegalStateException if more than one values are found
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,112,Object getValue(final Option option) throws IllegalStateException;
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,115,* Retrieves the single Argument value associated with the specified Option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,117,* @param option the Option associated with the value
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,118,* @param defaultValue the result to use if no values are found
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,119,* @return the matching value or defaultValue if none exists
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,120,* @throws IllegalStateException if more than one values are found
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,122,"Object getValue(final Option option, final Object defaultValue) throws IllegalStateException;"
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,125,* Retrieves the Boolean value associated with the specified Switch
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,127,* @param trigger a trigger used to lookup the Option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,128,* @return the Boolean associated with trigger or null if none exists
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,130,Boolean getSwitch(final String trigger);
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,133,* Retrieves the Boolean value associated with the specified Switch
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,135,* @param trigger a trigger used to lookup the Option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,136,* @param defaultValue the Boolean to use if none match
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,137,* @return the Boolean associated with trigger or defaultValue if none exists
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,139,"Boolean getSwitch(final String trigger, final Boolean defaultValue);"
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,142,* Retrieves the Boolean value associated with the specified Switch
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,144,* @param option the Option associated with the value
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,145,* @return the Boolean associated with option or null if none exists
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,147,Boolean getSwitch(final Option option);
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,150,* Retrieves the Boolean value associated with the specified Switch
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,152,* @param option the Option associated with the value
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,153,* @param defaultValue the Boolean to use if none match
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,154,* @return the Boolean associated with option or defaultValue if none exists
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,156,"Boolean getSwitch(final Option option, final Boolean defaultValue);"
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,160,* Retrieves the value associated with the specified property
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,162,* @param property the property name to lookup
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,163,* @return the value of the property or null
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,165,String getProperty(final String property);
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,168,* Retrieves the value associated with the specified property
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,170,* @param property the property name to lookup
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,171,* @param defaultValue the value to use if no other is found
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,172,* @return the value of the property or defaultValue
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,174,"String getProperty(final String property, final String defaultValue);"
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,177,* Retrieves the set of all property names associated with this CommandLine
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,179,* @return a none null set of property names
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,181,Set getProperties();
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,184,* Retrieves the number of times the specified Option appeared in this
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,185,* CommandLine
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,187,* @param trigger a trigger used to lookup the Option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,188,* @return the number of occurrences of the option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,190,int getOptionCount(final String trigger);
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,193,* Retrieves the number of times the specified Option appeared in this
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,194,* CommandLine
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,196,* @param option the Option associated to check
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,197,* @return the number of occurrences of the option
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,199,int getOptionCount(final Option option);
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,202,* Retrieves a list of all Options found in this CommandLine
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,204,* @return a none null list of Options
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,206,List getOptions();
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,209,* Retrieves a list of all Option triggers found in this CommandLine
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,211,* @return a none null list of Option triggers
True,src/java/org/apache/commons/cli2/CommandLine.java,src/java/org/apache/commons/cli2/CommandLine.java,213,Set getOptionTriggers();
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,16,package org.apache.commons.cli2;
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,18,import java.util.Collections;
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,19,import java.util.HashSet;
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,20,import java.util.Set;
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,23,* An enum of possible display settings. These settings are used to control the
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,24,"* presence of various features in the String representations of options,"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,25,* CommandLines and usage strings.  Usually a Set of DisplaySetting instances
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,26,* will be passed to a method that will lookup the presence of the values.
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,28,public class DisplaySetting {
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,30,private static final Set all = new HashSet();
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,33,* A Set guarenteed to contain all possible DisplaySetting values
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,35,public static final Set ALL = Collections.unmodifiableSet(all);
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,38,* A Set guarenteed to contain no DisplaySetting values
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,40,public static final Set NONE = Collections.EMPTY_SET;
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,43,* Indicates that aliases should be included
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,45,public static final DisplaySetting DISPLAY_ALIASES =
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,46,"new DisplaySetting(""DISPLAY_ALIASES"");"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,49,* Indicates that optionality should be included
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,51,public static final DisplaySetting DISPLAY_OPTIONAL =
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,52,"new DisplaySetting(""DISPLAY_OPTIONAL"");"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,55,* Indicates that property options should be included
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,57,public static final DisplaySetting DISPLAY_PROPERTY_OPTION =
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,58,"new DisplaySetting(""DISPLAY_PROPERTY_OPTION"");"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,61,* Indicates that switches should be included enabled
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,63,public static final DisplaySetting DISPLAY_SWITCH_ENABLED =
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,64,"new DisplaySetting(""DISPLAY_SWITCH_ENABLED"");"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,67,* Indicates that switches should be included disabled
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,69,public static final DisplaySetting DISPLAY_SWITCH_DISABLED =
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,70,"new DisplaySetting(""DISPLAY_SWITCH_DISABLED"");"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,73,* Indicates that group names should be included
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,75,public static final DisplaySetting DISPLAY_GROUP_NAME =
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,76,"new DisplaySetting(""DISPLAY_GROUP_NAME"");"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,79,* Indicates that groups should be included expanded
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,81,public static final DisplaySetting DISPLAY_GROUP_EXPANDED =
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,82,"new DisplaySetting(""DISPLAY_GROUP_EXPANDED"");"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,85,* Indicates that group arguments should be included
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,87,public static final DisplaySetting DISPLAY_GROUP_ARGUMENT =
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,88,"new DisplaySetting(""DISPLAY_GROUP_ARGUMENT"");"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,91,* Indicates that group outer brackets should be included
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,93,public static final DisplaySetting DISPLAY_GROUP_OUTER =
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,94,"new DisplaySetting(""DISPLAY_GROUP_OUTER"");"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,97,* Indicates that arguments should be included numbered
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,99,public static final DisplaySetting DISPLAY_ARGUMENT_NUMBERED =
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,100,"new DisplaySetting(""DISPLAY_ARGUMENT_NUMBERED"");"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,103,* Indicates that arguments should be included bracketed
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,105,public static final DisplaySetting DISPLAY_ARGUMENT_BRACKETED =
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,106,"new DisplaySetting(""DISPLAY_ARGUMENT_BRACKETED"");"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,109,* Indicates that arguments of Parents should be included
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,111,public static final DisplaySetting DISPLAY_PARENT_ARGUMENT =
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,112,"new DisplaySetting(""DISPLAY_PARENT_ARGUMENT"");"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,115,* Indicates that children of Parents should be included
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,117,public static final DisplaySetting DISPLAY_PARENT_CHILDREN =
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,118,"new DisplaySetting(""DISPLAY_PARENT_CHILDREN"");"
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,121,* The name of the setting
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,123,private final String name;
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,126,* The hashCode of the setting
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,128,private final int hashCode;
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,131,* Creates a new DisplaySetting with the specified name
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,132,* @param name the name of the setting
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,134,private DisplaySetting(final String name) {
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,135,this.name = name;
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,136,this.hashCode = name.hashCode();
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,137,all.add(this);
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,140,public int hashCode() {
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,141,return hashCode;
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,144,public boolean equals(final Object that) {
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,145,if (that instanceof DisplaySetting) {
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,146,return name.compareTo(that.toString()) == 0;
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,148,else {
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,149,return false;
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,153,public String toString() {
True,src/java/org/apache/commons/cli2/DisplaySetting.java,src/java/org/apache/commons/cli2/DisplaySetting.java,154,return name;
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,16,package org.apache.commons.cli2;
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,18,import java.util.Comparator;
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,19,import java.util.Set;
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,22,"* An Option representing a choice or group of Options in the form ""-a|-b|-c""."
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,24,public interface Group extends Option {
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,27,* Appends usage information to the specified StringBuffer
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,29,* @param buffer the buffer to append to
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,30,* @param helpSettings a set of display settings @see DisplaySetting
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,31,* @param comp a comparator used to sort the Options
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,32,* @param separator the String used to separate member Options
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,34,void appendUsage(
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,35,"final StringBuffer buffer,"
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,36,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,37,"final Comparator comp,"
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,38,final String separator);
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,41,* Indicates whether group members must be present for the CommandLine to be
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,42,* valid.
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,44,* @see #getMinimum()
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,45,* @see #getMaximum()
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,46,* @return true iff the CommandLine will be invalid without at least one
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,47,*         member option
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,49,boolean isRequired();
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,52,* Retrieves the minimum number of members required for a valid Group
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,54,* @return the minimum number of members
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,56,int getMinimum();
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,59,* Retrieves the maximum number of members acceptable for a valid Group
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,61,* @return the maximum number of members
True,src/java/org/apache/commons/cli2/Group.java,src/java/org/apache/commons/cli2/Group.java,63,int getMaximum();
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,16,package org.apache.commons.cli2;
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,18,import java.util.Comparator;
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,19,import java.util.Set;
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,22,* Represents a line of help for a particular Option.
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,24,public interface HelpLine {
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,27,* @return The description of the option
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,29,String getDescription();
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,32,* @return The level of indentation for this line
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,34,int getIndent();
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,37,* @return The Option that the help line relates to
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,39,Option getOption();
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,42,* Builds a usage string for the option using the specified settings and
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,43,* comparator.
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,45,* @param helpSettings
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,46,*            the settings to apply
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,47,* @param comparator
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,48,*            a comparator to sort options when applicable
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,49,* @return the usage string
True,src/java/org/apache/commons/cli2/HelpLine.java,src/java/org/apache/commons/cli2/HelpLine.java,51,"String usage(final Set helpSettings, final Comparator comparator);"
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,16,package org.apache.commons.cli2;
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,18,import java.util.Comparator;
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,19,import java.util.List;
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,20,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,21,import java.util.Set;
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,23,import org.apache.commons.cli2.util.HelpFormatter;
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,26,* The super type of all options representing a particular element of the
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,27,* command line interface.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,29,public interface Option {
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,32,* Processes String arguments into a CommandLine.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,34,* The iterator will initially point at the first argument to be processed
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,35,* and at the end of the method should point to the first argument not
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,36,* processed. This method MUST process at least one argument from the
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,37,* ListIterator.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,39,* @param commandLine
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,40,*            The CommandLine object to store results in
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,41,* @param args
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,42,*            The arguments to process
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,43,* @throws OptionException
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,44,*             if any problems occur
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,46,void process(
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,47,"final WriteableCommandLine commandLine,"
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,48,final ListIterator args)
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,49,throws OptionException;
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,52,* Indicates whether this Option will be able to process the particular
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,53,* argument.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,55,* @param argument
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,56,*            The argument to be tested
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,57,* @return true if the argument can be processed by this Option
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,59,boolean canProcess(final String argument);
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,62,* Indicates whether this Option will be able to process the particular
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,63,* argument. The ListIterator must be restored to the initial state before
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,64,* returning the boolean.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,66,* @see #canProcess(String)
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,67,* @param arguments
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,68,*            the ListIterator over String arguments
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,69,* @return true if the argument can be processed by this Option
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,71,boolean canProcess(final ListIterator arguments);
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,74,* Identifies the argument prefixes that should trigger this option. This
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,75,* is used to decide which of many Options should be tried when processing
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,76,* a given argument string.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,78,* The returned Set must not be null.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,80,* @return The set of triggers for this Option
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,82,Set getTriggers();
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,85,* Identifies the argument prefixes that should be considered options. This
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,86,* is used to identify whether a given string looks like an option or an
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,87,"* argument value. Typically an option would return the set [--,-] while"
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,88,"* switches might offer [-,+]."
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,90,* The returned Set must not be null.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,92,* @return The set of prefixes for this Option
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,94,Set getPrefixes();
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,97,* Checks that the supplied CommandLine is valid with respect to this
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,98,* option.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,100,* @param commandLine
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,101,*            The CommandLine to check.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,102,* @throws OptionException
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,103,*             if the CommandLine is not valid.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,105,void validate(final WriteableCommandLine commandLine)
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,106,throws OptionException;
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,109,* Builds up a list of HelpLineImpl instances to be presented by HelpFormatter.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,111,* @see HelpLine
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,112,* @see HelpFormatter
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,113,* @param depth
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,114,*            the initial indent depth
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,115,* @param helpSettings
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,116,*            the HelpSettings that should be applied
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,117,* @param comp
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,118,*            a comparator used to sort options when applicable.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,119,* @return a List of HelpLineImpl objects
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,121,List helpLines(
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,122,"final int depth,"
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,123,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,124,final Comparator comp);
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,127,* Appends usage information to the specified StringBuffer
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,129,* @param buffer the buffer to append to
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,130,* @param helpSettings a set of display settings @see DisplaySetting
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,131,* @param comp a comparator used to sort the Options
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,133,void appendUsage(
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,134,"final StringBuffer buffer,"
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,135,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,136,final Comparator comp);
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,139,* The preferred name of an option is used for generating help and usage
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,140,* information.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,142,* @return The preferred name of the option
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,144,String getPreferredName();
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,147,* Returns a description of the option. This string is used to build help
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,148,* messages as in the HelpFormatter.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,150,* @see HelpFormatter
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,151,* @return a description of the option.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,153,String getDescription();
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,156,* Returns the id of the option.  This can be used in a loop and switch
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,157,* construct:
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,159,* <code>
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,160,* for(Option o : cmd.getOptions()){
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,161,*     switch(o.getId()){
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,162,*         case POTENTIAL_OPTION:
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,166,* </code>
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,168,* The returned value is not guarenteed to be unique.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,170,* @return the id of the option.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,172,int getId();
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,175,* Recursively searches for an option with the supplied trigger.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,177,* @param trigger the trigger to search for.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,178,* @return the matching option or null.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,180,Option findOption(final String trigger);
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,183,* Indicates whether this option is required to be present.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,184,* @return true iff the CommandLine will be invalid without this Option
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,186,boolean isRequired();
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,16,package org.apache.commons.cli2;
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,18,import java.util.Collections;
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,19,import java.util.Set;
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,21,import org.apache.commons.cli2.resource.ResourceHelper;
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,24,* A problem found while dealing with command line options.
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,26,public class OptionException extends Exception {
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,29,* The settings used when displaying the related Option.
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,31,* @see DisplaySetting
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,33,public static final Set HELP_SETTINGS =
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,34,Collections.unmodifiableSet(
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,35,Collections.singleton(
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,36,DisplaySetting.DISPLAY_PROPERTY_OPTION));;
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,38,/** The Option the exception relates to */
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,39,private final Option option;
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,41,/** The message explaining the Exception */
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,42,private final String message;
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,44,/** resource helper instance */
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,45,private static final ResourceHelper helper =
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,46,ResourceHelper.getResourceHelper(OptionException.class);
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,49,* Creates a new OptionException.
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,51,* @param option
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,52,*            The Option the exception relates to
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,54,public OptionException(final Option option) {
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,55,"this(option, null, null);"
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,59,* Creates a new OptionException.
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,60,* @param option the Option the exception relates to
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,61,* @param messageKey the id of the message to display
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,63,"public OptionException(final Option option, final String messageKey) {"
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,64,"this(option, messageKey, null);"
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,68,* Creates a new OptionException.
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,69,* @param option the Option the exception relates to
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,70,* @param messageKey the id of the message to display
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,71,* @param value a value to display with the message
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,73,public OptionException(
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,74,"final Option option,"
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,75,"final String messageKey,"
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,76,final String value) {
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,78,this.option = option;
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,80,if (messageKey != null) {
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,81,final StringBuffer buffer = new StringBuffer();
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,82,if (value != null) {
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,83,"buffer.append(helper.getMessage(messageKey, value));"
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,85,else {
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,86,buffer.append(helper.getMessage(messageKey));
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,88,"buffer.append("" "");"
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,90,"option.appendUsage(buffer, HELP_SETTINGS, null);"
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,91,message = buffer.toString();
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,93,else {
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,94,"message = """";"
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,99,* Gets the Option the exception relates to
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,101,* @return The related Option
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,103,public Option getOption() {
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,104,return option;
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,107,public String getMessage() {
True,src/java/org/apache/commons/cli2/OptionException.java,src/java/org/apache/commons/cli2/OptionException.java,108,return message;
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,16,package org.apache.commons.cli2;
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,18,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,21,* An Option that can have an argument and/or group of child Options in the form
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,22,"* ""-f &lt;arg&gt; [-a|-b|-c]""."
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,24,public interface Parent extends Option {
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,27,"* Processes the parent part of the Option.  The combination of parent,"
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,28,* argument and children is handled by the process method.
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,29,"* @see Option#process(WriteableCommandLine, ListIterator)"
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,31,* @param commandLine the CommandLine to write results to
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,32,* @param args a ListIterator over argument strings positioned at the next
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,33,*             argument to process
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,34,* @throws OptionException if an error occurs while processing
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,36,void processParent(
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,37,"final WriteableCommandLine commandLine,"
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,38,final ListIterator args)
True,src/java/org/apache/commons/cli2/Parent.java,src/java/org/apache/commons/cli2/Parent.java,39,throws OptionException;
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,16,package org.apache.commons.cli2;
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,19,* A CommandLine that detected values and options can be written to.
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,21,public interface WriteableCommandLine extends CommandLine {
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,24,* Adds an Option to the CommandLine
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,25,* @param option the Option to add
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,27,void addOption(final Option option);
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,30,* Adds a value to an Option in the CommandLine.
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,31,* @param option the Option to add to
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,32,* @param value the value to add
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,34,"void addValue(final Option option, final Object value);"
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,37,* Adds a switch value to an Option in the CommandLine.
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,38,* @param option the Option to add to
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,39,* @param value the switch value to add
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,40,* @throws IllegalStateException if the switch has already been added
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,42,"void addSwitch(final Option option, final boolean value) throws IllegalStateException;"
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,45,* Adds a property value to a name in the CommandLine.
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,46,* Replaces any existing value for the property.
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,48,* @param property the name of the property
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,49,* @param value the value of the property
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,51,"void addProperty(final String property, final String value);"
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,54,* Detects whether the argument looks like an Option trigger
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,55,* @param argument the argument to test
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,56,* @return true if the argument looks like an Option trigger
True,src/java/org/apache/commons/cli2/WriteableCommandLine.java,src/java/org/apache/commons/cli2/WriteableCommandLine.java,58,boolean looksLikeOption(final String argument);
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,16,package org.apache.commons.cli2.builder;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,18,import java.util.ArrayList;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,19,import java.util.List;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,21,import org.apache.commons.cli2.Argument;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,22,import org.apache.commons.cli2.option.ArgumentImpl;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,23,import org.apache.commons.cli2.validation.Validator;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,26,* Builds Argument instances.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,28,public class ArgumentBuilder {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,30,/** name of the argument. Used for display and lookups in CommandLine */
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,31,private String name;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,33,/** description of the argument. Used in the automated online help */
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,34,private String description;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,36,/** minimum number of values required */
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,37,private int minimum;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,39,/** maximum number of values permitted */
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,40,private int maximum;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,42,/** character used to separate the values from the option */
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,43,private char initialSeparator;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,45,/** character used to separate the values from each other */
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,46,private char subsequentSeparator;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,48,/** object that should be used to ensure the values are valid */
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,49,private Validator validator;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,51,"/** used to identify the consume remaining option, typically ""--"" */"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,52,private String consumeRemaining;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,54,/** default values for argument */
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,55,private List defaultValues;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,57,/** id of the argument */
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,58,private int id;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,61,* Creates a new ArgumentBuilder instance
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,63,public ArgumentBuilder() {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,64,reset();
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,68,* Creates a new Argument instance using the options specified in this
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,69,* ArgumentBuilder.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,71,* @return A new Argument instance.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,73,public final Argument create() {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,74,final Argument argument =
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,75,new ArgumentImpl(
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,76,"name,"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,77,"description,"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,78,"minimum,"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,79,"maximum,"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,80,"initialSeparator,"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,81,"subsequentSeparator,"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,82,"validator,"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,83,"consumeRemaining,"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,84,"defaultValues,"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,85,id);
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,87,reset();
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,89,return argument;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,93,* Resets the ArgumentBuilder to the defaults for a new Argument. The
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,94,* method should be called automatically at the end of a create() call.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,96,public final void reset() {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,97,"name = ""arg"";"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,98,description = null;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,99,minimum = 0;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,100,maximum = Integer.MAX_VALUE;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,101,initialSeparator = ArgumentImpl.DEFAULT_INITIAL_SEPARATOR;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,102,subsequentSeparator = ArgumentImpl.DEFAULT_SUBSEQUENT_SEPARATOR;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,103,"consumeRemaining = ""--"";"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,104,defaultValues = null;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,105,id = 0;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,109,* Sets the name of the argument. The name is used when displaying usage
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,110,* information and to allow lookups in the CommandLine object.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,112,* @see org.apache.commons.cli2.CommandLine#getValue(String)
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,114,* @param newName
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,115,*            the name of the argument
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,116,* @return this ArgumentBuilder
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,118,public final ArgumentBuilder withName(final String newName) {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,119,this.name = newName;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,120,return this;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,124,* Sets the description of the argument.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,126,* The description is used when displaying online help.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,128,* @param newDescription
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,129,*            a description of the argument
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,130,* @return this ArgumentBuilder
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,132,public final ArgumentBuilder withDescription(final String newDescription) {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,133,this.description = newDescription;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,134,return this;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,138,* Sets the minimum number of values needed for the argument to be valid.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,140,* @param newMinimum
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,141,*            the number of values needed
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,142,* @return this ArgumentBuilder
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,144,public final ArgumentBuilder withMinimum(final int newMinimum) {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,145,this.minimum = newMinimum;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,146,return this;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,150,* Sets the maximum number of values allowed for the argument to be valid.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,152,* @param newMaximum
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,153,*            the number of values allowed
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,154,* @return this ArgumentBuilder
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,156,public final ArgumentBuilder withMaximum(final int newMaximum) {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,157,this.maximum = newMaximum;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,158,return this;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,162,* Sets the character used to separate the values from the option. When an
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,163,"* argument is of the form -libs:dir1,dir2,dir3 the initialSeparator would"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,164,* be ':'.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,166,* @param newInitialSeparator
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,167,*            the character used to separate the values from the option
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,168,* @return this ArgumentBuilder
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,170,public final ArgumentBuilder withInitialSeparator(final char newInitialSeparator) {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,172,this.initialSeparator = newInitialSeparator;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,173,return this;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,177,* Sets the character used to separate the values from each other. When an
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,178,"* argument is of the form -libs:dir1,dir2,dir3 the subsequentSeparator"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,179,"* would be ','."
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,181,* @param newSubsequentSeparator
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,182,*            the character used to separate the values from each other
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,183,* @return this ArgumentBuilder
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,185,public final ArgumentBuilder withSubsequentSeparator(final char newSubsequentSeparator) {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,187,this.subsequentSeparator = newSubsequentSeparator;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,188,return this;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,192,* Sets the validator instance used to perform validation on the Argument
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,193,* values.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,195,* @param newValidator
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,196,*            a Validator instance
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,197,* @return this ArgumentBuilder
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,199,public final ArgumentBuilder withValidator(final Validator newValidator) {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,200,this.validator = newValidator;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,201,return this;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,205,"* Sets the ""consume remaining"" option, defaults to ""--"". Use this if you"
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,206,* want to allow values that might be confused with option strings.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,208,* @param newConsumeRemaining
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,209,*            the string to use for the consume remaining option
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,210,* @return this ArgumentBuilder
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,212,public final ArgumentBuilder withConsumeRemaining(final String newConsumeRemaining) {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,214,this.consumeRemaining = newConsumeRemaining;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,215,return this;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,219,* Sets the default value.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,221,* @param defaultValue
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,222,*            the default value for the Argument
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,224,* @return this ArgumentBuilder
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,226,public final ArgumentBuilder withDefault(final Object defaultValue) {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,227,if (this.defaultValues == null) {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,228,this.defaultValues = new ArrayList(1);
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,230,this.defaultValues.add(defaultValue);
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,231,return this;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,235,* Sets the default values.
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,237,* @param newDefaultValues
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,238,*            the default values for the Argument
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,240,* @return this ArgumentBuilder
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,242,public final ArgumentBuilder withDefaults(final List newDefaultValues) {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,243,this.defaultValues = newDefaultValues;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,244,return this;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,248,* Sets the id
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,250,* @param newId
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,251,*            the id of the Argument
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,253,* @return this ArgumentBuilder
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,255,public final ArgumentBuilder withId(final int newId) {
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,256,this.id = newId;
True,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,src/java/org/apache/commons/cli2/builder/ArgumentBuilder.java,257,return this;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,16,package org.apache.commons.cli2.builder;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,18,import java.util.HashSet;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,19,import java.util.Set;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,21,import org.apache.commons.cli2.Argument;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,22,import org.apache.commons.cli2.Group;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,23,import org.apache.commons.cli2.option.Command;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,26,* Builds Command instances
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,28,public class CommandBuilder {
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,30,private String preferredName;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,31,private String description;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,32,private Set aliases;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,33,private boolean required;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,34,private Argument argument;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,35,private Group children;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,36,private int id;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,39,* Creates a new CommandBuilder instance
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,41,public CommandBuilder() {
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,42,reset();
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,46,* Creates a new Command instance using the properties of the
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,47,* CommandBuilder.
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,49,* @return the new Command instance
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,51,public Command create() {
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,53,// check we have a valid name
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,54,if (preferredName == null) {
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,55,"throw new IllegalStateException(""Options must have at least one name"");"
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,58,// build the command
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,59,final Command option =
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,60,new Command(
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,61,"preferredName,"
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,62,"description,"
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,63,"aliases,"
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,64,"required,"
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,65,"argument,"
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,66,"children,"
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,67,id);
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,69,// reset the builder
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,70,reset();
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,72,return option;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,76,* Resets the CommandBuilder to the defaults for a new Command. The method
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,77,* should be called automatically at the end of a create() call.
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,79,public void reset() {
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,80,preferredName = null;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,81,description = null;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,82,aliases = new HashSet();
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,83,required = false;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,84,argument = null;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,85,children = null;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,86,id = 0;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,90,* Sets the name of the command. The first name is used as the preferred
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,91,* display name for the Command and then later names are used as aliases.
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,93,* @param name
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,94,*            a name for the Command
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,95,* @return this CommandBuilder
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,97,public CommandBuilder withName(final String name) {
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,98,if (preferredName == null) {
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,99,preferredName = name;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,101,else {
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,102,aliases.add(name);
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,105,return this;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,109,* Sets the description of the command. The description is used to produce
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,110,* online help for the command.
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,112,* @param newDescription
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,113,*            The description of the command
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,114,* @return this CommandBuilder
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,116,public CommandBuilder withDescription(final String newDescription) {
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,117,this.description = newDescription;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,118,return this;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,122,* Use this optionality
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,123,* @param newRequired true iff the Option is required
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,124,* @return this builder
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,126,public CommandBuilder withRequired(final boolean newRequired) {
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,127,this.required = newRequired;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,128,return this;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,132,* Sets the children of the Command.
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,134,* @param newChildren
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,135,*            the child options for the Command
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,136,* @return this CommandBuilder
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,138,public CommandBuilder withChildren(final Group newChildren) {
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,139,this.children = newChildren;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,140,return this;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,144,* Sets the argument of the Command.
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,146,* @param newArgument
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,147,*            the argument for the Command
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,148,* @return this CommandBuilder
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,150,public CommandBuilder withArgument(final Argument newArgument) {
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,151,this.argument = newArgument;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,152,return this;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,156,* Sets the id
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,158,* @param newId
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,159,*            the id of the Command
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,160,* @return this CommandBuilder
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,162,public final CommandBuilder withId(final int newId) {
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,163,this.id = newId;
True,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,src/java/org/apache/commons/cli2/builder/CommandBuilder.java,164,return this;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,16,package org.apache.commons.cli2.builder;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,18,import java.util.HashSet;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,19,import java.util.Set;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,21,import org.apache.commons.cli2.Argument;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,22,import org.apache.commons.cli2.Group;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,23,import org.apache.commons.cli2.option.DefaultOption;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,26,* Builds DefaultOption instances.
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,28,public class DefaultOptionBuilder {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,30,private final String shortPrefix;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,31,private final String longPrefix;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,32,private final boolean burstEnabled;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,34,private String preferredName;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,35,private Set aliases;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,36,private Set burstAliases;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,37,private boolean required;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,39,private String description;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,40,private Argument argument;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,41,private Group children;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,42,private int id;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,45,* Creates a new DefaultOptionBuilder using defaults
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,46,* @see DefaultOption#DEFAULT_SHORT_PREFIX
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,47,* @see DefaultOption#DEFAULT_LONG_PREFIX
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,48,* @see DefaultOption#DEFAULT_BURST_ENABLED
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,50,public DefaultOptionBuilder() {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,51,this(
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,52,"DefaultOption.DEFAULT_SHORT_PREFIX,"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,53,"DefaultOption.DEFAULT_LONG_PREFIX,"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,54,DefaultOption.DEFAULT_BURST_ENABLED);
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,58,* Creates a new DefaultOptionBuilder
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,59,* @param shortPrefix the prefix to use for short options
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,60,* @param longPrefix the prefix to use for long options
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,61,* @param burstEnabled whether to allow gnu style bursting
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,62,* @throws IllegalArgumentException if either prefix is less than on
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,63,*                                  character long
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,65,public DefaultOptionBuilder(
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,66,"final String shortPrefix,"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,67,"final String longPrefix,"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,68,final boolean burstEnabled) throws IllegalArgumentException{
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,69,if (shortPrefix == null || shortPrefix.length() == 0) {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,70,"throw new IllegalArgumentException(""shortPrefix should be at least 1 character long"");"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,72,else {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,73,this.shortPrefix = shortPrefix;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,76,if (longPrefix == null || longPrefix.length() == 0) {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,77,"throw new IllegalArgumentException(""longPrefix should be at least 1 character long"");"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,79,else {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,80,this.longPrefix = longPrefix;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,83,this.burstEnabled = burstEnabled;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,84,reset();
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,88,* Creates a DefaultOption instance
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,89,* @return the new instance
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,90,* @throws IllegalStateException if no names have been supplied
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,92,public DefaultOption create() throws IllegalStateException {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,93,if (preferredName == null) {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,94,"throw new IllegalStateException(""Options must have at least one name"");"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,97,final DefaultOption option =
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,98,new DefaultOption(
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,99,"shortPrefix,"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,100,"longPrefix,"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,101,"burstEnabled,"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,102,"preferredName,"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,103,"description,"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,104,"aliases,"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,105,"burstAliases,"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,106,"required,"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,107,"argument,"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,108,"children,"
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,109,id);
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,111,reset();
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,113,return option;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,117,* Resets the builder
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,119,public void reset() {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,120,preferredName = null;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,121,description = null;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,122,aliases = new HashSet();
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,123,burstAliases = new HashSet();
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,124,required = false;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,125,argument = null;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,126,children = null;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,127,id = 0;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,131,* Use this short option name
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,132,* @param shortName the name to use
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,133,* @return this builder
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,135,public DefaultOptionBuilder withShortName(final String shortName) {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,136,final String name = shortPrefix + shortName;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,138,if (preferredName == null) {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,139,preferredName = name;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,141,else {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,142,aliases.add(name);
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,145,if (burstEnabled && name.length() == shortPrefix.length() + 1) {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,146,burstAliases.add(name);
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,149,return this;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,153,* Use this long option name
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,154,* @param longName the name to use
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,155,* @return this builder
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,157,public DefaultOptionBuilder withLongName(final String longName) {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,158,final String name = longPrefix + longName;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,159,if (preferredName == null) {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,160,preferredName = name;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,162,else {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,163,aliases.add(name);
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,165,return this;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,169,* Use this option description
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,170,* @param newDescription the description to use
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,171,* @return this builder
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,173,public DefaultOptionBuilder withDescription(final String newDescription) {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,174,this.description = newDescription;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,175,return this;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,179,* Use this optionality
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,180,* @param newRequired true iff the Option is required
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,181,* @return this builder
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,183,public DefaultOptionBuilder withRequired(final boolean newRequired) {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,184,this.required = newRequired;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,185,return this;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,189,* Use this child Group
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,190,* @param newChildren the child Group to use
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,191,* @return this builder
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,193,public DefaultOptionBuilder withChildren(final Group newChildren) {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,194,this.children = newChildren;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,195,return this;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,199,* Use this Argument
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,200,* @param newArgument the argument to use
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,201,* @return this builder
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,203,public DefaultOptionBuilder withArgument(final Argument newArgument) {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,204,this.argument = newArgument;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,205,return this;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,209,* Sets the id
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,211,* @param newId
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,212,*            the id of the DefaultOption
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,213,* @return this DefaultOptionBuilder
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,215,public final DefaultOptionBuilder withId(final int newId) {
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,216,this.id = newId;
True,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,src/java/org/apache/commons/cli2/builder/DefaultOptionBuilder.java,217,return this;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,16,package org.apache.commons.cli2.builder;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,18,import java.util.ArrayList;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,19,import java.util.List;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,21,import org.apache.commons.cli2.Group;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,22,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,23,import org.apache.commons.cli2.option.GroupImpl;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,26,* Builds Group instances
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,28,public class GroupBuilder {
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,30,private String name;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,31,private String description;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,32,private List options;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,33,private int minimum;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,34,private int maximum;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,37,* Creates a new GroupBuilder
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,39,public GroupBuilder() {
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,40,reset();
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,44,* Creates a new Group instance
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,45,* @return the new Group instance
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,47,public Group create() {
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,48,final GroupImpl group =
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,49,"new GroupImpl(options, name, description, minimum, maximum);"
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,51,reset();
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,53,return group;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,57,* Resets the builder
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,59,public void reset() {
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,60,name = null;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,61,description = null;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,62,options = new ArrayList();
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,63,minimum = 0;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,64,maximum = Integer.MAX_VALUE;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,68,* Use this option description
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,69,* @param newDescription the description to use
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,70,* @return this builder
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,72,public GroupBuilder withDescription(final String newDescription) {
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,73,this.description = newDescription;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,74,return this;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,78,* Use this option name
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,79,* @param newName the name to use
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,80,* @return this builder
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,82,public GroupBuilder withName(final String newName) {
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,83,this.name = newName;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,84,return this;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,88,* A valid group requires at least this many options present
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,89,* @param newMinimum the minimum Options required
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,90,* @return this builder
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,92,public GroupBuilder withMinimum(final int newMinimum) {
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,93,this.minimum = newMinimum;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,94,return this;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,98,* A valid group requires at most this many options present
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,99,* @param newMaximum the maximum Options allowed
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,100,* @return this builder
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,102,public GroupBuilder withMaximum(final int newMaximum) {
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,103,this.maximum = newMaximum;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,104,return this;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,108,* Add this option to the group
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,109,* @param option the Option to add
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,110,* @return this builder
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,112,public GroupBuilder withOption(final Option option) {
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,113,this.options.add(option);
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,114,return this;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,16,package org.apache.commons.cli2.builder;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,18,import java.util.HashSet;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,19,import java.util.Iterator;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,20,import java.util.Set;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,22,import org.apache.commons.cli2.Argument;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,23,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,24,import org.apache.commons.cli2.validation.ClassValidator;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,25,import org.apache.commons.cli2.validation.DateValidator;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,26,import org.apache.commons.cli2.validation.FileValidator;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,27,import org.apache.commons.cli2.validation.NumberValidator;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,28,import org.apache.commons.cli2.validation.UrlValidator;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,29,import org.apache.commons.cli2.validation.Validator;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,32,* Builds Options using a String pattern
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,34,//TODO Document and link to the acceptable patterns
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,35,public class PatternBuilder {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,37,private final GroupBuilder gbuilder;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,38,private final DefaultOptionBuilder obuilder;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,39,private final ArgumentBuilder abuilder;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,42,* Creates a new PatternBuilder
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,44,public PatternBuilder() {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,45,this(
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,46,"new GroupBuilder(),"
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,47,"new DefaultOptionBuilder(),"
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,48,new ArgumentBuilder());
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,52,* Creates a new PatternBuilder
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,53,* @param gbuilder the GroupBuilder to use
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,54,* @param obuilder the DefaultOptionBuilder to use
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,55,* @param abuilder the ArgumentBuilder to use
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,57,public PatternBuilder(
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,58,"final GroupBuilder gbuilder,"
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,59,"final DefaultOptionBuilder obuilder,"
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,60,final ArgumentBuilder abuilder) {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,61,this.gbuilder = gbuilder;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,62,this.obuilder = obuilder;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,63,this.abuilder = abuilder;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,66,private final Set options = new HashSet();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,69,* Creates a new Option instance.
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,70,* @return a new Option instance
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,72,public Option create() {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,73,final Option option;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,75,if (options.size() == 1) {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,76,option = (Option)options.iterator().next();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,78,else {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,79,gbuilder.reset();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,80,for (final Iterator i = options.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,81,gbuilder.withOption((Option)i.next());
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,83,option = gbuilder.create();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,86,reset();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,88,return option;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,92,* Resets this builder
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,94,public void reset() {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,95,options.clear();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,98,private void createOption(
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,99,"final char type,"
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,100,"final boolean required,"
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,101,final char opt) {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,102,final Argument argument;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,103,if (type != ' ') {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,104,abuilder.reset();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,105,abuilder.withValidator(validator(type));
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,106,if (required) {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,107,abuilder.withMinimum(1);
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,109,if (type != '*') {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,110,abuilder.withMaximum(1);
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,112,argument = abuilder.create();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,114,else {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,115,argument = null;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,118,obuilder.reset();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,119,obuilder.withArgument(argument);
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,120,obuilder.withShortName(String.valueOf(opt));
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,121,obuilder.withRequired(required);
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,123,options.add(obuilder.create());
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,127,* Builds an Option using a pattern string.
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,128,* @param pattern the pattern to build from
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,130,public void withPattern(final String pattern) {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,131,int sz = pattern.length();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,133,char opt = ' ';
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,134,char ch = ' ';
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,135,char type = ' ';
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,136,boolean required = false;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,138,for (int i = 0; i < sz; i++) {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,139,ch = pattern.charAt(i);
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,141,switch (ch) {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,142,case '!' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,143,required = true;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,144,break;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,145,case '@' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,146,case ':' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,147,case '%' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,148,case '+' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,149,case '#' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,150,case '<' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,151,case '>' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,152,case '*' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,153,case '/' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,154,type = ch;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,155,break;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,156,default :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,157,if (opt != ' ') {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,158,"createOption(type, required, opt);"
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,159,required = false;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,160,type = ' ';
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,163,opt = ch;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,167,if (opt != ' ') {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,168,"createOption(type, required, opt);"
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,172,private static Validator validator(final char c) {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,173,switch (c) {
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,174,case '@' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,175,final ClassValidator classv = new ClassValidator();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,176,classv.setInstance(true);
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,177,return classv;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,178,case '+' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,179,final ClassValidator instancev = new ClassValidator();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,180,return instancev;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,181,//case ':':// no validator needed for a string
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,182,case '%' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,183,return NumberValidator.getNumberInstance();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,184,case '#' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,185,return DateValidator.getDateInstance();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,186,case '<' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,187,final FileValidator existingv = new FileValidator();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,188,existingv.setExisting(true);
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,189,existingv.setFile(true);
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,190,return existingv;
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,191,case '>' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,192,case '*' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,193,return new FileValidator();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,194,case '/' :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,195,return new UrlValidator();
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,196,default :
True,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,src/java/org/apache/commons/cli2/builder/PatternBuilder.java,197,return null;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,16,package org.apache.commons.cli2.builder;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,18,import java.util.HashSet;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,19,import java.util.Set;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,21,import org.apache.commons.cli2.Argument;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,22,import org.apache.commons.cli2.Group;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,23,import org.apache.commons.cli2.option.Switch;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,26,* Builds Switch instance.
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,28,public class SwitchBuilder {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,30,private final String enabledPrefix;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,31,private final String disabledPrefix;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,33,private String description;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,34,private String preferredName;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,35,private Set aliases;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,36,private boolean required;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,37,private Argument argument;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,38,private Group children;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,39,private int id;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,42,* Creates a new SwitchBuilder using defaults.
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,43,* @see Switch#DEFAULT_ENABLED_PREFIX
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,44,* @see Switch#DEFAULT_DISABLED_PREFIX
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,46,public SwitchBuilder() {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,47,"this(Switch.DEFAULT_ENABLED_PREFIX, Switch.DEFAULT_DISABLED_PREFIX);"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,51,* Creates a new SwitchBuilder
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,52,* @param enabledPrefix the prefix to use for enabling the option
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,53,* @param disabledPrefix the prefix to use for disabling the option
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,54,* @throws IllegalArgumentException if either prefix is less than 1
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,55,*                                  character long or the prefixes match
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,57,public SwitchBuilder(
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,58,"final String enabledPrefix,"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,59,final String disabledPrefix) throws IllegalArgumentException {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,60,if (enabledPrefix == null || enabledPrefix.length() < 1) {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,61,"throw new IllegalArgumentException(""enabledPrefix should be at least 1 character long"");"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,63,if (disabledPrefix == null || disabledPrefix.length() < 1) {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,64,"throw new IllegalArgumentException(""disabledPrefix should be at least 1 character long"");"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,66,if (enabledPrefix.equals(disabledPrefix)) {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,67,"throw new IllegalArgumentException(""disabledPrefix and enabledPrefix should be different"");"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,69,this.enabledPrefix = enabledPrefix;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,70,this.disabledPrefix = disabledPrefix;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,71,reset();
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,75,* Creates a new Switch instance
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,76,* @return a new Switch instance
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,78,public Switch create() {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,79,final Switch option =
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,80,new Switch(
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,81,"enabledPrefix,"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,82,"disabledPrefix,"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,83,"preferredName,"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,84,"aliases,"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,85,"description,"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,86,"required,"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,87,"argument,"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,88,"children,"
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,89,id);
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,91,reset();
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,93,return option;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,97,* Resets the builder
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,99,public void reset() {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,100,description = null;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,101,preferredName = null;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,102,required = false;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,103,aliases = new HashSet();
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,104,argument = null;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,105,children = null;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,106,id = 0;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,110,* Use this option description
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,111,* @param newDescription the description to use
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,112,* @return this builder
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,114,public SwitchBuilder withDescription(final String newDescription) {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,115,this.description = newDescription;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,116,return this;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,120,* Use this option name
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,121,* @param name the name to use
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,122,* @return this builder
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,124,public SwitchBuilder withName(final String name) {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,125,if (preferredName == null) {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,126,preferredName = name;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,128,else {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,129,aliases.add(name);
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,132,return this;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,136,* Use this optionality
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,137,* @param newRequired true iff the Option is required
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,138,* @return this builder
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,140,public SwitchBuilder withRequired(final boolean newRequired) {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,141,this.required = newRequired;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,142,return this;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,146,* Use this Argument
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,147,* @param newArgument the argument to use
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,148,* @return this builder
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,150,public SwitchBuilder withArgument(final Argument newArgument) {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,151,this.argument = newArgument;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,152,return this;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,156,* Use this child Group
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,157,* @param newChildren the child Group to use
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,158,* @return this builder
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,160,public SwitchBuilder withChildren(final Group newChildren) {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,161,this.children = newChildren;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,162,return this;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,166,* Sets the id
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,168,* @param newId
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,169,*            the id of the Switch
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,170,* @return this SwitchBuilder
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,172,public final SwitchBuilder withId(final int newId) {
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,173,this.id = newId;
True,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,src/java/org/apache/commons/cli2/builder/SwitchBuilder.java,174,return this;
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,16,package org.apache.commons.cli2.commandline;
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,18,import java.util.Collections;
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,19,import java.util.Iterator;
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,20,import java.util.List;
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,22,import org.apache.commons.cli2.CommandLine;
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,23,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,26,* Instances of CommandLine represent a command line that has been processed
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,27,* according to the definition supplied to the parser.
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,29,public abstract class CommandLineImpl implements CommandLine {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,31,public final boolean hasOption(final String trigger) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,32,return hasOption(getOption(trigger));
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,35,public final List getValues(final String trigger) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,36,"return getValues(getOption(trigger),Collections.EMPTY_LIST);"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,39,"public final List getValues(final String trigger, final List defaultValues) {"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,40,"return getValues(getOption(trigger), defaultValues);"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,43,public final List getValues(final Option option) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,44,"return getValues(option, Collections.EMPTY_LIST);"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,47,public final Object getValue(final String trigger) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,48,"return getValue(getOption(trigger),null);"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,51,"public final Object getValue(final String trigger, final Object defaultValue) {"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,52,"return getValue(getOption(trigger), defaultValue);"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,55,public final Object getValue(final Option option) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,56,"return getValue(option, null);"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,59,"public final Object getValue(final Option option, final Object defaultValue) {"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,61,final List values;
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,62,if (defaultValue == null) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,63,values = getValues(option);
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,65,else {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,66,"values = getValues(option, Collections.singletonList(defaultValue));"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,69,if (values.size() > 1) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,70,"throw new IllegalStateException(""More than one value was supplied"");"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,73,if (values.isEmpty()) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,74,return defaultValue;
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,77,return values.get(0);
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,80,public final Boolean getSwitch(final String trigger) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,81,"return getSwitch(getOption(trigger), null);"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,84,public final Boolean getSwitch(
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,85,"final String trigger,"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,86,final Boolean defaultValue) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,87,"return getSwitch(getOption(trigger), defaultValue);"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,90,public final Boolean getSwitch(final Option option) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,91,"return getSwitch(option, null);"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,94,public final String getProperty(final String property) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,95,"return getProperty(property,null);"
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,98,public final int getOptionCount(final String trigger) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,99,return getOptionCount(getOption(trigger));
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,102,public final int getOptionCount(final Option option) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,103,if (option == null) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,104,return 0;
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,107,int count = 0;
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,108,for (Iterator i = getOptions().iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,109,if (option.equals(i.next())) {
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,110,++count;
True,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/CommandLineImpl.java,114,return count;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,2,* Copyright 2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,16,package org.apache.commons.cli2.commandline;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,18,import java.util.ArrayList;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,19,import java.util.Collections;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,20,import java.util.HashSet;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,21,import java.util.Iterator;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,22,import java.util.List;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,23,import java.util.Set;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,25,import org.apache.commons.cli2.CommandLine;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,26,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,29,* Manages a queue of default CommandLines. This CommandLine implementation is
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,30,* backed by a queue of CommandLine instances which are queried in turn until a
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,31,* suitable result is found.
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,33,* CommandLine instances can either be added to the back of the queue or can be
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,34,* pushed in at a specific position.
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,36,* @see #appendCommandLine(CommandLine)
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,37,"* @see #insertCommandLine(int, CommandLine)"
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,39,public class DefaultingCommandLine extends CommandLineImpl {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,42,* The list of default CommandLine instances
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,44,private final List commandLines = new ArrayList();
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,47,* Adds a CommandLine instance to the back of the queue. The supplied
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,48,* CommandLine will be used as defaults when all other CommandLines produce
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,49,* no result
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,51,* @param commandLine
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,52,*            the default values to use if all CommandLines
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,54,public void appendCommandLine(final CommandLine commandLine) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,55,commandLines.add(commandLine);
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,59,* Adds a CommandLine instance to a specified position in the queue.
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,61,* @param index ths position at which to insert
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,62,* @param commandLine the CommandLine to insert
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,64,public void insertCommandLine(
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,65,"final int index,"
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,66,final CommandLine commandLine) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,67,"commandLines.add(index, commandLine);"
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,71,* Builds an iterator over the build in CommandLines.
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,73,* @return an unmodifiable iterator
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,75,public Iterator commandLines(){
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,76,return Collections.unmodifiableList(commandLines).iterator();
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,79,public Option getOption(String trigger) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,80,for (final Iterator i = commandLines.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,81,final CommandLine commandLine = (CommandLine)i.next();
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,82,final Option actual = commandLine.getOption(trigger);
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,83,if (actual != null) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,84,return actual;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,87,return null;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,90,public List getOptions() {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,91,final List options = new ArrayList();
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,93,final List temp = new ArrayList();
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,94,for (final Iterator i = commandLines.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,95,final CommandLine commandLine = (CommandLine)i.next();
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,96,temp.clear();
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,97,temp.addAll(commandLine.getOptions());
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,98,temp.removeAll(options);
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,99,options.addAll(temp);
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,102,return Collections.unmodifiableList(options);
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,105,public Set getOptionTriggers() {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,106,final Set all = new HashSet();
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,107,for (final Iterator i = commandLines.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,108,final CommandLine commandLine = (CommandLine)i.next();
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,109,all.addAll(commandLine.getOptionTriggers());
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,112,return Collections.unmodifiableSet(all);
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,115,public boolean hasOption(Option option) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,116,for (final Iterator i = commandLines.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,117,final CommandLine commandLine = (CommandLine)i.next();
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,118,if (commandLine.hasOption(option)) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,119,return true;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,122,return false;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,125,"public List getValues(Option option, List defaultValues) {"
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,126,for (final Iterator i = commandLines.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,127,final CommandLine commandLine = (CommandLine)i.next();
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,128,final List actual = commandLine.getValues(option);
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,129,if (actual != null && !actual.isEmpty()) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,130,return actual;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,133,if(defaultValues==null){
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,134,return Collections.EMPTY_LIST;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,136,else{
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,137,return defaultValues;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,141,"public Boolean getSwitch(Option option, Boolean defaultValue) {"
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,142,for (final Iterator i = commandLines.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,143,final CommandLine commandLine = (CommandLine)i.next();
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,144,final Boolean actual = commandLine.getSwitch(option);
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,145,if (actual != null) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,146,return actual;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,149,return defaultValue;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,152,"public String getProperty(String property, String defaultValue) {"
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,153,for (final Iterator i = commandLines.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,154,final CommandLine commandLine = (CommandLine)i.next();
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,155,final String actual = commandLine.getProperty(property);
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,156,if (actual != null) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,157,return actual;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,160,return defaultValue;
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,163,public Set getProperties() {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,164,final Set all = new HashSet();
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,165,for (final Iterator i = commandLines.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,166,final CommandLine commandLine = (CommandLine)i.next();
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,167,all.addAll(commandLine.getProperties());
True,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,src/java/org/apache/commons/cli2/commandline/DefaultingCommandLine.java,169,return Collections.unmodifiableSet(all);
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,16,package org.apache.commons.cli2.commandline;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,18,import java.io.IOException;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,19,import java.util.ArrayList;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,20,import java.util.Arrays;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,21,import java.util.LinkedList;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,22,import java.util.List;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,23,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,25,import org.apache.commons.cli2.CommandLine;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,26,import org.apache.commons.cli2.Group;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,27,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,28,import org.apache.commons.cli2.OptionException;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,29,import org.apache.commons.cli2.WriteableCommandLine;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,30,import org.apache.commons.cli2.util.HelpFormatter;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,33,* A class that implements the <code>Parser</code> interface can parse a
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,34,* String array according to the {@link Group}specified and return a
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,35,* {@link CommandLine}.
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,37,* @author John Keyes (john at integralsource.com)
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,39,public class Parser {
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,40,private HelpFormatter helpFormatter = new HelpFormatter();
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,41,private Option helpOption = null;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,42,private String helpTrigger = null;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,43,private Group group = null;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,46,* Parse the arguments according to the specified options and properties.
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,48,* @param arguments
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,49,*            the command line arguments
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,51,* @return the list of atomic option and value tokens
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,52,* @throws OptionException
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,53,*             if there are any problems encountered while parsing the
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,54,*             command line tokens.
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,56,public CommandLine parse(final String[] arguments) throws OptionException {
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,58,final List argumentList = new LinkedList(Arrays.asList(arguments));
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,59,final ListIterator iterator = argumentList.listIterator();
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,60,final WriteableCommandLine commandLine =
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,61,"new WriteableCommandLineImpl(group, new ArrayList());"
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,63,while (group.canProcess(iterator)) {
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,64,"group.process(commandLine, iterator);"
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,67,if (iterator.hasNext()) {
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,68,final String arg = (String)iterator.next();
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,69,"throw new OptionException(group, ""cli.error.unexpected"", arg);"
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,72,group.validate(commandLine);
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,74,return commandLine;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,78,* Parse the arguments according to the specified options and properties and
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,79,* displays the usage screen if the CommandLine is not valid or the help
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,80,* option was specified.
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,82,* @param arguments the command line arguments
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,83,* @return a valid CommandLine or null if the parse was unsuccessful
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,84,* @throws IOException if an error occurs while formatting help
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,86,public CommandLine parseAndHelp(final String[] arguments)
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,87,throws IOException {
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,89,helpFormatter.setGroup(group);
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,91,try {
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,92,// attempt to parse the command line
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,93,final CommandLine commandLine = parse(arguments);
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,94,if (!commandLine.hasOption(helpOption)
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,95,&& !commandLine.hasOption(helpTrigger)) {
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,97,return commandLine;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,100,catch (final OptionException oe) {
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,101,// display help regarding the exception
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,102,helpFormatter.setException(oe);
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,105,// print help
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,106,helpFormatter.print();
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,108,return null;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,112,* Sets the Group of options to parse against
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,113,* @param group the group of options to parse against
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,115,public void setGroup(final Group group) {
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,116,this.group = group;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,120,* Sets the HelpFormatter to use with the simplified parsing.
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,121,* @see #parseAndHelp(String[])
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,122,* @param helpFormatter the HelpFormatter to use with the simplified parsing
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,124,public void setHelpFormatter(final HelpFormatter helpFormatter) {
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,125,this.helpFormatter = helpFormatter;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,129,* Sets the help option to use with the simplified parsing.  For example
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,130,"* <code>--help</code>, <code>-h</code> and <code>-?</code> are often used."
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,131,* @see #parseAndHelp(String[])
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,132,* @param helpOption the help Option
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,134,public void setHelpOption(final Option helpOption) {
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,135,this.helpOption = helpOption;
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,139,* Sets the help option to use with the simplified parsing.  For example
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,140,"* <code>--help</code>, <code>-h</code> and <code>-?</code> are often used."
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,141,* @see #parseAndHelp(String[])
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,142,* @param helpTrigger the trigger of the help Option
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,144,public void setHelpTrigger(final String helpTrigger) {
True,src/java/org/apache/commons/cli2/commandline/Parser.java,src/java/org/apache/commons/cli2/commandline/Parser.java,145,this.helpTrigger = helpTrigger;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,2,* Copyright 2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,16,package org.apache.commons.cli2.commandline;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,18,import java.util.ArrayList;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,19,import java.util.Arrays;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,20,import java.util.Collections;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,21,import java.util.HashSet;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,22,import java.util.Iterator;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,23,import java.util.List;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,24,import java.util.Set;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,25,import java.util.StringTokenizer;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,26,import java.util.prefs.BackingStoreException;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,27,import java.util.prefs.Preferences;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,29,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,32,"* A CommandLine implementation using the Preferences API, useful when"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,33,* constructing a complex DefaultingCommandLine
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,35,* This implementation uses the children of a single preference node to populate
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,36,* the CommandLine.  Options are keyed from their preferred name and presence in
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,37,* the Preferences object is taken as presence in the CommandLine.  Argument
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,38,* values are taken from the Preference value and are optionally separated using
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,39,"* the separator char defined, at construction time.  Switch values can be"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,40,* specified using a simple value of <code>true</code> or <code>false</code>;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,41,* obviously this means that Switches with Arguments are not supported by this
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,42,* implementation.
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,44,* @see java.util.prefs.Preferences
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,45,* @see org.apache.commons.cli2.commandline.DefaultingCommandLine
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,46,* @see org.apache.commons.cli2.Option#getPreferredName()
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,48,public class PreferencesCommandLine extends CommandLineImpl {
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,50,private static final char NUL = '\0';
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,51,private final Preferences preferences;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,52,private final Option root;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,53,private final char separator;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,56,* Creates a new PreferencesCommandLine using the specified root Option and
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,57,* Preferences node.  Argument values will be separated using the char 0.
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,59,* @param root the CommandLine's root Option
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,60,* @param preferences the Preferences node to get values from
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,62,"public PreferencesCommandLine(final Option root, final Preferences preferences){"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,63,"this(root,preferences,NUL);"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,67,"* Creates a new PreferencesCommandLine using the specified root Option,"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,68,* Preferences node and value separator.
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,70,* @param root the CommandLine's root Option
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,71,* @param preferences the Preferences node to get values from
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,72,* @param separator the character to split argument values
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,74,"public PreferencesCommandLine(final Option root, final Preferences preferences, final char separator){"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,75,this.root = root;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,76,this.preferences = preferences;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,77,this.separator = separator;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,80,public boolean hasOption(Option option) {
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,81,if(option==null){
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,82,return false;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,84,else{
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,85,try {
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,86,return Arrays.asList(preferences.keys()).contains(option.getPreferredName());
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,87,} catch (BackingStoreException e) {
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,88,return false;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,93,public Option getOption(String trigger) {
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,94,return root.findOption(trigger);
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,97,"public List getValues(final Option option, final List defaultValues) {"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,98,"final String value = preferences.get(option.getPreferredName(),null);"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,100,if(value==null){
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,101,return defaultValues;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,103,else if(separator>NUL){
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,104,final List values = new ArrayList();
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,105,"final StringTokenizer tokens = new StringTokenizer(value,String.valueOf(separator));"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,107,while(tokens.hasMoreTokens()){
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,108,values.add(tokens.nextToken());
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,111,return values;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,113,else{
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,114,return Collections.singletonList(value);
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,118,"public Boolean getSwitch(final Option option, final Boolean defaultValue) {"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,119,"final String value = preferences.get(option.getPreferredName(),null);"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,120,"if(""true"".equals(value)){"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,121,return Boolean.TRUE;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,123,"else if(""false"".equals(value)){"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,124,return Boolean.FALSE;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,126,else{
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,127,return defaultValue;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,131,"public String getProperty(final String property, final String defaultValue) {"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,132,"return preferences.get(property, defaultValue);"
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,135,public Set getProperties() {
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,136,try {
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,137,return new HashSet(Arrays.asList(preferences.keys()));
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,138,} catch (BackingStoreException e) {
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,139,return Collections.EMPTY_SET;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,143,public List getOptions() {
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,144,try {
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,145,final List options = new ArrayList();
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,146,final Iterator keys = Arrays.asList(preferences.keys()).iterator();
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,147,while (keys.hasNext()) {
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,148,final String trigger = (String) keys.next();
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,149,final Option option = root.findOption(trigger);
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,150,if (option != null) {
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,151,options.add(option);
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,154,return Collections.unmodifiableList(options);
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,155,} catch (BackingStoreException e) {
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,156,return Collections.EMPTY_LIST;
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,160,public Set getOptionTriggers() {
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,161,final Set triggers = new HashSet();
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,162,final Iterator options = getOptions().iterator();
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,163,while(options.hasNext()){
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,164,final Option option = (Option)options.next();
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,165,triggers.addAll(option.getTriggers());
True,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PreferencesCommandLine.java,167,return Collections.unmodifiableSet(triggers);
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,2,* Copyright 2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,16,package org.apache.commons.cli2.commandline;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,18,import java.util.ArrayList;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,19,import java.util.Collections;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,20,import java.util.HashSet;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,21,import java.util.Iterator;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,22,import java.util.List;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,23,import java.util.Properties;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,24,import java.util.Set;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,25,import java.util.StringTokenizer;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,27,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,30,"* A CommandLine implementation using a java Properties instance, useful for"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,31,* constructing a complex DefaultingCommandLine
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,33,* Options are keyed from their property name and presence in the Properties
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,34,* instance is taken as presence in the CommandLine.  Argument values are taken
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,35,* from the property value and are optionally separated using the separator
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,36,"* char, defined at construction time.  Switch values can be specified using a"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,37,* simple value of <code>true</code> or <code>false</code>; obviously this means
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,38,* that Switches with Arguments are not supported by this implementation.
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,40,* @see java.util.Properties
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,41,* @see org.apache.commons.cli2.commandline.DefaultingCommandLine
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,42,* @see org.apache.commons.cli2.Option#getPreferredName()
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,44,public class PropertiesCommandLine extends CommandLineImpl {
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,46,private static final char NUL = '\0';
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,47,private final Properties properties;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,48,private final Option root;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,49,private final char separator;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,52,"* Creates a new PropertiesCommandLine using the specified root Option,"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,53,* Properties instance.  The character 0 is used as the value separator.
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,55,* @param root the CommandLine's root Option
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,56,* @param properties the Properties instance to get values from
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,58,"public PropertiesCommandLine(final Option root, final Properties properties){"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,59,"this(root,properties,NUL);"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,63,"* Creates a new PropertiesCommandLine using the specified root Option,"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,64,* Properties instance and value separator.
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,66,* @param root the CommandLine's root Option
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,67,* @param properties the Properties instance to get values from
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,68,* @param separator the character to split argument values
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,70,"public PropertiesCommandLine(final Option root, final Properties properties, final char separator){"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,71,this.root = root;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,72,this.properties = properties;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,73,this.separator = separator;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,77,public boolean hasOption(Option option) {
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,78,if(option==null){
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,79,return false;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,81,else{
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,82,return properties.containsKey(option.getPreferredName());
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,86,public Option getOption(String trigger) {
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,87,return root.findOption(trigger);
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,90,"public List getValues(final Option option, final List defaultValues) {"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,91,final String value = properties.getProperty(option.getPreferredName());
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,93,if(value==null){
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,94,return defaultValues;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,96,else if(separator>NUL){
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,97,final List values = new ArrayList();
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,98,"final StringTokenizer tokens = new StringTokenizer(value,String.valueOf(separator));"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,100,while(tokens.hasMoreTokens()){
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,101,values.add(tokens.nextToken());
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,104,return values;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,106,else{
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,107,return Collections.singletonList(value);
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,111,"public Boolean getSwitch(final Option option, final Boolean defaultValue) {"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,112,final String value = properties.getProperty(option.getPreferredName());
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,113,"if(""true"".equals(value)){"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,114,return Boolean.TRUE;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,116,"else if(""false"".equals(value)){"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,117,return Boolean.FALSE;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,119,else{
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,120,return defaultValue;
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,124,"public String getProperty(final String property, final String defaultValue) {"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,125,"return properties.getProperty(property,defaultValue);"
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,128,public Set getProperties() {
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,129,return properties.keySet();
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,132,public List getOptions() {
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,133,final List options = new ArrayList();
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,134,final Iterator keys = properties.keySet().iterator();
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,135,while(keys.hasNext()){
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,136,final String trigger = (String)keys.next();
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,137,final Option option = root.findOption(trigger);
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,138,if(option!=null){
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,139,options.add(option);
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,142,return Collections.unmodifiableList(options);
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,145,public Set getOptionTriggers() {
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,146,final Set triggers = new HashSet();
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,147,final Iterator options = getOptions().iterator();
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,148,while(options.hasNext()){
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,149,final Option option = (Option)options.next();
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,150,triggers.addAll(option.getTriggers());
True,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,src/java/org/apache/commons/cli2/commandline/PropertiesCommandLine.java,152,return Collections.unmodifiableSet(triggers);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,2,* Copyright 2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,16,package org.apache.commons.cli2.commandline;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,18,import java.util.ArrayList;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,19,import java.util.Collections;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,20,import java.util.HashMap;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,21,import java.util.HashSet;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,22,import java.util.Iterator;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,23,import java.util.List;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,24,import java.util.Map;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,25,import java.util.Properties;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,26,import java.util.Set;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,28,import org.apache.commons.cli2.Argument;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,29,import org.apache.commons.cli2.CommandLine;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,30,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,31,import org.apache.commons.cli2.WriteableCommandLine;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,34,* A WriteableCommandLine implementation allowing Options to write their
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,35,* processed information to a CommandLine.
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,37,public class WriteableCommandLineImpl extends CommandLineImpl implements WriteableCommandLine {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,39,private final Properties properties = new Properties();
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,40,private final List options = new ArrayList();
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,41,private final Map nameToOption = new HashMap();
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,42,private final Map values = new HashMap();
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,43,private final Map switches = new HashMap();
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,44,private final Map defaults = new HashMap();
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,45,private final List normalised;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,46,private final Set prefixes;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,48,private CommandLine defaultCommandLine = null;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,51,"* Creates a new WriteableCommandLineImpl rooted on the specified Option, to"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,52,* hold the parsed arguments.
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,54,* @param rootOption the CommandLine's root Option
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,55,* @param arguments the arguments this CommandLine represents
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,57,"public WriteableCommandLineImpl(final Option rootOption, final List arguments) {"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,58,this.prefixes = rootOption.getPrefixes();
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,59,this.normalised = arguments;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,62,public void addOption(Option option) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,63,options.add(option);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,64,"nameToOption.put(option.getPreferredName(), option);"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,65,for (Iterator i = option.getTriggers().iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,66,"nameToOption.put(i.next(), option);"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,70,"public void addValue(final Option option, final Object value) {"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,71,if (option instanceof Argument) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,72,addOption(option);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,74,List valueList = (List)values.get(option);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,75,if (valueList == null) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,76,valueList = new ArrayList();
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,77,"values.put(option, valueList);"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,79,valueList.add(value);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,82,"public void addSwitch(final Option option, final boolean value) {"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,83,addOption(option);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,84,if (switches.containsKey(option)) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,85,"throw new IllegalStateException(""Switch already set"");"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,87,else {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,88,"switches.put(option, value ? Boolean.TRUE : Boolean.FALSE);"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,92,public boolean hasOption(final Option option) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,93,final boolean present = options.contains(option);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,94,if (!present && defaultCommandLine != null) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,95,return defaultCommandLine.hasOption(option);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,97,else {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,98,return present;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,102,public Option getOption(final String trigger) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,103,return (Option)nameToOption.get(trigger);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,106,//TODO Document the order of values and defaults
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,107,"public List getValues(final Option option, final List defaultValues) {"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,109,// First grab the command line values
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,110,List valueList = (List)values.get(option);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,112,// Secondly try alternate CommandLines
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,113,if ((valueList == null || valueList.isEmpty())
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,114,&& defaultCommandLine != null) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,115,"valueList = defaultCommandLine.getValues(option, null);"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,118,// Thirdly try the defaults supplied to the method
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,119,if (valueList == null || valueList.isEmpty()) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,120,valueList = defaultValues;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,123,// Fourthly try the option's default values
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,124,if (valueList == null || valueList.isEmpty()) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,125,valueList = (List)this.defaults.get(option);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,128,// Finally use an empty list
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,129,if (valueList == null) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,130,valueList = Collections.EMPTY_LIST;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,133,return valueList;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,136,"public Boolean getSwitch(final Option option, final Boolean defaultValue) {"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,137,// First grab the command line values
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,138,Boolean bool = (Boolean)switches.get(option);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,140,// Secondly try alternate CommandLines
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,141,if (bool == null && defaultCommandLine != null) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,142,bool = defaultCommandLine.getSwitch(option);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,145,// Thirdly try the defaults supplied to the method
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,146,if (bool == null) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,147,bool = defaultValue;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,150,// Fourthly try the option's default values
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,153,return bool;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,156,"public void addProperty(final String property, final String value) {"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,157,"properties.setProperty(property, value);"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,160,"public String getProperty(final String property, final String defaultValue) {"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,161,"return properties.getProperty(property,defaultValue);"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,164,public Set getProperties() {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,165,if (defaultCommandLine == null) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,166,return Collections.unmodifiableSet(properties.keySet());
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,168,else {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,169,final Set props = new HashSet();
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,170,props.addAll(properties.keySet());
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,171,props.addAll(defaultCommandLine.getProperties());
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,172,return Collections.unmodifiableSet(props);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,176,public boolean looksLikeOption(final String trigger) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,177,for (final Iterator i = prefixes.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,178,final String prefix = (String)i.next();
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,179,if (trigger.startsWith(prefix)) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,180,return true;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,184,return false;
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,187,public String toString() {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,188,final StringBuffer buffer = new StringBuffer();
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,190,// need to add group header
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,192,for (final Iterator i = normalised.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,193,final String arg = (String)i.next();
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,194,if (arg.indexOf(' ') >= 0) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,195,"buffer.append(""\"""").append(arg).append(""\"""");"
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,197,else {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,198,buffer.append(arg);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,200,if (i.hasNext()) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,201,buffer.append(' ');
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,205,return buffer.toString();
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,208,public List getOptions() {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,209,return Collections.unmodifiableList(options);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,212,public Set getOptionTriggers() {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,213,return Collections.unmodifiableSet(nameToOption.keySet());
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,16,package org.apache.commons.cli2.option;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,18,import java.util.Collections;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,19,import java.util.Comparator;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,20,import java.util.List;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,21,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,22,import java.util.Set;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,23,import java.util.StringTokenizer;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,25,import org.apache.commons.cli2.Argument;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,26,import org.apache.commons.cli2.DisplaySetting;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,27,import org.apache.commons.cli2.HelpLine;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,28,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,29,import org.apache.commons.cli2.OptionException;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,30,import org.apache.commons.cli2.WriteableCommandLine;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,31,import org.apache.commons.cli2.resource.ResourceHelper;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,32,import org.apache.commons.cli2.validation.InvalidArgumentException;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,33,import org.apache.commons.cli2.validation.Validator;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,36,* An implementation of an Argument.
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,38,public class ArgumentImpl extends OptionImpl implements Argument {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,40,private final String name;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,41,private final String description;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,42,private final int minimum;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,43,private final int maximum;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,44,private final char initialSeparator;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,45,private final char subsequentSepatator;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,46,private final boolean subsequentSplit;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,47,private final Validator validator;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,48,private final String consumeRemaining;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,49,private final List defaultValues;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,50,private final ResourceHelper resources
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,51,= ResourceHelper.getResourceHelper(ArgumentImpl.class);
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,53,private static final char NUL = '\0';
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,56,* The default value for the initial separator char.
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,58,public static final char DEFAULT_INITIAL_SEPARATOR = NUL;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,61,* The default value for the subsequent separator char.
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,63,public static final char DEFAULT_SUBSEQUENT_SEPARATOR = NUL;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,66,* The default token to indicate that remaining arguments should be consumed
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,67,* as values.
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,69,"public static final String DEFAULT_CONSUME_REMAINING = ""--"";"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,72,* Creates a new Argument instance.
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,74,* @param name
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,75,*            The name of the argument
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,76,* @param description
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,77,*            A description of the argument
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,78,* @param minimum
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,79,*            The minimum number of values needed to be valid
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,80,* @param maximum
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,81,*            The maximum number of values allowed to be valid
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,82,* @param initialSeparator
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,83,*            The char separating option from value
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,84,* @param subsequentSeparator
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,85,*            The char separating values from each other
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,86,* @param validator
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,87,*            The object responsible for validating the values
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,88,* @param consumeRemaining
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,89,"*            The String used for the ""consuming option"" group"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,90,* @param defaultValues
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,91,*            The values to be used if none are specified.
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,92,* @param id
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,93,"*            The id of the option, 0 implies automatic assignment."
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,95,"* @see OptionImpl#OptionImpl(int,boolean)"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,97,public ArgumentImpl(
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,98,"final String name,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,99,"final String description,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,100,"final int minimum,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,101,"final int maximum,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,102,"final char initialSeparator,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,103,"final char subsequentSeparator,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,104,"final Validator validator,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,105,"final String consumeRemaining,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,106,"final List defaultValues,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,107,final int id) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,109,"super(id,false);"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,111,"this.name = (name == null) ? ""arg"" : name;"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,112,this.description = description;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,113,this.minimum = minimum;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,114,this.maximum = maximum;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,115,this.initialSeparator = initialSeparator;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,116,this.subsequentSepatator = subsequentSeparator;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,117,this.subsequentSplit = subsequentSeparator != NUL;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,118,this.validator = validator;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,119,this.consumeRemaining = consumeRemaining;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,120,this.defaultValues = defaultValues;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,122,if (minimum > maximum) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,123,throw new IllegalArgumentException(
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,124,"resources.getMessage(""cli.error.minimum.exceeds.maximum""));"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,127,if (defaultValues != null) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,128,if (defaultValues.size() < minimum) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,129,throw new IllegalArgumentException(
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,130,"resources.getMessage(""cli.error.too.few.defaults""));"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,133,if (defaultValues.size() > maximum) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,134,throw new IllegalArgumentException(
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,135,"resources.getMessage(""cli.error.too.many.defaults""));"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,140,public String getPreferredName() {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,141,return name;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,144,public void processValues(
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,145,"final WriteableCommandLine commandLine,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,146,"final ListIterator arguments,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,147,final Option option)
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,148,throws OptionException {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,149,int argumentCount = commandLine.getValues(option).size();
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,150,final int initialCount = argumentCount;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,151,while (arguments.hasNext() && argumentCount < maximum) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,153,final String allValues =
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,154,stripBoundaryQuotes((String)arguments.next());
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,156,// should we ignore things that look like options?
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,157,if (allValues.equals(consumeRemaining)) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,158,while (arguments.hasNext() && argumentCount < maximum) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,159,++argumentCount;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,160,"commandLine.addValue(option, arguments.next());"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,163,// does it look like an option?
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,164,else if (commandLine.looksLikeOption(allValues)) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,165,arguments.previous();
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,166,break;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,168,// should we split the string up?
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,169,else if (subsequentSplit) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,170,final StringTokenizer values =
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,171,new StringTokenizer(
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,172,"allValues,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,173,String.valueOf(subsequentSepatator));
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,175,arguments.remove();
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,177,while (values.hasMoreTokens() && argumentCount < maximum) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,178,++argumentCount;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,179,final String token = values.nextToken();
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,180,"commandLine.addValue(option, token);"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,181,arguments.add(token);
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,184,if (values.hasMoreTokens()) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,185,throw new OptionException(
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,186,"option,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,187,"""cli.error.unexpected.value"","
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,188,values.nextToken());
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,191,// it must be a value as it is
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,192,else {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,193,++argumentCount;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,194,"commandLine.addValue(option, allValues);"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,198,if (this.defaultValues == null
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,199,&& (argumentCount < minimum || initialCount == argumentCount)) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,200,"throw new OptionException(option, ""cli.error.missing.values"");"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,204,public boolean canProcess(String arg) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,205,return true;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,208,public Set getPrefixes() {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,209,return Collections.EMPTY_SET;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,212,"public void process(WriteableCommandLine commandLine, ListIterator args)"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,213,throws OptionException {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,214,"processValues(commandLine, args, this);"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,217,public char getInitialSeparator() {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,218,return this.initialSeparator;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,221,public Set getTriggers() {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,222,return Collections.EMPTY_SET;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,225,public void validate(final WriteableCommandLine commandLine)
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,226,throws OptionException {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,227,"validate(commandLine, this);"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,230,public void validate(
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,231,"final WriteableCommandLine commandLine,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,232,final Option option)
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,233,throws OptionException {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,235,final List values = commandLine.getValues(option);
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,237,if (values.size() < minimum) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,238,"throw new OptionException(option, ""cli.error.missing.values"");"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,241,if (values.size() > maximum) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,242,throw new OptionException(
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,243,"option,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,244,"""cli.error.unexpected.value"","
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,245,(String)values.get(maximum));
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,248,if (validator != null) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,249,try {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,250,validator.validate(values);
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,252,catch (InvalidArgumentException ive) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,253,throw new OptionException(
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,254,"option,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,255,"""cli.error.unexpected.value"","
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,256,ive.getMessage());
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,261,public void appendUsage(
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,262,"final StringBuffer buffer,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,263,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,264,final Comparator comp) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,266,// do we display the outer optionality
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,267,final boolean optional =
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,268,helpSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,270,// allow numbering if multiple args
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,271,final boolean numbered =
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,272,maximum > 1
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,273,&& helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT_NUMBERED);
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,275,final boolean bracketed =
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,276,helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT_BRACKETED);
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,278,// if infinite args are allowed then crop the list
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,279,final int max = maximum == Integer.MAX_VALUE ? 2 : maximum;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,281,int i = 0;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,282,// for each argument
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,283,while (i < max) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,284,// if we're past the first add a space
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,285,if (i > 0) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,286,buffer.append(' ');
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,288,// if the next arg is optional
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,289,if (i >= minimum && (optional || i > 0)) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,290,buffer.append('[');
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,292,if (bracketed) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,293,buffer.append('<');
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,295,// add name
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,296,buffer.append(name);
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,297,++i;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,298,// if numbering
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,299,if (numbered) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,300,buffer.append(i);
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,302,if (bracketed) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,303,buffer.append('>');
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,306,// if infinite args are allowed
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,307,if (maximum == Integer.MAX_VALUE) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,308,// append elipsis
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,309,"buffer.append("" ..."");"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,311,// for each argument
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,312,while (i > 0) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,313,--i;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,314,// if the next arg is optional
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,315,if (i >= minimum && (optional || i > 0)) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,316,buffer.append(']');
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,321,public String getDescription() {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,322,return description;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,325,public List helpLines(
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,326,"final int depth,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,327,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,328,final Comparator comp) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,329,"final HelpLine helpLine = new HelpLineImpl(this, depth);"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,330,return Collections.singletonList(helpLine);
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,333,public int getMaximum() {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,334,return maximum;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,337,public int getMinimum() {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,338,return minimum;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,342,* If there are any leading or trailing quotes remove them from the
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,343,* specified token.
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,345,* @param token
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,346,*            the token to strip leading and trailing quotes
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,348,* @return String the possibly modified token
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,350,public String stripBoundaryQuotes(String token) {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,351,"if (!token.startsWith(""\"""") || !token.endsWith(""\"""")) {"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,352,return token;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,354,else {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,355,"if (token.startsWith(""\"""")) {"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,356,"token = token.substring(1, token.length());"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,359,"if (token.endsWith(""\"""")) {"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,360,"token = token.substring(0, token.length() - 1);"
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,363,return token;
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,367,public boolean isRequired() {
True,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,src/java/org/apache/commons/cli2/option/ArgumentImpl.java,368,return getMinimum()>0;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,16,package org.apache.commons.cli2.option;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,18,import java.util.ArrayList;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,19,import java.util.Collections;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,20,import java.util.Comparator;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,21,import java.util.HashSet;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,22,import java.util.Iterator;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,23,import java.util.List;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,24,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,25,import java.util.Set;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,27,import org.apache.commons.cli2.Argument;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,28,import org.apache.commons.cli2.DisplaySetting;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,29,import org.apache.commons.cli2.Group;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,30,import org.apache.commons.cli2.OptionException;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,31,import org.apache.commons.cli2.WriteableCommandLine;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,34,"* Represents a cvs ""update"" style command line option."
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,36,"* Like all Parents, Commands can have child options and can be part of"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,37,* Arguments
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,39,public class Command extends ParentImpl {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,41,/** The display name for the command */
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,42,private final String preferredName;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,44,/** The aliases for this command */
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,45,private final Set aliases;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,47,/** All the names for this command */
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,48,private final Set triggers;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,51,* Creates a new Command instance.
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,53,* @param preferredName
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,54,*            The name normally used to refer to the Command
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,55,* @param description
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,56,*            A description of the Command
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,57,* @param aliases
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,58,*            Alternative names for the Command
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,59,* @param required
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,60,*            Whether the Command is required
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,61,* @param argument
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,62,*            An Argument that the command takes
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,63,* @param children
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,64,*            The Group of child options for this Command
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,65,* @param id
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,66,*            A unique id for the Command
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,68,"* @see ParentImpl#ParentImpl(Argument, Group, String, int, boolean)"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,70,public Command(
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,71,"final String preferredName,"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,72,"final String description,"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,73,"final Set aliases,"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,74,"final boolean required,"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,75,"final Argument argument,"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,76,"final Group children,"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,77,final int id) {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,79,"super(argument, children, description, id, required);"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,81,// check the preferred name is valid
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,82,if (preferredName == null || preferredName.length() < 1) {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,83,"throw new IllegalArgumentException(""preferredName must be at least 1 character"");"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,86,this.preferredName = preferredName;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,88,// gracefully and defensively handle aliases
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,89,if (aliases == null) {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,90,this.aliases = Collections.EMPTY_SET;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,92,else {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,93,this.aliases = Collections.unmodifiableSet(new HashSet(aliases));
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,96,// populate the triggers Set
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,97,final Set newTriggers = new HashSet();
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,98,newTriggers.add(preferredName);
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,99,newTriggers.addAll(this.aliases);
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,100,this.triggers = Collections.unmodifiableSet(newTriggers);
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,103,public void processParent(
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,104,"final WriteableCommandLine commandLine,"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,105,final ListIterator arguments)
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,106,throws OptionException {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,108,// grab the argument to process
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,109,final String arg = (String)arguments.next();
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,111,// if we can process it
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,112,if (canProcess(arg)) {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,114,// then note the option
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,115,commandLine.addOption(this);
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,117,// normalise the argument list
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,118,arguments.set(preferredName);
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,120,else {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,121,"throw new OptionException(this, ""cli.error.unexpected"", arg);"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,125,public Set getTriggers() {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,126,return triggers;
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,129,public void validate(WriteableCommandLine commandLine)
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,130,throws OptionException {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,131,if (isRequired() && !commandLine.hasOption(this)) {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,132,throw new OptionException(this);
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,135,super.validate(commandLine);
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,138,public void appendUsage(
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,139,"final StringBuffer buffer,"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,140,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,141,final Comparator comp) {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,143,// do we display optionality
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,144,final boolean optional =
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,145,!isRequired() && helpSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,146,final boolean displayAliases =
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,147,helpSettings.contains(DisplaySetting.DISPLAY_ALIASES);
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,149,if (optional) {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,150,buffer.append('[');
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,152,buffer.append(preferredName);
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,154,if (displayAliases && !aliases.isEmpty()) {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,155,"buffer.append("" ("");"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,157,final List list = new ArrayList(aliases);
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,158,Collections.sort(list);
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,160,for (final Iterator i = list.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,161,final String alias = (String)i.next();
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,162,buffer.append(alias);
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,163,if (i.hasNext()) {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,164,"buffer.append(',');"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,167,buffer.append(')');
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,170,"super.appendUsage(buffer, helpSettings, comp);"
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,172,if (optional) {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,173,buffer.append(']');
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,177,public String getPreferredName() {
True,src/java/org/apache/commons/cli2/option/Command.java,src/java/org/apache/commons/cli2/option/Command.java,178,return preferredName;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,16,package org.apache.commons.cli2.option;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,18,import java.util.ArrayList;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,19,import java.util.Collections;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,20,import java.util.Comparator;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,21,import java.util.HashSet;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,22,import java.util.Iterator;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,23,import java.util.List;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,24,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,25,import java.util.Set;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,27,import org.apache.commons.cli2.Argument;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,28,import org.apache.commons.cli2.DisplaySetting;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,29,import org.apache.commons.cli2.Group;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,30,import org.apache.commons.cli2.OptionException;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,31,import org.apache.commons.cli2.WriteableCommandLine;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,34,* A Parent implementation representing normal options.
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,36,public class DefaultOption extends ParentImpl {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,39,* The default token used to prefix a short option
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,41,"public static final String DEFAULT_SHORT_PREFIX = ""-"";"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,44,* The default token used to prefix a long option
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,46,"public static final String DEFAULT_LONG_PREFIX = ""--"";"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,49,* The default value for the burstEnabled constructor parameter
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,51,public static final boolean DEFAULT_BURST_ENABLED = true;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,53,private final String preferredName;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,54,private final Set aliases;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,55,private final Set burstAliases;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,56,private final Set triggers;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,57,private final Set prefixes;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,59,private final String shortPrefix;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,60,private final boolean burstEnabled;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,62,private final int burstLength;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,65,* Creates a new DefaultOption
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,67,* @param shortPrefix the prefix used for short options
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,68,* @param longPrefix the prefix used for long options
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,69,* @param burstEnabled should option bursting be enabled
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,70,* @param preferredName the preferred name for this Option
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,71,* @param description a description of this Option
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,72,* @param aliases the alternative names for this Option
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,73,* @param burstAliases the aliases that can be burst
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,74,* @param required whether the Option is strictly required
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,75,"* @param argument the Argument belonging to this Parent, or null"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,76,"* @param children the Group children belonging to this Parent, ot null"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,77,* @param id the unique identifier for this Option
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,79,public DefaultOption(
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,80,"final String shortPrefix,"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,81,"final String longPrefix,"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,82,"final boolean burstEnabled,"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,83,"final String preferredName,"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,84,"final String description,"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,85,"final Set aliases,"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,86,"final Set burstAliases,"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,87,"final boolean required,"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,88,"final Argument argument,"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,89,"final Group children,"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,90,final int id) {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,91,"super(argument, children, description, id, required);"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,93,this.shortPrefix = shortPrefix;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,94,this.burstEnabled = burstEnabled;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,96,this.burstLength = shortPrefix.length() + 1;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,98,this.preferredName = preferredName;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,99,if (aliases == null) {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,100,this.aliases = Collections.EMPTY_SET;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,102,else {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,103,this.aliases = Collections.unmodifiableSet(new HashSet(aliases));
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,106,if (burstAliases == null) {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,107,this.burstAliases = Collections.EMPTY_SET;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,109,else {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,110,this.burstAliases =
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,111,Collections.unmodifiableSet(new HashSet(burstAliases));
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,114,final Set newTriggers = new HashSet();
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,115,newTriggers.add(preferredName);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,116,newTriggers.addAll(this.aliases);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,117,newTriggers.addAll(this.burstAliases);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,118,this.triggers = Collections.unmodifiableSet(newTriggers);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,120,final Set newPrefixes = new HashSet(super.getPrefixes());
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,121,newPrefixes.add(shortPrefix);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,122,newPrefixes.add(longPrefix);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,123,this.prefixes = Collections.unmodifiableSet(newPrefixes);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,126,public boolean canProcess(final String argument) {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,127,return argument != null
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,128,&& (super.canProcess(argument)
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,129,|| (argument.length() >= burstLength
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,130,"&& burstAliases.contains(argument.substring(0, burstLength))));"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,133,public void processParent(
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,134,"WriteableCommandLine commandLine,"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,135,ListIterator arguments)
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,136,throws OptionException {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,138,final String argument = (String)arguments.next();
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,140,if (triggers.contains(argument)) {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,141,commandLine.addOption(this);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,142,arguments.set(preferredName);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,144,else if (burstEnabled && argument.length() >= burstLength) {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,145,"final String burst = argument.substring(0, burstLength);"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,147,if (burstAliases.contains(burst)) {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,148,commandLine.addOption(this);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,150,//HMM test bursting all vs bursting one by one.
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,151,arguments.set(preferredName);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,153,if (getArgument() == null) {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,154,arguments.add(
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,155,shortPrefix + argument.substring(burstLength));
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,157,else {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,158,arguments.add(argument.substring(burstLength));
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,161,arguments.previous();
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,163,else {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,164,"throw new OptionException(this, ""cli.error.burst"", argument);"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,167,else {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,168,"throw new OptionException(this, ""cli.error.unexpected"", argument);"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,172,public Set getTriggers() {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,173,return triggers;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,176,public Set getPrefixes() {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,177,return prefixes;
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,180,public void validate(WriteableCommandLine commandLine)
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,181,throws OptionException {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,182,if (isRequired() && !commandLine.hasOption(this)) {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,183,throw new OptionException(this);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,186,super.validate(commandLine);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,189,public void appendUsage(
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,190,"final StringBuffer buffer,"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,191,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,192,final Comparator comp) {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,194,// do we display optionality
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,195,final boolean optional =
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,196,!isRequired() && helpSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,197,final boolean displayAliases =
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,198,helpSettings.contains(DisplaySetting.DISPLAY_ALIASES);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,200,if (optional) {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,201,buffer.append('[');
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,203,buffer.append(preferredName);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,205,if (displayAliases && !aliases.isEmpty()) {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,206,"buffer.append("" ("");"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,208,final List list = new ArrayList(aliases);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,209,Collections.sort(list);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,211,for (final Iterator i = list.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,212,final String alias = (String)i.next();
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,213,buffer.append(alias);
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,214,if (i.hasNext()) {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,215,"buffer.append(',');"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,218,buffer.append(')');
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,221,"super.appendUsage(buffer, helpSettings, comp);"
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,223,if (optional) {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,224,buffer.append(']');
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,228,public String getPreferredName() {
True,src/java/org/apache/commons/cli2/option/DefaultOption.java,src/java/org/apache/commons/cli2/option/DefaultOption.java,229,return preferredName;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,16,package org.apache.commons.cli2.option;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,18,import java.util.ArrayList;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,19,import java.util.Collection;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,20,import java.util.Collections;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,21,import java.util.Comparator;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,22,import java.util.HashSet;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,23,import java.util.Iterator;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,24,import java.util.List;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,25,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,26,import java.util.Map;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,27,import java.util.Set;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,28,import java.util.SortedMap;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,29,import java.util.TreeMap;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,31,import org.apache.commons.cli2.Argument;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,32,import org.apache.commons.cli2.DisplaySetting;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,33,import org.apache.commons.cli2.Group;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,34,import org.apache.commons.cli2.HelpLine;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,35,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,36,import org.apache.commons.cli2.OptionException;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,37,import org.apache.commons.cli2.WriteableCommandLine;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,40,* An implementation of Group
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,42,public class GroupImpl extends OptionImpl implements Group {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,44,private final String name;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,45,private final String description;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,46,private final List options;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,47,private final int minimum;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,48,private final int maximum;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,49,private final List anonymous;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,50,private final SortedMap optionMap;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,51,private final Set prefixes;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,54,* Creates a new GroupImpl using the specified parameters.
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,56,* @param options the Options and Arguments that make up the Group
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,57,"* @param name the name of this Group, or null"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,58,* @param description a description of this Group
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,59,* @param minimum the minimum number of Options for a valid CommandLine
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,60,* @param maximum the maximum number of Options for a valid CommandLine
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,62,public GroupImpl(
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,63,"final List options,"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,64,"final String name,"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,65,"final String description,"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,66,"final int minimum,"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,67,final int maximum)
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,69,"super(0,false);"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,71,this.name = name;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,72,this.description = description;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,73,this.minimum = minimum;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,74,this.maximum = maximum;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,76,// store a copy of the options to be used by the
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,77,// help methods
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,78,this.options = Collections.unmodifiableList(options);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,80,// anonymous Argument temporary storage
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,81,final List newAnonymous = new ArrayList();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,83,// map (key=trigger & value=Option) temporary storage
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,84,final SortedMap newOptionMap =
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,85,new TreeMap(ReverseStringComparator.getInstance());
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,87,// prefixes temporary storage
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,88,final Set newPrefixes = new HashSet();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,90,// process the options
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,91,for (final Iterator i = options.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,93,final Option option = (Option) i.next();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,95,if (option instanceof Argument) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,96,i.remove();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,97,newAnonymous.add(option);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,99,else {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,100,final Set triggers = option.getTriggers();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,102,for (Iterator j = triggers.iterator(); j.hasNext();) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,103,"newOptionMap.put(j.next(), option);"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,106,// store the prefixes
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,107,newPrefixes.addAll(option.getPrefixes());
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,111,this.anonymous = Collections.unmodifiableList(newAnonymous);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,112,this.optionMap = Collections.unmodifiableSortedMap(newOptionMap);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,113,this.prefixes = Collections.unmodifiableSet(newPrefixes);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,116,public boolean canProcess(String arg) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,117,if (arg == null) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,118,return false;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,121,// if arg does not require bursting
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,122,if (optionMap.containsKey(arg)) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,123,return true;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,126,// filter
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,127,final Map tailMap = optionMap.tailMap(arg);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,129,// check if bursting is required
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,130,for (final Iterator iter = tailMap.values().iterator();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,131,iter.hasNext();) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,133,final Option option = (Option) iter.next();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,134,if (option.canProcess(arg)) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,135,return true;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,139,// anonymous argument(s) means we can process it
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,140,if (anonymous.size() > 0) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,141,return true;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,144,return false;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,147,public Set getPrefixes() {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,148,return prefixes;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,151,public Set getTriggers() {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,152,return optionMap.keySet();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,155,public void process(
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,156,"final WriteableCommandLine commandLine,"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,157,final ListIterator arguments)
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,158,throws OptionException {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,160,// [START process each command line token
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,161,while (arguments.hasNext()) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,163,final String arg = (String)arguments.next();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,164,final Option opt = (Option)optionMap.get(arg);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,166,// option found
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,167,if (opt != null) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,168,arguments.previous();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,169,"opt.process(commandLine, arguments);"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,171,// [START option NOT found
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,172,else {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,173,// it might be an anonymous argument continue search
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,175,// [START argument may be anonymous
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,176,if (commandLine.looksLikeOption(arg)) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,178,// narrow the search
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,179,final Collection values = optionMap.tailMap(arg).values();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,181,for (Iterator i = values.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,182,final Option option = (Option) i.next();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,184,if (option.canProcess(arg)) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,185,arguments.previous();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,186,"option.process(commandLine, arguments);"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,189,} // [END argument may be anonymous
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,191,// [START argument is NOT anonymous
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,192,else {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,193,"// move iterator back, current value not used"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,194,arguments.previous();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,196,// if there are no anonymous arguments then this group can't
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,197,// process the argument
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,198,if(anonymous.isEmpty()){
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,199,break;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,202,// TODO: why do we iterate over all anonymous arguments?
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,203,// canProcess will always return true?
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,204,for (final Iterator i = anonymous.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,205,final Argument argument = (Argument)i.next();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,206,if (argument.canProcess(arguments)) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,207,"argument.process(commandLine, arguments);"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,210,} // [END argument is NOT anonymous
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,211,} // [END option NOT found
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,212,} // [END process each command line token
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,215,public void validate(final WriteableCommandLine commandLine)
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,216,throws OptionException {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,218,// number of options found
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,219,int present = 0;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,221,// reference to first unexpected option
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,222,Option unexpected = null;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,224,for (final Iterator i = options.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,225,final Option option = (Option) i.next();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,226,if (commandLine.hasOption(option)) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,227,if (++present > maximum) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,228,unexpected = option;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,229,break;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,231,option.validate(commandLine);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,235,// too many options
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,236,if (unexpected != null) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,237,throw new OptionException(
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,238,"this,"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,239,"""cli.error.unexpected"","
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,240,unexpected.getPreferredName());
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,243,// too few option
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,244,if (present < minimum) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,245,"throw new OptionException(this, ""cli.error.missing.option"");"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,248,// validate each anonymous argument
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,249,for (final Iterator i = anonymous.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,250,final Option option = (Option)i.next();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,251,option.validate(commandLine);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,255,public String getPreferredName() {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,256,return name;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,259,public String getDescription() {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,260,return description;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,263,public void appendUsage(
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,264,"final StringBuffer buffer,"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,265,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,266,final Comparator comp) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,267,"appendUsage(buffer, helpSettings, comp, ""|"");"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,270,public void appendUsage(
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,271,"final StringBuffer buffer,"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,272,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,273,"final Comparator comp,"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,274,final String separator) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,276,final Set helpSettingsCopy = new HashSet(helpSettings);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,278,final boolean optional =
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,279,minimum == 0
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,280,&& helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,282,final boolean expanded =
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,283,name == null
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,284,|| helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,286,final boolean named =
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,287,!expanded
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,288,|| (name != null
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,289,&& helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,291,final boolean arguments =
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,292,helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,294,final boolean outer =
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,295,helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,297,helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,299,final boolean both = named && expanded;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,301,if (optional) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,302,buffer.append('[');
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,305,if (named) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,306,buffer.append(name);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,308,if (both) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,309,"buffer.append("" ("");"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,311,if (expanded) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,312,final Set childSettings;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,313,if (!helpSettingsCopy
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,314,.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,315,childSettings = DisplaySetting.NONE;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,317,else {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,318,childSettings = new HashSet(helpSettingsCopy);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,319,childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,322,// grab a list of the group's options.
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,323,final List list;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,324,if (comp == null) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,325,// default to using the initial order
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,326,list = options;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,328,else {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,329,// sort options if comparator is supplied
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,330,list = new ArrayList(options);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,331,"Collections.sort(list, comp);"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,334,// for each option.
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,335,for (final Iterator i = list.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,336,final Option option = (Option)i.next();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,338,// append usage information
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,339,"option.appendUsage(buffer, childSettings, comp);"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,341,// add separators as needed
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,342,if (i.hasNext()) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,343,buffer.append(separator);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,347,if (both) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,348,buffer.append(')');
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,350,if (optional && outer) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,351,buffer.append(']');
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,353,if (arguments) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,354,for (final Iterator i = anonymous.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,355,buffer.append(' ');
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,356,final Option option = (Option)i.next();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,357,"option.appendUsage(buffer, helpSettingsCopy, comp);"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,360,if (optional && !outer) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,361,buffer.append(']');
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,366,public List helpLines(
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,367,"final int depth,"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,368,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,369,final Comparator comp) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,370,final List helpLines = new ArrayList();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,371,if (helpSettings.contains(DisplaySetting.DISPLAY_GROUP_NAME)) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,372,"final HelpLine helpLine = new HelpLineImpl(this, depth);"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,373,helpLines.add(helpLine);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,375,if (helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,377,// grab a list of the group's options.
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,378,final List list;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,379,if (comp == null) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,380,// default to using the initial order
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,381,list = options;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,383,else {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,384,// sort options if comparator is supplied
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,385,list = new ArrayList(options);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,386,"Collections.sort(list, comp);"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,389,// for each option
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,390,for (final Iterator i = list.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,391,final Option option = (Option)i.next();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,392,helpLines.addAll(
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,393,"option.helpLines(depth + 1, helpSettings, comp));"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,396,if (helpSettings.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT)) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,397,for (final Iterator i = anonymous.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,398,final Option option = (Option)i.next();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,399,helpLines.addAll(
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,400,"option.helpLines(depth + 1, helpSettings, comp));"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,403,return helpLines;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,407,* Gets the member Options of thie Group.
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,408,* Note this does not include any Arguments
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,409,* @return only the non Argument Options of the Group
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,411,public List getOptions(){
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,412,return options;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,416,* Gets the anonymous Arguments of this Group.
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,417,* @return the Argument options of this Group
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,419,public List getAnonymous(){
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,420,return anonymous;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,423,public Option findOption(final String trigger) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,424,final Iterator i = getOptions().iterator();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,425,while(i.hasNext()){
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,426,final Option option = (Option)i.next();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,427,final Option found = option.findOption(trigger);
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,428,if(found!=null){
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,429,return found;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,433,return null;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,436,public int getMinimum() {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,437,return minimum;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,440,public int getMaximum() {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,441,return maximum;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,444,public boolean isRequired() {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,445,return getMinimum()>0;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,449,class ReverseStringComparator implements Comparator {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,450,private static final Comparator instance = new ReverseStringComparator();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,453,* Gets a singleton instance of a ReverseStringComparator
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,454,* @return
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,456,public static final Comparator getInstance() {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,457,return instance;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,460,private ReverseStringComparator() {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,461,// just making sure nobody else creates one
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,464,"public int compare(final Object o1, final Object o2) {"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,465,final String s1 = (String)o1;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,466,final String s2 = (String)o2;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,468,return -s1.compareTo(s2);
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,16,package org.apache.commons.cli2.option;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,18,import java.util.Comparator;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,19,import java.util.Set;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,21,import org.apache.commons.cli2.HelpLine;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,22,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,25,* Represents a line in the help screen.
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,27,public class HelpLineImpl implements HelpLine {
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,29,/** The option that this HelpLineImpl describes */
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,30,private final Option option;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,32,/** The level of indenting for this item */
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,33,private final int indent;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,35,/** The help settings used to obtain the previous usage */
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,36,private transient Set cachedHelpSettings;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,38,/** The comparator used to obtain the previous usage */
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,39,private transient Comparator cachedComparator;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,41,/** The previously obtained usage */
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,42,private transient String cachedUsage;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,45,* Creates a new HelpLineImpl to represent a particular Option in the online
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,46,* help.
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,48,* @param option
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,49,*            Option that the HelpLineImpl describes
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,50,* @param indent
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,51,*            Level of indentation for this line
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,53,"public HelpLineImpl(final Option option, final int indent) {"
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,54,this.option = option;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,55,this.indent = indent;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,59,* @return The description of the option
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,61,public String getDescription() {
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,62,return option.getDescription();
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,66,* @return The level of indentation for this line
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,68,public int getIndent() {
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,69,return indent;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,73,* @return The Option that the help line relates to
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,75,public Option getOption() {
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,76,return option;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,80,* Builds a usage string for the option using the specified settings and
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,81,* comparator.
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,84,* @param helpSettings the settings to apply
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,85,* @param comparator a comparator to sort options when applicable
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,86,* @return the usage string
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,88,"public String usage(final Set helpSettings, final Comparator comparator) {"
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,89,if (cachedUsage == null
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,90,|| cachedHelpSettings != helpSettings
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,91,|| cachedComparator != comparator) {
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,93,// cache the arguments to avoid redoing work
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,94,cachedHelpSettings = helpSettings;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,95,cachedComparator = comparator;
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,97,// build the new buffer
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,98,final StringBuffer buffer = new StringBuffer();
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,99,for (int i = 0; i < indent; ++i) {
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,100,"buffer.append(""  "");"
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,102,"option.appendUsage(buffer, helpSettings, comparator);"
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,104,// cache the usage string
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,105,cachedUsage = buffer.toString();
True,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,src/java/org/apache/commons/cli2/option/HelpLineImpl.java,107,return cachedUsage;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,16,package org.apache.commons.cli2.option;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,18,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,20,import org.apache.commons.cli2.DisplaySetting;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,21,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,24,* A base implementation of Option providing limited ground work for further
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,25,* Option implementations.
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,27,public abstract class OptionImpl implements Option {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,29,private final int id;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,30,private final boolean required;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,33,* Creates an OptionImpl with the specified id
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,34,* @param id the unique id of this Option
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,35,* @param required true iff this Option must be present
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,37,"public OptionImpl(final int id, final boolean required) {"
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,38,this.id = id;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,39,this.required = required;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,42,public boolean canProcess(final ListIterator arguments) {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,43,if (arguments.hasNext()) {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,44,final String argument = (String)arguments.next();
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,45,arguments.previous();
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,46,return canProcess(argument);
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,48,else {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,49,return false;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,53,public String toString() {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,54,final StringBuffer buffer = new StringBuffer();
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,55,"appendUsage(buffer, DisplaySetting.ALL, null);"
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,56,return buffer.toString();
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,59,public int getId() {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,60,return id;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,63,public boolean equals(final Object thatObj) {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,64,if (thatObj instanceof OptionImpl) {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,65,final OptionImpl that = (OptionImpl)thatObj;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,67,return getId() == that.getId()
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,68,&& getPreferredName().equals(that.getPreferredName())
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,69,&& (getDescription() == that.getDescription()
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,70,|| getDescription().equals(that.getDescription()))
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,71,&& getPrefixes().equals(that.getPrefixes())
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,72,&& getTriggers().equals(that.getTriggers());
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,74,else {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,75,return false;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,79,public int hashCode() {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,80,int hashCode = getId();
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,81,hashCode = hashCode * 37 + getPreferredName().hashCode();
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,82,if (getDescription() != null) {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,83,hashCode = hashCode * 37 + getDescription().hashCode();
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,85,hashCode = hashCode * 37 + getPrefixes().hashCode();
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,86,hashCode = hashCode * 37 + getTriggers().hashCode();
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,87,return hashCode;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,90,public Option findOption(String trigger) {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,91,if(getTriggers().contains(trigger)){
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,92,return this;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,94,else{
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,95,return null;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,99,public boolean isRequired() {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,100,return required;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,16,package org.apache.commons.cli2.option;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,18,import java.util.ArrayList;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,19,import java.util.Collections;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,20,import java.util.Comparator;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,21,import java.util.List;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,22,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,23,import java.util.Set;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,25,import org.apache.commons.cli2.Argument;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,26,import org.apache.commons.cli2.DisplaySetting;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,27,import org.apache.commons.cli2.Group;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,28,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,29,import org.apache.commons.cli2.OptionException;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,30,import org.apache.commons.cli2.Parent;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,31,import org.apache.commons.cli2.WriteableCommandLine;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,34,* A base implementation of Parent providing limited ground work for further
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,35,* Parent implementations.
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,37,public abstract class ParentImpl extends OptionImpl implements Parent {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,39,private static final char NUL = '\0';
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,41,private final Group children;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,43,private final Argument argument;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,45,private final String description;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,47,protected ParentImpl(
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,48,"final Argument argument,"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,49,"final Group children,"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,50,"final String description,"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,51,"final int id,"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,52,final boolean required) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,53,"super(id,required);"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,54,this.children = children;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,55,this.argument = argument;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,56,this.description = description;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,60,* (non-Javadoc)
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,62,"* @see org.apache.commons.cli2.Option#process(org.apache.commons.cli2.CommandLine,"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,63,*      java.util.ListIterator)
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,65,public void process(
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,66,"final WriteableCommandLine commandLine,"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,67,final ListIterator arguments)
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,68,throws OptionException {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,70,if (argument != null) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,71,"handleInitialSeparator(arguments, argument.getInitialSeparator());"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,74,"processParent(commandLine, arguments);"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,76,if (argument != null) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,77,"argument.processValues(commandLine, arguments, this);"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,80,if (children != null && children.canProcess(arguments)) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,81,"children.process(commandLine, arguments);"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,86,* (non-Javadoc)
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,88,* @see org.apache.commons.cli2.Option#canProcess(java.lang.String)
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,90,public boolean canProcess(final String arg) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,92,final Set triggers = getTriggers();
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,94,if (argument != null) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,95,final char separator = argument.getInitialSeparator();
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,97,// if there is a valid separator character
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,98,if (separator != NUL) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,99,final int initialIndex = arg.indexOf(separator);
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,101,// if there is a separator present
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,102,if (initialIndex > 0) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,103,"return triggers.contains(arg.substring(0, initialIndex));"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,108,return triggers.contains(arg);
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,112,* (non-Javadoc)
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,114,* @see org.apache.commons.cli2.Option#prefixes()
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,116,public Set getPrefixes() {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,117,if (children == null) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,118,return Collections.EMPTY_SET;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,120,else {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,121,return children.getPrefixes();
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,126,* (non-Javadoc)
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,128,* @see org.apache.commons.cli2.Option#validate(org.apache.commons.cli2.CommandLine)
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,130,public void validate(WriteableCommandLine commandLine)
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,131,throws OptionException {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,132,if (commandLine.hasOption(this)) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,133,if (argument != null) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,134,"argument.validate(commandLine, this);"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,137,if (children != null) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,138,children.validate(commandLine);
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,144,* (non-Javadoc)
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,146,"* @see org.apache.commons.cli2.Option#appendUsage(java.lang.StringBuffer,"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,147,"*      java.util.Set, java.util.Comparator)"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,149,public void appendUsage(
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,150,"final StringBuffer buffer,"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,151,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,152,final Comparator comp) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,154,final boolean displayArgument =
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,155,this.argument != null
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,156,&& helpSettings.contains(DisplaySetting.DISPLAY_PARENT_ARGUMENT);
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,157,final boolean displayChildren =
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,158,this.children != null
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,159,&& helpSettings.contains(DisplaySetting.DISPLAY_PARENT_CHILDREN);
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,161,if (displayArgument) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,162,buffer.append(' ');
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,163,"argument.appendUsage(buffer, helpSettings, comp);"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,166,if (displayChildren) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,167,buffer.append(' ');
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,168,"children.appendUsage(buffer, helpSettings, comp);"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,173,* @return a description of this parent option
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,175,public String getDescription() {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,176,return description;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,180,* (non-Javadoc)
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,182,"* @see org.apache.commons.cli2.Option#helpLines(int, java.util.Set,"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,183,*      java.util.Comparator)
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,185,public List helpLines(
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,186,"final int depth,"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,187,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,188,final Comparator comp) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,189,final List helpLines = new ArrayList();
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,190,"helpLines.add(new HelpLineImpl(this, depth));"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,192,if (helpSettings.contains(DisplaySetting.DISPLAY_PARENT_ARGUMENT)
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,193,&& argument != null) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,194,"helpLines.addAll(argument.helpLines(depth + 1, helpSettings, comp));"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,197,if (helpSettings.contains(DisplaySetting.DISPLAY_PARENT_CHILDREN)
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,198,&& children != null) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,199,"helpLines.addAll(children.helpLines(depth + 1, helpSettings, comp));"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,202,return helpLines;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,206,* @return Returns the argument.
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,208,public Argument getArgument() {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,209,return argument;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,213,* @return Returns the children.
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,215,public Group getChildren() {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,216,return children;
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,220,* Split the token using the specified separator character.
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,221,* @param arguments the current position in the arguments iterator
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,222,* @param separator the separator char to split on
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,224,private void handleInitialSeparator(
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,225,"final ListIterator arguments,"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,226,final char separator) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,228,// next token
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,229,final String newArgument = (String)arguments.next();
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,231,// split the token
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,232,final int initialIndex = newArgument.indexOf(separator);
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,234,if (initialIndex > 0) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,235,arguments.remove();
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,236,"arguments.add(newArgument.substring(0, initialIndex));"
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,237,arguments.add(newArgument.substring(initialIndex + 1));
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,238,arguments.previous();
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,240,arguments.previous();
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,244,* @see org.apache.commons.cli2.Option#findOption(java.lang.String)
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,246,public Option findOption(final String trigger) {
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,247,final Option found = super.findOption(trigger);
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,248,if(found==null && children!=null){
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,249,return children.findOption(trigger);
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,251,else{
True,src/java/org/apache/commons/cli2/option/ParentImpl.java,src/java/org/apache/commons/cli2/option/ParentImpl.java,252,return found;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,16,package org.apache.commons.cli2.option;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,18,import java.util.Collections;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,19,import java.util.Comparator;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,20,import java.util.List;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,21,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,22,import java.util.Set;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,24,import org.apache.commons.cli2.DisplaySetting;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,25,import org.apache.commons.cli2.HelpLine;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,26,import org.apache.commons.cli2.OptionException;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,27,import org.apache.commons.cli2.WriteableCommandLine;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,30,"* Handles the java style ""-Dprop=value"" opions"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,32,public class PropertyOption extends OptionImpl {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,34,"private static final String DEFAULT_OPTION_STRING = ""-D"";"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,35,private static final String DEFAULT_DESCRIPTION =
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,36,"""Passes properties and values to the application"";"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,38,private final String optionString;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,39,private final String description;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,40,private final Set prefixes;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,43,"* Creates a new PropertyOption using the default settings of a ""-D"" trigger"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,44,* and an id of 'D'
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,46,public PropertyOption() {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,47,"this(DEFAULT_OPTION_STRING, DEFAULT_DESCRIPTION, 'D');"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,51,* Creates a new PropertyOption using the specified parameters
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,52,* @param optionString the trigger for the Option
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,53,* @param description the description of the Option
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,54,* @param id the id of the Option
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,56,public PropertyOption(
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,57,"final String optionString,"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,58,"final String description,"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,59,final int id) {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,60,"super(id,false);"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,61,this.optionString = optionString;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,62,this.description = description;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,63,this.prefixes = Collections.singleton(optionString);
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,67,* A default PropertyOption instance
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,69,public static final PropertyOption INSTANCE = new PropertyOption();
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,71,public boolean canProcess(final String argument) {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,72,return argument != null
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,73,&& argument.startsWith(optionString)
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,74,&& argument.length() > optionString.length();
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,77,public Set getPrefixes() {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,78,return prefixes;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,81,public void process(
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,82,"final WriteableCommandLine commandLine,"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,83,final ListIterator arguments)
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,84,throws OptionException {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,86,final String arg = (String)arguments.next();
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,88,if (!canProcess(arg)) {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,89,"throw new OptionException(this, ""cli.error.unexpected"", arg);"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,92,final int propertyStart = optionString.length();
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,93,"final int equalsIndex = arg.indexOf('=', propertyStart);"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,94,final String property;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,95,final String value;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,96,if (equalsIndex < 0) {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,97,property = arg.substring(propertyStart);
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,98,"value = ""true"";"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,100,else {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,101,"property = arg.substring(propertyStart, equalsIndex);"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,102,value = arg.substring(equalsIndex + 1);
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,104,"commandLine.addProperty(property, value);"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,107,public Set getTriggers() {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,108,return Collections.singleton(optionString);
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,111,public void validate(WriteableCommandLine commandLine) {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,112,// PropertyOption needs no validation
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,115,public void appendUsage(
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,116,"final StringBuffer buffer,"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,117,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,118,final Comparator comp) {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,120,final boolean display =
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,121,helpSettings.contains(DisplaySetting.DISPLAY_PROPERTY_OPTION);
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,123,final boolean bracketed =
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,124,helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT_BRACKETED);
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,126,if (display) {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,127,buffer.append(optionString);
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,128,if (bracketed) {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,129,buffer.append('<');
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,131,"buffer.append(""property"");"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,132,if (bracketed) {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,133,buffer.append('>');
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,135,"buffer.append(""="");"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,136,if (bracketed) {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,137,buffer.append('<');
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,139,"buffer.append(""value"");"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,140,if (bracketed) {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,141,buffer.append('>');
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,146,public String getPreferredName() {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,147,return optionString;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,150,public String getDescription() {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,151,return description;
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,154,public List helpLines(
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,155,"final int depth,"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,156,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,157,final Comparator comp) {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,158,if (helpSettings.contains(DisplaySetting.DISPLAY_PROPERTY_OPTION)) {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,159,"final HelpLine helpLine = new HelpLineImpl(this, depth);"
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,160,return Collections.singletonList(helpLine);
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,162,else {
True,src/java/org/apache/commons/cli2/option/PropertyOption.java,src/java/org/apache/commons/cli2/option/PropertyOption.java,163,return Collections.EMPTY_LIST;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,16,package org.apache.commons.cli2.option;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,18,import java.util.ArrayList;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,19,import java.util.Comparator;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,20,import java.util.Iterator;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,21,import java.util.List;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,22,import java.util.Set;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,24,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,25,import org.apache.commons.cli2.OptionException;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,26,import org.apache.commons.cli2.WriteableCommandLine;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,29,* An Argument implementation that allows a variable size Argument to precede a
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,30,* fixed size argument.  The canonical example of it's use is in the unix
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,31,* <code>cp</code> command where a number of source can be specified with
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,32,* exactly one destination specfied at the end.
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,34,public class SourceDestArgument extends ArgumentImpl {
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,35,"private static int sum(final int a, final int b) {"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,36,"return Math.max(a, Math.max(b, a + b));"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,39,private final ArgumentImpl source;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,40,private final ArgumentImpl dest;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,43,* Creates a SourceDestArgument using defaults where possible.
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,45,* @param source the variable size Argument
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,46,* @param dest the fixed size Argument
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,48,public SourceDestArgument(
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,49,"final ArgumentImpl source,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,50,final ArgumentImpl dest) {
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,51,this(
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,52,"source,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,53,"dest,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,54,"DEFAULT_INITIAL_SEPARATOR,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,55,"DEFAULT_SUBSEQUENT_SEPARATOR,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,56,"DEFAULT_CONSUME_REMAINING,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,57,null);
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,61,* Creates a SourceDestArgument using the specified parameters.
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,63,* @param source the variable size Argument
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,64,* @param dest the fixed size Argument
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,65,* @param initialSeparator the inistial separator to use
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,66,* @param subsequentSeparator the subsequent separator to use
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,67,* @param consumeRemaining the token triggering consume remaining behaviour
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,68,* @param defaultValues the default values for the SourceDestArgument
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,70,public SourceDestArgument(
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,71,"final ArgumentImpl source,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,72,"final ArgumentImpl dest,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,73,"final char initialSeparator,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,74,"final char subsequentSeparator,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,75,"final String consumeRemaining,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,76,final List defaultValues) {
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,77,super(
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,78,"""SourceDestArgument"","
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,79,"null,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,80,"sum(source.getMinimum(), dest.getMinimum()),"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,81,"sum(source.getMaximum(), dest.getMaximum()),"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,82,"initialSeparator,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,83,"subsequentSeparator,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,84,"null,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,85,"consumeRemaining,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,86,"defaultValues,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,87,0);
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,89,this.source = source;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,90,this.dest = dest;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,92,if (dest.getMinimum() != dest.getMaximum()) {
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,93,"throw new IllegalArgumentException(""The dest argument must enforce a fixed number of values"");"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,97,public void appendUsage(
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,98,"final StringBuffer buffer,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,99,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,100,final Comparator comp) {
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,102,final int length = buffer.length();
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,104,"source.appendUsage(buffer, helpSettings, comp);"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,106,if (buffer.length() != length) {
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,107,buffer.append(' ');
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,110,"dest.appendUsage(buffer, helpSettings, comp);"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,113,"public List helpLines(int depth, Set helpSettings, Comparator comp) {"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,114,final List helpLines = new ArrayList();
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,115,"helpLines.addAll(source.helpLines(depth, helpSettings, comp));"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,116,"helpLines.addAll(dest.helpLines(depth, helpSettings, comp));"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,117,return helpLines;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,120,"public void validate(WriteableCommandLine commandLine, Option option)"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,121,throws OptionException {
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,123,final List values = commandLine.getValues(option);
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,125,final int limit = values.size() - dest.getMinimum();
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,126,int count = 0;
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,128,final Iterator i = values.iterator();
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,129,while (count++ < limit) {
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,130,"commandLine.addValue(source, i.next());"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,132,while (i.hasNext()) {
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,133,"commandLine.addValue(dest, i.next());"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,136,"source.validate(commandLine, source);"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,137,"dest.validate(commandLine, dest);"
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,140,public boolean canProcess(final String arg) {
True,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,src/java/org/apache/commons/cli2/option/SourceDestArgument.java,141,return source.canProcess(arg) || dest.canProcess(arg);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,16,package org.apache.commons.cli2.option;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,18,import java.util.ArrayList;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,19,import java.util.Collections;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,20,import java.util.Comparator;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,21,import java.util.HashSet;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,22,import java.util.Iterator;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,23,import java.util.List;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,24,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,25,import java.util.Set;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,27,import org.apache.commons.cli2.Argument;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,28,import org.apache.commons.cli2.DisplaySetting;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,29,import org.apache.commons.cli2.Group;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,30,import org.apache.commons.cli2.OptionException;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,31,import org.apache.commons.cli2.WriteableCommandLine;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,34,* A Parent implementation representing normal switch options.
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,35,* For example: <code>+d|-d</code> or <code>--enable-x|--disable-x</code>.
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,37,public class Switch extends ParentImpl {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,40,* The default prefix for enabled switches
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,42,"public static final String DEFAULT_ENABLED_PREFIX = ""+"";"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,45,* The default prefix for disabled switches
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,47,"public static final String DEFAULT_DISABLED_PREFIX = ""-"";"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,49,private final String enabledPrefix;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,50,private final String disabledPrefix;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,51,private final Set triggers;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,52,private final String preferredName;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,53,private final Set aliases;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,54,private final Set prefixes;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,57,* Creates a new Switch with the specified parameters
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,58,* @param enabledPrefix the prefix used for enabled switches
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,59,* @param disabledPrefix the prefix used for disabled switches
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,60,* @param preferredName the preferred name of the switch
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,61,* @param aliases the aliases by which the Switch is known
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,62,* @param description a description of the Switch
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,63,* @param required whether the Option is strictly required
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,64,"* @param argument the Argument belonging to this Parent, or null"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,65,"* @param children the Group children belonging to this Parent, ot null"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,66,* @param id the unique identifier for this Option
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,68,public Switch(
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,69,"final String enabledPrefix,"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,70,"final String disabledPrefix,"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,71,"final String preferredName,"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,72,"final Set aliases,"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,73,"final String description,"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,74,"final boolean required,"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,75,"final Argument argument,"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,76,"final Group children,"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,77,final int id) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,78,"super(argument, children, description, id, required);"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,80,if (enabledPrefix == null) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,81,"throw new IllegalArgumentException(""enabledPrefix must be supplied"");"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,84,if (disabledPrefix == null) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,85,"throw new IllegalArgumentException(""enabledPrefix must be supplied"");"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,88,if (enabledPrefix.startsWith(disabledPrefix)) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,89,"throw new IllegalArgumentException(""The enabledPrefix cannot start the same as disabledPrefix"");"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,92,if (disabledPrefix.startsWith(enabledPrefix)) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,93,"throw new IllegalArgumentException(""The disabledPrefix cannot start the same as enabledPrefix"");"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,96,this.enabledPrefix = enabledPrefix;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,97,this.disabledPrefix = disabledPrefix;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,98,this.preferredName = preferredName;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,100,if (preferredName == null || preferredName.length() < 1) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,101,"throw new IllegalArgumentException(""preferredName must be at least 1 character"");"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,104,final Set newTriggers = new HashSet();
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,105,newTriggers.add(enabledPrefix + preferredName);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,106,newTriggers.add(disabledPrefix + preferredName);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,107,this.triggers = Collections.unmodifiableSet(newTriggers);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,109,if (aliases == null) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,110,this.aliases = Collections.EMPTY_SET;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,112,else {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,113,this.aliases = Collections.unmodifiableSet(new HashSet(aliases));
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,114,for (final Iterator i = aliases.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,115,final String alias = (String)i.next();
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,116,newTriggers.add(enabledPrefix + alias);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,117,newTriggers.add(disabledPrefix + alias);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,121,final Set newPrefixes = new HashSet(super.getPrefixes());
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,122,newPrefixes.add(enabledPrefix);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,123,newPrefixes.add(disabledPrefix);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,124,this.prefixes = Collections.unmodifiableSet(newPrefixes);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,128,public void processParent(
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,129,"final WriteableCommandLine commandLine,"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,130,final ListIterator arguments)
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,131,throws OptionException {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,133,final String arg = (String)arguments.next();
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,135,if (canProcess(arg)) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,136,commandLine.addOption(this);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,137,if (arg.startsWith(enabledPrefix)) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,138,"commandLine.addSwitch(this, true);"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,139,arguments.set(enabledPrefix + preferredName);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,141,if (arg.startsWith(disabledPrefix)) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,142,"commandLine.addSwitch(this, false);"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,143,arguments.set(disabledPrefix + preferredName);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,146,else {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,147,"throw new OptionException(this, ""cli.error.unexpected"", arg);"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,151,public Set getTriggers() {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,152,return triggers;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,155,public Set getPrefixes() {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,156,return prefixes;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,159,public void validate(WriteableCommandLine commandLine)
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,160,throws OptionException {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,161,if (isRequired() && !commandLine.hasOption(this)) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,162,throw new OptionException(this);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,165,super.validate(commandLine);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,168,public void appendUsage(
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,169,"final StringBuffer buffer,"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,170,"final Set helpSettings,"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,171,final Comparator comp) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,173,// do we display optionality
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,174,final boolean optional =
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,175,!isRequired() && helpSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,176,final boolean displayAliases =
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,177,helpSettings.contains(DisplaySetting.DISPLAY_ALIASES);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,178,final boolean disabled =
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,179,helpSettings.contains(DisplaySetting.DISPLAY_SWITCH_DISABLED);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,180,final boolean enabled =
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,181,!disabled
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,182,|| helpSettings.contains(DisplaySetting.DISPLAY_SWITCH_ENABLED);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,183,final boolean both = disabled && enabled;
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,185,if (optional) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,186,buffer.append('[');
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,188,if (enabled) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,189,buffer.append(enabledPrefix).append(preferredName);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,191,if (both) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,192,buffer.append('|');
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,194,if (disabled) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,195,buffer.append(disabledPrefix).append(preferredName);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,198,if (displayAliases && !aliases.isEmpty()) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,199,"buffer.append("" ("");"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,201,final List list = new ArrayList(aliases);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,202,Collections.sort(list);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,204,for (final Iterator i = list.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,205,final String alias = (String)i.next();
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,207,if (enabled) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,208,buffer.append(enabledPrefix).append(alias);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,210,if (both) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,211,buffer.append('|');
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,213,if (disabled) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,214,buffer.append(disabledPrefix).append(alias);
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,217,if (i.hasNext()) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,218,"buffer.append(',');"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,221,buffer.append(')');
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,224,"super.appendUsage(buffer, helpSettings, comp);"
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,226,if (optional) {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,227,buffer.append(']');
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,231,public String getPreferredName() {
True,src/java/org/apache/commons/cli2/option/Switch.java,src/java/org/apache/commons/cli2/option/Switch.java,232,return enabledPrefix + preferredName;
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,16,package org.apache.commons.cli2.resource;
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,18,import java.text.MessageFormat;
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,19,import java.util.HashMap;
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,20,import java.util.Map;
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,21,import java.util.MissingResourceException;
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,22,import java.util.ResourceBundle;
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,25,* A utility class used to provide internationalisation support.
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,26,* @author John Keyes
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,28,public class ResourceHelper {
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,30,/** resource bundle */
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,31,private ResourceBundle bundle;
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,33,/** default bundle name */
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,34,"private static final String DEFAULT_BUNDLE = ""messages"";"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,36,/** cache */
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,37,private static Map cache = new HashMap(13);
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,40,* Gets the ResourceHelper appropriate to the specified class.
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,41,* @param clazz the class to get resources for
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,42,* @return a ResourceHelper
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,44,public static ResourceHelper getResourceHelper(final Class clazz) {
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,46,if (cache.containsKey(clazz)) {
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,47,return (ResourceHelper)cache.get(clazz);
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,50,return new ResourceHelper(clazz);
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,54,* Create a new ResourceHelper for the specified class.
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,56,* @param clazz
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,57,*            the Class that requires some resources
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,59,private ResourceHelper(final Class clazz) {
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,61,// get the name of the class
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,62,final String className = clazz.getName();
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,64,// discover the package name
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,65,final String packageName =
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,66,"className.substring(0, className.lastIndexOf(""."") + 1);"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,68,final String bundleName = packageName + DEFAULT_BUNDLE;
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,70,// initialize the bundle
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,71,try {
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,72,bundle = ResourceBundle.getBundle(bundleName);
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,74,catch (MissingResourceException e) {
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,75,//TODO Handle missing resources nicely
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,76,bundle = null;
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,79,// cache bundle
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,80,"cache.put(bundleName, bundle);"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,84,* Returns the message for the specified key.
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,86,* @param key
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,87,*            the unique identifier of the message
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,89,* @return String the formatted String
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,91,public String getMessage(final String key) {
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,92,"return getMessage(key, new Object[] {"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,97,* Returns the message for the specified key and argument.
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,99,* @param key
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,100,*            the unique identifier of the message
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,102,* @param value
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,103,*            the argument value
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,105,* @return String the formatted String
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,107,"public String getMessage(final String key, final Object value) {"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,109,"return getMessage(key, new Object[] { value });"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,113,* Returns the message for the specified key and arguments.
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,115,* @param key
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,116,*            the unique identifier of the message
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,118,* @param value1
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,119,*            an argument value
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,121,* @param value2
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,122,*            an argument value
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,124,* @return String the formatted String
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,126,public String getMessage(
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,127,"final String key,"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,128,"final Object value1,"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,129,final Object value2) {
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,131,"return getMessage(key, new Object[] { value1, value2 });"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,135,* Returns the message for the specified key and arguments.
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,137,* @param key
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,138,*            the unique identifier of the message
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,140,* @param value1
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,141,*            an argument value
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,143,* @param value2
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,144,*            an argument value
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,146,* @param value3
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,147,*            an argument value
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,149,* @return String the formatted String
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,151,public String getMessage(
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,152,"final String key,"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,153,"final Object value1,"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,154,"final Object value2,"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,155,final Object value3) {
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,157,"return getMessage(key, new Object[] { value1, value2, value3 });"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,161,* Returns the message for the specified key and arguments.
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,163,* @param key
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,164,*            the unique identifier of the message
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,166,* @param values
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,167,*            argument values
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,169,* @return String the formatted String
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,171,"public String getMessage(final String key, final Object[] values) {"
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,173,final String msgFormatStr = bundle.getString(key);
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,174,final MessageFormat msgFormat = new MessageFormat(msgFormatStr);
True,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,src/java/org/apache/commons/cli2/resource/ResourceHelper.java,176,return msgFormat.format(values);
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,16,package org.apache.commons.cli2.util;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,18,import java.util.Comparator;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,19,import java.util.List;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,21,import org.apache.commons.cli2.Group;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,22,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,23,import org.apache.commons.cli2.option.Command;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,24,import org.apache.commons.cli2.option.DefaultOption;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,25,import org.apache.commons.cli2.option.Switch;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,28,* A collection of Comparators suitable for use with Option instances.
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,30,public class Comparators {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,32,private Comparators(){
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,33,;// constructor hiden from potential users
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,38,* Chains comparators together.
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,40,* @see #chain(Comparator[])
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,41,* @param c0
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,42,*            a comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,43,* @param c1
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,44,*            a comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,45,* @return a chained comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,47,"public static Comparator chain(final Comparator c0, final Comparator c1) {"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,48,"return chain(new Comparator[] { c0, c1 });"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,52,* Chains comparators together.
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,54,* @see #chain(Comparator[])
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,55,* @param c0
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,56,*            a comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,57,* @param c1
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,58,*            a comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,59,* @param c2
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,60,*            a comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,61,* @return a chained comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,63,public static Comparator chain(
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,64,"final Comparator c0,"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,65,"final Comparator c1,"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,66,final Comparator c2) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,67,"return chain(new Comparator[] { c0, c1, c2 });"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,71,* Chains comparators together.
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,73,* @see #chain(Comparator[])
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,74,* @param c0
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,75,*            a comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,76,* @param c1
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,77,*            a comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,78,* @param c2
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,79,*            a comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,80,* @param c3
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,81,*            a comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,82,* @return a chained comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,84,public static Comparator chain(
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,85,"final Comparator c0,"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,86,"final Comparator c1,"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,87,"final Comparator c2,"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,88,final Comparator c3) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,89,"return chain(new Comparator[] { c0, c1, c2, c3 });"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,93,* Chains comparators together.
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,95,* @see #chain(Comparator[])
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,96,* @param c0
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,97,*            a comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,98,* @param c1
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,99,*            a comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,100,* @param c2
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,101,*            a comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,102,* @param c3
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,103,*            a comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,104,* @param c4
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,105,*            a comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,106,* @return a chained comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,108,public static Comparator chain(
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,109,"final Comparator c0,"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,110,"final Comparator c1,"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,111,"final Comparator c2,"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,112,"final Comparator c3,"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,113,final Comparator c4) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,114,"return chain(new Comparator[] { c0, c1, c2, c3, c4 });"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,118,* Chains comparators together.
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,120,* @see #chain(Comparator[])
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,121,* @param comparators
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,122,*            a List of comparators to chain together
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,123,* @return a chained comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,125,public static Comparator chain(final List comparators) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,126,return new Chain(
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,127,(Comparator[])comparators.toArray(
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,128,new Comparator[comparators.size()]));
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,132,* Chains an array of comparators together. Each Comparator will be called
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,133,"* in turn until one of them return a non-zero value, this value will be"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,134,* returned.
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,136,* @param comparators
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,137,*            the array of comparators
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,138,* @return a chained comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,140,public static Comparator chain(final Comparator[] comparators) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,141,return new Chain(comparators);
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,145,* Chains a series of Comparators together.
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,147,private static class Chain implements Comparator {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,149,final Comparator[] chain;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,152,* Creates a Comparator chain using the specified array of Comparators
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,153,* @param chain the Comparators in the chain
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,155,public Chain(final Comparator[] chain) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,156,this.chain = new Comparator[chain.length];
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,157,"System.arraycopy(chain, 0, this.chain, 0, chain.length);"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,160,"public int compare(final Object left, final Object right) {"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,161,int result = 0;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,162,for (int i = 0; result == 0 && i < chain.length; ++i) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,163,"result = chain[i].compare(left, right);"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,165,return result;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,170,* Reverses a comparator's logic.
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,172,* @param wrapped
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,173,*            the Comparator to reverse the logic of
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,174,* @return a comparator with reverse logic
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,176,private static Comparator reverse(final Comparator wrapped) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,177,return new Reverse(wrapped);
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,180,private static class Reverse implements Comparator {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,181,private final Comparator wrapped;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,184,* Creates a Comparator with reverse logic
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,185,* @param wrapped the original logic
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,187,public Reverse(final Comparator wrapped) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,188,this.wrapped = wrapped;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,191,"public int compare(final Object left, final Object right) {"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,192,"return -wrapped.compare(left, right);"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,197,* Forces Group instances to appear at the beginning of lists
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,199,* @see Group
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,200,* @return a new comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,202,public static Comparator groupFirst() {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,203,return new GroupFirst();
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,207,* Forces Group instances to appear at the end of lists
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,209,* @see Group
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,210,* @return a new comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,212,public static Comparator groupLast() {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,213,return reverse(groupFirst());
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,216,private static class GroupFirst implements Comparator {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,217,"public int compare(final Object left, final Object right) {"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,218,final boolean l = left instanceof Group;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,219,final boolean r = right instanceof Group;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,221,if (l ^ r) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,222,if (l) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,223,return -1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,225,else {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,226,return 1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,229,else {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,230,return 0;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,236,* Forces Switch instances to appear at the beginning of lists
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,238,* @see Switch
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,239,* @return a new comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,241,public static Comparator switchFirst() {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,242,return new SwitchFirst();
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,246,* Forces Switch instances to appear at the end of lists
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,248,* @see Switch
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,249,* @return a new comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,251,public static Comparator switchLast() {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,252,return reverse(switchFirst());
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,255,private static class SwitchFirst implements Comparator {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,256,"public int compare(final Object left, final Object right) {"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,257,final boolean l = left instanceof Switch;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,258,final boolean r = right instanceof Switch;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,260,if (l ^ r) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,261,if (l) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,262,return -1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,264,else {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,265,return 1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,268,else {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,269,return 0;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,275,* Forces Command instances to appear at the beginning of lists
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,277,* @see Command
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,278,* @return a new comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,280,public static Comparator commandFirst() {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,281,return new CommandFirst();
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,285,* Forces Command instances to appear at the end of lists
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,287,* @see Command
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,288,* @return a new comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,290,public static Comparator commandLast() {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,291,return reverse(commandFirst());
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,294,private static class CommandFirst implements Comparator {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,295,"public int compare(final Object left, final Object right) {"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,296,final boolean l = left instanceof Command;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,297,final boolean r = right instanceof Command;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,299,if (l ^ r) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,300,if (l) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,301,return -1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,303,else {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,304,return 1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,307,else {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,308,return 0;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,314,* Forces DefaultOption instances to appear at the beginning of lists
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,316,* @see DefaultOption
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,317,* @return a new comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,319,public static Comparator defaultOptionFirst() {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,320,return new DefaultOptionFirst();
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,324,* Forces DefaultOption instances to appear at the end of lists
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,326,* @see DefaultOption
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,327,* @return a new comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,329,public static Comparator defaultOptionLast() {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,330,return reverse(defaultOptionFirst());
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,333,private static class DefaultOptionFirst implements Comparator {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,334,"public int compare(final Object left, final Object right) {"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,335,final boolean l = left instanceof DefaultOption;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,336,final boolean r = right instanceof DefaultOption;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,338,if (l ^ r) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,339,if (l) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,340,return -1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,342,else {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,343,return 1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,346,else {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,347,return 0;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,353,* Forces Comparators with a particular trigger to appear at the beginning
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,354,* of lists
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,356,* @param name
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,357,*            the trigger name to select
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,358,* @see Option#getTriggers()
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,359,* @return a new comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,361,public static Comparator namedFirst(final String name) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,362,return new Named(name);
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,366,* Forces Comparators with a particular trigger to appear at the end of
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,367,* lists
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,369,* @param name
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,370,*            the trigger name to select
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,371,* @see Option#getTriggers()
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,372,* @return a new comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,374,public static Comparator namedLast(final String name) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,375,return reverse(new Named(name));
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,378,private static class Named implements Comparator {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,379,private final String name;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,382,* Creates a Comparator that sorts a particular name high in order
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,383,* @param name the trigger name to select
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,385,public Named(final String name) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,386,this.name = name;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,388,"public int compare(final Object oleft, final Object oright) {"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,389,final Option left = (Option)oleft;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,390,final Option right = (Option)oright;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,392,final boolean l = left.getTriggers().contains(name);
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,393,final boolean r = right.getTriggers().contains(name);
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,395,if (l ^ r) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,396,if (l) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,397,return -1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,399,else {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,400,return 1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,403,else {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,404,return 0;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,410,* Orders Options by preferredName
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,412,* @see Option#getPreferredName()
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,413,* @return a new comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,415,public static Comparator preferredNameFirst() {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,416,return new PreferredName();
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,420,"* Orders Options by preferredName, reversed"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,422,* @see Option#getPreferredName()
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,423,* @return a new comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,425,public static Comparator preferredNameLast() {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,426,return reverse(preferredNameFirst());
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,429,private static class PreferredName implements Comparator {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,430,"public int compare(final Object oleft, final Object oright) {"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,431,final Option left = (Option)oleft;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,432,final Option right = (Option)oright;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,434,return left.getPreferredName().compareTo(right.getPreferredName());
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,439,* Orders Options grouping required Options first
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,441,* @see Option#isRequired()
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,442,* @return a new comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,444,public static Comparator requiredFirst() {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,445,return new Required();
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,449,* Orders Options grouping required Options last
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,451,* @see Option#isRequired()
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,452,* @return a new comparator
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,454,public static Comparator requiredLast() {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,455,return reverse(requiredFirst());
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,458,private static class Required implements Comparator {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,459,"public int compare(final Object oleft, final Object oright) {"
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,460,final Option left = (Option)oleft;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,461,final Option right = (Option)oright;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,463,final boolean l = left.isRequired();
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,464,final boolean r = right.isRequired();
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,466,if (l ^ r) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,467,if (l) {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,468,return -1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,470,else {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,471,return 1;
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,474,else {
True,src/java/org/apache/commons/cli2/util/Comparators.java,src/java/org/apache/commons/cli2/util/Comparators.java,475,return 0;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,16,package org.apache.commons.cli2.util;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,18,import java.io.IOException;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,19,import java.io.PrintWriter;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,20,import java.io.Writer;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,21,import java.util.ArrayList;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,22,import java.util.Collections;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,23,import java.util.Comparator;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,24,import java.util.HashSet;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,25,import java.util.Iterator;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,26,import java.util.List;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,27,import java.util.Set;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,29,import org.apache.commons.cli2.DisplaySetting;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,30,import org.apache.commons.cli2.Group;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,31,import org.apache.commons.cli2.HelpLine;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,32,import org.apache.commons.cli2.Option;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,33,import org.apache.commons.cli2.OptionException;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,36,* Presents on screen help based on the application's Options
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,38,public class HelpFormatter {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,41,* The default screen width
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,43,public static final int DEFAULT_FULL_WIDTH = 80;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,46,* The default screen furniture left of screen
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,48,"public static final String DEFAULT_GUTTER_LEFT = """";"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,51,* The default screen furniture right of screen
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,53,"public static final String DEFAULT_GUTTER_CENTER = ""    "";"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,56,* The default screen furniture between columns
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,58,"public static final String DEFAULT_GUTTER_RIGHT = """";"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,61,* The default DisplaySettings used to select the elements to display in the
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,62,* displayed line of full usage information.
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,64,* @see DisplaySetting
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,66,public static final Set DEFAULT_FULL_USAGE_SETTINGS;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,69,* The default DisplaySettings used to select the elements of usage per help
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,70,* line in the main body of help
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,72,* @see DisplaySetting
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,74,public static final Set DEFAULT_LINE_USAGE_SETTINGS;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,77,* The default DisplaySettings used to select the help lines in the main
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,78,* body of help
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,80,public static final Set DEFAULT_DISPLAY_USAGE_SETTINGS;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,82,static {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,83,final Set fullUsage = new HashSet(DisplaySetting.ALL);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,84,fullUsage.remove(DisplaySetting.DISPLAY_ALIASES);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,85,fullUsage.remove(DisplaySetting.DISPLAY_GROUP_NAME);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,86,DEFAULT_FULL_USAGE_SETTINGS = Collections.unmodifiableSet(fullUsage);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,88,final Set lineUsage = new HashSet();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,89,lineUsage.add(DisplaySetting.DISPLAY_ALIASES);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,90,lineUsage.add(DisplaySetting.DISPLAY_GROUP_NAME);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,91,DEFAULT_LINE_USAGE_SETTINGS = Collections.unmodifiableSet(lineUsage);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,93,final Set displayUsage = new HashSet(DisplaySetting.ALL);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,94,displayUsage.remove(DisplaySetting.DISPLAY_PARENT_ARGUMENT);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,95,DEFAULT_DISPLAY_USAGE_SETTINGS =
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,96,Collections.unmodifiableSet(displayUsage);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,99,private Set fullUsageSettings = new HashSet(DEFAULT_FULL_USAGE_SETTINGS);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,100,private Set lineUsageSettings = new HashSet(DEFAULT_LINE_USAGE_SETTINGS);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,101,private Set displaySettings = new HashSet(DEFAULT_DISPLAY_USAGE_SETTINGS);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,102,private OptionException exception = null;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,103,private Group group;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,104,private Comparator comparator = null;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,106,private String divider = null;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,108,private String header = null;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,109,private String footer = null;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,111,"private String shellCommand = """";"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,113,private PrintWriter out = new PrintWriter(System.out);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,114,//or should this default to .err?
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,116,private final String gutterLeft;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,117,private final String gutterCenter;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,118,private final String gutterRight;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,120,private final int pageWidth;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,123,* Creates a new HelpFormatter using the defaults
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,125,public HelpFormatter() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,126,this(
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,127,"DEFAULT_GUTTER_LEFT,"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,128,"DEFAULT_GUTTER_CENTER,"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,129,"DEFAULT_GUTTER_RIGHT,"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,130,DEFAULT_FULL_WIDTH);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,134,* Creates a new HelpFormatter using the specified parameters
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,135,* @param gutterLeft the string marking left of screen
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,136,* @param gutterCenter the string marking center of screen
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,137,* @param gutterRight the string marking right of screen
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,138,* @param fullWidth the width of the screen
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,140,public HelpFormatter(
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,141,"final String gutterLeft,"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,142,"final String gutterCenter,"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,143,"final String gutterRight,"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,144,final int fullWidth) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,145,if (gutterLeft == null) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,146,"this.gutterLeft = """";"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,148,else {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,149,this.gutterLeft = gutterLeft;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,152,if (gutterCenter == null) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,153,"this.gutterCenter = """";"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,155,else {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,156,this.gutterCenter = gutterCenter;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,159,if (gutterRight == null) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,160,"this.gutterRight = """";"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,162,else {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,163,this.gutterRight = gutterRight;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,166,this.pageWidth = fullWidth - gutterLeft.length() - gutterRight.length();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,167,if (fullWidth - pageWidth + gutterCenter.length() < 2) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,168,throw new IllegalArgumentException(
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,169,"""The gutter strings leave no space for output! """
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,170,"+ ""Supply shorter gutters or more width."");"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,175,* Prints the Option help.
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,176,* @throws IOException if an error occurs
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,178,public void print() throws IOException {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,179,printHeader();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,180,printException();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,181,printUsage();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,182,printHelp();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,183,printFooter();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,184,out.flush();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,188,* Prints any error message.
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,189,* @throws IOException if an error occurs
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,191,public void printException() throws IOException {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,192,if (exception != null) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,193,printDivider();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,194,printWrapped(exception.getMessage());
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,199,* Prints detailed help per option.
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,200,* @throws IOException if an error occurs
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,202,public void printHelp() throws IOException {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,203,printDivider();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,205,final Option option;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,206,if (exception != null && exception.getOption() != null) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,207,option = exception.getOption();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,209,else {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,210,option = group;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,213,"final List helpLines = option.helpLines(0, displaySettings, comparator);"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,214,int usageWidth = 0;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,215,for (final Iterator i = helpLines.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,216,final HelpLine helpLine = (HelpLine)i.next();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,217,"final String usage = helpLine.usage(lineUsageSettings, comparator);"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,218,"usageWidth = Math.max(usageWidth, usage.length());"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,220,final StringBuffer blankBuffer = new StringBuffer();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,221,for (int i = 0; i < usageWidth; i++) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,222,blankBuffer.append(' ');
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,224,final int descriptionWidth =
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,225,pageWidth - gutterCenter.length() - usageWidth;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,226,for (final Iterator i = helpLines.iterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,227,final HelpLine helpLine = (HelpLine)i.next();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,228,final List descriptionLines =
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,229,"wrap(helpLine.getDescription(), descriptionWidth);"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,230,final Iterator j = descriptionLines.iterator();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,232,printGutterLeft();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,233,"pad(helpLine.usage(lineUsageSettings, comparator), usageWidth, out);"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,234,out.print(gutterCenter);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,235,"pad((String)j.next(), descriptionWidth, out);"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,236,printGutterRight();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,237,out.println();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,239,while (j.hasNext()) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,240,printGutterLeft();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,241,"//pad(helpLine.getUsage(),usageWidth,out);"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,242,out.print(blankBuffer);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,243,out.print(gutterCenter);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,244,"pad((String)j.next(), descriptionWidth, out);"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,245,printGutterRight();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,246,out.println();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,249,printDivider();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,253,* Prints a single line of usage information (wrapping if necessary)
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,254,* @throws IOException if an error occurs
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,256,public void printUsage() throws IOException {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,257,printDivider();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,258,"final StringBuffer buffer = new StringBuffer(""Usage:\n"");"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,259,buffer.append(shellCommand).append(' ');
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,260,"group.appendUsage(buffer, fullUsageSettings, comparator, "" "");"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,261,printWrapped(buffer.toString());
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,265,* Prints a header string if necessary
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,266,* @throws IOException if an error occurs
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,268,public void printHeader() throws IOException {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,269,if (header != null) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,270,printDivider();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,271,printWrapped(header);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,276,* Prints a footer string if necessary
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,277,* @throws IOException if an error occurs
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,279,public void printFooter() throws IOException {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,280,if (footer != null) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,281,printWrapped(footer);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,282,printDivider();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,287,* Prints a string wrapped if necessary
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,288,* @param text the string to wrap
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,289,* @throws IOException if an error occurs
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,291,protected void printWrapped(final String text)
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,292,throws IOException {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,293,"for (final Iterator i = wrap(text, pageWidth).iterator();"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,294,i.hasNext();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,296,printGutterLeft();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,297,"pad((String)i.next(), pageWidth, out);"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,298,printGutterRight();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,299,out.println();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,304,* Prints the left gutter string
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,306,public void printGutterLeft() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,307,if (gutterLeft != null) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,308,out.print(gutterLeft);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,313,* Prints the right gutter string
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,315,public void printGutterRight() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,316,if (gutterRight != null) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,317,out.print(gutterRight);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,322,* Prints the divider text
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,324,public void printDivider() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,325,if (divider != null) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,326,out.println(divider);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,330,protected static void pad(
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,331,"final String text,"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,332,"final int width,"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,333,final Writer writer)
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,334,throws IOException {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,335,int left;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,336,if (text == null) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,337,left = 0;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,339,else {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,340,writer.write(text);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,341,left = text.length();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,344,for (int i = left; i < width; ++i) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,345,writer.write(' ');
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,349,"protected static List wrap(final String text, final int width) {"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,350,if (text == null) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,351,"return Collections.singletonList("""");"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,354,final List lines = new ArrayList();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,355,final char[] chars = text.toCharArray();
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,356,int left = 0;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,358,while (left < chars.length) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,359,int right = left;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,360,while (right < chars.length && chars[right] != '\n') {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,361,right++;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,363,if (right < chars.length) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,364,"final String line = new String(chars, left, right - left);"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,365,lines.add(line);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,366,left = right + 1;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,367,if (left == chars.length) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,368,"lines.add("""");"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,370,continue;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,373,right = left + width - 1;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,374,if (chars.length <= right) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,375,final String line =
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,376,"new String(chars, left, chars.length - left);"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,377,lines.add(line);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,378,break;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,380,while (right >= left && chars[right] != ' ') {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,381,right--;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,383,if (right >= left) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,384,"final String line = new String(chars, left, right - left);"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,385,lines.add(line);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,386,left = right;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,387,while (right < chars.length && chars[right] == ' ') {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,388,right++;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,390,left = right;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,391,continue;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,394,"right = Math.min(left + width, chars.length);"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,395,"final String line = new String(chars, left, right - left);"
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,396,lines.add(line);
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,397,while (right < chars.length && chars[right] == ' ') {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,398,right++;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,400,left = right;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,403,return lines;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,407,* The Comparator to use when sorting Options
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,408,* @param comparator Comparator to use when sorting Options
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,410,public void setComparator(Comparator comparator) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,411,this.comparator = comparator;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,415,* The DisplaySettings used to select the help lines in the main body of
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,416,* help
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,418,* @param displaySettings the settings to use
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,419,* @see DisplaySetting
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,421,public void setDisplaySettings(Set displaySettings) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,422,this.displaySettings = displaySettings;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,426,* Sets the string to use as a divider between sections of help
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,427,* @param divider the dividing string
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,429,public void setDivider(String divider) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,430,this.divider = divider;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,434,* Sets the exception to document
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,435,* @param exception the exception that occured
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,437,public void setException(OptionException exception) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,438,this.exception = exception;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,442,* Sets the footer text of the help screen
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,443,* @param footer the footer text
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,445,public void setFooter(String footer) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,446,this.footer = footer;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,450,* The DisplaySettings used to select the elements to display in the
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,451,* displayed line of full usage information.
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,452,* @see DisplaySetting
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,453,* @param fullUsageSettings
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,455,public void setFullUsageSettings(Set fullUsageSettings) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,456,this.fullUsageSettings = fullUsageSettings;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,460,* Sets the Group of Options to document
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,461,* @param group the options to document
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,463,public void setGroup(Group group) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,464,this.group = group;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,468,* Sets the footer text of the help screen
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,469,* @param header the footer text
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,471,public void setHeader(String header) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,472,this.header = header;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,476,* Sets the DisplaySettings used to select elements in the per helpline
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,477,* usage strings.
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,478,* @see DisplaySetting
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,479,* @param lineUsageSettings the DisplaySettings to use
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,481,public void setLineUsageSettings(Set lineUsageSettings) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,482,this.lineUsageSettings = lineUsageSettings;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,486,* Sets the command string used to invoke the application
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,487,* @param shellCommand the invokation command
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,489,public void setShellCommand(String shellCommand) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,490,this.shellCommand = shellCommand;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,494,* @return the Comparator used to sort the Group
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,496,public Comparator getComparator() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,497,return comparator;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,501,* @return the DisplaySettings used to select HelpLines
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,503,public Set getDisplaySettings() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,504,return displaySettings;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,508,* @return the String used as a horizontal section divider
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,510,public String getDivider() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,511,return divider;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,515,* @return the Exception being documented by this HelpFormatter
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,517,public OptionException getException() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,518,return exception;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,522,* @return the help screen footer text
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,524,public String getFooter() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,525,return footer;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,529,* @return the DisplaySettings used in the full usage string
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,531,public Set getFullUsageSettings() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,532,return fullUsageSettings;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,536,* @return the group documented by this HelpFormatter
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,538,public Group getGroup() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,539,return group;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,543,* @return the String used as the central gutter
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,545,public String getGutterCenter() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,546,return gutterCenter;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,550,* @return the String used as the left gutter
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,552,public String getGutterLeft() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,553,return gutterLeft;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,557,* @return the String used as the right gutter
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,559,public String getGutterRight() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,560,return gutterRight;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,564,* @return the help screen header text
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,566,public String getHeader() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,567,return header;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,571,* @return the DisplaySettings used in the per help line usage strings
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,573,public Set getLineUsageSettings() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,574,return lineUsageSettings;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,578,* @return the width of the screen in characters
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,580,public int getPageWidth() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,581,return pageWidth;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,585,* @return the command used to execute the application
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,587,public String getShellCommand() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,588,return shellCommand;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,592,* @param out the PrintWriter to write to
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,594,public void setPrintWriter(PrintWriter out) {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,595,this.out = out;
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,599,* @return the PrintWriter that will be written to
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,601,public PrintWriter getPrintWriter() {
True,src/java/org/apache/commons/cli2/util/HelpFormatter.java,src/java/org/apache/commons/cli2/util/HelpFormatter.java,602,return out;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,16,package org.apache.commons.cli2.validation;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,18,import java.util.List;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,19,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,21,import org.apache.commons.cli2.resource.ResourceHelper;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,24,* A validator checking for classnames
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,26,public class ClassValidator implements Validator {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,28,/** i18n */
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,29,private static final ResourceHelper resources =
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,30,ResourceHelper.getResourceHelper(ClassValidator.class);
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,32,private boolean loadable;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,33,private boolean instance;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,35,private ClassLoader loader;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,37,public void validate(final List values) throws InvalidArgumentException {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,39,for (final ListIterator i = values.listIterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,40,final String name = (String)i.next();
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,42,if (!isPotentialClassName(name)) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,43,throw new InvalidArgumentException(
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,44,resources.getMessage(
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,45,"""ClassValidator.error.bad.classname"","
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,46,name));
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,49,if (loadable || instance) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,50,final ClassLoader theLoader = getClassLoader();
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,51,try {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,52,final Class clazz = theLoader.loadClass(name);
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,53,if (instance) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,54,i.set(clazz.newInstance());
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,56,else {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,57,i.set(clazz);
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,60,catch (final ClassNotFoundException exp) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,61,throw new InvalidArgumentException(
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,62,resources.getMessage(
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,63,"""ClassValidator.error.class.notfound"","
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,64,name));
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,66,catch (final IllegalAccessException exp) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,67,throw new InvalidArgumentException(
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,68,resources.getMessage(
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,69,"""ClassValidator.error.class.access"","
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,70,"name,"
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,71,exp.getMessage()));
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,73,catch (final InstantiationException exp) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,74,throw new InvalidArgumentException(
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,75,resources.getMessage(
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,76,"""ClassValidator.error.class.create"","
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,77,name));
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,83,protected boolean isPotentialClassName(final String name) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,84,final char[] chars = name.toCharArray();
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,86,boolean expectingStart = true;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,88,for (int i = 0; i < chars.length; ++i) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,89,final char c = chars[i];
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,90,if (expectingStart) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,91,if (!Character.isJavaIdentifierStart(c)) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,92,return false;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,94,else {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,95,expectingStart = false;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,98,else {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,99,if (c == '.') {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,100,expectingStart = true;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,102,else if (!Character.isJavaIdentifierPart(c)) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,103,return false;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,107,return !expectingStart;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,111,* @return true iff class must be loadable to be valid
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,113,public boolean isLoadable() {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,114,return loadable;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,118,* true iff class must be loadable to be valid
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,119,* @param loadable new loadable value
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,121,public void setLoadable(boolean loadable) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,122,this.loadable = loadable;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,126,* @return the classloader to resolve classes in
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,128,public ClassLoader getClassLoader() {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,129,if (loader == null) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,130,loader = getClass().getClassLoader();
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,133,return loader;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,137,* @param loader the classloader to resolve classes in
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,139,public void setClassLoader(ClassLoader loader) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,140,this.loader = loader;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,144,* @return true iff class instance is needed to be valid
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,146,public boolean isInstance() {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,147,return instance;
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,151,* @param instance true iff class instance is needed to be valid
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,153,public void setInstance(boolean instance) {
True,src/java/org/apache/commons/cli2/validation/ClassValidator.java,src/java/org/apache/commons/cli2/validation/ClassValidator.java,154,this.instance = instance;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,16,package org.apache.commons.cli2.validation;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,18,import java.text.DateFormat;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,19,import java.text.ParsePosition;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,20,import java.util.Date;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,21,import java.util.List;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,22,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,25,* @author John Keyes
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,27,* @see java.text.DateFormat
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,29,public class DateValidator implements Validator {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,31,/** an array of permitted DateFormats */
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,32,private final DateFormat[] formats;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,34,/** minimum Date allowed i.e: a valid date occurs later than this date */
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,35,private Date minimum;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,37,/** maximum Date allowed i.e: a valid date occurs earlier than this date */
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,38,private Date maximum;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,41,* Creates a Validator for dates.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,43,* @return DateValidator a Validator for dates
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,45,public static DateValidator getDateInstance() {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,46,return new DateValidator(DateFormat.getDateInstance());
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,50,* Creates a Validator for times.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,52,* @return DateValidator a Validator for times
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,54,public static DateValidator getTimeInstance() {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,55,return new DateValidator(DateFormat.getTimeInstance());
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,59,* Creates a Validator for date/times
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,61,* @return DateValidator a Validator for date/times
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,63,public static DateValidator getDateTimeInstance() {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,64,return new DateValidator(DateFormat.getDateTimeInstance());
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,68,* Creates a Validator for the default date/time format
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,70,public DateValidator() {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,71,this(DateFormat.getInstance());
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,75,* Creates a Validator for the specified DateFormat.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,77,* @param format
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,78,*            a DateFormat which dates must conform to
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,80,public DateValidator(final DateFormat format) {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,81,this.formats = new DateFormat[] { format };
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,85,* Creates a Validator for the List of specified DateFormats.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,87,* @param formats
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,88,*            a List of DateFormats which dates must conform to
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,90,public DateValidator(final List formats) {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,91,this.formats =
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,92,(DateFormat[])formats.toArray(new DateFormat[formats.size()]);
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,96,* Validate each String value in the specified List against this instances
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,97,* permitted DateFormats.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,99,* If a value is valid then it's <code>String</code> value in the list is
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,100,* replaced with it's <code>Date</code> value.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,102,* @see org.apache.commons.cli2.validation.Validator#validate(java.util.List)
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,104,public void validate(final List values) throws InvalidArgumentException {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,106,// for each value
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,107,for (final ListIterator i = values.listIterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,109,final String value = (String)i.next();
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,111,Date date = null;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,113,// create a resuable ParsePosition instance
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,114,final ParsePosition pp = new ParsePosition(0);
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,116,// for each permitted DateFormat
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,117,for (int f = 0; f < this.formats.length && date == null; ++f) {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,119,// reset the parse position
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,120,pp.setIndex(0);
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,122,// TODO: should we call setLenient(false) on
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,123,//       each DateFormat or allow the user
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,124,//       to specify the parsing used
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,125,"date = this.formats[f].parse(value, pp);"
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,127,// if the wrong number of characters have been parsed
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,128,if (pp.getIndex() < value.length()) {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,129,date = null;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,133,// if date has not been set throw an InvalidArgumentException
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,134,if (date == null) {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,135,throw new InvalidArgumentException(value);
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,138,// if the date is outside the bounds
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,139,if (isDateEarlier(date) || isDateLater(date)) {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,140,"throw new InvalidArgumentException(""Out of range: "" + value);"
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,143,// replace the value in the list with the actual Date
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,144,i.set(date);
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,149,* Returns the maximum date permitted.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,151,* @return Date the maximum date permitted. If no maximum date has been
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,152,*         specified then return <code>null</code>.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,154,public Date getMaximum() {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,155,return maximum;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,159,* Sets the maximum Date to the specified value.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,161,* @param maximum
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,162,*            the maximum Date permitted
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,164,public void setMaximum(final Date maximum) {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,165,this.maximum = maximum;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,169,* Returns the minimum date permitted.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,171,* @return Date the minimum date permitted. If no minimum date has been
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,172,*         specified then return <code>null</code>.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,174,public Date getMinimum() {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,175,return minimum;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,179,* Sets the minimum Date to the specified value.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,181,* @param minimum
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,182,*            the minimum Date permitted
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,184,public void setMinimum(Date minimum) {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,185,this.minimum = minimum;
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,189,* Returns whether the specified Date is later than the maximum date.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,191,* @param date
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,192,*            the Date to evaluate
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,194,* @return boolean whether <code>date</code> is earlier than the maximum
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,195,*         date
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,197,private boolean isDateLater(Date date) {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,198,return maximum != null && date.getTime() > maximum.getTime();
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,202,* Returns whether the specified Date is earlier than the minimum date.
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,204,* @param date
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,205,*            the Date to evaluate
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,207,* @return boolean whether <code>date</code> is earlier than the minimum
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,208,*         date
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,210,private boolean isDateEarlier(Date date) {
True,src/java/org/apache/commons/cli2/validation/DateValidator.java,src/java/org/apache/commons/cli2/validation/DateValidator.java,211,return minimum != null && date.getTime() < minimum.getTime();
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,16,package org.apache.commons.cli2.validation;
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,18,import java.util.Iterator;
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,19,import java.util.List;
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,20,import java.util.Set;
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,23,* A Validator for a list of known string values.
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,25,* @author John Keyes
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,27,public class EnumValidator implements Validator {
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,29,/** List of permitted values */
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,30,private Set validValues;
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,33,* Creates a new StringValidator for the specified values.
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,35,* @param values
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,36,*            the list of permitted values
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,38,public EnumValidator(final Set values) {
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,39,this.validValues = values;
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,43,* Validate the list of values against the list of permitted values.
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,45,* @see org.apache.commons.cli2.validation.Validator#validate(java.util.List)
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,47,public void validate(final List values) throws InvalidArgumentException {
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,48,for (final Iterator iter = values.iterator(); iter.hasNext();) {
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,49,final String value = (String)iter.next();
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,51,if (!this.validValues.contains(value)) {
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,52,throw new InvalidArgumentException(
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,54,+ value
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,55,"+ ""' is not allowed.  Permitted values are:"""
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,56,+ getValuesAsString());
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,62,* Returns the permitted values in a String
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,64,* @return String formatted list of values
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,66,private String getValuesAsString() {
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,67,final StringBuffer buff = new StringBuffer();
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,69,"buff.append(""["");"
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,71,for (final Iterator iter = this.validValues.iterator();
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,72,iter.hasNext();
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,75,"buff.append(""'"").append(iter.next()).append(""'"");"
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,77,if (iter.hasNext()) {
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,78,"buff.append("", "");"
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,82,"buff.append(""]"");"
True,src/java/org/apache/commons/cli2/validation/EnumValidator.java,src/java/org/apache/commons/cli2/validation/EnumValidator.java,84,return buff.toString();
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,16,package org.apache.commons.cli2.validation;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,18,import java.io.File;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,19,import java.util.List;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,20,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,23,* A Validator implmentation requiring File values
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,25,public class FileValidator implements Validator {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,28,* @return an instance requiring existing entries
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,30,public static FileValidator getExistingInstance() {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,31,final FileValidator validator = new FileValidator();
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,32,validator.setExisting(true);
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,33,return validator;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,37,* @return an instance requiring existing files
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,39,public static FileValidator getExistingFileInstance() {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,40,final FileValidator validator = new FileValidator();
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,41,validator.setExisting(true);
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,42,validator.setFile(true);
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,43,return validator;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,47,* @return an instance requiring existing directories
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,49,public static FileValidator getExistingDirectoryInstance() {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,50,final FileValidator validator = new FileValidator();
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,51,validator.setExisting(true);
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,52,validator.setDirectory(true);
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,53,return validator;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,56,private boolean readable = false;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,57,private boolean writable = false;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,58,private boolean existing = false;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,59,private boolean directory = false;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,60,private boolean file = false;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,61,private boolean hidden = false;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,63,public void validate(final List values) throws InvalidArgumentException {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,64,for (final ListIterator i = values.listIterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,65,final String name = (String)i.next();
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,66,final File f = new File(name);
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,68,if ((existing && !f.exists())
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,69,|| (file && !f.isFile())
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,70,|| (directory && !f.isDirectory())
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,71,|| (hidden && !f.isHidden())
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,72,|| (readable && !f.canRead())
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,73,|| (writable && !f.canWrite())) {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,75,throw new InvalidArgumentException(name);
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,77,else {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,78,i.set(f);
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,84,* @return true iff the file is a directory
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,86,public boolean isDirectory() {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,87,return directory;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,91,* @param directory true if the file must be a directory
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,93,public void setDirectory(boolean directory) {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,94,this.directory = directory;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,98,* @return true iff the file exists
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,100,public boolean isExisting() {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,101,return existing;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,105,* @param existing true if the file must exist
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,107,public void setExisting(boolean existing) {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,108,this.existing = existing;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,112,* @return true iff the file is a file (not directory)
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,114,public boolean isFile() {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,115,return file;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,119,* @param file true if the file must be a file (not directory)
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,121,public void setFile(boolean file) {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,122,this.file = file;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,126,* @return true iff the file must be hidden
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,128,public boolean isHidden() {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,129,return hidden;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,133,* @param hidden true if the file must be hidden
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,135,public void setHidden(boolean hidden) {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,136,this.hidden = hidden;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,140,* @return true iff the file must be readable
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,142,public boolean isReadable() {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,143,return readable;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,147,* @param readable true if the file must be readable
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,149,public void setReadable(boolean readable) {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,150,this.readable = readable;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,154,* @return true iff the file must be writable
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,156,public boolean isWritable() {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,157,return writable;
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,161,* @param writable true if the file must be writable
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,163,public void setWritable(boolean writable) {
True,src/java/org/apache/commons/cli2/validation/FileValidator.java,src/java/org/apache/commons/cli2/validation/FileValidator.java,164,this.writable = writable;
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,16,package org.apache.commons.cli2.validation;
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,19,* An exception indicating validation failure
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,21,public class InvalidArgumentException extends Exception {
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,24,* Creates a new exception
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,25,* @param message the reason for failure
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,27,public InvalidArgumentException(final String message) {
True,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,src/java/org/apache/commons/cli2/validation/InvalidArgumentException.java,28,super(message);
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,16,package org.apache.commons.cli2.validation;
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,18,import java.text.NumberFormat;
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,19,import java.text.ParsePosition;
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,20,import java.util.List;
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,21,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,24,* A Validator instance that parses Numbers
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,26,public class NumberValidator implements Validator {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,29,* @return an instance using local currency format
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,31,public static NumberValidator getCurrencyInstance() {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,32,return new NumberValidator(NumberFormat.getCurrencyInstance());
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,36,* @return an instance using local integer format
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,38,public static NumberValidator getIntegerInstance() {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,39,final NumberFormat format = NumberFormat.getNumberInstance();
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,40,format.setParseIntegerOnly(true);
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,41,return new NumberValidator(format);
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,45,* @return an instance using local percent format
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,47,public static NumberValidator getPercentInstance() {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,48,return new NumberValidator(NumberFormat.getPercentInstance());
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,52,* @return an instance using local number format
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,54,public static NumberValidator getNumberInstance() {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,55,return new NumberValidator(NumberFormat.getNumberInstance());
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,58,private final NumberFormat format;
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,59,private Number minimum = null;
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,60,private Number maximum = null;
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,63,* Creates a new NumberValidator
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,65,public NumberValidator() {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,66,this(NumberFormat.getInstance());
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,70,* Creates a new NumberValidator based on the specified NumberFormat
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,71,* @param format the format of numbers to accept
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,73,public NumberValidator(final NumberFormat format) {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,74,this.format = format;
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,77,public void validate(final List values) throws InvalidArgumentException {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,78,for (final ListIterator i = values.listIterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,79,final String value = (String)i.next();
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,81,final ParsePosition pp = new ParsePosition(0);
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,82,"final Number number = format.parse(value, pp);"
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,83,if (pp.getIndex() < value.length()) {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,84,throw new InvalidArgumentException(value);
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,87,if ((minimum != null
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,88,&& number.doubleValue() < minimum.doubleValue())
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,89,|| (maximum != null
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,90,&& number.doubleValue() > maximum.doubleValue())) {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,91,"throw new InvalidArgumentException(""Out of range: "" + value);"
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,94,i.set(number);
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,99,* @return the format of a valid Number
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,101,public NumberFormat getFormat() {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,102,return format;
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,106,* @return the maximum value for a valid Number
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,108,public Number getMaximum() {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,109,return maximum;
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,113,* @param maximum the maximum value for a valid Number
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,115,public void setMaximum(Number maximum) {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,116,this.maximum = maximum;
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,120,* @return the minimum value for a valid Number
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,122,public Number getMinimum() {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,123,return minimum;
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,127,* @param minimum the minimum value for a valid Number
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,129,public void setMinimum(Number minimum) {
True,src/java/org/apache/commons/cli2/validation/NumberValidator.java,src/java/org/apache/commons/cli2/validation/NumberValidator.java,130,this.minimum = minimum;
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,16,package org.apache.commons.cli2.validation;
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,18,import java.net.MalformedURLException;
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,19,import java.net.URL;
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,20,import java.util.List;
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,21,import java.util.ListIterator;
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,24,* A Validator instance that accepts urls
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,26,public class UrlValidator implements Validator {
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,28,private String protocol = null;
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,30,public void validate(final List values) throws InvalidArgumentException {
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,31,for (final ListIterator i = values.listIterator(); i.hasNext();) {
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,32,final String name = (String)i.next();
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,33,try {
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,34,final URL url = new URL(name);
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,36,if (protocol != null && !protocol.equals(url.getProtocol())) {
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,37,throw new InvalidArgumentException(name);
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,40,i.set(url);
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,42,catch (final MalformedURLException mue) {
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,43,throw new InvalidArgumentException(
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,44,"""Cannot understand url: "" + name);"
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,50,* @return the protocol that must be used by a valid url
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,52,public String getProtocol() {
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,53,return protocol;
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,57,* @param protocol the protocol that a valid url must use
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,59,public void setProtocol(String protocol) {
True,src/java/org/apache/commons/cli2/validation/UrlValidator.java,src/java/org/apache/commons/cli2/validation/UrlValidator.java,60,this.protocol = protocol;
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,14,* limitations under the License.
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,16,package org.apache.commons.cli2.validation;
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,18,import java.util.List;
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,21,* Identifies (and maybe converts) the acceptable Argument values
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,23,public interface Validator {
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,26,* Validate the specified values (List of Strings).
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,28,* @param values
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,29,*            the values to validate
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,31,* @throws InvalidArgumentException
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,32,*             if any of the specified values are not valid
True,src/java/org/apache/commons/cli2/validation/Validator.java,src/java/org/apache/commons/cli2/validation/Validator.java,34,void validate(final List values) throws InvalidArgumentException;
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,2,* Copyright 2001-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,14,* limitations under the License.
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,2, Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,2,* Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,4, This software is published under the terms of the Apache Software License
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,5," version 1.1, a copy of which has been included with this distribution in"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,6, the LICENSE file.
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,8," $Id: BugsTest.java,v 1.17 2004/03/26 19:35:01 roxspring Exp $"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,14,* limitations under the License.
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,387,ublic void test27575() {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,388,"ptions options = PatternOptionBuilder.parsePattern(""hc!<"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,389,ssertNotNull(options);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,390,"ption h = options.getOption(""-h"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,391,ssertNotNull(h);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,392,ssertFalse(h.isRequired());
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,393,"ption c = options.getOption(""-c"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,394,ssertNotNull(c);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,395,ssertTrue(c.isRequired());
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,2, Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,2,* Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,4, This software is published under the terms of the Apache Software License
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,5," version 1.1, a copy of which has been included with this distribution in"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,6, the LICENSE file.
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,8," $Id: BuildTest.java,v 1.1 2001/12/19 18:16:25 jstrachan Exp $"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,2,* Copyright 2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,16,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,18,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,19,import org.apache.commons.cli2.builder.PatternBuilder;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,20,import org.apache.commons.cli2.option.GroupImpl;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,22,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,24,public class CLI2ConverterTest extends TestCase {
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,26,private Options aceOptions;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,27,private OptionGroup aceOptionGroup;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,28,private Options abcdeOptions;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,29,private Options pattern;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,31,private Option a;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,32,private Option bbb;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,33,private Option c;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,34,private Option ddd;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,35,private Option e;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,36,private Option f;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,37,private Option g;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,38,private Option h;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,39,private Option i;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,41,public void setUp(){
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,42,"a = OptionBuilder.withDescription(""A description"").create('a');"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,43,"bbb = OptionBuilder.create(""bbb"");"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,44,"c = OptionBuilder.withLongOpt(""ccc"").create('c');"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,45,"ddd = OptionBuilder.withLongOpt(""ddd"").create();"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,46,"e = OptionBuilder.isRequired(true).create(""e"");"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,47,"f = OptionBuilder.hasArg().withArgName(""argument"").create('f');"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,48,g = OptionBuilder.hasArgs(5).create('g');
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,49,h = OptionBuilder.hasOptionalArg().create('h');
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,50,i = OptionBuilder.hasOptionalArgs(5).create('i');
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,52,aceOptions = new Options();
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,53,aceOptions.addOption(OptionBuilder.create('a'));
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,54,aceOptions.addOption(OptionBuilder.create('c'));
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,55,aceOptions.addOption(OptionBuilder.create('e'));
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,57,aceOptionGroup = new OptionGroup();
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,58,aceOptionGroup.addOption(OptionBuilder.create('a'));
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,59,aceOptionGroup.addOption(OptionBuilder.create('c'));
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,60,aceOptionGroup.addOption(OptionBuilder.create('e'));
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,62,abcdeOptions = new Options();
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,63,abcdeOptions.addOption(OptionBuilder.create('d'));
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,64,OptionGroup og = new OptionGroup();
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,65,og.addOption(OptionBuilder.create('a'));
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,66,og.addOption(OptionBuilder.create('c'));
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,67,og.addOption(OptionBuilder.create('e'));
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,68,abcdeOptions.addOptionGroup(og);
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,69,abcdeOptions.addOption(OptionBuilder.create('b'));
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,71,"pattern = PatternOptionBuilder.parsePattern(""a%ce:"");"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,75,* Class to test for Option option(Option)
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,77,public void testOption() {
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,78,assertTrue(e.isRequired());
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,80,"assertEquals(""A description"",a.getDescription());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,81,"assertEquals('a',a.getId());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,82,"assertEquals(""[-a]"",CLI2Converter.option(a).toString());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,83,"assertEquals(""[-bbb]"",CLI2Converter.option(bbb).toString());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,84,"assertEquals(""[-c (--ccc)]"",CLI2Converter.option(c).toString());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,85,"assertEquals(""[--ddd]"",CLI2Converter.option(ddd).toString());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,86,"assertEquals(""-e"",CLI2Converter.option(e).toString());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,87,"assertEquals(""[-f <argument>]"",CLI2Converter.option(f).toString());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,88,"assertEquals(""[-g <arg1> <arg2> <arg3> <arg4> <arg5>]"",CLI2Converter.option(g).toString());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,89,"assertEquals(""[-h [<arg>]]"",CLI2Converter.option(h).toString());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,90,"assertEquals(""[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]"",CLI2Converter.option(i).toString());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,93,* Class to test for Group group(OptionGroup)
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,95,public void testGroupOptionGroup() {
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,96,GroupImpl group;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,98,group = (GroupImpl)CLI2Converter.group(aceOptionGroup);
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,99,"assertEquals(""[-a|-c|-e]"",group.toString());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,100,"assertEquals(0,group.getMinimum());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,101,"assertEquals(1,group.getMaximum());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,103,aceOptionGroup.setRequired(true);
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,104,group = (GroupImpl)CLI2Converter.group(aceOptionGroup);
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,105,"assertEquals(""-a|-c|-e"",group.toString());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,106,"assertEquals(1,group.getMinimum());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,107,"assertEquals(1,group.getMaximum());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,110,* Class to test for Group group(Options)
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,112,public void testGroupOptions() {
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,114,GroupImpl group;
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,116,group = (GroupImpl)CLI2Converter.group(aceOptions);
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,117,"assertEquals(""[-a|-c|-e]"",group.toString());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,118,"assertEquals(0,group.getMinimum());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,119,"assertEquals(Integer.MAX_VALUE,group.getMaximum());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,121,group = (GroupImpl)CLI2Converter.group(abcdeOptions);
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,123,"assertEquals(""[-a|-c|-e|-d|-b]"",group.toString());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,124,"assertEquals(0,group.getMinimum());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,125,"assertEquals(Integer.MAX_VALUE,group.getMaximum());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,127,group = (GroupImpl)CLI2Converter.group(pattern);
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,128,"assertEquals(""[-a <arg>|-c|-e <arg>]"",group.toString());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,129,"assertEquals(0,group.getMinimum());"
True,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,130,"assertEquals(Integer.MAX_VALUE,group.getMaximum());"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,2, Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,2,* Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,4, This software is published under the terms of the Apache Software License
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,5," version 1.1, a copy of which has been included with this distribution in"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,6, the LICENSE file.
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,8," $Id: GnuParseTest.java,v 1.3 2002/09/19 22:59:44 jkeyes Exp $"
True,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,14,* limitations under the License.
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,2, Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,2,* Copyright 2001-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,4, This software is published under the terms of the Apache Software License
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,5," version 1.1, a copy of which has been included with this distribution in"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,6, the LICENSE file.
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,8," $Id: HelpFormatterExamples.java,v 1.2 2002/05/17 11:44:32 jstrachan Exp $"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,2,* Copyright 2001-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,14,* limitations under the License.
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,2, Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,2,* Copyright 2001-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,6,* You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,4, This software is published under the terms of the Apache Software License
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,5," version 1.1, a copy of which has been included with this distribution in"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,6, the LICENSE file.
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,8," $Id: OptionGroupTest.java,v 1.1 2002/04/23 16:08:02 jstrachan Exp $"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,14,* limitations under the License.
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,2,* Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,8,      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,27, @version $Revision: 1.3 $
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,27,* @version $Revision: 1.4 $
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,2, Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,2,* Copyright 2001-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,6,* You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,4, This software is published under the terms of the Apache Software License
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,5," version 1.1, a copy of which has been included with this distribution in"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,6, the LICENSE file.
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,8," $Id: ParseRequiredTest.java,v 1.1 2002/04/23 16:08:02 jstrachan Exp $"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,14,* limitations under the License.
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,2, Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,2,* Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,4, This software is published under the terms of the Apache Software License
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,5," version 1.1, a copy of which has been included with this distribution in"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,6, the LICENSE file.
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,8," $Id: ParseTest.java,v 1.1 2001/12/19 18:16:25 jstrachan Exp $"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,14,* limitations under the License.
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,2, Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,2,* Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,4, This software is published under the terms of the Apache Software License
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,5," version 1.1, a copy of which has been included with this distribution in"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,6, the LICENSE file.
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,8," $Id: PatternOptionBuilderTest.java,v 1.1 2002/06/06 22:09:25 bayard Exp $"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,14,* limitations under the License.
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,15,mport java.io.StringWriter;
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,16,mport java.io.PrintWriter;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,2, Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,2,* Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,4, This software is published under the terms of the Apache Software License
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,5," version 1.1, a copy of which has been included with this distribution in"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,6, the LICENSE file.
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,8," $Id: TestHelpFormatter.java,v 1.2 2002/05/17 11:44:32 jstrachan Exp $"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,14,* limitations under the License.
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,12,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,13,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,17,mport java.io.StringWriter;
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,21,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,22,import junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,163,"xpected = ""usage: app [-b] [-a]"";"
True,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,168,"expected = ""usage: app [-a] [-b]"";"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,2, Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,2,* Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,4, This software is published under the terms of the Apache Software License
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,5," version 1.1, a copy of which has been included with this distribution in"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,6, the LICENSE file.
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,8," $Id: ValueTest.java,v 1.1 2001/12/19 18:16:25 jstrachan Exp $"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,14,* limitations under the License.
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,2, Copyright (C) The Apache Software Foundation. All rights reserved.
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,2,* Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,4, This software is published under the terms of the Apache Software License
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,5," version 1.1, a copy of which has been included with this distribution in"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,6, the LICENSE file.
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,8," $Id: ValueTest.java,v 1.1 2001/12/19 18:16:25 jstrachan Exp $"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,2,* Copyright 2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,16,package org.apache.commons.cli2;
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,18,import java.util.Arrays;
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,19,import java.util.Collection;
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,20,import java.util.Collections;
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,21,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,22,import java.util.LinkedList;
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,23,import java.util.List;
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,25,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,27,public class CLITestCase extends TestCase {
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,29,public static List list() {
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,30,return Collections.EMPTY_LIST;
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,33,public static List list(final Object args[]) {
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,34,return new LinkedList(Arrays.asList(args));
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,37,public static List list(final Object arg0) {
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,38,return list(new Object[] { arg0 });
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,41,"public static List list(final Object arg0, final Object arg1) {"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,42,"return list(new Object[] { arg0, arg1 });"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,45,"public static List list(final Object arg0, final Object arg1, final Object arg2) {"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,46,"return list(new Object[] { arg0, arg1, arg2 });"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,49,"public static List list(final Object arg0, final Object arg1, final Object arg2, final Object arg3) {"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,50,"return list(new Object[] { arg0, arg1, arg2, arg3 });"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,53,"public static List list(final Object arg0, final Object arg1, final Object arg2, final Object arg3, final Object arg4) {"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,54,"return list(new Object[] { arg0, arg1, arg2, arg3, arg4 });"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,57,"public static List list(final Object arg0, final Object arg1, final Object arg2, final Object arg3, final Object arg4, final Object arg5) {"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,58,"return list(new Object[] { arg0, arg1, arg2, arg3, arg4, arg5 });"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,61,"public static void assertListContentsEqual(final List expected, final List found) {"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,63,final Iterator e = expected.iterator();
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,64,final Iterator f = found.iterator();
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,66,while (e.hasNext() && f.hasNext()) {
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,67,"assertEquals(e.next(), f.next());"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,70,if (e.hasNext()) {
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,71,"fail(""Expected more elements"");"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,74,if (f.hasNext()) {
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,75,"fail(""Found more elements"");"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,79,"public static void assertContentsEqual(final Collection expected, final Collection found) {"
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,80,assertTrue(expected.containsAll(found));
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,81,assertTrue(found.containsAll(expected));
True,src/test/org/apache/commons/cli2/CLITestCase.java,src/test/org/apache/commons/cli2/CLITestCase.java,82,"assertEquals(expected.size(), found.size());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,16,package org.apache.commons.cli2;
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,18,import java.util.Collections;
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,19,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,20,import java.util.List;
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,22,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,23,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,24,import org.apache.commons.cli2.commandline.Parser;
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,25,import org.apache.commons.cli2.option.ArgumentTest;
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,26,import org.apache.commons.cli2.option.CommandTest;
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,27,import org.apache.commons.cli2.option.DefaultOptionTest;
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,28,import org.apache.commons.cli2.option.OptionTestCase;
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,29,import org.apache.commons.cli2.option.PropertyOption;
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,30,import org.apache.commons.cli2.option.SwitchTest;
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,32,public abstract class CommandLineTestCase extends CLITestCase {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,34,protected abstract CommandLine createCommandLine();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,36,"public final Option present = new DefaultOptionBuilder().withLongName(""present"").withLongName(""alsopresent"").create();"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,37,"public final Option missing = new DefaultOptionBuilder().withLongName(""missing"").create();"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,38,"public final Option multiple = new DefaultOptionBuilder().withLongName(""multiple"").create();"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,39,"public final Option bool = new DefaultOptionBuilder().withLongName(""bool"").create();"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,41,public final Option root = new GroupBuilder().withOption(present).withOption(missing).withOption(multiple).withOption(bool).create();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,43,private CommandLine commandLine;
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,46,* @see TestCase#setUp()
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,48,public void setUp() throws Exception {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,49,super.setUp();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,50,commandLine = createCommandLine();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,53,* Class to test for boolean hasOption(String)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,55,public final void testHasOptionString() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,56,"assertTrue(commandLine.hasOption(""--present""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,57,"assertTrue(commandLine.hasOption(""--alsopresent""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,58,"assertFalse(commandLine.hasOption(""--missing""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,62,* Class to test for boolean hasOption(Option)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,64,public final void testHasOptionOption() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,65,assertTrue(commandLine.hasOption(present));
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,66,assertFalse(commandLine.hasOption(missing));
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,68,public final void testGetOption() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,69,"assertSame(present,commandLine.getOption(""--present""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,70,"assertSame(present,commandLine.getOption(""--alsopresent""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,71,//TODO decide whether the following assertion is valid
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,72,"//assertSame(missing,commandLine.getOption(""--missing""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,75,* Class to test for List getValues(String)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,77,public final void testGetValuesString() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,78,"assertListContentsEqual(list(""present value""),commandLine.getValues(""--present""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,79,"assertListContentsEqual(list(""value 1"",""value 2"",""value 3""),commandLine.getValues(""--multiple""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,80,"assertTrue(commandLine.getValues(""--missing"").isEmpty());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,83,"* Class to test for List getValues(String, List)"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,85,public final void testGetValuesStringList() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,86,"assertListContentsEqual(list(""present value""),commandLine.getValues(""--present"",null));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,87,"assertListContentsEqual(list(""present value""),commandLine.getValues(""--alsopresent"",null));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,88,"assertSame(commandLine.getValues(""--missing"",Collections.EMPTY_LIST),Collections.EMPTY_LIST);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,89,"final List def = Collections.singletonList(""default value"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,90,"assertSame(def,commandLine.getValues(""--missing"",def));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,93,* Class to test for List getValues(Option)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,95,public final void testGetValuesOption() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,96,"assertListContentsEqual(list(""present value""),commandLine.getValues(present));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,97,assertTrue(commandLine.getValues(missing).isEmpty());
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,100,"* Class to test for List getValues(Option, List)"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,102,public final void testGetValuesOptionList() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,103,"assertListContentsEqual(list(""present value""),commandLine.getValues(present));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,104,"assertSame(commandLine.getValues(missing,Collections.EMPTY_LIST),Collections.EMPTY_LIST);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,105,"final List defs = Collections.singletonList(""custom default"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,106,"assertSame(defs,commandLine.getValues(missing,defs));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,109,* Class to test for Object getValue(String)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,111,public final void testGetValueString() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,112,"assertEquals(""present value"",commandLine.getValue(""--present""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,113,"assertEquals(""present value"",commandLine.getValue(""--alsopresent""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,114,"assertNull(commandLine.getValue(""--missing""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,115,try{
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,116,"commandLine.getValue(""--multiple"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,117,"fail(""expected IllegalStateException"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,119,catch(IllegalStateException e){
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,120,"assertEquals(""More than one value was supplied"",e.getMessage());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,124,"* Class to test for Object getValue(String, Object)"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,126,public final void testGetValueStringObject() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,127,"assertEquals(""present value"",commandLine.getValue(""--present"",""default value""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,128,"assertEquals(""present value"",commandLine.getValue(""--alsopresent"",""default value""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,129,"assertEquals(""default value"",commandLine.getValue(""--missing"",""default value""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,130,try{
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,131,"commandLine.getValue(""--multiple"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,132,"fail(""expected IllegalStateException"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,134,catch(IllegalStateException e){
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,135,"assertEquals(""More than one value was supplied"",e.getMessage());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,139,* Class to test for Object getValue(Option)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,141,public final void testGetValueOption() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,142,"assertEquals(""present value"",commandLine.getValue(present));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,143,assertNull(commandLine.getValue(missing));
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,144,try{
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,145,commandLine.getValue(multiple);
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,146,"fail(""expected IllegalStateException"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,148,catch(IllegalStateException e){
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,149,"assertEquals(""More than one value was supplied"",e.getMessage());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,153,"* Class to test for Object getValue(Option, Object)"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,155,public final void testGetValueOptionObject() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,156,"assertEquals(""present value"",commandLine.getValue(present,""default value""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,157,"assertEquals(""default value"",commandLine.getValue(missing,""default value""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,158,try{
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,159,commandLine.getValue(multiple);
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,160,"fail(""expected IllegalStateException"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,162,catch(IllegalStateException e){
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,163,"assertEquals(""More than one value was supplied"",e.getMessage());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,167,* Class to test for Boolean getSwitch(String)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,169,public final void testGetSwitchString() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,170,"assertEquals(Boolean.TRUE,commandLine.getSwitch(""--bool""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,171,"assertNull(commandLine.getSwitch(""--missing""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,174,"* Class to test for Boolean getSwitch(String, Boolean)"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,176,public final void testGetSwitchStringBoolean() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,177,"assertEquals(Boolean.TRUE,commandLine.getSwitch(""--bool"",Boolean.FALSE));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,178,"assertEquals(Boolean.FALSE,commandLine.getSwitch(""--missing"",Boolean.FALSE));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,181,* Class to test for Boolean getSwitch(Option)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,183,public final void testGetSwitchOption() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,184,"assertEquals(Boolean.TRUE,commandLine.getSwitch(bool));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,185,assertNull(commandLine.getSwitch(missing));
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,188,"* Class to test for Boolean getSwitch(Option, Boolean)"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,190,public final void testGetSwitchOptionBoolean() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,191,"assertEquals(Boolean.TRUE,commandLine.getSwitch(bool,Boolean.FALSE));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,192,"assertEquals(Boolean.FALSE,commandLine.getSwitch(missing,Boolean.FALSE));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,195,* Class to test for String getProperty(String)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,197,public final void testGetPropertyString() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,198,"assertEquals(""present property"",commandLine.getProperty(""present""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,199,"assertNull(commandLine.getProperty(""missing""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,202,"* Class to test for String getProperty(String, String)"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,204,public final void testGetPropertyStringString() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,205,"assertEquals(""present property"",commandLine.getProperty(""present"",""default property""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,206,"assertEquals(""default property"",commandLine.getProperty(""missing"",""default property""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,208,public final void testGetProperties() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,209,"assertTrue(commandLine.getProperties().containsAll(list(""present"")));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,212,* Class to test for int getOptionCount(String)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,214,public final void testGetOptionCountString() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,215,"// one option, one switch"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,216,"assertTrue(1<=commandLine.getOptionCount(""--present""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,217,"assertTrue(1<=commandLine.getOptionCount(""--bool""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,218,"assertEquals(0,commandLine.getOptionCount(""--missing""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,221,* Class to test for int getOptionCount(Option)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,223,public final void testGetOptionCountOption() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,224,"// one option, one switch"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,225,assertTrue(1<=commandLine.getOptionCount(present));
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,226,assertTrue(1<=commandLine.getOptionCount(bool));
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,227,"assertEquals(0,commandLine.getOptionCount(missing));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,229,public final void testGetOptions() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,230,//TODO Implement getOptions().
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,232,public final void testGetOptionTriggers() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,233,//TODO Implement getOptionTriggers().
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,237,// OLD TESTS FOLLOW
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,239,public final void testProperties() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,240,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,241,final List args = OptionTestCase.list();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,242,final WriteableCommandLine commandLine =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,243,"OptionTestCase.commandLine(option, args);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,245,assertTrue(commandLine.getProperties().isEmpty());
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,247,"commandLine.addProperty(""myprop"", ""myval"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,248,"assertEquals(1, commandLine.getProperties().size());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,249,"assertEquals(""myval"", commandLine.getProperty(""myprop""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,251,"commandLine.addProperty(""myprop"", ""myval2"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,252,"assertEquals(1, commandLine.getProperties().size());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,253,"assertEquals(""myval2"", commandLine.getProperty(""myprop""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,255,"commandLine.addProperty(""myprop2"", ""myval3"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,256,"assertEquals(2, commandLine.getProperties().size());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,257,"assertEquals(""myval3"", commandLine.getProperty(""myprop2""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,260,public final void testOptions() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,261,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,262,final List args = OptionTestCase.list();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,263,final WriteableCommandLine commandLine =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,264,"OptionTestCase.commandLine(option, args);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,266,final Option start = CommandTest.buildStartCommand();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,268,assertFalse(commandLine.hasOption(start));
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,269,"assertFalse(commandLine.hasOption(""start""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,270,"assertFalse(commandLine.hasOption(""go""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,272,commandLine.addOption(start);
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,274,assertTrue(commandLine.hasOption(start));
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,275,"assertTrue(commandLine.hasOption(""start""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,276,"assertTrue(commandLine.hasOption(""go""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,279,public final void testValues() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,280,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,281,final List args = OptionTestCase.list();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,282,final WriteableCommandLine commandLine =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,283,"OptionTestCase.commandLine(option, args);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,285,final Option start = CommandTest.buildStartCommand();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,287,assertNull(commandLine.getValue(start));
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,288,assertTrue(commandLine.getValues(start).isEmpty());
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,290,commandLine.addOption(start);
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,292,assertTrue(commandLine.getValues(start).isEmpty());
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,294,"commandLine.addValue(start, ""file1"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,296,"assertEquals(""file1"", commandLine.getValue(start));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,297,"assertEquals(""file1"", commandLine.getValue(""start""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,298,"assertEquals(""file1"", commandLine.getValue(""go""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,299,"assertEquals(1, commandLine.getValues(start).size());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,300,"assertEquals(1, commandLine.getValues(""start"").size());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,301,"assertEquals(1, commandLine.getValues(""go"").size());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,302,"assertTrue(commandLine.getValues(start).contains(""file1""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,303,"assertTrue(commandLine.getValues(""start"").contains(""file1""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,304,"assertTrue(commandLine.getValues(""go"").contains(""file1""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,306,"commandLine.addValue(start, ""file2"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,308,try {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,309,commandLine.getValue(start);
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,310,"fail(""Cannot get single value if multiple are present"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,312,catch (IllegalStateException ise) {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,313,"assertEquals(""More than one value was supplied"", ise.getMessage());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,316,try {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,317,"commandLine.getValue(""start"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,318,"fail(""Cannot get single value if multiple are present"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,320,catch (IllegalStateException ise) {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,321,"assertEquals(""More than one value was supplied"", ise.getMessage());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,324,"commandLine.getValues(start).add(""file3"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,327,public final void testSwitches() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,328,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,329,final List args = OptionTestCase.list();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,330,final WriteableCommandLine commandLine =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,331,"OptionTestCase.commandLine(option, args);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,333,final Option start = CommandTest.buildStartCommand();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,335,assertNull(commandLine.getSwitch(start));
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,336,"assertNull(commandLine.getSwitch(""start""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,337,"assertNull(commandLine.getSwitch(""go""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,339,"commandLine.addSwitch(start, true);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,340,try {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,341,"commandLine.addSwitch(start, false);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,342,"fail(""Switch cannot be changed"");"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,344,catch (IllegalStateException ise) {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,345,"assertEquals(""Switch already set"", ise.getMessage());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,349,public final void testSwitches_True() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,350,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,351,final List args = OptionTestCase.list();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,352,final WriteableCommandLine commandLine =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,353,"OptionTestCase.commandLine(option, args);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,355,final Option start = CommandTest.buildStartCommand();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,357,"commandLine.addSwitch(start, true);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,358,"assertSame(Boolean.TRUE, commandLine.getSwitch(start));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,361,public final void testSwitches_False() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,362,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,363,final List args = OptionTestCase.list();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,364,final WriteableCommandLine commandLine =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,365,"OptionTestCase.commandLine(option, args);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,367,final Option start = CommandTest.buildStartCommand();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,369,"commandLine.addSwitch(start, false);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,370,"assertSame(Boolean.FALSE, commandLine.getSwitch(start));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,373,//    public final void testLooksLikeOption() {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,374,//        final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,375,//        final List args = OptionTestCase.list();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,376,//        final WriteableCommandLine commandLine =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,377,"//            OptionTestCase.commandLine(option, args);"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,379,"//        assertTrue(commandLine.looksLikeOption(""-D""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,380,"//        assertFalse(commandLine.looksLikeOption(""--help""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,381,"//        assertFalse(commandLine.looksLikeOption(""+display""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,382,"//        assertFalse(commandLine.looksLikeOption(""myprefix""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,383,"//        assertFalse(commandLine.looksLikeOption(""myprefix2""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,384,"//        assertFalse(commandLine.looksLikeOption(""myprefference""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,385,"//        assertFalse(commandLine.looksLikeOption(""/SCANDISK""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,386,"//        assertFalse(commandLine.looksLikeOption(""update""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,389,public final void testGetOptions_Order() throws OptionException {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,390,final Option help = DefaultOptionTest.buildHelpOption();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,391,final Option login = CommandTest.buildLoginCommand();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,392,final Option targets = ArgumentTest.buildTargetsArgument();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,394,final Group group =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,395,new GroupBuilder()
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,396,.withOption(help)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,397,.withOption(login)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,398,.withOption(targets)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,399,.create();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,401,final Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,402,parser.setGroup(group);
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,403,final CommandLine cl =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,404,parser.parse(
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,405,new String[] {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,406,"""login"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,407,"""rob"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,408,"""--help"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,409,"""target1"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,410,"""target2"" });"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,412,final Iterator i = cl.getOptions().iterator();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,414,"assertSame(login, i.next());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,415,"assertSame(help, i.next());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,416,"assertSame(targets, i.next());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,417,"assertSame(targets, i.next());"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,418,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,421,public final void testGetOptionCount() throws OptionException {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,422,final Option help = DefaultOptionTest.buildHelpOption();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,423,final Option login = CommandTest.buildLoginCommand();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,424,final Option targets = ArgumentTest.buildTargetsArgument();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,425,final Option display = SwitchTest.buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,427,final Group group =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,428,new GroupBuilder()
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,429,.withOption(help)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,430,.withOption(login)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,431,.withOption(targets)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,432,.withOption(display)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,433,.create();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,435,final Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,436,parser.setGroup(group);
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,437,final CommandLine cl =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,438,parser.parse(
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,439,new String[] {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,440,"""--help"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,441,"""login"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,442,"""rob"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,443,"""--help"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,444,"""--help"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,445,"""target1"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,446,"""target2"" });"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,448,"assertEquals(1, cl.getOptionCount(login));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,449,"assertEquals(3, cl.getOptionCount(help));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,450,"assertEquals(2, cl.getOptionCount(targets));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,451,"assertEquals(0, cl.getOptionCount(display));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,454,public final void testGetOptionCount_Strings() throws OptionException {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,455,final Option help = DefaultOptionTest.buildHelpOption();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,456,final Option login = CommandTest.buildLoginCommand();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,457,final Option targets = ArgumentTest.buildTargetsArgument();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,458,final Option display = SwitchTest.buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,460,final Group group =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,461,new GroupBuilder()
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,462,.withOption(help)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,463,.withOption(login)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,464,.withOption(targets)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,465,.withOption(display)
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,466,.create();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,468,final Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,469,parser.setGroup(group);
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,470,final CommandLine cl =
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,471,parser.parse(
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,472,new String[] {
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,473,"""--help"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,474,"""login"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,475,"""rob"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,476,"""--help"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,477,"""--help"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,478,"""target1"","
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,479,"""target2"" });"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,481,"assertEquals(1, cl.getOptionCount(""login""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,482,"assertEquals(3, cl.getOptionCount(""-?""));"
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,483,"assertEquals(0, cl.getOptionCount(""+display""));"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,16,package org.apache.commons.cli2;
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,18,import java.io.IOException;
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,19,import java.io.PrintWriter;
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,20,import java.io.StringWriter;
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,22,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,24,import org.apache.commons.cli2.builder.ArgumentBuilder;
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,25,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,26,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,27,import org.apache.commons.cli2.commandline.Parser;
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,28,import org.apache.commons.cli2.option.PropertyOption;
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,29,import org.apache.commons.cli2.util.HelpFormatter;
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,32,* @author Rob
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,34,* To change the template for this generated type comment go to Window -
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,35,* Preferences - Java - Code Generation - Code and Comments
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,37,public class DocumentationTest extends TestCase {
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,39,"public void testBasicUsage() throws IOException, OptionException {"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,40,HelpFormatter helpFormatter = new HelpFormatter();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,41,//ignore all printed
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,42,helpFormatter.setPrintWriter(new PrintWriter(new StringWriter()));
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,45,* --version -? -h --help -log file -s|-q|-v|-d Bursting File/Num/Date
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,46,* validation Switches Commands Auto help Auto exception help
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,49,DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,50,Option version =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,51,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,52,".withLongName(""version"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,53,".withDescription(""Displays version information and then exits"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,54,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,56,Option help =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,57,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,58,".withShortName(""h"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,59,".withShortName(""?"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,60,".withLongName(""help"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,61,".withDescription(""Displays help on usage and then exits"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,62,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,64,ArgumentBuilder abuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,65,Argument logFile =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,66,abuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,67,".withDescription(""The log file to write to"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,68,".withName(""file"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,69,.withMinimum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,70,.withMaximum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,71,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,72,Option log =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,73,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,74,.withArgument(logFile)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,75,".withShortName(""log"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,76,".withDescription(""Log progress information to a file"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,77,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,79,GroupBuilder gbuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,80,Group outputQuality =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,81,gbuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,82,".withName(""quality"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,83,".withDescription(""Controls the quality of console output"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,84,.withMaximum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,85,.withOption(
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,86,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,87,".withShortName(""s"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,88,".withDescription(""Silent"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,89,.create())
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,90,.withOption(
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,91,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,92,".withShortName(""q"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,93,".withDescription(""Quiet"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,94,.create())
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,95,.withOption(
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,96,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,97,".withShortName(""n"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,98,".withDescription(""Normal"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,99,.create())
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,100,.withOption(
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,101,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,102,".withShortName(""v"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,103,".withDescription(""Verbose"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,104,.create())
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,105,.withOption(
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,106,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,107,".withShortName(""d"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,108,".withDescription(""Debug"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,109,.create())
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,110,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,112,Group options =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,113,new GroupBuilder()
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,114,".withName(""options"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,115,.withOption(version)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,116,.withOption(help)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,117,.withOption(log)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,118,.withOption(outputQuality)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,119,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,121,"final String[] args = new String[] { ""--bad-option"" };"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,123,Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,124,parser.setHelpFormatter(helpFormatter);
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,125,parser.setGroup(options);
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,126,parser.setHelpOption(help);
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,127,CommandLine commandLine = parser.parseAndHelp(args);
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,128,if (commandLine != null) {
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,129,if (commandLine.hasOption(version)) {
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,130,"System.out.println(""MyApp ver 1.0"");"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,131,return;
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,133,"if (commandLine.hasOption(""-log"")) {"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,134,"String filename = (String)commandLine.getValue(""-log"");"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,139,try {
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,140,commandLine = parser.parse(args);
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,141,"fail(""Unexpected Option!"");"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,143,catch (OptionException uoe) {
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,144,assertEquals(
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,145,"""Unexpected --bad-option while processing options"","
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,146,uoe.getMessage());
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,150,public void testExampleAnt() throws IOException {
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,151,// Based on Ant 1.5.3
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,153,final DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,154,final ArgumentBuilder abuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,155,final GroupBuilder gbuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,157,Option help =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,158,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,159,".withShortName(""help"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,160,".withDescription(""print this message"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,161,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,162,Option projecthelp =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,163,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,164,".withShortName(""projecthelp"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,165,".withDescription(""print project help information"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,166,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,167,Option version =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,168,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,169,".withShortName(""version"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,170,".withDescription(""print the version information and exit"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,171,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,172,Option diagnostics =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,173,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,174,".withShortName(""diagnostics"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,175,".withDescription(""print information that might be helpful to diagnose or report problems."")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,176,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,177,Option quiet =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,178,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,179,".withShortName(""quiet"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,180,".withShortName(""q"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,181,".withDescription(""be extra quiet"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,182,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,183,Option verbose =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,184,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,185,".withShortName(""verbose"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,186,".withShortName(""v"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,187,".withDescription(""be extra verbose"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,188,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,189,Option debug =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,190,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,191,".withShortName(""debug"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,192,".withDescription(""print debugging information"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,193,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,194,Option emacs =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,195,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,196,".withShortName(""emacs"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,197,".withDescription(""produce logging information without adornments"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,198,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,199,Option logfile =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,200,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,201,".withShortName(""logfile"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,202,".withShortName(""l"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,203,".withDescription(""produce logging information without adornments"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,204,.withArgument(
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,205,abuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,206,".withName(""file"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,207,.withMinimum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,208,.withMaximum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,209,.create())
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,210,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,211,Option logger =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,212,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,213,".withShortName(""logger"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,214,".withDescription(""the class which is to perform logging"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,215,.withArgument(
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,216,abuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,217,".withName(""classname"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,218,.withMinimum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,219,.withMaximum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,220,.create())
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,221,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,222,Option listener =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,223,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,224,".withShortName(""listener"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,225,".withDescription(""add an instance of class as a project listener"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,226,.withArgument(
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,227,abuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,228,".withName(""classname"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,229,.withMinimum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,230,.withMaximum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,231,.create())
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,232,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,233,Option buildfile =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,234,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,235,".withShortName(""buildfile"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,236,".withShortName(""b"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,237,".withShortName(""file"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,238,".withDescription(""use given buildfile"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,239,.withArgument(
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,240,abuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,241,".withName(""file"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,242,.withMinimum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,243,.withMaximum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,244,.create())
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,245,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,246,Option property = new PropertyOption();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,247,Option propertyfile =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,248,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,249,".withShortName(""propertyfile"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,250,".withDescription(""load all properties from file with -D properties taking precedence"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,251,.withArgument(
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,252,abuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,253,".withName(""name"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,254,.withMinimum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,255,.withMaximum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,256,.create())
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,257,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,258,Option inputhandler =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,259,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,260,".withShortName(""inputhandler"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,261,".withDescription(""the class which will handle input requests"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,262,.withArgument(
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,263,abuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,264,".withName(""class"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,265,.withMinimum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,266,.withMaximum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,267,.create())
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,268,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,269,Option find =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,270,obuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,271,".withShortName(""find"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,272,".withDescription(""search for buildfile towards the root of the filesystem and use it"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,273,.withArgument(
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,274,abuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,275,".withName(""file"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,276,.withMinimum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,277,.withMaximum(1)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,278,.create())
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,279,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,280,"Option targets = abuilder.withName(""target"").create();"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,282,Group options =
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,283,gbuilder
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,284,".withName(""options"")"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,285,.withOption(help)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,286,.withOption(projecthelp)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,287,.withOption(version)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,288,.withOption(diagnostics)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,289,.withOption(quiet)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,290,.withOption(verbose)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,291,.withOption(debug)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,292,.withOption(emacs)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,293,.withOption(logfile)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,294,.withOption(logger)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,295,.withOption(listener)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,296,.withOption(buildfile)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,297,.withOption(property)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,298,.withOption(propertyfile)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,299,.withOption(inputhandler)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,300,.withOption(find)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,301,.withOption(targets)
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,302,.create();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,304,HelpFormatter hf = new HelpFormatter();
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,305,"hf.setShellCommand(""ant"");"
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,306,hf.getFullUsageSettings().add(DisplaySetting.DISPLAY_GROUP_NAME);
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,307,hf.getFullUsageSettings().add(DisplaySetting.DISPLAY_GROUP_ARGUMENT);
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,308,hf.getFullUsageSettings().remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,310,hf.getLineUsageSettings().add(DisplaySetting.DISPLAY_PROPERTY_OPTION);
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,311,hf.getLineUsageSettings().add(DisplaySetting.DISPLAY_PARENT_ARGUMENT);
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,313,hf.getDisplaySettings().remove(DisplaySetting.DISPLAY_GROUP_ARGUMENT);
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,315,hf.setGroup(options);
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,316,// redirect printed stuff to a string
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,317,hf.setPrintWriter(new PrintWriter(new StringWriter()));
True,src/test/org/apache/commons/cli2/DocumentationTest.java,src/test/org/apache/commons/cli2/DocumentationTest.java,318,hf.print();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,16,package org.apache.commons.cli2;
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,18,import java.util.Arrays;
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,19,import java.util.List;
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,20,import java.util.Set;
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,22,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,24,import org.apache.commons.cli2.builder.ArgumentBuilder;
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,25,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,26,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,27,import org.apache.commons.cli2.commandline.Parser;
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,30,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,32,* To change the template for this generated type comment go to Window -
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,33,* Preferences - Java - Code Generation - Code and Comments
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,35,public class PrecedenceTest extends TestCase {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,36,"private final String[] args = new String[] { ""-file"" };"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,38,public void testSimple() throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,39,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,41,final Group options =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,42,new GroupBuilder()
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,43,".withOption(oBuilder.withShortName(""file"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,44,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,46,"final CommandLine cl = buildCommandLine(options, args);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,47,"assertEquals(new String[] { ""-file"" }, cl);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,50,public void testArgument() throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,51,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,52,final ArgumentBuilder aBuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,54,final Group options =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,55,new GroupBuilder()
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,56,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,57,oBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,58,".withShortName(""f"")"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,59,.withArgument(aBuilder.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,60,.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,61,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,63,"final CommandLine cl = buildCommandLine(options, args);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,64,"assertEquals(new String[] { ""-f"" }, cl);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,67,public void testBurst() throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,68,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,69,final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,70,final Group options =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,71,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,72,".withOption(oBuilder.withShortName(""f"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,73,".withOption(oBuilder.withShortName(""i"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,74,".withOption(oBuilder.withShortName(""l"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,75,".withOption(oBuilder.withShortName(""e"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,76,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,78,"final CommandLine cl = buildCommandLine(options, args);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,79,"assertEquals(new String[] { ""-f"", ""-i"", ""-l"", ""-e"" }, cl);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,82,public void testChildren() throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,83,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,84,final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,86,final Group children =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,87,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,88,".withOption(oBuilder.withShortName(""i"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,89,".withOption(oBuilder.withShortName(""l"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,90,".withOption(oBuilder.withShortName(""e"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,91,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,92,final Group options =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,93,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,94,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,95,oBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,96,".withShortName(""f"")"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,97,.withChildren(children)
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,98,.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,99,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,101,"final CommandLine cl = buildCommandLine(options, args);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,102,"assertEquals(new String[] { ""-f"", ""-i"", ""-l"", ""-e"" }, cl);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,105,public void XtestSimpleVsArgument() throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,106,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,107,final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,108,final ArgumentBuilder aBuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,110,final Group options =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,111,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,112,".withOption(oBuilder.withShortName(""file"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,113,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,114,oBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,115,".withShortName(""f"")"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,116,.withArgument(aBuilder.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,117,.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,118,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,120,"final CommandLine cl = buildCommandLine(options, args);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,121,"assertEquals(new String[] { ""-f"" }, cl);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,124,public void XtestSimpleVsBurst() throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,125,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,126,final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,127,final Group options =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,128,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,129,".withOption(oBuilder.withShortName(""file"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,130,".withOption(oBuilder.withShortName(""f"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,131,".withOption(oBuilder.withShortName(""i"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,132,".withOption(oBuilder.withShortName(""l"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,133,".withOption(oBuilder.withShortName(""e"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,134,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,136,"final CommandLine cl = buildCommandLine(options, args);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,137,"assertEquals(new String[] { ""-f"", ""-i"", ""-l"", ""-e"" }, cl);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,140,public void XtestSimpleVsChildren() throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,141,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,142,final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,144,final Group children =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,145,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,146,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,147,"oBuilder.withShortName(""i"").withLongName(""ci"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,148,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,149,"oBuilder.withShortName(""l"").withLongName(""cl"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,150,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,151,"oBuilder.withShortName(""e"").withLongName(""ce"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,152,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,154,final Group options =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,155,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,156,".withOption(oBuilder.withShortName(""file"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,157,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,158,oBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,159,".withShortName(""f"")"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,160,.withChildren(children)
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,161,.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,162,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,164,"final CommandLine cl = buildCommandLine(options, args);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,165,assertEquals(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,166,"new String[] { ""-f"", ""-i"", ""--ci"", ""-l"", ""--cl"", ""-e"", ""--ce"" },"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,167,cl);
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,170,public void testArgumentVsBurst() throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,171,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,172,final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,173,final ArgumentBuilder aBuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,175,final Group options =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,176,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,177,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,178,oBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,179,".withShortName(""f"")"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,180,.withArgument(aBuilder.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,181,.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,182,".withOption(oBuilder.withShortName(""i"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,183,".withOption(oBuilder.withShortName(""l"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,184,".withOption(oBuilder.withShortName(""e"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,185,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,187,"final CommandLine cl = buildCommandLine(options, args);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,188,"assertEquals(new String[] { ""-f"" }, cl);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,191,public void testArgumentVsChildren() throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,192,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,193,final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,194,final ArgumentBuilder aBuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,196,final Group children =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,197,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,198,".withOption(oBuilder.withShortName(""i"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,199,".withOption(oBuilder.withShortName(""l"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,200,".withOption(oBuilder.withShortName(""e"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,201,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,202,final Group options =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,203,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,204,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,205,oBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,206,".withShortName(""f"")"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,207,.withChildren(children)
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,208,.withArgument(aBuilder.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,209,.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,210,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,212,"final CommandLine cl = buildCommandLine(options, args);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,213,"assertEquals(new String[] { ""-f"" }, cl);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,216,public void testBurstVsChildren() throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,217,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,218,final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,220,final Group children =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,221,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,222,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,223,"oBuilder.withShortName(""i"").withLongName(""ci"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,224,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,225,"oBuilder.withShortName(""l"").withLongName(""cl"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,226,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,227,"oBuilder.withShortName(""e"").withLongName(""ce"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,228,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,230,final Group options =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,231,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,232,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,233,oBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,234,".withShortName(""f"")"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,235,.withChildren(children)
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,236,.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,237,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,238,"oBuilder.withShortName(""i"").withLongName(""bi"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,239,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,240,"oBuilder.withShortName(""l"").withLongName(""bl"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,241,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,242,"oBuilder.withShortName(""e"").withLongName(""be"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,243,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,245,"final CommandLine cl = buildCommandLine(options, args);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,246,assertEquals(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,247,"new String[] { ""-f"", ""-i"", ""--ci"", ""-l"", ""--cl"", ""-e"", ""--ce"" },"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,248,cl);
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,251,public void XtestSimpleVsArgumentVsBurst() throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,252,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,253,final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,254,final ArgumentBuilder aBuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,256,final Group options =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,257,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,258,".withOption(oBuilder.withShortName(""file"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,259,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,260,oBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,261,".withShortName(""f"")"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,262,.withArgument(aBuilder.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,263,.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,264,".withOption(oBuilder.withShortName(""i"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,265,".withOption(oBuilder.withShortName(""l"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,266,".withOption(oBuilder.withShortName(""e"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,267,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,269,"final CommandLine cl = buildCommandLine(options, args);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,270,"assertEquals(new String[] { ""-f"" }, cl);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,273,public void XtestSimpleVsArgumentVsChildren() throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,274,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,275,final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,276,final ArgumentBuilder aBuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,278,final Group children =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,279,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,280,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,281,"oBuilder.withShortName(""i"").withLongName(""ci"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,282,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,283,"oBuilder.withShortName(""l"").withLongName(""cl"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,284,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,285,"oBuilder.withShortName(""e"").withLongName(""ce"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,286,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,288,final Group options =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,289,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,290,".withOption(oBuilder.withShortName(""file"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,291,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,292,oBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,293,".withShortName(""f"")"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,294,.withChildren(children)
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,295,.withArgument(aBuilder.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,296,.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,297,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,299,"final CommandLine cl = buildCommandLine(options, args);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,300,"assertEquals(new String[] { ""-f"" }, cl);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,303,public void XtestSimpleVsBurstVsChildren() throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,304,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,305,final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,307,final Group children =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,308,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,309,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,310,"oBuilder.withShortName(""i"").withLongName(""ci"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,311,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,312,"oBuilder.withShortName(""l"").withLongName(""cl"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,313,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,314,"oBuilder.withShortName(""e"").withLongName(""ce"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,315,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,317,final Group options =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,318,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,319,".withOption(oBuilder.withShortName(""file"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,320,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,321,oBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,322,".withShortName(""f"")"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,323,.withChildren(children)
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,324,.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,325,".withOption(oBuilder.withShortName(""i"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,326,".withOption(oBuilder.withShortName(""l"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,327,".withOption(oBuilder.withShortName(""e"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,328,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,330,"final CommandLine cl = buildCommandLine(options, args);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,331,"assertEquals(new String[] { ""-f"", ""-i"", ""-l"", ""-e"" }, cl);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,334,public void testArgumentVsBurstVsChildren() throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,335,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,336,final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,337,final ArgumentBuilder aBuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,339,final Group children =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,340,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,341,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,342,"oBuilder.withShortName(""i"").withLongName(""ci"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,343,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,344,"oBuilder.withShortName(""l"").withLongName(""cl"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,345,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,346,"oBuilder.withShortName(""e"").withLongName(""ce"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,347,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,349,final Group options =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,350,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,351,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,352,oBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,353,".withShortName(""f"")"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,354,.withChildren(children)
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,355,.withArgument(aBuilder.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,356,.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,357,".withOption(oBuilder.withShortName(""i"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,358,".withOption(oBuilder.withShortName(""l"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,359,".withOption(oBuilder.withShortName(""e"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,360,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,362,"final CommandLine cl = buildCommandLine(options, args);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,363,"assertEquals(new String[] { ""-f"" }, cl);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,366,public void XtestSimpleVsArgumentVsBurstVsChildren()
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,367,throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,368,final DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,369,final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,370,final ArgumentBuilder aBuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,372,final Group children =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,373,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,374,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,375,"oBuilder.withShortName(""i"").withLongName(""ci"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,376,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,377,"oBuilder.withShortName(""l"").withLongName(""cl"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,378,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,379,"oBuilder.withShortName(""e"").withLongName(""ce"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,380,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,382,final Group options =
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,383,gBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,384,".withOption(oBuilder.withShortName(""file"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,385,.withOption(
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,386,oBuilder
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,387,".withShortName(""f"")"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,388,.withChildren(children)
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,389,.withArgument(aBuilder.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,390,.create())
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,391,".withOption(oBuilder.withShortName(""i"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,392,".withOption(oBuilder.withShortName(""l"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,393,".withOption(oBuilder.withShortName(""e"").create())"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,394,.create();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,396,"final CommandLine cl = buildCommandLine(options, args);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,397,"assertEquals(new String[] { ""-f"" }, cl);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,400,"public CommandLine buildCommandLine(final Group group, final String[] args)"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,401,throws OptionException {
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,402,Parser p = new Parser();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,403,p.setGroup(group);
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,404,return p.parse(args);
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,407,"public void assertEquals(final String options[], final CommandLine line) {"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,408,final List expected = Arrays.asList(options);
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,409,final Set actual = line.getOptionTriggers();
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,411,"//System.out.println(getName() + "": "" + actual);"
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,413,assertTrue(expected.containsAll(actual));
True,src/test/org/apache/commons/cli2/PrecedenceTest.java,src/test/org/apache/commons/cli2/PrecedenceTest.java,414,assertTrue(actual.containsAll(expected));
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,2,* Copyright 2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,16,package org.apache.commons.cli2;
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,18,import org.apache.commons.cli2.option.ArgumentTest;
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,21,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,23,* To change the template for this generated type comment go to
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,24,* Window - Preferences - Java - Code Generation - Code and Comments
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,26,public abstract class WriteableCommandLineTestCase extends CommandLineTestCase {
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,28,private WriteableCommandLine writeable;
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,30,protected abstract WriteableCommandLine createWriteableCommandLine();
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,32,/* (non-Javadoc)
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,33,* @see org.apache.commons.cli2.CommandLineTest#createCommandLine()
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,35,protected final CommandLine createCommandLine() {
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,36,final WriteableCommandLine writeable = createWriteableCommandLine();
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,37,writeable.addOption(present);
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,38,"writeable.addProperty(""present"",""present property"");"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,39,"writeable.addSwitch(bool,true);"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,40,"writeable.addValue(present,""present value"");"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,41,writeable.addOption(multiple);
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,42,"writeable.addValue(multiple,""value 1"");"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,43,"writeable.addValue(multiple,""value 2"");"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,44,"writeable.addValue(multiple,""value 3"");"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,45,return writeable;
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,49,* @see CommandLineTest#setUp()
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,51,public void setUp() throws Exception {
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,52,super.setUp();
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,53,writeable = createWriteableCommandLine();
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,55,public final void testAddOption() {
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,56,assertFalse(writeable.hasOption(present));
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,57,writeable.addOption(present);
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,58,assertTrue(writeable.hasOption(present));
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,60,public final void testAddValue() {
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,61,assertFalse(writeable.hasOption(present));
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,62,assertTrue(writeable.getValues(present).isEmpty());
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,63,"writeable.addValue(present,""value"");"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,64,"assertContentsEqual(list(""value""),writeable.getValues(present));"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,66,// most options shouldn't appear due to adding values
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,67,assertFalse(writeable.hasOption(present));
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,69,final Argument arg = ArgumentTest.buildHostArgument();
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,71,assertFalse(writeable.hasOption(arg));
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,72,assertTrue(writeable.getValues(arg).isEmpty());
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,73,"writeable.addValue(arg,""value"");"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,74,"assertContentsEqual(list(""value""),writeable.getValues(arg));"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,76,// Arguments should force the option present
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,77,assertTrue(writeable.hasOption(arg));
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,79,public final void testAddSwitch() {
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,80,assertFalse(writeable.hasOption(present));
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,81,assertNull(writeable.getSwitch(present));
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,82,"writeable.addSwitch(present,true);"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,83,"assertEquals(Boolean.TRUE,writeable.getSwitch(present));"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,84,assertTrue(writeable.hasOption(present));
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,86,public final void testAddProperty() {
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,87,"assertNull(writeable.getProperty(""present""));"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,88,"writeable.addProperty(""present"",""present value"");"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,89,"assertEquals(""present value"",writeable.getProperty(""present""));"
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,91,public final void testLooksLikeOption() {
True,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,src/test/org/apache/commons/cli2/WriteableCommandLineTestCase.java,92,//TODO Implement looksLikeOption().
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,16,package org.apache.commons.cli2.application;
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,18,import java.util.ArrayList;
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,19,import java.util.List;
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,21,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,23,import org.apache.commons.cli2.CommandLine;
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,24,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,25,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,26,import org.apache.commons.cli2.builder.ArgumentBuilder;
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,27,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,28,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,29,import org.apache.commons.cli2.commandline.Parser;
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,30,import org.apache.commons.cli2.option.PropertyOption;
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,32,//TODO Build up AntTest like CpTest
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,33,public class AntTest extends TestCase {
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,34,public void testAnt() throws OptionException {
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,35,final DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,36,final ArgumentBuilder abuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,37,final GroupBuilder gbuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,39,final Group options =
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,40,gbuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,41,".withName(""ant"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,42,.withOption(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,43,obuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,44,".withShortName(""help"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,45,".withDescription(""print this message"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,46,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,47,.withOption(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,48,obuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,49,".withShortName(""projecthelp"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,50,".withDescription(""print project help information"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,51,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,52,.withOption(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,53,obuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,54,".withShortName(""version"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,55,".withDescription(""print the version information and exit"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,56,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,57,.withOption(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,58,obuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,59,".withShortName(""diagnostics"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,60,".withDescription(""print information that might be helpful to diagnose or report problems."")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,61,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,62,.withOption(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,63,obuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,64,".withShortName(""quiet"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,65,".withShortName(""q"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,66,".withDescription(""be extra quiet"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,67,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,68,.withOption(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,69,obuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,70,".withShortName(""verbose"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,71,".withShortName(""v"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,72,".withDescription(""be extra verbose"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,73,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,74,.withOption(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,75,obuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,76,".withShortName(""debug"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,77,".withDescription(""print debugging information"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,78,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,79,.withOption(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,80,obuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,81,".withShortName(""emacs"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,82,".withDescription(""produce logging information without adornments"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,83,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,84,.withOption(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,85,obuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,86,".withShortName(""logfile"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,87,".withShortName(""l"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,88,".withDescription(""use given file for log"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,89,.withArgument(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,90,abuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,91,".withName(""file"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,92,.withMinimum(1)
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,93,.withMaximum(1)
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,94,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,95,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,96,.withOption(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,97,obuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,98,".withShortName(""logger"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,99,".withDescription(""the class which is to perform logging"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,100,.withArgument(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,101,abuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,102,".withName(""classname"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,103,.withMinimum(1)
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,104,.withMaximum(1)
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,105,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,106,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,107,.withOption(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,108,obuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,109,".withShortName(""listener"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,110,".withDescription(""add an instance of class as a project listener"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,111,.withArgument(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,112,abuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,113,".withName(""classname"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,114,.withMinimum(1)
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,115,.withMaximum(1)
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,116,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,117,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,118,.withOption(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,119,obuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,120,".withShortName(""buildfile"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,121,".withShortName(""file"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,122,".withShortName(""f"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,123,".withDescription(""use given buildfile"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,124,.withArgument(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,125,abuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,126,".withName(""file"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,127,.withMinimum(1)
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,128,.withMaximum(1)
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,129,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,130,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,131,.withOption(PropertyOption.INSTANCE)
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,132,.withOption(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,133,obuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,134,".withShortName(""propertyfile"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,135,".withDescription(""load all properties from file with -D properties taking precedence"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,136,.withArgument(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,137,abuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,138,".withName(""name"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,139,.withMinimum(1)
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,140,.withMaximum(1)
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,141,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,142,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,143,.withOption(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,144,obuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,145,".withShortName(""inputhandler"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,146,".withDescription(""the class which will handle input requests"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,147,.withArgument(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,148,abuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,149,".withName(""class"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,150,.withMinimum(1)
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,151,.withMaximum(1)
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,152,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,153,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,154,.withOption(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,155,obuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,156,".withShortName(""find"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,157,".withDescription(""search for buildfile towards the root of the filesystem and use it"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,158,.withArgument(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,159,abuilder
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,160,".withName(""file"")"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,161,.withMinimum(1)
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,162,.withMaximum(1)
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,163,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,164,.create())
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,165,".withOption(abuilder.withName(""target"").create())"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,166,.create();
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,168,Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,169,parser.setGroup(options);
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,170,CommandLine line =
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,171,parser.parse(
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,172,new String[] {
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,173,"""-buildfile"","
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,174,"""mybuild.xml"","
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,175,"""-Dproperty=value"","
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,176,"""-Dproperty1=value1"","
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,177,"""-projecthelp"","
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,178,"""compile"","
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,179,"""docs"" });"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,181,// check properties
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,182,"assertEquals(2, line.getProperties().size());"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,183,"assertEquals(""value"", line.getProperty(""property""));"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,184,"assertEquals(""value1"", line.getProperty(""property1""));"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,186,// check single values
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,187,"assertEquals(""mybuild.xml"", line.getValue(""-buildfile""));"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,188,"assertTrue(line.hasOption(""-projecthelp""));"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,189,"assertFalse(line.hasOption(""-help""));"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,191,"assertTrue(line.hasOption(""target""));"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,192,final List targets = new ArrayList();
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,193,"targets.add(""compile"");"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,194,"targets.add(""docs"");"
True,src/test/org/apache/commons/cli2/application/AntTest.java,src/test/org/apache/commons/cli2/application/AntTest.java,195,"assertEquals(targets, line.getValues(""target""));"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,16,package org.apache.commons.cli2.application;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,18,import java.io.BufferedReader;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,19,import java.io.IOException;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,20,import java.io.PrintWriter;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,21,import java.io.StringReader;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,22,import java.io.StringWriter;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,24,import junit.framework.Test;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,25,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,26,import junit.framework.TestSuite;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,28,import org.apache.commons.cli2.Argument;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,29,import org.apache.commons.cli2.CommandLine;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,30,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,31,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,32,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,33,import org.apache.commons.cli2.builder.ArgumentBuilder;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,34,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,35,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,36,import org.apache.commons.cli2.commandline.Parser;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,37,import org.apache.commons.cli2.option.ArgumentImpl;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,38,import org.apache.commons.cli2.option.SourceDestArgument;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,39,import org.apache.commons.cli2.util.HelpFormatter;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,42,* <p>Test the <code>cp</code> command. Duplicated Option types are not
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,43,* tested e.g. -a and -d are the same Option type.</p>
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,45,* <p>The following is the man output for 'cp'. See
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,46,* http://www.rt.com/man/cp.1.html.</p>
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,48,* <pre>
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,49,*  CP(1) FSF CP(1)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,51,*  NAME cp - copy files and directories
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,53,*  SYNOPSIS cp [OPTION]... SOURCE DEST cp [OPTION]... SOURCE... DIRECTORY
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,55,"*  DESCRIPTION Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY."
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,57,"*  -a, --archive same as -dpR"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,59,"*  -b, --backup make backup before removal"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,61,"*  -d, --no-dereference preserve links"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,63,"*  -f, --force remove existing destinations, never prompt"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,65,"*  -i, --interactive prompt before overwrite"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,67,"*  -l, --link link files instead of copying"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,69,"*  -p, --preserve preserve file attributes if possible"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,71,"*  -P, --parents append source path to DIRECTORY"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,72,"* -r copy recursively, non-directories as files"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,74,*  --sparse=WHEN control creation of sparse files
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,76,"*  -R, --recursive copy directories recursively"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,78,"*  -s, --symbolic-link make symbolic links instead of copying"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,80,"*  -S, --suffix=SUFFIX override the usual backup suffix"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,82,"*  -u, --update copy only when the SOURCE file is newer than the destination file or when the destination file is missing"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,84,"*  -v, --verbose explain what is being done"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,86,"*  -V, --version-control=WORD override the usual version control"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,88,"*  -x, --one-file-system stay on this file system"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,90,*  --help display this help and exit
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,92,*  --version output version information and exit
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,94,"*  By default, sparse SOURCE files are detected by a crude heuristic and the corresponding DEST file is made sparse as well. That is the behavior selected by --sparse=auto. Specify --sparse=always to create a sparse DEST file when- ever the SOURCE file contains a long enough sequence of zero bytes. Use --sparse=never to inhibit creation of sparse files."
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,96,"*  The backup suffix is ~, unless set with SIMPLE_BACKUP_SUF- FIX. The version control may be set with VERSION_CONTROL, values are:"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,97,"* t, numbered make numbered backups"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,99,"*  nil, existing numbered if numbered backups exist, simple other- wise"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,101,"*  never, simple always make simple backups"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,103,"*  As a special case, cp makes a backup of SOURCE when the force and backup options are given and SOURCE and DEST are the same name for an existing, regular file. * </pre>"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,104,* </pre>
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,106,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,107,* @author John Keyes
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,109,public class CpTest extends TestCase {
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,111,/** Option Builder */
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,112,private static final DefaultOptionBuilder oBuilder =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,113,new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,115,/** Argument Builder */
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,116,private static final ArgumentBuilder aBuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,118,/** Group Builder */
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,119,private static final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,121,private Group options;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,123,public static Test suite() {
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,124,return new TestSuite(CpTest.class);
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,127,private ArgumentImpl source;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,128,private ArgumentImpl dest;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,129,private Argument targets;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,131,private Option archive;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,132,private Option backup;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,133,private Option noDereference;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,134,private Option force;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,135,private Option interactive;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,136,private Option link;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,137,private Option preserve;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,138,private Option parents;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,139,private Option recursive1;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,140,private Option sparse;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,141,private Option recursive2;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,142,private Option symbolicLink;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,143,private Option suffix;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,144,private Option update;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,145,private Option verbose;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,146,private Option versionControl;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,147,private Option oneFileSystem;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,148,private Option help;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,149,private Option version;
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,151,public void setUp() {
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,152,source =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,153,"(ArgumentImpl)aBuilder.withName(""SOURCE"").withMinimum(1).create();"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,154,dest =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,155,(ArgumentImpl)aBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,156,".withName(""DEST"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,157,.withMinimum(1)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,158,.withMaximum(1)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,159,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,160,"targets = new SourceDestArgument(source, dest);"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,162,archive =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,163,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,164,".withShortName(""a"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,165,".withLongName(""archive"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,166,".withDescription(""same as -dpR"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,167,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,169,backup =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,170,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,171,".withShortName(""b"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,172,".withLongName(""backup"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,173,".withDescription(""make backup before removal"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,174,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,176,noDereference =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,177,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,178,".withShortName(""d"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,179,".withLongName(""no-dereference"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,180,".withDescription(""preserve links"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,181,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,183,force =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,184,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,185,".withShortName(""f"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,186,".withLongName(""force"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,187,".withDescription(""remove existing destinations, never prompt"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,188,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,190,interactive =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,191,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,192,".withShortName(""i"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,193,".withLongName(""interactive"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,194,".withDescription(""prompt before overwrite"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,195,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,197,link =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,198,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,199,".withShortName(""l"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,200,".withLongName(""link"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,201,".withDescription(""link files instead of copying"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,202,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,204,preserve =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,205,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,206,".withShortName(""p"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,207,".withLongName(""preserve"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,208,".withDescription(""preserve file attributes if possible"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,209,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,211,parents =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,212,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,213,".withShortName(""P"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,214,".withLongName(""parents"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,215,".withDescription(""append source path to DIRECTORY"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,216,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,218,recursive1 =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,219,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,220,".withShortName(""r"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,221,".withDescription(""copy recursively, non-directories as files"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,222,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,224,sparse =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,225,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,226,".withLongName(""sparse"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,227,".withDescription(""control creation of sparse files"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,228,.withArgument(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,229,aBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,230,".withName(""WHEN"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,231,.withMinimum(1)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,232,.withMaximum(1)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,233,.withInitialSeparator('=')
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,234,.create())
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,235,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,237,recursive2 =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,238,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,239,".withShortName(""R"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,240,".withLongName(""recursive"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,241,".withDescription(""copy directories recursively"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,242,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,244,symbolicLink =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,245,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,246,".withShortName(""s"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,247,".withLongName(""symbolic-link"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,248,".withDescription(""make symbolic links instead of copying"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,249,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,251,suffix =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,252,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,253,".withShortName(""S"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,254,".withLongName(""suffix"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,255,".withDescription(""override the usual backup suffix"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,256,.withArgument(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,257,aBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,258,".withName(""SUFFIX"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,259,.withMinimum(1)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,260,.withMaximum(1)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,261,.create())
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,262,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,264,update =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,265,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,266,".withShortName(""u"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,267,".withLongName(""update"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,268,".withDescription(""copy only when the SOURCE file is newer than the destination file or when the destination file is missing"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,269,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,271,verbose =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,272,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,273,".withShortName(""v"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,274,".withLongName(""verbose"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,275,".withDescription(""explain what is being done"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,276,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,278,versionControl =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,279,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,280,".withShortName(""V"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,281,".withLongName(""version-contol"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,282,".withDescription(""explain what is being done"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,283,.withArgument(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,284,aBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,285,".withName(""WORD"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,286,.withInitialSeparator('=')
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,287,.withMinimum(1)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,288,.withMaximum(1)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,289,.create())
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,290,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,292,oneFileSystem =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,293,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,294,".withShortName(""x"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,295,".withLongName(""one-file-system"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,296,".withDescription(""stay on this file system"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,297,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,299,help =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,300,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,301,".withLongName(""help"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,302,".withDescription(""display this help and exit"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,303,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,305,version =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,306,oBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,307,".withLongName(""version"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,308,".withDescription(""output version information and exit"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,309,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,311,options =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,312,gBuilder
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,313,.withOption(archive)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,314,.withOption(backup)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,315,.withOption(noDereference)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,316,.withOption(force)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,317,.withOption(interactive)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,318,.withOption(link)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,319,.withOption(preserve)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,320,.withOption(parents)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,321,.withOption(recursive1)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,322,.withOption(sparse)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,323,.withOption(recursive2)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,324,.withOption(symbolicLink)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,325,.withOption(suffix)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,326,.withOption(update)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,327,.withOption(verbose)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,328,.withOption(versionControl)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,329,.withOption(oneFileSystem)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,330,.withOption(help)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,331,.withOption(version)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,332,.withOption(targets)
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,333,".withName(""OPTIONS"")"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,334,.create();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,337,public void testNoSource() throws OptionException {
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,338,Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,339,parser.setGroup(options);
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,340,try {
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,341,parser.parse(new String[0]);
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,343,catch (OptionException mve) {
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,344,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,345,"""Missing value(s) SOURCE [SOURCE ...]"","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,346,mve.getMessage());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,350,public void testOneSource() throws OptionException {
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,351,"final String[] args = new String[] { ""source1"", ""dest1"" };"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,352,final Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,353,parser.setGroup(options);
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,354,final CommandLine commandLine = parser.parse(args);
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,356,"assertTrue(commandLine.getValues(source).contains(""source1""));"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,357,"assertEquals(1, commandLine.getValues(source).size());"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,358,"assertTrue(commandLine.getValues(dest).contains(""dest1""));"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,359,"assertEquals(1, commandLine.getValues(dest).size());"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,362,public void testMultiSource() throws OptionException {
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,363,final String[] args =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,364,"new String[] { ""source1"", ""source2"", ""source3"", ""dest1"" };"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,365,final Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,366,parser.setGroup(options);
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,367,final CommandLine commandLine = parser.parse(args);
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,369,"assertTrue(commandLine.getValues(source).contains(""source1""));"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,370,"assertTrue(commandLine.getValues(source).contains(""source2""));"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,371,"assertTrue(commandLine.getValues(source).contains(""source3""));"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,372,"assertEquals(3, commandLine.getValues(source).size());"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,374,"assertTrue(commandLine.getValues(dest).contains(""dest1""));"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,375,"assertEquals(1, commandLine.getValues(dest).size());"
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,378,public void testHelp() throws IOException {
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,379,final StringWriter out = new StringWriter();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,380,final HelpFormatter helpFormatter = new HelpFormatter();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,381,helpFormatter.setGroup(options);
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,382,helpFormatter.setPrintWriter(new PrintWriter(out));
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,383,helpFormatter.print();
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,385,final BufferedReader in =
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,386,new BufferedReader(new StringReader(out.toString()));
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,387,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,388,"""Usage:                                                                          "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,389,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,390,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,391,""" [-a -b -d -f -i -l -p -P -r --sparse <WHEN> -R -s -S <SUFFIX> -u -v -V <WORD>  "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,392,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,393,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,394,"""-x --help --version] <SOURCE1> [<SOURCE2> ...] <DEST>                           "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,395,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,396,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,397,"""OPTIONS                                                                         "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,398,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,399,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,400,"""  -a (--archive)            same as -dpR                                        "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,401,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,402,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,403,"""  -b (--backup)             make backup before removal                          "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,404,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,405,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,406,"""  -d (--no-dereference)     preserve links                                      "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,407,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,408,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,409,"""  -f (--force)              remove existing destinations, never prompt          "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,410,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,411,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,412,"""  -i (--interactive)        prompt before overwrite                             "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,413,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,414,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,415,"""  -l (--link)               link files instead of copying                       "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,416,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,417,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,418,"""  -p (--preserve)           preserve file attributes if possible                "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,419,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,420,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,421,"""  -P (--parents)            append source path to DIRECTORY                     "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,422,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,423,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,424,"""  -r                        copy recursively, non-directories as files          "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,425,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,426,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,427,"""  --sparse                  control creation of sparse files                    "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,428,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,429,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,430,"""  -R (--recursive)          copy directories recursively                        "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,431,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,432,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,433,"""  -s (--symbolic-link)      make symbolic links instead of copying              "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,434,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,435,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,436,"""  -S (--suffix)             override the usual backup suffix                    "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,437,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,438,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,439,"""  -u (--update)             copy only when the SOURCE file is newer than the    "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,440,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,441,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,442,"""                            destination file or when the destination file is    "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,443,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,444,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,445,"""                            missing                                             "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,446,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,447,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,448,"""  -v (--verbose)            explain what is being done                          "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,449,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,450,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,451,"""  -V (--version-contol)     explain what is being done                          "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,452,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,453,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,454,"""  -x (--one-file-system)    stay on this file system                            "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,455,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,456,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,457,"""  --help                    display this help and exit                          "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,458,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,459,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,460,"""  --version                 output version information and exit                 "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,461,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,462,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,463,"""  SOURCE [SOURCE ...]                                                           "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,464,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,465,assertEquals(
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,466,"""  DEST                                                                          "","
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,467,in.readLine());
True,src/test/org/apache/commons/cli2/application/CpTest.java,src/test/org/apache/commons/cli2/application/CpTest.java,468,assertNull(in.readLine());
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,16,package org.apache.commons.cli2.application;
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,18,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,20,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,21,import org.apache.commons.cli2.builder.ArgumentBuilder;
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,22,import org.apache.commons.cli2.builder.CommandBuilder;
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,23,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,24,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,25,import org.apache.commons.cli2.option.ArgumentTest;
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,27,//TODO Build up CvsTest like CpTest
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,28,public class CvsTest extends TestCase {
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,29,public void testCVS() {
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,30,final DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,31,final ArgumentBuilder abuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,32,final CommandBuilder cbuilder = new CommandBuilder();
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,33,final GroupBuilder gbuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,35,final Group commands =
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,36,gbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,37,".withName(""commands"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,38,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,39,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,40,".withName(""add"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,41,".withName(""ad"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,42,".withName(""new"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,43,".withDescription(""Add a new file/directory to the repository"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,44,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,45,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,46,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,47,".withName(""admin"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,48,".withName(""adm"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,49,".withName(""rcs"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,50,".withDescription(""Administration front end for rcs"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,51,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,52,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,53,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,54,".withName(""annotate"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,55,".withName(""ann"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,56,".withDescription(""Show last revision where each line was modified"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,57,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,58,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,59,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,60,".withName(""checkout"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,61,".withName(""co"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,62,".withName(""get"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,63,".withDescription(""Checkout sources for editing"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,64,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,65,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,66,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,67,".withName(""commit"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,68,".withName(""ci"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,69,".withName(""com"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,70,".withDescription(""Check files into the repository"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,71,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,72,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,73,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,74,".withName(""diff"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,75,".withName(""di"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,76,".withName(""dif"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,77,".withDescription(""Show differences between revisions"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,78,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,79,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,80,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,81,".withName(""edit"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,82,".withDescription(""Get ready to edit a watched file"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,83,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,84,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,85,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,86,".withName(""editors"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,87,".withDescription(""See who is editing a watched file"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,88,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,89,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,90,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,91,".withName(""export"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,92,".withName(""exp"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,93,".withName(""ex"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,94,".withDescription(""Export sources from CVS, similar to checkout"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,95,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,96,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,97,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,98,".withName(""history"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,99,".withName(""hi"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,100,".withName(""his"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,101,".withDescription(""Show repository access history"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,102,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,103,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,104,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,105,".withName(""import"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,106,".withName(""im"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,107,".withName(""imp"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,108,".withDescription(""Import sources into CVS, using vendor branches"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,109,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,110,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,111,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,112,".withName(""init"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,113,".withDescription(""Create a CVS repository if it doesn't exist"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,114,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,115,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,116,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,117,".withName(""log"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,118,".withName(""lo"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,119,".withName(""rlog"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,120,".withDescription(""Print out history information for files"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,121,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,122,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,123,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,124,".withName(""login"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,125,".withName(""logon"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,126,".withName(""lgn"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,127,".withDescription(""Prompt for password for authenticating server"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,128,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,129,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,130,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,131,".withName(""logout"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,132,".withDescription(""Removes entry in .cvspass for remote repository"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,133,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,134,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,135,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,136,".withName(""rdiff"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,137,".withName(""patch"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,138,".withName(""pa"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,139,".withDescription(""Create 'patch' format diffs between releases"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,140,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,141,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,142,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,143,".withName(""release"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,144,".withName(""re"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,145,".withName(""rel"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,146,".withDescription(""Indicate that a Module is no longer in use"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,147,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,148,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,149,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,150,".withName(""remove"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,151,".withName(""rm"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,152,".withName(""delete"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,153,".withDescription(""Remove an entry from the repository"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,154,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,155,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,156,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,157,".withName(""rtag"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,158,".withName(""rt"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,159,".withName(""rfreeze"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,160,".withDescription(""Add a symbolic tag to a module"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,161,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,162,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,163,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,164,".withName(""status"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,165,".withName(""st"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,166,".withName(""stat"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,167,".withDescription(""Display status information on checked out files"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,168,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,169,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,170,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,171,".withName(""tag"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,172,".withName(""ta"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,173,".withName(""freeze"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,174,".withDescription(""Add a symbolic tag to checked out version of files"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,175,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,176,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,177,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,178,".withName(""unedit"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,179,".withDescription(""Undo an edit command"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,180,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,181,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,182,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,183,".withName(""update"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,184,".withName(""up"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,185,".withName(""upd"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,186,".withDescription(""Bring work tree in sync with repository"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,187,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,188,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,189,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,190,".withName(""watch"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,191,".withDescription(""Set watches"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,192,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,193,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,194,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,195,".withName(""watchers"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,196,".withDescription(""See who is watching a file"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,197,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,198,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,199,cbuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,200,".withName(""version"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,201,".withName(""ve"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,202,".withName(""ver"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,203,".withDescription(""????"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,204,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,205,.withOption(ArgumentTest.buildTargetsArgument())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,206,.create();
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,208,final Group cvsOptions =
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,209,new GroupBuilder()
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,210,".withName(""cvs-options"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,211,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,212,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,213,".withShortName(""H"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,214,".withDescription(""Displays usage information for command."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,215,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,216,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,217,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,218,".withShortName(""Q"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,219,".withDescription(""Cause CVS to be really quiet."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,220,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,221,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,222,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,223,".withShortName(""q"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,224,".withDescription(""Cause CVS to be somewhat quiet."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,225,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,226,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,227,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,228,".withShortName(""r"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,229,".withDescription(""Make checked-out files read-only."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,230,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,231,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,232,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,233,".withShortName(""w"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,234,".withDescription(""Make checked-out files read-write (default)."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,235,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,236,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,237,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,238,".withShortName(""l"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,239,".withDescription(""Turn history logging off."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,240,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,241,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,242,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,243,".withShortName(""n"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,244,".withDescription(""Do not execute anything that will change the disk."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,245,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,246,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,247,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,248,".withShortName(""t"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,249,".withDescription(""Show trace of program execution -- try with -n."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,250,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,251,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,252,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,253,".withShortName(""v"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,254,".withDescription(""CVS version and copyright."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,255,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,256,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,257,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,258,".withLongName(""crlf"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,259,".withDescription(""Use the Dos line feed for text files (default)."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,260,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,261,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,262,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,263,".withLongName(""lf"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,264,".withDescription(""Use the Unix line feed for text files."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,265,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,266,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,267,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,268,".withShortName(""T"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,269,".withDescription(""Use 'tmpdir' for temporary files."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,270,".withArgument(abuilder.withName(""tmpdir"").create())"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,271,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,272,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,273,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,274,".withShortName(""e"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,275,".withDescription(""Use 'editor' for editing log information."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,276,".withArgument(abuilder.withName(""editor"").create())"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,277,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,278,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,279,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,280,".withShortName(""d"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,281,".withDescription(""Overrides $CVSROOT as the root of the CVS tree."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,282,".withArgument(abuilder.withName(""CVS_root"").create())"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,283,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,284,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,285,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,286,".withShortName(""f"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,287,".withDescription(""Do not use the ~/.cvsrc file."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,288,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,289,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,290,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,291,".withShortName(""z"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,292,".withDescription(""Use compression level '#' for net traffic."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,293,".withArgument(abuilder.withName(""#"").create())"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,294,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,295,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,296,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,297,".withShortName(""a"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,298,".withDescription(""Authenticate all net traffic."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,299,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,300,.withOption(
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,301,obuilder
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,302,".withShortName(""s"")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,303,".withDescription(""Set CVS user variable."")"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,304,".withArgument(abuilder.withName(""VAR=VAL"").create())"
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,305,.create())
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,306,.withOption(commands)
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,307,.create();
True,src/test/org/apache/commons/cli2/application/CvsTest.java,src/test/org/apache/commons/cli2/application/CvsTest.java,309,assertNotNull(cvsOptions);
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,16,package org.apache.commons.cli2.application;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,18,import java.util.HashSet;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,19,import java.util.Set;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,21,import junit.framework.Test;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,22,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,23,import junit.framework.TestSuite;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,25,import org.apache.commons.cli2.CommandLine;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,26,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,27,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,28,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,29,import org.apache.commons.cli2.builder.ArgumentBuilder;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,30,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,31,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,32,import org.apache.commons.cli2.commandline.Parser;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,33,import org.apache.commons.cli2.validation.EnumValidator;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,36,* <p>Test the <code>ls</code> command. Duplicated Option types are not
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,37,* tested e.g. -a and -d are the same Option type.</p>
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,39,* <p>The following is the man output for 'ls'. See
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,40,* http://www.rt.com/man/ls.1.html.</p>
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,42,* <pre>
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,43,*  LS(1) FSF LS(1)
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,45,*  NAME ls - list directory contents
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,47,*  SYNOPSIS ls [OPTION]... [FILE]...
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,49,*  DESCRIPTION List information about the FILEs (the current directory by default). Sort entries alphabetically if none of -cftuSUX nor --sort.
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,51,"*  -a, --all do not hide entries starting with ."
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,53,"*  -A, --almost-all do not list implied . and .."
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,55,"*  -b, --escape print octal escapes for nongraphic characters"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,57,*  --block-size=SIZE use SIZE-byte blocks
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,59,"*  -B, --ignore-backups do not list implied entries ending with ~ -c sort by change time; with -l: show ctime -C list entries by columns"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,61,"*  --color[=WHEN] control whether color is used to distinguish file types. WHEN may be `never', `always', or `auto'"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,63,"*  -d, --directory list directory entries instead of contents"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,65,"*  -D, --dired generate output designed for Emacs' dired mode -f do not sort, enable -aU, disable -lst"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,67,"*  -F, --classify append indicator (one of /=@|*) to entries"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,69,"*  --format=WORD across -x, commas -m, horizontal -x, long -l, sin- gle-column -1, verbose -l, vertical -C"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,71,*  --full-time list both full date and full time -g (ignored)
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,73,"*  -G, --no-group inhibit display of group information"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,75,"*  -h, --human-readable print sizes in human readable format (e.g., 1K 234M 2G)"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,77,"*  -H, --si likewise, but use powers of 1000 not 1024"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,79,"*  --indicator-style=WORD append indicator with style WORD to entry names: none (default), classify (-F), file-type (-p)"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,81,"*  -i, --inode print index number of each file"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,83,"*  -I, --ignore=PATTERN do not list implied entries matching shell PATTERN"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,85,"*  -k, --kilobytes like --block-size=1024 -l use a long listing format"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,87,"*  -L, --dereference list entries pointed to by symbolic links -m fill width with a comma separated list of entries"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,89,"*  -n, --numeric-uid-gid list numeric UIDs and GIDs instead of names"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,91,"*  -N, --literal print raw entry names (don't treat e.g. control characters specially) -o use long listing format without group info"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,93,"*  -p, --file-type append indicator (one of /=@|) to entries"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,95,"*  -q, --hide-control-chars print ? instead of non graphic characters"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,97,*  --show-control-chars show non graphic characters as-is (default)
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,99,"*  -Q, --quote-name enclose entry names in double quotes"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,101,"*  --quoting-style=WORD use quoting style WORD for entry names: literal, shell, shell-always, c, escape"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,103,"*  -r, --reverse reverse order while sorting"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,105,"*  -R, --recursive list subdirectories recursively"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,107,"*  -s, --size print size of each file, in blocks -S sort by file size"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,109,"*  --sort=WORD extension -X, none -U, size -S, time -t, version -v status -c, time -t, atime -u, access -u, use -u"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,111,"*  --time=WORD show time as WORD instead of modification time: atime, access, use, ctime or status; use specified time as sort key if --sort=time -t sort by modification time"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,113,"*  -T, --tabsize=COLS assume tab stops at each COLS instead of 8 -u sort by last access time; with -l: show atime -U do not sort; list entries in directory order -v sort by version"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,115,"*  -w, --width=COLS assume screen width instead of current value -x list entries by lines instead of by columns -X sort alphabetically by entry extension -1 list one file per line"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,117,*  --help display this help and exit
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,119,*  --version output version information and exit
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,121,"*  By default, color is not used to distinguish types of files. That is equivalent to using --color=none. Using the --color option without the optional WHEN argument is equivalent to using --color=always. With --color=auto, color codes are output only if standard output is con- nected to a terminal (tty)."
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,122,* </pre>
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,124,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,125,* @author John Keyes
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,127,public class LsTest extends TestCase {
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,129,/** Option Builder */
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,130,private static final DefaultOptionBuilder oBuilder =
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,131,new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,133,/** Argument Builder */
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,134,private static final ArgumentBuilder aBuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,136,/** Group Builder */
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,137,private static final GroupBuilder gBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,139,private static Group options;
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,141,public static Test suite() {
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,142,return new TestSuite(LsTest.class);
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,146,* Required ctor.
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,148,* @param name
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,149,*            the name of the TestCase
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,151,public LsTest(final String name) {
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,152,super(name);
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,155,public void setUp() {
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,156,if (LsTest.options == null) {
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,157,final Option a =
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,158,oBuilder
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,159,".withShortName(""a"")"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,160,".withLongName(""all"")"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,161,".withDescription(""do not hide entries starting with ."")"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,162,.create();
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,164,final Option blockSize =
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,165,oBuilder
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,166,".withLongName(""block-size"")"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,167,.withRequired(false)
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,168,".withDescription(""use SIZE-byte blocks"")"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,169,.withArgument(
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,170,aBuilder
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,171,.withMaximum(1)
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,172,.withMinimum(1)
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,173,.withInitialSeparator('=')
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,174,.create())
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,175,.create();
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,177,final Option c =
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,178,oBuilder
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,179,".withShortName(""c"")"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,180,.withRequired(false)
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,181,".withDescription(""with -lt: sort by, and show, ctime (time of last modification of file status information) with -l:show ctime and sort by name otherwise: sort by ctime"")"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,182,.create();
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,184,final Set colors = new HashSet();
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,185,"colors.add(""never"");"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,186,"colors.add(""always"");"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,187,"colors.add(""auto"");"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,188,final Option color =
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,189,oBuilder
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,190,".withLongName(""color"")"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,191,.withRequired(false)
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,192,".withDescription(""control  whether  color is used to distinguish file types.  WHEN may be `never', `always', or `auto'"")"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,193,.withArgument(
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,194,aBuilder
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,195,.withMaximum(1)
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,196,.withMinimum(1)
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,197,.withInitialSeparator('=')
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,198,.withValidator(new EnumValidator(colors))
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,199,.create())
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,200,.create();
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,202,LsTest.options =
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,203,gBuilder
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,204,.withOption(a)
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,205,.withOption(blockSize)
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,206,.withOption(c)
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,207,.withOption(color)
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,208,.create();
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,212,public void testLs() throws OptionException {
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,213,// create the command line parser
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,214,Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,215,parser.setGroup(options);
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,216,CommandLine line =
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,217,"parser.parse(new String[] { ""--block-size=10"", ""--color=never"" });"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,219,"assertTrue(line.hasOption(""--block-size""));"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,220,"assertEquals(line.getValue(""--block-size""), ""10"");"
True,src/test/org/apache/commons/cli2/application/LsTest.java,src/test/org/apache/commons/cli2/application/LsTest.java,221,"assertFalse(line.hasOption(""--ignore-backups""));"
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,16,package org.apache.commons.cli2.bug;
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,18,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,20,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,21,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,22,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,23,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,24,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,25,import org.apache.commons.cli2.commandline.Parser;
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,28,* @author John Keyes
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,30,public class Bug13886Test extends TestCase {
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,32,public Bug13886Test(final String name) {
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,33,super(name);
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,36,public void testMandatoryGroup() throws Exception {
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,37,final DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,38,final GroupBuilder gbuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,40,"final Option a = obuilder.withShortName(""a"").create();"
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,42,"final Option b = obuilder.withShortName(""b"").create();"
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,44,final Group options =
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,45,gbuilder
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,46,.withOption(a)
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,47,.withOption(b)
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,48,.withMaximum(1)
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,49,.withMinimum(1)
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,50,.create();
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,52,final Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,53,parser.setGroup(options);
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,55,try {
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,56,parser.parse(new String[] {
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,58,"fail(""Expected MissingOptionException not caught"");"
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,60,catch (final OptionException exp) {
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,61,"assertEquals(""Missing option -a|-b"", exp.getMessage());"
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,64,try {
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,65,"parser.parse(new String[] { ""-a"" });"
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,67,catch (final OptionException exp) {
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,68,"fail(""Unexpected MissingOptionException caught"");"
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,71,try {
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,72,"parser.parse(new String[] { ""-b"" });"
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,74,catch (final OptionException exp) {
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,75,"fail(""Unexpected MissingOptionException caught"");"
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,78,try {
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,79,"parser.parse(new String[] { ""-a"", ""-b"" });"
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,80,"fail(""Expected UnexpectedOptionException not caught"");"
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,82,catch (final OptionException exp) {
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,83,assertEquals(
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,84,"""Unexpected -b while processing -a|-b"","
True,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,src/test/org/apache/commons/cli2/bug/Bug13886Test.java,85,exp.getMessage());
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,16,package org.apache.commons.cli2.bug;
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,18,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,20,import org.apache.commons.cli2.CommandLine;
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,21,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,22,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,23,import org.apache.commons.cli2.builder.ArgumentBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,24,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,25,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,26,import org.apache.commons.cli2.commandline.Parser;
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,29,* @author John Keyes
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,31,public class Bug13935Test extends TestCase {
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,33,public Bug13935Test(final String name) {
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,34,super(name);
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,37,public void testRequiredGroup() throws Exception {
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,38,final DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,39,final ArgumentBuilder abuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,40,final GroupBuilder gbuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,42,final Option testOption =
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,43,obuilder
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,44,".withShortName(""a"")"
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,45,".withArgument(abuilder.withName(""quoted string"").create())"
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,46,.create();
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,48,final Group options = gbuilder.withOption(testOption).create();
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,50,final Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,51,parser.setGroup(options);
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,53,final CommandLine cmdLine =
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,54,"parser.parse(new String[] { ""-a"", ""\""two tokens\"""" });"
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,56,"assertTrue(cmdLine.hasOption(""-a""));"
True,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,src/test/org/apache/commons/cli2/bug/Bug13935Test.java,57,"assertEquals(""two tokens"", cmdLine.getValue(""-a""));"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,16,package org.apache.commons.cli2.bug;
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,18,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,20,import org.apache.commons.cli2.CommandLine;
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,21,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,22,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,23,import org.apache.commons.cli2.builder.ArgumentBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,24,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,25,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,26,import org.apache.commons.cli2.commandline.Parser;
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,29,* @author John Keyes
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,31,public class Bug15046Test extends TestCase {
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,33,public Bug15046Test(String name) {
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,34,super(name);
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,37,public void testParamNamedAsOption() throws Exception {
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,38,"final String[] CLI_ARGS = new String[] { ""-z"", ""c"" };"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,40,DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,41,ArgumentBuilder abuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,43,Option option =
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,44,obuilder
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,45,".withShortName(""z"")"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,46,".withLongName(""timezone"")"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,47,".withDescription(""affected option"")"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,48,".withArgument(abuilder.withName(""timezone"").create())"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,49,.create();
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,51,GroupBuilder gbuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,52,Group options =
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,53,"gbuilder.withName(""bug15046"").withOption(option).create();"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,55,Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,56,parser.setGroup(options);
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,57,CommandLine line = parser.parse(CLI_ARGS);
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,59,"assertEquals(""c"", line.getValue(""-z""));"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,61,Option c =
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,62,obuilder
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,63,".withShortName(""c"")"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,64,".withLongName(""conflict"")"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,65,".withDescription(""conflicting option"")"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,66,".withArgument(abuilder.withName(""conflict"").create())"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,67,.create();
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,69,options =
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,70,gbuilder
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,71,".withName(""bug15046"")"
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,72,.withOption(option)
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,73,.withOption(c)
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,74,.create();
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,76,parser.setGroup(options);
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,77,line = parser.parse(CLI_ARGS);
True,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,src/test/org/apache/commons/cli2/bug/Bug15046Test.java,79,"assertEquals(""c"", line.getValue(""-z""));"
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,16,package org.apache.commons.cli2.bug;
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,18,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,20,import org.apache.commons.cli2.CommandLine;
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,21,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,22,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,23,import org.apache.commons.cli2.builder.ArgumentBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,24,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,25,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,26,import org.apache.commons.cli2.commandline.Parser;
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,29,* @author John Keyes
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,31,public class Bug15648Test extends TestCase {
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,33,public Bug15648Test(final String name) {
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,34,super(name);
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,37,public void testQuotedArgumentValue() throws Exception {
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,38,final DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,39,final ArgumentBuilder abuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,40,final GroupBuilder gbuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,42,final Option testOption =
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,43,obuilder
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,44,".withShortName(""a"")"
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,45,".withArgument(abuilder.withName(""quoted string"").create())"
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,46,.create();
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,48,final Group options = gbuilder.withOption(testOption).create();
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,50,final Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,51,parser.setGroup(options);
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,53,final CommandLine cmdLine =
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,54,"parser.parse(new String[] { ""-a"", ""\""two tokens\"""" });"
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,56,"assertTrue(cmdLine.hasOption(""-a""));"
True,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,src/test/org/apache/commons/cli2/bug/Bug15648Test.java,57,"assertEquals(""two tokens"", cmdLine.getValue(""-a""));"
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,16,package org.apache.commons.cli2.bug;
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,18,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,20,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,22,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,23,import org.apache.commons.cli2.builder.PatternBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,24,import org.apache.commons.cli2.option.GroupImpl;
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,26,public class Bug27575Test extends TestCase {
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,28,public void testRequiredOptions(){
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,29,PatternBuilder builder = new PatternBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,30,"builder.withPattern(""hc!<"");"
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,31,Option option = builder.create();
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,32,assertTrue(option instanceof GroupImpl);
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,34,GroupImpl group = (GroupImpl)option;
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,35,Iterator i = group.getOptions().iterator();
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,36,"assertEquals(""[-h]"",i.next().toString());"
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,37,"assertEquals(""-c <arg>"",i.next().toString());"
True,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,src/test/org/apache/commons/cli2/bug/Bug27575Test.java,38,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,2,* Copyright 2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,16,package org.apache.commons.cli2.bug;
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,18,import org.apache.commons.cli2.Argument;
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,19,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,20,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,21,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,22,import org.apache.commons.cli2.builder.ArgumentBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,23,import org.apache.commons.cli2.builder.CommandBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,24,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,25,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,26,import org.apache.commons.cli2.commandline.Parser;
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,27,import org.apache.commons.cli2.option.Command;
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,28,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,30,public class Bug28005Test extends TestCase {
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,31,public void testInfiniteLoop() {
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,32,final DefaultOptionBuilder optionBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,33,final ArgumentBuilder argumentBuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,34,final GroupBuilder groupBuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,35,final CommandBuilder commandBuilder = new CommandBuilder();
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,37,final Option inputFormatOption =
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,38,optionBuilder
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,39,".withLongName(""input-format"")"
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,40,//.withArgument(argumentBuilder.create())
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,41,.create();
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,43,final Argument argument =
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,44,argumentBuilder
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,45,".withName(""file"")"
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,46,.create();
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,48,final Group children =
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,49,groupBuilder
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,50,".withName(""options"")"
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,51,.withOption(inputFormatOption)
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,52,.create();
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,54,final Option command =
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,55,commandBuilder
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,56,".withName(""convert"")"
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,57,.withChildren(children)
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,58,.withArgument(argument)
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,59,.create();
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,61,final Group root =
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,62,groupBuilder
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,63,".withName(""commands"")"
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,64,.withOption(command)
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,65,.create();
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,67,final Parser parser = new Parser();
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,68,parser.setGroup(root);
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,69,"final String[] args = new String[]{""convert"", ""test.txt"","
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,70,"""--input-format"", ""a""};"
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,72,try {
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,73,parser.parse(args);
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,74,"fail(""a isn't valid!!"");"
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,75,} catch (OptionException e) {
True,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,src/test/org/apache/commons/cli2/bug/Bug28005Test.java,76,"assertEquals(""Unexpected a while processing commands"",e.getMessage());"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,2,* Copyright 2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,16,package org.apache.commons.cli2.builder;
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,18,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,20,import org.apache.commons.cli2.Argument;
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,21,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,22,import org.apache.commons.cli2.option.DefaultOption;
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,25,public class DefaultOptionBuilderTest extends TestCase {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,27,private DefaultOptionBuilder defaultOptionBuilder;
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,30,* @see TestCase#setUp()
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,32,protected void setUp() throws Exception {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,33,this.defaultOptionBuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,37,"* Class to test for void DefaultOptionBuilder(String, String, boolean)"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,39,public void testCtor() {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,41,try {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,42,"DefaultOptionBuilder builder = new DefaultOptionBuilder(null, null,"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,43,false);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,44,"fail(""null short prefix is not permitted"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,46,catch(IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,51,try {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,52,"DefaultOptionBuilder builder = new DefaultOptionBuilder("""", null,"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,53,false);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,54,"fail(""empty short prefix is not permitted"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,56,catch(IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,61,try {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,62,"DefaultOptionBuilder builder = new DefaultOptionBuilder(""-"", null,"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,63,false);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,64,"fail(""null long prefix is not permitted"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,66,catch(IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,71,try {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,72,"DefaultOptionBuilder builder = new DefaultOptionBuilder(""-"", """","
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,73,false);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,74,"fail(""empty long prefix is not permitted"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,76,catch(IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,81,public void testCreate() {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,82,try {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,83,this.defaultOptionBuilder.create();
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,84,"fail(""options must have a name"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,86,catch (IllegalStateException exp) {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,90,"this.defaultOptionBuilder.withShortName(""j"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,91,this.defaultOptionBuilder.create();
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,95,"this.defaultOptionBuilder.withLongName(""jkeyes"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,96,this.defaultOptionBuilder.create();
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,100,"DefaultOptionBuilder builder = new DefaultOptionBuilder(""-"", ""--"","
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,101,true);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,102,"builder.withShortName(""mx"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,109,public void testName() {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,110,// withLongName && this.preferred != null
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,112,"this.defaultOptionBuilder.withShortName(""a"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,113,"this.defaultOptionBuilder.withLongName(""apples"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,116,// withShortName && this.preferred != null
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,118,"this.defaultOptionBuilder.withLongName(""apples"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,119,"this.defaultOptionBuilder.withShortName(""a"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,122,// withShortName && this.preferred != null
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,124,"this.defaultOptionBuilder.withLongName(""apples"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,125,"this.defaultOptionBuilder.withShortName(""a"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,130,public void testWithDescription() {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,131,"String description = ""desc"";"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,132,"this.defaultOptionBuilder.withShortName(""a"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,133,this.defaultOptionBuilder.withDescription(description);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,134,DefaultOption opt = this.defaultOptionBuilder.create();
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,135,"assertEquals(""wrong description found"", description,"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,136,opt.getDescription());
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,139,public void testWithRequired() {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,141,boolean required = false;
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,142,"this.defaultOptionBuilder.withShortName(""a"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,143,this.defaultOptionBuilder.withRequired(required);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,144,DefaultOption opt = this.defaultOptionBuilder.create();
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,145,"assertEquals(""wrong required found"", required,"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,146,opt.isRequired());
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,150,boolean required = true;
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,151,"this.defaultOptionBuilder.withShortName(""a"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,152,this.defaultOptionBuilder.withRequired(required);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,153,DefaultOption opt = this.defaultOptionBuilder.create();
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,154,"assertEquals(""wrong required found"", required,"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,155,opt.isRequired());
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,159,public void testWithChildren() {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,160,GroupBuilder gbuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,162,"this.defaultOptionBuilder.withShortName(""a"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,163,this.defaultOptionBuilder.withRequired(true);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,164,DefaultOption opt = this.defaultOptionBuilder.create();
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,166,Group group =
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,167,"gbuilder.withName(""withchildren"")"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,168,.withOption(opt)
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,169,.create();
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,171,"this.defaultOptionBuilder.withShortName(""b"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,172,this.defaultOptionBuilder.withChildren(group);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,173,DefaultOption option = this.defaultOptionBuilder.create();
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,174,"assertEquals(""wrong children found"", group, option.getChildren());"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,178,public void testWithArgument() {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,179,ArgumentBuilder abuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,180,"abuilder.withName(""myarg"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,181,Argument arg = abuilder.create();
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,183,"this.defaultOptionBuilder.withShortName(""a"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,184,this.defaultOptionBuilder.withRequired(true);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,185,this.defaultOptionBuilder.withArgument(arg);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,186,DefaultOption opt = this.defaultOptionBuilder.create();
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,188,"assertEquals(""wrong argument found"", arg, opt.getArgument());"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,191,public void testWithId() {
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,192,"this.defaultOptionBuilder.withShortName(""a"");"
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,193,this.defaultOptionBuilder.withId(0);
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,194,DefaultOption opt = this.defaultOptionBuilder.create();
True,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,src/test/org/apache/commons/cli2/builder/DefaultOptionBuilderTest.java,196,"assertEquals(""wrong id found"", 0, opt.getId());"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,2,* Copyright 2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,16,package org.apache.commons.cli2.commandline;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,18,import java.util.ArrayList;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,19,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,21,import org.apache.commons.cli2.CommandLine;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,22,import org.apache.commons.cli2.CommandLineTestCase;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,23,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,24,import org.apache.commons.cli2.WriteableCommandLine;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,25,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,28,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,30,* To change the template for this generated type comment go to
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,31,* Window - Preferences - Java - Code Generation - Code and Comments
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,33,public class DefaultingCommandLineTest extends CommandLineTestCase {
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,35,private DefaultingCommandLine defaults;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,37,private CommandLine first;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,38,private CommandLine second;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,40,"private Option inFirst = new DefaultOptionBuilder().withLongName(""infirst"").create();"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,41,"private Option inBoth = new DefaultOptionBuilder().withLongName(""inboth"").create();"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,42,"private Option inSecond = new DefaultOptionBuilder().withLongName(""insecond"").create();"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,44,/* (non-Javadoc)
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,45,* @see org.apache.commons.cli2.CommandLineTest#createCommandLine()
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,47,protected final CommandLine createCommandLine() {
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,48,"final WriteableCommandLine writeable = new WriteableCommandLineImpl(root,new ArrayList());"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,49,writeable.addOption(present);
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,50,"writeable.addProperty(""present"",""present property"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,51,"writeable.addSwitch(bool,true);"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,52,"writeable.addValue(present,""present value"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,53,writeable.addOption(multiple);
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,54,"writeable.addValue(multiple,""value 1"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,55,"writeable.addValue(multiple,""value 2"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,56,"writeable.addValue(multiple,""value 3"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,58,final DefaultingCommandLine defaults = new DefaultingCommandLine();
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,59,defaults.appendCommandLine(writeable);
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,60,return defaults;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,63,public void setUp() throws Exception{
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,64,super.setUp();
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,66,WriteableCommandLine writeable;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,68,"writeable = new WriteableCommandLineImpl(root,new ArrayList());"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,69,writeable.addOption(inFirst);
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,70,writeable.addOption(inBoth);
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,71,"writeable.addProperty(""infirst"",""infirst first value"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,72,"writeable.addProperty(""inboth"",""inboth first value"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,73,"writeable.addSwitch(inFirst,true);"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,74,"writeable.addSwitch(inBoth,true);"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,75,"writeable.addValue(inFirst,""infirst first value 1"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,76,"writeable.addValue(inFirst,""infirst first value 2"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,77,"writeable.addValue(inBoth,""inboth first value 1"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,78,"writeable.addValue(inBoth,""inboth first value 2"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,79,first = writeable;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,81,"writeable = new WriteableCommandLineImpl(root,new ArrayList());"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,82,writeable.addOption(inSecond);
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,83,writeable.addOption(inBoth);
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,84,"writeable.addProperty(""insecond"",""insecond second value"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,85,"writeable.addProperty(""inboth"",""inboth second value"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,86,"writeable.addSwitch(inSecond,true);"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,87,"writeable.addSwitch(inBoth,true);"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,88,"writeable.addValue(inSecond,""insecond second value 1"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,89,"writeable.addValue(inSecond,""insecond second value 2"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,90,"writeable.addValue(inBoth,""inboth second value 1"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,91,"writeable.addValue(inBoth,""inboth second value 2"");"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,92,second = writeable;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,95,public final void testAppendCommandLine() {
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,96,final DefaultingCommandLine defaults = new DefaultingCommandLine();
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,97,Iterator i;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,99,i = defaults.commandLines();
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,100,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,102,defaults.appendCommandLine(first);
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,103,i = defaults.commandLines();
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,104,"assertSame(first,i.next());"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,105,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,107,defaults.appendCommandLine(second);
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,108,i = defaults.commandLines();
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,109,"assertSame(first,i.next());"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,110,"assertSame(second,i.next());"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,111,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,114,public final void testInsertCommandLine() {
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,115,final DefaultingCommandLine defaults = new DefaultingCommandLine();
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,116,Iterator i;
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,118,i = defaults.commandLines();
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,119,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,121,"defaults.insertCommandLine(0,first);"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,122,i = defaults.commandLines();
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,123,"assertSame(first,i.next());"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,124,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,126,"defaults.insertCommandLine(0,second);"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,127,i = defaults.commandLines();
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,128,"assertSame(second,i.next());"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,129,"assertSame(first,i.next());"
True,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/DefaultingCommandLineTest.java,130,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,2,* Copyright 2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,16,package org.apache.commons.cli2.commandline;
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,18,import java.util.prefs.Preferences;
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,20,import org.apache.commons.cli2.CommandLine;
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,21,import org.apache.commons.cli2.CommandLineTestCase;
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,24,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,26,* To change the template for this generated type comment go to
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,27,* Window - Preferences - Java - Code Generation - Code and Comments
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,29,public class PreferencesCommandLineTest extends CommandLineTestCase {
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,31,/* (non-Javadoc)
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,32,* @see org.apache.commons.cli2.CommandLineTest#createCommandLine()
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,34,protected CommandLine createCommandLine() {
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,35,// TODO Auto-generated method stub
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,36,final Preferences props = Preferences.userNodeForPackage(PreferencesCommandLineTest.class);
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,37,"props.put(""--present"",""present value"");"
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,38,"props.put(""--alsopresent"","""");"
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,39,"props.put(""--multiple"",""value 1|value 2|value 3"");"
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,40,"props.put(""--bool"",""true"");"
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,42,"props.put(""present"",""present property"");"
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,44,"return new PreferencesCommandLine(root,props,'|');"
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,47,public void testToMakeEclipseSpotTheTestCase(){
True,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PreferencesCommandLineTest.java,48,// nothing to test
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,2,* Copyright 2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,16,package org.apache.commons.cli2.commandline;
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,18,import java.util.Properties;
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,20,import org.apache.commons.cli2.CommandLine;
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,21,import org.apache.commons.cli2.CommandLineTestCase;
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,24,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,26,* To change the template for this generated type comment go to
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,27,* Window - Preferences - Java - Code Generation - Code and Comments
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,29,public class PropertiesCommandLineTest extends CommandLineTestCase {
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,31,private Properties props = null;
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,33,/* (non-Javadoc)
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,34,* @see org.apache.commons.cli2.CommandLineTest#createCommandLine()
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,36,protected CommandLine createCommandLine() {
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,37,// TODO Auto-generated method stub
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,38,props = new Properties();
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,39,"props.setProperty(""--present"",""present value"");"
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,40,"props.setProperty(""--alsopresent"","""");"
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,41,"props.setProperty(""--multiple"",""value 1|value 2|value 3"");"
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,42,"props.setProperty(""--bool"",""true"");"
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,44,"props.setProperty(""present"",""present property"");"
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,45,"return new PropertiesCommandLine(root,props,'|');"
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,48,public void testToMakeEclipseSpotTheTestCase(){
True,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,src/test/org/apache/commons/cli2/commandline/PropertiesCommandLineTest.java,49,// nothing to test
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,2,* Copyright 2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,16,package org.apache.commons.cli2.commandline;
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,18,import java.util.ArrayList;
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,20,import org.apache.commons.cli2.WriteableCommandLine;
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,21,import org.apache.commons.cli2.WriteableCommandLineTestCase;
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,23,public class WriteableCommandLineImplTest extends WriteableCommandLineTestCase {
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,25,/* (non-Javadoc)
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,26,* @see org.apache.commons.cli2.WriteableCommandLineTest#createWriteableCommandLine()
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,28,protected WriteableCommandLine createWriteableCommandLine() {
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,29,"return new WriteableCommandLineImpl(root,new ArrayList());"
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,32,public void testToMakeEclipseSpotTheTestCase(){
True,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,src/test/org/apache/commons/cli2/commandline/WriteableCommandLineImplTest.java,33,// nothing to test
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,16,package org.apache.commons.cli2.jdepend;
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,18,import java.io.IOException;
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,19,import java.util.ArrayList;
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,20,import java.util.Collection;
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,21,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,23,import jdepend.framework.JDepend;
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,24,import jdepend.framework.JavaPackage;
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,25,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,28,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,30,* To change the template for this generated type comment go to Window -
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,31,* Preferences - Java - Code Generation - Code and Comments
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,33,public class JDependTest extends TestCase {
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,35,private JDepend dependancies = null;
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,37,public void setUp() throws IOException {
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,38,dependancies = new JDepend();
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,39,"dependancies.addDirectory(""target/classes"");"
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,40,dependancies.analyze();
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,43,public void testJUnitNotPresent() {
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,44,// if junit dependancy is found then jdepend has been poluted
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,45,// with test classes and all tests are meaningless
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,46,assertNull(
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,47,"""JUnit dependancy found"","
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,48,"dependancies.getPackage(""junit.framework""));"
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,50,// the same applies to jdepend
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,51,assertNull(
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,52,"""JDepend dependancy found"","
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,53,"dependancies.getPackage(""jdepend.framework""));"
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,56,public void testAcceptableDistance() {
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,57,Collection packages = dependancies.getPackages();
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,58,// only interested in cli2
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,59,packages = cli2Packages(packages);
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,60,// resources is well off the line
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,61,packages =
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,62,"namedPackages(packages, ""org.apache.commons.cli2.resource"", false);"
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,64,for (final Iterator i = packages.iterator(); i.hasNext();) {
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,65,final JavaPackage pkg = (JavaPackage)i.next();
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,66,final float distance = pkg.distance();
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,67,"final String message = pkg.getName() + "" too far from line: "" + distance;"
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,68,assertTrue(
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,69,"message,"
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,70,distance < 0.21d);
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,74,public void testNoCyclesPresnet() {
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,75,"assertEquals(""Cycles exist"", false, dependancies.containsCycles());"
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,78,public void testApiIndependance() {
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,79,dependancies.analyze();
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,81,final JavaPackage apiPackage =
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,82,"dependancies.getPackage(""org.apache.commons.cli2"");"
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,83,final Collection dependsUpon = cli2Packages(apiPackage.getEfferents());
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,85,"assertEquals(""Api should depend on one package"", 1, dependsUpon.size());"
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,87,JavaPackage pkg = (JavaPackage) dependsUpon.iterator().next();
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,88,assertEquals(
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,89,"""Wrong package name"","
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,90,"""org.apache.commons.cli2.resource"","
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,91,pkg.getName());
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,94,private Collection cli2Packages(final Collection incoming) {
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,95,"return namedPackages(incoming, ""org.apache.commons.cli2"", true);"
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,98,private Collection namedPackages(
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,99,"final Collection incoming,"
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,100,"final String name,"
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,101,final boolean include) {
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,102,final Collection outgoing = new ArrayList();
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,103,for (final Iterator i = incoming.iterator(); i.hasNext();) {
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,104,final JavaPackage pkg = (JavaPackage)i.next();
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,105,if (include ^ !pkg.getName().startsWith(name)) {
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,106,outgoing.add(pkg);
True,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,src/test/org/apache/commons/cli2/jdepend/JDependTest.java,109,return outgoing;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,16,package org.apache.commons.cli2.option;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,18,import java.text.ParseException;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,19,import java.util.ArrayList;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,20,import java.util.Arrays;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,21,import java.util.HashSet;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,22,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,23,import java.util.List;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,24,import java.util.ListIterator;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,25,import java.util.Set;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,27,import org.apache.commons.cli2.Argument;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,28,import org.apache.commons.cli2.DisplaySetting;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,29,import org.apache.commons.cli2.HelpLine;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,30,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,31,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,32,import org.apache.commons.cli2.WriteableCommandLine;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,33,import org.apache.commons.cli2.resource.ResourceHelper;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,34,import org.apache.commons.cli2.validation.DateValidator;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,35,import org.apache.commons.cli2.validation.DateValidatorTest;
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,38,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,40,public class ArgumentTest extends ArgumentTestCase {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,42,private ResourceHelper resources = ResourceHelper.getResourceHelper(ArgumentTest.class);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,44,public static Argument buildUsernameArgument() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,45,return new ArgumentImpl(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,46,"""username"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,47,"""The user to connect as"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,48,"1,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,49,"1,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,50,"'\0',"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,51,"'\0',"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,52,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,53,"ArgumentImpl.DEFAULT_CONSUME_REMAINING,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,54,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,55,0);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,58,public static Argument buildHostArgument() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,59,return new ArgumentImpl(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,60,"""host"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,61,"""The host name"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,62,"2,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,63,"3,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,64,"'\0',"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,66,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,67,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,68,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,69,0);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,72,public static Argument buildPathArgument() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,73,return new ArgumentImpl(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,74,"""path"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,75,"""The place to look for files"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,76,"1,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,77,"Integer.MAX_VALUE,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,80,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,81,"ArgumentImpl.DEFAULT_CONSUME_REMAINING,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,82,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,83,0);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,86,public static Argument buildDateLimitArgument() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,87,return new ArgumentImpl(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,88,"""limit"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,89,"""the last acceptable date"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,90,"0,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,91,"1,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,93,"'\0',"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,94,"new DateValidator(DateValidatorTest.YYYY_MM_YY),"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,95,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,96,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,97,0);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,100,public static Argument buildTargetsArgument() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,101,return new ArgumentImpl(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,102,"""target"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,103,"""The targets ant should build"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,104,"0,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,105,"Integer.MAX_VALUE,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,106,"'\0',"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,108,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,109,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,110,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,111,0);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,114,public static Argument buildSizeArgument() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,115,List defaults = new ArrayList();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,116,"defaults.add(""10"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,118,return new ArgumentImpl(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,119,"""size"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,120,"""The number of units"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,121,"1,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,122,"1,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,123,"'\0',"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,124,"'\0',"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,125,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,126,"ArgumentImpl.DEFAULT_CONSUME_REMAINING,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,127,"defaults,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,128,0);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,131,public static Argument buildBoundsArgument() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,132,List defaults = new ArrayList();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,133,"defaults.add(""5"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,134,"defaults.add(""10"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,136,return new ArgumentImpl(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,137,"""size"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,138,"""The number of units"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,139,"2,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,140,"2,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,141,"'\0',"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,142,"'\0',"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,143,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,144,"ArgumentImpl.DEFAULT_CONSUME_REMAINING,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,145,"defaults,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,146,0);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,149,public void testNew() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,151,try {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,152,new ArgumentImpl(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,153,"""limit"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,154,"""the last acceptable date"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,155,"10,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,156,"5,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,158,"'\0',"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,159,"new DateValidator(DateValidatorTest.YYYY_MM_YY),"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,160,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,161,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,162,0);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,163,} catch (IllegalArgumentException e) {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,164,assertEquals(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,165,"resources.getMessage(""cli.error.minimum.exceeds.maximum""),"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,166,e.getMessage());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,170,ArgumentImpl arg = new ArgumentImpl(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,171,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,172,"""the last acceptable date"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,173,"5,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,174,"5,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,176,"'\0',"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,177,"new DateValidator(DateValidatorTest.YYYY_MM_YY),"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,178,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,179,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,180,0);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,181,"assertEquals(""wrong arg name"", ""arg"", arg.getPreferredName());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,185,List defaults = new ArrayList();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,187,try {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,188,ArgumentImpl arg = new ArgumentImpl(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,189,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,190,"""the last acceptable date"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,191,"1,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,192,"1,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,194,"'\0',"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,195,"new DateValidator(DateValidatorTest.YYYY_MM_YY),"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,196,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,197,"defaults,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,198,0);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,200,catch(IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,201,assertEquals(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,202,"resources.getMessage(""cli.error.too.few.defaults""),"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,203,exp.getMessage());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,208,try {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,209,List defaults = new ArrayList();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,210,"defaults.add(""1"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,211,"defaults.add(""2"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,213,ArgumentImpl arg = new ArgumentImpl(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,214,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,215,"""the last acceptable date"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,216,"1,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,217,"1,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,219,"'\0',"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,220,"new DateValidator(DateValidatorTest.YYYY_MM_YY),"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,221,"null,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,222,"defaults,"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,223,0);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,225,catch(IllegalArgumentException exp) {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,226,assertEquals(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,227,"resources.getMessage(""cli.error.too.many.defaults""),"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,228,exp.getMessage());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,234,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,236,* @see org.apache.commons.cli2.ArgumentTestCase#testProcessValues()
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,238,public void testProcessValues() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,239,final Argument option = buildUsernameArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,240,"final List args = list(""rob"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,241,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,242,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,243,"option.processValues(commandLine, iterator, option);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,245,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,246,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,247,"assertTrue(commandLine.hasOption(""username""));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,248,"assertEquals(""rob"", commandLine.getValue(option));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,251,public void testProcessValues_SpareValues() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,252,final Argument option = buildUsernameArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,253,"final List args = list(""rob"", ""secret"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,254,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,255,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,256,"option.processValues(commandLine, iterator, option);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,258,assertTrue(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,259,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,260,"assertTrue(commandLine.hasOption(""username""));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,261,"assertEquals(""rob"", commandLine.getValue(option));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,264,public void testProcessValues_Optional() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,265,final Argument option = buildTargetsArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,266,final List args = list();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,267,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,268,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,270,try {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,271,"option.processValues(commandLine, iterator, option);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,273,catch (final OptionException mve) {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,274,"assertEquals(option, mve.getOption());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,275,assertEquals(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,276,"""Missing value(s) target [target ...]"","
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,277,mve.getMessage());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,280,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,281,assertFalse(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,282,"assertFalse(commandLine.hasOption(""username""));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,283,assertTrue(commandLine.getValues(option).isEmpty());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,286,public void testProcessValues_Multiple() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,287,final Argument option = buildTargetsArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,288,"final List args = list(""compile"", ""test"", ""docs"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,289,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,290,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,291,"option.processValues(commandLine, iterator, option);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,293,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,294,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,295,"assertTrue(commandLine.hasOption(""target""));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,296,assertFalse(commandLine.getValues(option).isEmpty());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,297,"assertListContentsEqual(args, commandLine.getValues(option));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,300,public void testProcessValues_Contracted() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,301,final Argument option = buildTargetsArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,302,"final List args = list(""compile,test,javadoc"", ""checkstyle,jdepend"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,303,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,304,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,305,"option.processValues(commandLine, iterator, option);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,307,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,308,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,309,"assertTrue(commandLine.hasOption(""target""));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,310,assertListContentsEqual(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,311,"list(""compile"", ""test"", ""javadoc"", ""checkstyle"", ""jdepend""),"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,312,commandLine.getValues(option));
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,315,public void testProcessValues_ContractedTooFew() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,316,final Argument option = buildHostArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,317,"final List args = list(""box1"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,318,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,319,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,320,try {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,321,"option.processValues(commandLine, iterator, option);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,322,"fail(""Expected MissingValueException"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,324,catch (OptionException mve) {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,325,"assertSame(option, mve.getOption());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,330,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,332,* @see org.apache.commons.cli2.OptionTestCase#testCanProcess()
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,334,public void testCanProcess() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,335,final Argument option = buildTargetsArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,336,"assertTrue(option.canProcess(""any value""));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,340,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,342,* @see org.apache.commons.cli2.OptionTestCase#testPrefixes()
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,344,public void testPrefixes() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,345,final Argument option = buildTargetsArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,346,assertTrue(option.getPrefixes().isEmpty());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,350,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,352,* @see org.apache.commons.cli2.OptionTestCase#testProcess()
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,354,public void testProcess() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,355,final Argument option = buildPathArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,356,"final List args = list(""-path=/lib;/usr/lib;/usr/local/lib"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,357,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,358,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,359,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,361,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,362,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,363,"assertTrue(commandLine.hasOption(""path""));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,364,assertListContentsEqual(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,365,"list(""-path=/lib"", ""/usr/lib"", ""/usr/local/lib""),"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,366,commandLine.getValues(option));
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,370,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,372,* @see org.apache.commons.cli2.OptionTestCase#testTriggers()
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,374,public void testTriggers() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,375,final Argument option = buildTargetsArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,376,assertTrue(option.getTriggers().isEmpty());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,380,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,382,* @see org.apache.commons.cli2.OptionTestCase#testValidate()
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,384,public void testValidate() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,385,final Argument option = buildUsernameArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,386,"final WriteableCommandLine commandLine = commandLine(option, list());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,388,"commandLine.addValue(option, ""rob"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,390,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,393,public void testValidate_Minimum() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,394,final Argument option = buildUsernameArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,395,"final WriteableCommandLine commandLine = commandLine(option, list());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,397,try {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,398,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,399,"fail(""UnexpectedValue"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,401,catch (OptionException mve) {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,402,"assertEquals(option, mve.getOption());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,406,public void testValidate_Maximum() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,407,final Argument option = buildUsernameArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,408,"final WriteableCommandLine commandLine = commandLine(option, list());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,410,"commandLine.addValue(option, ""rob"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,411,"commandLine.addValue(option, ""oxspring"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,413,try {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,414,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,415,"fail(""UnexpectedValue"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,417,catch (OptionException uve) {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,418,"assertEquals(option, uve.getOption());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,422,public void testValidate_Validator()
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,423,"throws OptionException, ParseException {"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,424,final Argument option = buildDateLimitArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,425,"final WriteableCommandLine commandLine = commandLine(option, list());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,427,"commandLine.addValue(option, ""2004-01-01"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,429,"option.validate(commandLine, option);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,430,assertContentsEqual(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,431,Arrays.asList(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,432,new Object[] {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,433,"DateValidatorTest.YYYY_MM_YY.parse(""2004-01-01"")}),"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,434,commandLine.getValues(option));
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,438,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,440,* @see org.apache.commons.cli2.OptionTestCase#testAppendUsage()
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,442,public void testAppendUsage() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,443,final Option option = buildUsernameArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,444,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,445,"option.appendUsage(buffer, DisplaySetting.ALL, null);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,447,"assertEquals(""<username>"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,450,public void testAppendUsage_Infinite() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,451,final Option option = buildTargetsArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,452,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,453,"option.appendUsage(buffer, DisplaySetting.ALL, null);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,455,"assertEquals(""[<target1> [<target2> ...]]"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,458,public void testAppendUsage_InfiniteNoOptional() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,459,final Option option = buildTargetsArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,460,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,461,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,462,settings.remove(DisplaySetting.DISPLAY_OPTIONAL);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,463,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,465,"assertEquals(""<target1> [<target2> ...]"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,468,public void testAppendUsage_InfiniteNoNumbering() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,469,final Option option = buildTargetsArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,470,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,471,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,472,settings.remove(DisplaySetting.DISPLAY_ARGUMENT_NUMBERED);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,473,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,475,"assertEquals(""[<target> [<target> ...]]"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,478,public void testAppendUsage_Minimum() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,479,final Option option = buildHostArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,480,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,481,"option.appendUsage(buffer, DisplaySetting.ALL, null);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,483,"assertEquals(""<host1> <host2> [<host3>]"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,487,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,489,* @see org.apache.commons.cli2.OptionTestCase#testGetPreferredName()
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,491,public void testGetPreferredName() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,492,final Option option = buildPathArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,493,"assertEquals(""path"", option.getPreferredName());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,497,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,499,* @see org.apache.commons.cli2.OptionTestCase#testGetDescription()
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,501,public void testGetDescription() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,502,final Option option = buildHostArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,503,"assertEquals(""The host name"", option.getDescription());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,507,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,509,* @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,511,public void testHelpLines() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,512,final Option option = buildHostArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,513,"final List lines = option.helpLines(0, DisplaySetting.ALL, null);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,514,final Iterator i = lines.iterator();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,516,final HelpLine line1 = (HelpLine)i.next();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,517,"assertEquals(0, line1.getIndent());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,518,"assertEquals(option, line1.getOption());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,520,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,523,public void testCanProcess_ConsumeRemaining() {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,524,final Option option = buildUsernameArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,526,"assertTrue(option.canProcess(""--""));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,529,public void testProcess_ConsumeRemaining() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,530,final Option option = buildPathArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,531,"final List args = list(""options"", ""--"", ""--ignored"", ""-Dprop=val"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,532,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,533,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,535,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,536,final List values = commandLine.getValues(option);
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,537,"assertTrue(values.contains(""options""));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,538,"assertTrue(values.contains(""--ignored""));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,539,"assertTrue(values.contains(""-Dprop=val""));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,540,"assertEquals(3, values.size());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,541,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,544,public void testProcess_ConsumeNothing() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,545,final Option option = buildPathArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,546,"final List args = list(""--"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,547,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,548,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,550,try {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,551,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,552,"fail(""Missing Value!"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,554,catch (OptionException mve) {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,555,"assertEquals(option, mve.getOption());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,556,"assertEquals(""Missing value(s) path [path ...]"", mve.getMessage());"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,559,assertTrue(commandLine.getValues(option).isEmpty());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,560,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,563,//    public void testProcess_DefinedDefaultValue() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,564,//        final Option size = buildSizeArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,565,//        final List args = list();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,566,"//        final WriteableCommandLine commandLine = commandLine(size, args);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,567,//        final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,569,"//        size.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,571,"//        assertEquals(""10"", commandLine.getValue(size));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,574,//    public void testProcess_DefinedDefaultValues() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,575,//        final Option bounds = buildBoundsArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,576,//        final List args = list();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,577,"//        final WriteableCommandLine commandLine = commandLine(bounds, args);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,578,//        final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,580,"//        bounds.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,582,//        List values = new ArrayList();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,583,"//        values.add(""5"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,584,"//        values.add(""10"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,585,"//        assertEquals(values, commandLine.getValues(bounds));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,588,public void testProcess_InterrogatedDefaultValue() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,589,final Option size = buildSizeArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,590,final List args = list();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,591,"final WriteableCommandLine commandLine = commandLine(size, args);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,592,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,594,"size.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,596,assertEquals(
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,597,"new Integer(20),"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,598,"commandLine.getValue(size, new Integer(20)));"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,601,public void testProcess_InterrogatedDefaultValues()
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,602,throws OptionException {
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,603,final Option bounds = buildBoundsArgument();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,604,final List args = list();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,605,"final WriteableCommandLine commandLine = commandLine(bounds, args);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,606,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,608,"bounds.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,610,List values = new ArrayList();
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,611,"values.add(""50"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,612,"values.add(""100"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTest.java,src/test/org/apache/commons/cli2/option/ArgumentTest.java,613,"assertEquals(values, commandLine.getValues(bounds, values));"
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,16,package org.apache.commons.cli2.option;
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,18,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,21,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,23,public abstract class ArgumentTestCase extends OptionTestCase {
True,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,src/test/org/apache/commons/cli2/option/ArgumentTestCase.java,25,public abstract void testProcessValues() throws OptionException;
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,16,package org.apache.commons.cli2.option;
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,18,import java.util.Collections;
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,19,import java.util.HashSet;
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,20,import java.util.List;
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,21,import java.util.ListIterator;
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,22,import java.util.Set;
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,24,import org.apache.commons.cli2.DisplaySetting;
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,25,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,26,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,27,import org.apache.commons.cli2.Parent;
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,28,import org.apache.commons.cli2.WriteableCommandLine;
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,31,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,33,* To change the template for this generated type comment go to
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,34,* Window>Preferences>Java>Code Generation>Code and Comments
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,36,public class CommandTest extends ParentTestCase {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,38,public static Command buildStartCommand() {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,39,return new Command(
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,40,"""start"","
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,41,"""Begins the process"","
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,42,"Collections.singleton(""go""),"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,43,"false,"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,44,"null,"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,45,"null,"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,46,0);
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,49,public static Command buildCommitCommand() {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,50,return new Command(
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,51,"""commit"","
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,52,"""Commit the changes to the database"","
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,53,"null,"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,54,"true,"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,55,"null,"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,56,"null,"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,57,0);
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,60,public static Command buildLoginCommand() {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,61,return new Command(
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,62,"""login"","
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,63,"""Initiates a session for the user"","
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,64,"null,"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,65,"false,"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,66,"ArgumentTest.buildUsernameArgument(),"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,67,"null,"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,68,0);
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,72,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,74,* @see org.apache.commons.cli2.ParentTestCase#testProcessParent()
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,76,public void testProcessParent() throws OptionException {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,77,final Command option = buildStartCommand();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,78,"final List args = list(""go"");"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,79,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,80,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,81,"option.processParent(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,83,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,84,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,85,"assertTrue(commandLine.hasOption(""start""));"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,86,"assertTrue(commandLine.hasOption(""go""));"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,87,assertTrue(commandLine.getValues(option).isEmpty());
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,90,public void testProcessParent_Spare() throws OptionException {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,91,final Command option = buildLoginCommand();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,92,"final List args = list(""login"", ""rob"");"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,93,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,94,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,95,"option.processParent(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,97,"assertEquals(""rob"", iterator.next());"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,98,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,99,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,100,"assertTrue(commandLine.hasOption(""login""));"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,101,assertTrue(commandLine.getValues(option).isEmpty());
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,105,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,107,* @see org.apache.commons.cli2.OptionTestCase#testCanProcess()
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,109,public void testCanProcess() {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,110,"assertTrue(buildStartCommand().canProcess(""start""));"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,113,public void testCanProcess_BadMatch() {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,114,"assertFalse(buildStartCommand().canProcess(""stop""));"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,117,public void testCanProcess_Alias() {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,118,"assertTrue(buildStartCommand().canProcess(""go""));"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,122,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,124,* @see org.apache.commons.cli2.OptionTestCase#testPrefixes()
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,126,public void testPrefixes() {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,127,final Command option = buildStartCommand();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,128,assertTrue(option.getPrefixes().isEmpty());
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,132,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,134,* @see org.apache.commons.cli2.OptionTestCase#testProcess()
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,136,public void testProcess() throws OptionException {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,137,final Command option = buildLoginCommand();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,138,"final List args = list(""login"", ""rob"");"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,139,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,140,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,141,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,143,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,144,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,145,"assertTrue(commandLine.hasOption(""login""));"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,146,"assertEquals(""rob"", commandLine.getValue(option));"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,150,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,152,* @see org.apache.commons.cli2.OptionTestCase#testTriggers()
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,154,public void testTriggers() {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,155,final Command option = buildStartCommand();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,156,final Set triggers = option.getTriggers();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,157,"assertContentsEqual(list(""start"", ""go""), triggers);"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,161,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,163,* @see org.apache.commons.cli2.OptionTestCase#testValidate()
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,165,public void testValidate() throws OptionException {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,166,final Parent option = buildCommitCommand();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,167,"final WriteableCommandLine commandLine = commandLine(option, list());"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,169,try {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,170,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,171,"fail(""Missing an option"");"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,173,catch (OptionException moe) {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,174,"assertSame(option, moe.getOption());"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,179,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,181,* @see org.apache.commons.cli2.OptionTestCase#testAppendUsage()
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,183,public void testAppendUsage() {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,184,final Option option = buildStartCommand();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,185,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,186,"option.appendUsage(buffer, DisplaySetting.ALL, null);"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,188,"assertEquals(""[start (go)]"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,191,public void testAppendUsage_NoOptional() {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,192,final Option option = buildStartCommand();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,193,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,194,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,195,settings.remove(DisplaySetting.DISPLAY_OPTIONAL);
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,196,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,198,"assertEquals(""start (go)"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,201,public void testAppendUsage_NoAlias() {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,202,final Option option = buildStartCommand();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,203,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,204,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,205,settings.remove(DisplaySetting.DISPLAY_ALIASES);
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,206,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,208,"assertEquals(""[start]"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,212,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,214,* @see org.apache.commons.cli2.OptionTestCase#testGetPreferredName()
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,216,public void testGetPreferredName() {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,217,final Option option = buildStartCommand();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,218,"assertEquals(""start"", option.getPreferredName());"
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,222,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,224,* @see org.apache.commons.cli2.OptionTestCase#testGetDescription()
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,226,public void testGetDescription() {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,227,final Option option = buildLoginCommand();
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,228,assertEquals(
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,229,"""Initiates a session for the user"","
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,230,option.getDescription());
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,233,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,235,* @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,237,public void testHelpLines() {
True,src/test/org/apache/commons/cli2/option/CommandTest.java,src/test/org/apache/commons/cli2/option/CommandTest.java,238,// TODO Auto-generated method stub
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,16,package org.apache.commons.cli2.option;
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,18,import java.util.HashSet;
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,19,import java.util.List;
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,20,import java.util.ListIterator;
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,21,import java.util.Set;
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,23,import org.apache.commons.cli2.DisplaySetting;
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,24,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,25,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,26,import org.apache.commons.cli2.Parent;
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,27,import org.apache.commons.cli2.WriteableCommandLine;
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,30,* @author roberto
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,32,* To change the template for this generated type comment go to
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,33,* Window>Preferences>Java>Code Generation>Code and Comments
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,35,public class DefaultOptionTest extends ParentTestCase {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,37,public static DefaultOption buildHelpOption() {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,38,"final Set aliases = new HashSet(list(""-h"", ""-?""));"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,39,return new DefaultOption(
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,42,"true,"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,43,"""--help"","
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,44,"""Displays the help"","
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,45,"aliases,"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,46,"aliases,"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,47,"false,"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,48,"null,"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,49,"null,"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,50,'h');
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,53,public static DefaultOption buildXOption() {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,54,return new DefaultOption(
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,57,"true,"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,58,"""-X"","
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,59,"""This is needed"","
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,60,"null,"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,61,"null,"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,62,"true,"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,63,"null,"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,64,"null,"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,65,'X');
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,69,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,71,* @see org.apache.commons.cli2.ParentTestCase#testProcessParent()
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,73,public void testProcessParent() throws OptionException {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,74,final DefaultOption option = buildHelpOption();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,75,"final List args = list(""--help"");"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,76,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,77,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,78,"option.processParent(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,80,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,81,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,82,"assertTrue(commandLine.hasOption(""--help""));"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,83,"assertTrue(commandLine.hasOption(""-?""));"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,84,assertTrue(commandLine.getValues(option).isEmpty());
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,87,public void testProcessParent_Burst() throws OptionException {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,88,final DefaultOption option = buildHelpOption();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,89,"final List args = list(""-help"");"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,90,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,91,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,92,"option.processParent(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,94,"assertEquals(""-elp"", iterator.next());"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,95,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,96,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,97,"assertTrue(commandLine.hasOption(""--help""));"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,98,"assertTrue(commandLine.hasOption(""-?""));"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,99,assertTrue(commandLine.getValues(option).isEmpty());
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,103,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,105,* @see org.apache.commons.cli2.OptionTestCase#testCanProcess()
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,107,public void testCanProcess() {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,108,final DefaultOption option = buildHelpOption();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,109,"assertTrue(option.canProcess(""-?""));"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,112,public void testCanProcess_BadMatch() {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,113,final DefaultOption option = buildHelpOption();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,114,"assertFalse(option.canProcess(""-H""));"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,118,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,120,* @see org.apache.commons.cli2.OptionTestCase#testPrefixes()
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,122,public void testPrefixes() {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,123,final DefaultOption option = buildHelpOption();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,124,"assertContentsEqual(list(""-"", ""--""), option.getPrefixes());"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,128,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,130,* @see org.apache.commons.cli2.OptionTestCase#testProcess()
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,132,public void testProcess() {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,133,// TODO Auto-generated method stub
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,138,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,140,* @see org.apache.commons.cli2.OptionTestCase#testTriggers()
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,142,public void testTriggers() {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,143,final DefaultOption option = buildHelpOption();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,144,"assertContentsEqual(list(""-?"", ""-h"", ""--help""), option.getTriggers());"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,148,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,150,* @see org.apache.commons.cli2.OptionTestCase#testValidate()
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,152,public void testValidate() throws OptionException {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,153,final Parent option = buildXOption();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,154,"final WriteableCommandLine commandLine = commandLine(option, list());"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,156,try {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,157,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,158,"fail(""Missing an option"");"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,160,catch (OptionException moe) {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,161,"assertSame(option, moe.getOption());"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,166,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,168,* @see org.apache.commons.cli2.OptionTestCase#testAppendUsage()
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,170,public void testAppendUsage() {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,171,final Option option = buildHelpOption();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,172,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,173,"option.appendUsage(buffer, DisplaySetting.ALL, null);"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,175,"assertEquals(""[--help (-?,-h)]"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,178,public void testAppendUsage_NoOptional() {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,179,final Option option = buildHelpOption();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,180,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,181,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,182,settings.remove(DisplaySetting.DISPLAY_OPTIONAL);
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,183,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,185,"assertEquals(""--help (-?,-h)"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,188,public void testAppendUsage_NoAlias() {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,189,final Option option = buildHelpOption();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,190,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,191,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,192,settings.remove(DisplaySetting.DISPLAY_ALIASES);
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,193,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,195,"assertEquals(""[--help]"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,199,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,201,* @see org.apache.commons.cli2.OptionTestCase#testGetPreferredName()
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,203,public void testGetPreferredName() {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,204,final Option option = buildHelpOption();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,205,"assertEquals(""--help"", option.getPreferredName());"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,209,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,211,* @see org.apache.commons.cli2.OptionTestCase#testGetDescription()
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,213,public void testGetDescription() {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,214,final Option option = buildHelpOption();
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,215,"assertEquals(""Displays the help"", option.getDescription());"
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,218,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,220,* @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,222,public void testHelpLines() {
True,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,src/test/org/apache/commons/cli2/option/DefaultOptionTest.java,223,// TODO Auto-generated method stub
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,16,package org.apache.commons.cli2.option;
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,18,import java.util.ArrayList;
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,19,import java.util.HashSet;
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,20,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,21,import java.util.List;
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,22,import java.util.ListIterator;
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,23,import java.util.Set;
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,25,import org.apache.commons.cli2.DisplaySetting;
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,26,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,27,import org.apache.commons.cli2.HelpLine;
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,28,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,29,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,30,import org.apache.commons.cli2.WriteableCommandLine;
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,33,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,35,public class GroupTest extends GroupTestCase {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,37,public static final Command COMMAND_START =
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,38,"new Command(""start"", ""Starts the server"", null, false, null, null, 0);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,39,public static final Command COMMAND_STOP =
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,40,"new Command(""stop"", ""Stops the server"", null, false, null, null, 0);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,41,public static final Command COMMAND_RESTART =
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,42,new Command(
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,43,"""restart"","
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,44,"""Stops and starts the server"","
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,45,"null,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,46,"false,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,47,"null,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,48,"null,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,49,0);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,50,public static final Command COMMAND_GRACEFUL =
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,51,new Command(
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,52,"""graceful"","
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,53,"""Restarts the server without interruption"","
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,54,"null,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,55,"false,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,56,"null,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,57,"null,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,58,0);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,60,public static Group buildApacheCommandGroup() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,61,final List options = new ArrayList();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,62,options.add(COMMAND_GRACEFUL);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,63,options.add(COMMAND_RESTART);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,64,options.add(COMMAND_START);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,65,options.add(COMMAND_STOP);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,66,return new GroupImpl(
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,67,"options,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,68,"""httpd-cmds"","
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,69,"""The command to pass to the server"","
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,70,"1,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,71,1);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,74,public static Group buildApachectlGroup() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,75,final List options = new ArrayList();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,76,options.add(DefaultOptionTest.buildHelpOption());
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,77,options.add(ParentTest.buildKParent());
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,78,return new GroupImpl(
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,79,"options,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,80,"""apachectl"","
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,81,"""Controls the apache http deamon"","
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,82,"0,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,83,Integer.MAX_VALUE);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,86,public static Group buildAntGroup() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,87,final List options = new ArrayList();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,88,options.add(DefaultOptionTest.buildHelpOption());
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,89,options.add(ArgumentTest.buildTargetsArgument());
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,90,return new GroupImpl(
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,91,"options,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,92,"""ant"","
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,93,"""The options for ant"","
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,94,"0,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,95,Integer.MAX_VALUE);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,99,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,101,* @see org.apache.commons.cli2.GroupTestCase#testProcessAnonymousArguments()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,103,public void testProcessAnonymousArguments() throws OptionException {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,104,final Group option = buildAntGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,105,"final List args = list(""compile,test"", ""dist"");"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,106,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,107,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,108,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,110,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,111,"assertTrue(commandLine.hasOption(""target""));"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,112,"assertListContentsEqual(commandLine.getValues(""target""), args);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,113,"assertListContentsEqual(list(""compile"", ""test"", ""dist""), args);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,117,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,119,* @see org.apache.commons.cli2.GroupTestCase#testProcessOptions()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,121,public void testProcessOptions() throws OptionException {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,122,final Group option = buildApachectlGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,123,"final List args = list(""-?"", ""-k"");"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,124,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,125,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,126,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,128,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,129,"assertTrue(commandLine.hasOption(""--help""));"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,130,"assertTrue(commandLine.hasOption(""-k""));"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,131,"assertFalse(commandLine.hasOption(""start""));"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,132,"assertListContentsEqual(list(""--help"", ""-k""), args);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,136,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,138,* @see org.apache.commons.cli2.OptionTestCase#testCanProcess()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,140,public void testCanProcess() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,141,final Group option = buildApacheCommandGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,142,"assertTrue(option.canProcess(""start""));"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,145,public void testCanProcess_BadMatch() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,146,final Group option = buildApacheCommandGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,147,"assertFalse(option.canProcess(""begin""));"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,151,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,153,* @see org.apache.commons.cli2.OptionTestCase#testPrefixes()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,155,public void testPrefixes() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,156,final Group option = buildApachectlGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,157,"assertContentsEqual(list(""-"", ""--""), option.getPrefixes());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,161,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,163,* @see org.apache.commons.cli2.OptionTestCase#testProcess()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,165,public void testProcess() throws OptionException {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,166,final Group option = buildAntGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,167,"final List args = list(""--help"", ""compile,test"", ""dist"");"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,168,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,169,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,170,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,172,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,173,"assertTrue(commandLine.hasOption(""-?""));"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,174,assertListContentsEqual(
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,175,"list(""compile"", ""test"", ""dist""),"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,176,"commandLine.getValues(""target""));"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,179,public void testProcess_Nested() throws OptionException {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,180,final Group option = buildApachectlGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,181,"final List args = list(""-h"", ""-k"", ""graceful"");"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,182,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,183,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,184,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,186,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,187,"assertTrue(commandLine.hasOption(""-?""));"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,188,"assertTrue(commandLine.hasOption(""-k""));"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,189,"assertTrue(commandLine.hasOption(""graceful""));"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,190,"assertFalse(commandLine.hasOption(""stop""));"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,191,"assertTrue(commandLine.getValues(""start"").isEmpty());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,192,"assertListContentsEqual(list(""--help"", ""-k"", ""graceful""), args);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,196,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,198,* @see org.apache.commons.cli2.OptionTestCase#testTriggers()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,200,public void testTriggers() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,201,final Group option = buildApachectlGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,202,assertContentsEqual(
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,203,"list(""--help"", ""-?"", ""-h"", ""-k""),"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,204,option.getTriggers());
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,208,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,210,* @see org.apache.commons.cli2.OptionTestCase#testValidate()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,212,public void testValidate() throws OptionException {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,213,final Group option = buildApacheCommandGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,214,"final WriteableCommandLine commandLine = commandLine(option, list());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,216,commandLine.addOption(COMMAND_RESTART);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,218,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,221,public void testValidate_UnexpectedOption() throws OptionException {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,222,final Group option = buildApacheCommandGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,223,"final WriteableCommandLine commandLine = commandLine(option, list());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,225,commandLine.addOption(COMMAND_RESTART);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,226,commandLine.addOption(COMMAND_GRACEFUL);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,228,try {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,229,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,230,"fail(""Too many options"");"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,232,catch (OptionException uoe) {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,233,"assertEquals(option, uoe.getOption());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,237,public void testValidate_MissingOption() throws OptionException {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,238,final Group option = buildApacheCommandGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,239,"final WriteableCommandLine commandLine = commandLine(option, list());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,241,try {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,242,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,243,"fail(""Missing an option"");"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,245,catch (OptionException moe) {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,246,"assertEquals(option, moe.getOption());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,251,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,253,* @see org.apache.commons.cli2.OptionTestCase#testAppendUsage()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,255,public void testAppendUsage() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,256,final Option option = buildApacheCommandGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,257,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,258,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,259,//settings.remove(DisplaySetting.DISPLAY_ARGUMENT_NUMBERED);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,260,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,262,assertEquals(
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,263,"""httpd-cmds (graceful|restart|start|stop)"","
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,264,buffer.toString());
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,267,public void testAppendUsage_NoOptional() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,268,final Option option = buildApacheCommandGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,269,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,270,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,271,settings.remove(DisplaySetting.DISPLAY_OPTIONAL);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,272,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,274,assertEquals(
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,275,"""httpd-cmds (graceful|restart|start|stop)"","
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,276,buffer.toString());
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,279,public void testAppendUsage_NoExpand() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,280,final Option option = buildApacheCommandGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,281,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,282,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,283,settings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,284,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,286,"assertEquals(""httpd-cmds"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,289,public void testAppendUsage_NoExpandOrName() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,290,final Option option = buildApacheCommandGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,291,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,292,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,293,settings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,294,settings.remove(DisplaySetting.DISPLAY_GROUP_NAME);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,295,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,297,"assertEquals(""httpd-cmds"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,300,public void testAppendUsage_NoName() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,301,final Option option = buildApacheCommandGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,302,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,303,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,304,settings.remove(DisplaySetting.DISPLAY_GROUP_NAME);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,305,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,307,"assertEquals(""graceful|restart|start|stop"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,310,public void testAppendUsage_WithArgs() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,311,final Option option = buildAntGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,312,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,313,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,314,settings.remove(DisplaySetting.DISPLAY_GROUP_OUTER);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,315,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,317,assertEquals(
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,318,"""[ant (--help (-?,-h)) [<target1> [<target2> ...]]]"","
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,319,buffer.toString());
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,323,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,325,* @see org.apache.commons.cli2.OptionTestCase#testGetPreferredName()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,327,public void testGetPreferredName() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,328,final Option option = buildAntGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,329,"assertEquals(""ant"", option.getPreferredName());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,333,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,335,* @see org.apache.commons.cli2.OptionTestCase#testGetDescription()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,337,public void testGetDescription() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,338,final Option option = buildApachectlGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,339,assertEquals(
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,340,"""Controls the apache http deamon"","
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,341,option.getDescription());
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,345,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,347,* @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,349,public void testHelpLines() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,350,final Option option = buildApacheCommandGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,351,"final List lines = option.helpLines(0, DisplaySetting.ALL, null);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,352,final Iterator i = lines.iterator();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,354,final HelpLine line1 = (HelpLine)i.next();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,355,"assertEquals(0, line1.getIndent());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,356,"assertEquals(option, line1.getOption());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,358,final HelpLine line2 = (HelpLine)i.next();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,359,"assertEquals(1, line2.getIndent());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,360,"assertEquals(COMMAND_GRACEFUL, line2.getOption());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,362,final HelpLine line3 = (HelpLine)i.next();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,363,"assertEquals(1, line3.getIndent());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,364,"assertEquals(COMMAND_RESTART, line3.getOption());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,366,final HelpLine line4 = (HelpLine)i.next();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,367,"assertEquals(1, line4.getIndent());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,368,"assertEquals(COMMAND_START, line4.getOption());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,370,final HelpLine line5 = (HelpLine)i.next();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,371,"assertEquals(1, line5.getIndent());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,372,"assertEquals(COMMAND_STOP, line5.getOption());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,374,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,378,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,380,* @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,382,public void testHelpLines_NoExpanded() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,383,final Option option = buildApacheCommandGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,384,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,385,settings.remove(DisplaySetting.DISPLAY_GROUP_EXPANDED);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,386,"final List lines = option.helpLines(0, settings, null);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,387,final Iterator i = lines.iterator();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,389,final HelpLine line1 = (HelpLine)i.next();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,390,"assertEquals(0, line1.getIndent());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,391,"assertEquals(option, line1.getOption());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,393,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,397,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,399,* @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,401,public void testHelpLines_NoName() {
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,402,final Option option = buildApacheCommandGroup();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,403,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,404,settings.remove(DisplaySetting.DISPLAY_GROUP_NAME);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,405,"final List lines = option.helpLines(0, settings, null);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,406,final Iterator i = lines.iterator();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,408,final HelpLine line2 = (HelpLine)i.next();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,409,"assertEquals(1, line2.getIndent());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,410,"assertEquals(COMMAND_GRACEFUL, line2.getOption());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,412,final HelpLine line3 = (HelpLine)i.next();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,413,"assertEquals(1, line3.getIndent());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,414,"assertEquals(COMMAND_RESTART, line3.getOption());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,416,final HelpLine line4 = (HelpLine)i.next();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,417,"assertEquals(1, line4.getIndent());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,418,"assertEquals(COMMAND_START, line4.getOption());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,420,final HelpLine line5 = (HelpLine)i.next();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,421,"assertEquals(1, line5.getIndent());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,422,"assertEquals(COMMAND_STOP, line5.getOption());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,424,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,16,package org.apache.commons.cli2.option;
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,18,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,21,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,23,* To change the template for this generated type comment go to
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,24,* Window>Preferences>Java>Code Generation>Code and Comments
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,26,public abstract class GroupTestCase extends OptionTestCase {
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,27,public abstract void testProcessOptions() throws OptionException;
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,29,public abstract void testProcessAnonymousArguments()
True,src/test/org/apache/commons/cli2/option/GroupTestCase.java,src/test/org/apache/commons/cli2/option/GroupTestCase.java,30,throws OptionException;
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,16,package org.apache.commons.cli2.option;
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,18,import java.util.List;
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,20,import org.apache.commons.cli2.CLITestCase;
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,21,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,22,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,23,import org.apache.commons.cli2.WriteableCommandLine;
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,24,import org.apache.commons.cli2.commandline.WriteableCommandLineImpl;
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,27,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,29,public abstract class OptionTestCase extends CLITestCase {
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,31,public static WriteableCommandLine commandLine(
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,32,"final Option option,"
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,33,final List args) {
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,34,"return new WriteableCommandLineImpl(option, args);"
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,37,public abstract void testTriggers();
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,39,public abstract void testPrefixes();
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,41,public abstract void testCanProcess();
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,43,public abstract void testProcess() throws OptionException;
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,45,public abstract void testValidate() throws OptionException;
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,47,public abstract void testAppendUsage() throws OptionException;
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,49,public abstract void testGetPreferredName();
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,51,public abstract void testGetDescription();
True,src/test/org/apache/commons/cli2/option/OptionTestCase.java,src/test/org/apache/commons/cli2/option/OptionTestCase.java,53,public abstract void testHelpLines();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,16,package org.apache.commons.cli2.option;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,18,import java.util.HashSet;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,19,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,20,import java.util.List;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,21,import java.util.ListIterator;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,22,import java.util.Set;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,24,import org.apache.commons.cli2.Argument;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,25,import org.apache.commons.cli2.DisplaySetting;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,26,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,27,import org.apache.commons.cli2.HelpLine;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,28,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,29,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,30,import org.apache.commons.cli2.Parent;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,31,import org.apache.commons.cli2.WriteableCommandLine;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,32,import org.apache.commons.cli2.builder.ArgumentBuilder;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,33,import org.apache.commons.cli2.builder.CommandBuilder;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,34,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,35,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,38,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,40,public class ParentTest extends ParentTestCase {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,42,public static Parent buildLibParent() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,43,final Argument argument = ArgumentTest.buildPathArgument();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,44,return new DefaultOption(
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,47,"false,"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,48,"""--lib"","
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,49,"""Specifies library search path"","
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,50,"null,"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,51,"null,"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,52,"false,"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,53,"argument,"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,54,"null,"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,55,'l');
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,58,public static Parent buildKParent() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,59,final Group children = GroupTest.buildApacheCommandGroup();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,60,return new DefaultOption(
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,63,"false,"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,64,"""-k"","
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,65,"""desc"","
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,66,"null,"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,67,"null,"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,68,"false,"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,69,"null,"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,70,"children,"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,71,'k');
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,74,public static final Argument COMPLEX_ARGUMENT =
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,75,new ArgumentBuilder()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,76,".withName(""username"")"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,77,.withMinimum(1)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,78,.withMaximum(1)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,79,.create();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,81,public static final Option COMPLEX_CHILD_SSL =
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,82,new DefaultOptionBuilder()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,83,".withLongName(""ssl"")"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,84,".withShortName(""s"")"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,85,.create();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,87,public static final Option COMPLEX_CHILD_BASIC =
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,88,new DefaultOptionBuilder()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,89,".withLongName(""basic"")"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,90,".withShortName(""b"")"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,91,.create();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,93,public static final Option COMPLEX_CHILD_DIGEST =
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,94,new DefaultOptionBuilder()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,95,".withLongName(""digest"")"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,96,".withShortName(""d"")"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,97,.create();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,99,public static final Group COMPLEX_CHILDREN =
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,100,new GroupBuilder()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,101,".withName(""login-opts"")"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,102,.withOption(COMPLEX_CHILD_BASIC)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,103,.withOption(COMPLEX_CHILD_DIGEST)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,104,.withOption(COMPLEX_CHILD_SSL)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,105,.create();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,107,public static Parent buildComplexParent() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,108,return new CommandBuilder()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,109,".withName(""login"")"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,110,".withName(""lo"")"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,111,.withArgument(COMPLEX_ARGUMENT)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,112,.withChildren(COMPLEX_CHILDREN)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,113,.create();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,116,/* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,117,* @see org.apache.commons.cli2.ParentTestCase#testProcessParent()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,119,public void testProcessParent() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,120,final Parent option = buildKParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,121,"final List args = list(""-k"", ""start"");"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,122,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,123,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,124,"option.processParent(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,126,"assertEquals(""start"", iterator.next());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,127,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,128,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,129,"assertTrue(commandLine.hasOption(""-k""));"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,130,assertTrue(commandLine.getValues(option).isEmpty());
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,133,/* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,134,* @see org.apache.commons.cli2.OptionTestCase#testCanProcess()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,136,public void testCanProcess() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,137,final Parent option = buildKParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,138,"assertTrue(option.canProcess(""-k""));"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,141,public void testCanProcess_BadMatch() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,142,final Parent option = buildKParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,143,"assertFalse(option.canProcess(""-K""));"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,146,public void testCanProcess_ContractedArgument() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,147,final Parent option = buildLibParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,148,"assertTrue(option.canProcess(""--lib=/usr/lib""));"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,151,/* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,152,* @see org.apache.commons.cli2.OptionTestCase#testPrefixes()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,154,public void testPrefixes() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,155,final Parent option = buildKParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,156,"assertContentsEqual(list(""-"", ""--""), option.getPrefixes());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,159,/* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,160,* @see org.apache.commons.cli2.OptionTestCase#testProcess()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,162,public void testProcess() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,163,final Parent option = CommandTest.buildStartCommand();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,164,"final List args = list(""start"");"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,165,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,166,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,167,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,169,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,170,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,171,"assertTrue(commandLine.hasOption(""start""));"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,172,"assertFalse(commandLine.hasOption(""stop""));"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,173,assertTrue(commandLine.getValues(option).isEmpty());
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,176,public void testProcess_Children() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,177,final Parent option = buildKParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,178,"final List args = list(""-k"", ""start"");"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,179,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,180,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,181,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,183,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,184,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,185,"assertTrue(commandLine.hasOption(""-k""));"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,186,"assertTrue(commandLine.hasOption(""start""));"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,187,"assertFalse(commandLine.hasOption(""stop""));"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,188,assertTrue(commandLine.getValues(option).isEmpty());
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,191,public void testProcess_Argument() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,192,final Parent option = buildLibParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,193,"final List args = list(""--lib=C:\\WINDOWS;C:\\WINNT;C:\\"");"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,194,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,195,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,196,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,198,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,199,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,200,"assertTrue(commandLine.hasOption(""--lib""));"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,201,assertContentsEqual(
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,202,"list(""C:\\WINDOWS"", ""C:\\WINNT"", ""C:\\""),"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,203,commandLine.getValues(option));
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,206,/* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,207,* @see org.apache.commons.cli2.OptionTestCase#testTriggers()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,209,public void testTriggers() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,210,final Parent option = buildKParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,211,"assertContentsEqual(list(""-k""), option.getTriggers());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,214,/* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,215,* @see org.apache.commons.cli2.OptionTestCase#testValidate()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,217,public void testValidate() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,218,final Parent option = CommandTest.buildStartCommand();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,219,"final WriteableCommandLine commandLine = commandLine(option, list());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,221,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,223,commandLine.addOption(option);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,225,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,228,public void testValidate_Children() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,229,final Parent option = buildKParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,230,"final WriteableCommandLine commandLine = commandLine(option, list());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,232,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,233,commandLine.addOption(option);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,235,try {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,236,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,237,"fail(""Missing a command"");"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,238,} catch (OptionException moe) {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,239,assertNotNull(moe.getOption());
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,240,"assertNotSame(option, moe.getOption());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,244,public void testValidate_Argument() throws OptionException {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,245,final Command option = CommandTest.buildLoginCommand();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,246,"final WriteableCommandLine commandLine = commandLine(option, list());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,248,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,250,commandLine.addOption(option);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,252,try {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,253,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,254,"fail(""Missing a value"");"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,255,} catch (OptionException moe) {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,256,"assertSame(option, moe.getOption());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,260,/* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,261,* @see org.apache.commons.cli2.OptionTestCase#testAppendUsage()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,263,public void testAppendUsage() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,264,final Option option = buildComplexParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,265,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,266,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,267,settings.remove(DisplaySetting.DISPLAY_GROUP_OUTER);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,268,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,270,assertEquals(
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,271,"""[login (lo) <username> [login-opts (--basic (-b)|--digest (-d)|--ssl (-s))]]"","
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,272,buffer.toString());
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,275,public void testAppendUsage_NoArguments() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,276,final Option option = buildComplexParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,277,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,278,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,279,settings.remove(DisplaySetting.DISPLAY_PARENT_ARGUMENT);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,280,settings.remove(DisplaySetting.DISPLAY_GROUP_OUTER);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,281,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,283,assertEquals(
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,284,"""[login (lo) [login-opts (--basic (-b)|--digest (-d)|--ssl (-s))]]"","
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,285,buffer.toString());
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,288,public void testAppendUsage_NoChildren() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,289,final Option option = buildComplexParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,290,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,291,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,292,settings.remove(DisplaySetting.DISPLAY_PARENT_CHILDREN);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,293,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,295,"assertEquals(""[login (lo) <username>]"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,298,public void testAppendUsage_NoArgumentsOrChildren() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,299,final Option option = buildComplexParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,300,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,301,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,302,settings.remove(DisplaySetting.DISPLAY_PARENT_CHILDREN);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,303,settings.remove(DisplaySetting.DISPLAY_PARENT_ARGUMENT);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,304,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,306,"assertEquals(""[login (lo)]"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,309,/* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,310,* @see org.apache.commons.cli2.OptionTestCase#testGetPreferredName()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,312,public void testGetPreferredName() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,313,final Option option = buildLibParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,314,"assertEquals(""--lib"", option.getPreferredName());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,317,/* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,318,* @see org.apache.commons.cli2.OptionTestCase#testGetDescription()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,320,public void testGetDescription() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,321,final Option option = buildLibParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,322,"assertEquals(""Specifies library search path"", option.getDescription());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,325,/* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,326,* @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,328,public void testHelpLines() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,329,final Option option = buildComplexParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,330,final List lines =
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,331,"option.helpLines(0, DisplaySetting.ALL, null);"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,332,final Iterator i = lines.iterator();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,334,final HelpLine line1 = (HelpLine) i.next();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,335,"assertEquals(0, line1.getIndent());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,336,"assertEquals(option, line1.getOption());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,338,final HelpLine line2 = (HelpLine) i.next();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,339,"assertEquals(1, line2.getIndent());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,340,"assertEquals(COMPLEX_ARGUMENT, line2.getOption());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,342,final HelpLine line3 = (HelpLine) i.next();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,343,"assertEquals(1, line3.getIndent());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,344,"assertEquals(COMPLEX_CHILDREN, line3.getOption());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,346,final HelpLine line4 = (HelpLine) i.next();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,347,"assertEquals(2, line4.getIndent());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,348,"assertEquals(COMPLEX_CHILD_BASIC, line4.getOption());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,350,final HelpLine line5 = (HelpLine) i.next();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,351,"assertEquals(2, line5.getIndent());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,352,"assertEquals(COMPLEX_CHILD_DIGEST, line5.getOption());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,354,final HelpLine line6 = (HelpLine) i.next();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,355,"assertEquals(2, line6.getIndent());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,356,"assertEquals(COMPLEX_CHILD_SSL, line6.getOption());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,358,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,361,public void testHelpLines_NoArgument() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,362,final Option option = buildComplexParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,363,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,364,settings.remove(DisplaySetting.DISPLAY_PARENT_ARGUMENT);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,365,"final List lines = option.helpLines(0, settings, null);"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,366,final Iterator i = lines.iterator();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,368,final HelpLine line1 = (HelpLine) i.next();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,369,"assertEquals(0, line1.getIndent());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,370,"assertEquals(option, line1.getOption());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,372,final HelpLine line3 = (HelpLine) i.next();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,373,"assertEquals(1, line3.getIndent());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,374,"assertEquals(COMPLEX_CHILDREN, line3.getOption());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,376,final HelpLine line4 = (HelpLine) i.next();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,377,"assertEquals(2, line4.getIndent());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,378,"assertEquals(COMPLEX_CHILD_BASIC, line4.getOption());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,380,final HelpLine line5 = (HelpLine) i.next();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,381,"assertEquals(2, line5.getIndent());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,382,"assertEquals(COMPLEX_CHILD_DIGEST, line5.getOption());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,384,final HelpLine line6 = (HelpLine) i.next();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,385,"assertEquals(2, line6.getIndent());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,386,"assertEquals(COMPLEX_CHILD_SSL, line6.getOption());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,388,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,391,public void testHelpLines_NoChildren() {
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,392,final Option option = buildComplexParent();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,393,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,394,settings.remove(DisplaySetting.DISPLAY_PARENT_CHILDREN);
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,395,"final List lines = option.helpLines(0, settings, null);"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,396,final Iterator i = lines.iterator();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,398,final HelpLine line1 = (HelpLine) i.next();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,399,"assertEquals(0, line1.getIndent());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,400,"assertEquals(option, line1.getOption());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,402,final HelpLine line2 = (HelpLine) i.next();
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,403,"assertEquals(1, line2.getIndent());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,404,"assertEquals(COMPLEX_ARGUMENT, line2.getOption());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,406,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,409,public void testGetId(){
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,410,"assertEquals('h', DefaultOptionTest.buildHelpOption().getId());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,411,"assertEquals('X', DefaultOptionTest.buildXOption().getId());"
True,src/test/org/apache/commons/cli2/option/ParentTest.java,src/test/org/apache/commons/cli2/option/ParentTest.java,412,"assertEquals(0, CommandTest.buildStartCommand().getId());"
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli2/option/ParentTestCase.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli2/option/ParentTestCase.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli2/option/ParentTestCase.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli2/option/ParentTestCase.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli2/option/ParentTestCase.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli2/option/ParentTestCase.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli2/option/ParentTestCase.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli2/option/ParentTestCase.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli2/option/ParentTestCase.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli2/option/ParentTestCase.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli2/option/ParentTestCase.java,16,package org.apache.commons.cli2.option;
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli2/option/ParentTestCase.java,18,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli2/option/ParentTestCase.java,21,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli2/option/ParentTestCase.java,23,public abstract class ParentTestCase extends OptionTestCase {
True,src/test/org/apache/commons/cli2/option/ParentTestCase.java,src/test/org/apache/commons/cli2/option/ParentTestCase.java,24,public abstract void testProcessParent() throws OptionException;
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,16,package org.apache.commons.cli2.option;
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,18,import java.util.HashSet;
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,19,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,20,import java.util.List;
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,21,import java.util.ListIterator;
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,22,import java.util.Set;
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,24,import org.apache.commons.cli2.DisplaySetting;
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,25,import org.apache.commons.cli2.HelpLine;
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,26,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,27,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,28,import org.apache.commons.cli2.WriteableCommandLine;
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,31,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,33,public class PropertyOptionTest extends OptionTestCase {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,36,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,38,* @see org.apache.commons.cli2.OptionTestCase#testCanProcess()
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,40,public void testCanProcess() {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,41,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,42,"assertTrue(option.canProcess(""-Dmyprop=myval""));"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,45,public void testCanProcess_Null() {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,46,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,47,assertFalse(option.canProcess((String) null));
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,50,public void testCanProcess_TooShort() {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,51,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,52,"assertFalse(option.canProcess(""-D""));"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,55,public void testCanProcess_BadMatch() {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,56,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,57,"assertFalse(option.canProcess(""-dump""));"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,61,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,63,* @see org.apache.commons.cli2.OptionTestCase#testPrefixes()
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,65,public void testPrefixes() {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,66,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,67,"assertContentsEqual(list(""-D""), option.getPrefixes());"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,71,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,73,* @see org.apache.commons.cli2.OptionTestCase#testProcess()
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,75,public void testProcess() throws OptionException {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,76,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,77,"final List args = list(""-Dmyprop=myvalue"");"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,78,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,79,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,81,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,82,"assertEquals(""myvalue"", commandLine.getProperty(""myprop""));"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,83,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,84,"assertEquals(1, commandLine.getProperties().size());"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,87,public void testProcess_UnexpectedOptionException()
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,88,throws OptionException {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,89,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,90,"final List args = list(""--help"");"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,91,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,92,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,94,try {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,95,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,96,"fail(""UnexpectedOption"");"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,98,catch (final OptionException uoe) {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,99,"assertEquals(option, uoe.getOption());"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,100,assertEquals(
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,101,"""Unexpected --help while processing -Dproperty=value"","
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,102,uoe.getMessage());
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,106,public void testProcess_BadPropertyException() throws OptionException {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,107,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,108,"final List args = list(""-Dmyprop"");"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,109,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,110,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,112,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,114,"assertEquals(""true"", commandLine.getProperty(""myprop""));"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,117,public void testProcess_SetToEmpty() throws OptionException {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,118,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,119,"final List args = list(""-Dmyprop="");"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,120,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,121,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,123,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,124,"assertEquals("""", commandLine.getProperty(""myprop""));"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,125,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,126,"assertEquals(1, commandLine.getProperties().size());"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,130,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,132,* @see org.apache.commons.cli2.OptionTestCase#testTriggers()
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,134,public void testTriggers() {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,135,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,137,"assertContentsEqual(list(""-D""), option.getTriggers());"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,141,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,143,* @see org.apache.commons.cli2.OptionTestCase#testValidate()
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,145,public void testValidate() throws OptionException {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,146,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,147,"final List args = list(""-Dproperty=value"");"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,148,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,149,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,151,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,153,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,157,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,159,* @see org.apache.commons.cli2.OptionTestCase#testAppendUsage()
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,161,public void testAppendUsage() {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,162,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,163,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,164,"option.appendUsage(buffer, DisplaySetting.ALL, null);"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,166,"assertEquals(""-D<property>=<value>"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,169,public void testAppendUsage_Hidden() {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,170,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,171,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,172,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,173,settings.remove(DisplaySetting.DISPLAY_PROPERTY_OPTION);
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,174,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,176,"assertEquals("""", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,180,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,182,* @see org.apache.commons.cli2.OptionTestCase#testGetPreferredName()
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,184,public void testGetPreferredName() {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,185,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,186,"assertEquals(""-D"", option.getPreferredName());"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,190,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,192,* @see org.apache.commons.cli2.OptionTestCase#testGetDescription()
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,194,public void testGetDescription() {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,195,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,196,assertEquals(
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,197,"""Passes properties and values to the application"","
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,198,option.getDescription());
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,202,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,204,* @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,206,public void testHelpLines() {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,207,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,208,"final List lines = option.helpLines(0, DisplaySetting.ALL, null);"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,209,final Iterator i = lines.iterator();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,211,final HelpLine line1 = (HelpLine)i.next();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,212,"assertEquals(0, line1.getIndent());"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,213,"assertEquals(option, line1.getOption());"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,215,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,219,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,221,* @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,223,public void testHelpLines_NoDisplay() {
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,224,final Option option = new PropertyOption();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,225,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,226,settings.remove(DisplaySetting.DISPLAY_PROPERTY_OPTION);
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,227,"final List lines = option.helpLines(0, settings, null);"
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,228,final Iterator i = lines.iterator();
True,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,src/test/org/apache/commons/cli2/option/PropertyOptionTest.java,230,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,16,package org.apache.commons.cli2.option;
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,18,import java.util.HashSet;
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,19,import java.util.List;
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,20,import java.util.ListIterator;
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,21,import java.util.Set;
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,23,import org.apache.commons.cli2.DisplaySetting;
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,24,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,25,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,26,import org.apache.commons.cli2.Parent;
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,27,import org.apache.commons.cli2.WriteableCommandLine;
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,30,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,32,* To change the template for this generated type comment go to
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,33,* Window>Preferences>Java>Code Generation>Code and Comments
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,35,public class SwitchTest extends ParentTestCase {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,37,public static Switch buildDisplaySwitch() {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,38,final Set aliases = new HashSet();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,39,"aliases.add(""d"");"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,40,"aliases.add(""disp"");"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,41,return new Switch(
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,44,"""display"","
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,45,"aliases,"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,46,"""Sets whether to display to screen"","
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,47,"true,"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,48,"null,"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,49,"null,"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,50,'d');
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,54,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,56,* @see org.apache.commons.cli2.ParentTestCase#testProcessParent()
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,58,public void testProcessParent() throws OptionException {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,59,final Switch option = buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,60,"final List args = list(""+d"");"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,61,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,62,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,63,"option.processParent(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,65,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,66,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,67,"assertTrue(commandLine.hasOption(""+d""));"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,68,"assertTrue(commandLine.hasOption(""-display""));"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,69,"assertEquals(Boolean.TRUE, commandLine.getSwitch(""-d""));"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,70,assertTrue(commandLine.getValues(option).isEmpty());
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,73,public void testProcessParent_Disabled() throws OptionException {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,74,final Switch option = buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,75,"final List args = list(""-disp"");"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,76,"final WriteableCommandLine commandLine = commandLine(option, args);"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,77,final ListIterator iterator = args.listIterator();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,78,"option.process(commandLine, iterator);"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,80,assertFalse(iterator.hasNext());
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,81,assertTrue(commandLine.hasOption(option));
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,82,"assertTrue(commandLine.hasOption(""+d""));"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,83,"assertTrue(commandLine.hasOption(""-display""));"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,84,"assertEquals(Boolean.FALSE, commandLine.getSwitch(""-d""));"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,85,assertTrue(commandLine.getValues(option).isEmpty());
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,89,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,91,* @see org.apache.commons.cli2.OptionTestCase#testCanProcess()
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,93,public void testCanProcess() {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,94,final Switch option = buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,95,"assertTrue(option.canProcess(""+d""));"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,98,public void testCanProcess_BadMatch() {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,99,final Switch option = buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,100,"assertFalse(option.canProcess(""-dont""));"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,104,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,106,* @see org.apache.commons.cli2.OptionTestCase#testPrefixes()
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,108,public void testPrefixes() {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,109,final Switch option = buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,110,"assertContentsEqual(list(""-"", ""+""), option.getPrefixes());"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,114,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,116,* @see org.apache.commons.cli2.OptionTestCase#testProcess()
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,118,public void testProcess() {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,119,// TODO Auto-generated method stub
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,124,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,126,* @see org.apache.commons.cli2.OptionTestCase#testTriggers()
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,128,public void testTriggers() {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,129,final Switch option = buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,130,assertContentsEqual(
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,131,"list(""-d"", ""+d"", ""-disp"", ""+disp"", ""+display"", ""-display""),"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,132,option.getTriggers());
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,136,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,138,* @see org.apache.commons.cli2.OptionTestCase#testValidate()
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,140,public void testValidate() throws OptionException {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,141,final Parent option = buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,142,"final WriteableCommandLine commandLine = commandLine(option, list());"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,144,try {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,145,option.validate(commandLine);
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,146,"fail(""Missing an option"");"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,148,catch (OptionException moe) {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,149,"assertSame(option, moe.getOption());"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,154,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,156,* @see org.apache.commons.cli2.OptionTestCase#testAppendUsage()
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,158,public void testAppendUsage() {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,159,final Option option = buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,160,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,161,"option.appendUsage(buffer, DisplaySetting.ALL, null);"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,163,assertEquals(
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,164,"""+display|-display (+d|-d,+disp|-disp)"","
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,165,buffer.toString());
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,168,public void testAppendUsage_NoAlias() {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,169,final Option option = buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,170,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,171,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,172,settings.remove(DisplaySetting.DISPLAY_ALIASES);
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,173,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,175,"assertEquals(""+display|-display"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,178,public void testAppendUsage_NoDisabled() {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,179,final Option option = buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,180,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,181,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,182,settings.remove(DisplaySetting.DISPLAY_SWITCH_DISABLED);
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,183,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,185,"assertEquals(""+display (+d,+disp)"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,188,public void testAppendUsage_NoEnabled() {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,189,final Option option = buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,190,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,191,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,192,settings.remove(DisplaySetting.DISPLAY_SWITCH_ENABLED);
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,193,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,195,"assertEquals(""-display (-d,-disp)"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,198,public void testAppendUsage_NoDisabledOrEnabled() {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,199,final Option option = buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,200,final StringBuffer buffer = new StringBuffer();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,201,final Set settings = new HashSet(DisplaySetting.ALL);
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,202,settings.remove(DisplaySetting.DISPLAY_SWITCH_DISABLED);
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,203,settings.remove(DisplaySetting.DISPLAY_SWITCH_ENABLED);
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,204,"option.appendUsage(buffer, settings, null);"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,206,"assertEquals(""+display (+d,+disp)"", buffer.toString());"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,210,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,212,* @see org.apache.commons.cli2.OptionTestCase#testGetPreferredName()
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,214,public void testGetPreferredName() {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,215,final Option option = buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,216,"assertEquals(""+display"", option.getPreferredName());"
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,220,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,222,* @see org.apache.commons.cli2.OptionTestCase#testGetDescription()
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,224,public void testGetDescription() {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,225,final Option option = buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,226,assertEquals(
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,227,"""Sets whether to display to screen"","
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,228,option.getDescription());
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,231,* (non-Javadoc)
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,233,* @see org.apache.commons.cli2.OptionTestCase#testHelpLines()
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,235,public void testHelpLines() {
True,src/test/org/apache/commons/cli2/option/SwitchTest.java,src/test/org/apache/commons/cli2/option/SwitchTest.java,236,// TODO Auto-generated method stub
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,16,package org.apache.commons.cli2.util;
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,18,import java.util.Collections;
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,19,import java.util.Comparator;
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,20,import java.util.List;
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,22,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,24,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,25,import org.apache.commons.cli2.builder.SwitchBuilder;
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,26,import org.apache.commons.cli2.option.CommandTest;
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,27,import org.apache.commons.cli2.option.DefaultOptionTest;
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,28,import org.apache.commons.cli2.option.GroupTest;
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,29,import org.apache.commons.cli2.option.OptionTestCase;
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,30,import org.apache.commons.cli2.option.ParentTest;
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,31,import org.apache.commons.cli2.option.SwitchTest;
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,34,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,36,public class ComparatorsTest extends TestCase {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,37,public void testGroupFirst() {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,38,final Option o1 = GroupTest.buildAntGroup();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,39,final Option o2 = ParentTest.buildLibParent();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,40,"final List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,42,"Collections.sort(list, Comparators.groupFirst());"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,44,OptionTestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,45,"OptionTestCase.list(o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,46,list);
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,49,public void testGroupLast() {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,50,final Option o1 = GroupTest.buildAntGroup();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,51,final Option o2 = ParentTest.buildLibParent();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,52,"final List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,54,"Collections.sort(list, Comparators.groupLast());"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,56,OptionTestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,57,"OptionTestCase.list(o2, o1),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,58,list);
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,61,public void testSwitchFirst() {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,62,final Option o1 = SwitchTest.buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,63,final Option o2 = ParentTest.buildLibParent();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,64,"final List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,66,"Collections.sort(list, Comparators.switchFirst());"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,68,OptionTestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,69,"OptionTestCase.list(o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,70,list);
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,73,public void testSwitchLast() {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,74,final Option o1 = SwitchTest.buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,75,final Option o2 = ParentTest.buildLibParent();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,76,"final Option o3 = new SwitchBuilder().withName(""hidden"").create();"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,77,"final List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,79,"Collections.sort(list, Comparators.switchLast());"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,81,OptionTestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,82,"OptionTestCase.list(o2, o1),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,83,list);
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,86,public void testCommandFirst() {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,87,final Option o1 = CommandTest.buildCommitCommand();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,88,final Option o2 = ParentTest.buildLibParent();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,89,"final List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,91,"Collections.sort(list, Comparators.commandFirst());"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,93,OptionTestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,94,"OptionTestCase.list(o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,95,list);
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,98,public void testCommandLast() {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,99,final Option o1 = CommandTest.buildCommitCommand();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,100,final Option o2 = ParentTest.buildLibParent();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,101,"final List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,103,"Collections.sort(list, Comparators.commandLast());"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,105,OptionTestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,106,"OptionTestCase.list(o2, o1),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,107,list);
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,110,public void testDefaultOptionFirst() {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,111,final Option o1 = DefaultOptionTest.buildHelpOption();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,112,final Option o2 = CommandTest.buildCommitCommand();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,113,"final List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,115,"Collections.sort(list, Comparators.defaultOptionFirst());"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,117,OptionTestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,118,"OptionTestCase.list(o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,119,list);
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,122,public void testDefaultOptionLast() {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,123,final Option o1 = DefaultOptionTest.buildHelpOption();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,124,final Option o2 = CommandTest.buildCommitCommand();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,125,"final List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,127,"Collections.sort(list, Comparators.defaultOptionLast());"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,129,OptionTestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,130,"OptionTestCase.list(o2, o1),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,131,list);
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,134,public void testNamedFirst() {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,135,final Option o1 = DefaultOptionTest.buildHelpOption();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,136,final Option o2 = ParentTest.buildLibParent();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,137,"final List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,139,"Collections.sort(list, Comparators.namedFirst(""--help""));"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,141,OptionTestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,142,"OptionTestCase.list(o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,143,list);
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,146,public void testNamedLast() {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,147,final Option o1 = DefaultOptionTest.buildHelpOption();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,148,final Option o2 = ParentTest.buildLibParent();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,149,"final List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,151,"Collections.sort(list, Comparators.namedLast(""--help""));"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,153,OptionTestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,154,"OptionTestCase.list(o2, o1),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,155,list);
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,158,public void testPreferredNameFirst() {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,159,final Option o1 = DefaultOptionTest.buildHelpOption();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,160,final Option o2 = ParentTest.buildLibParent();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,161,"final List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,163,"Collections.sort(list, Comparators.preferredNameFirst());"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,165,OptionTestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,166,"OptionTestCase.list(o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,167,list);
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,170,public void testPreferredNameLast() {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,171,final Option o1 = DefaultOptionTest.buildHelpOption();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,172,final Option o2 = ParentTest.buildLibParent();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,173,"final List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,175,"Collections.sort(list, Comparators.preferredNameLast());"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,177,OptionTestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,178,"OptionTestCase.list(o2, o1),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,179,list);
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,182,public void testRequiredFirst() {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,183,final Option o1 = DefaultOptionTest.buildHelpOption();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,184,final Option o2 = DefaultOptionTest.buildXOption();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,185,"final List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,187,"Collections.sort(list, Comparators.requiredFirst());"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,189,OptionTestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,190,"OptionTestCase.list(o2, o1),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,191,list);
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,194,public void testRequiredLast() {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,195,final Option o1 = DefaultOptionTest.buildHelpOption();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,196,final Option o2 = DefaultOptionTest.buildXOption();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,197,"final List list = OptionTestCase.list(o1, o2);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,199,"Collections.sort(list, Comparators.requiredLast());"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,201,OptionTestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,202,"OptionTestCase.list(o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,203,list);
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,206,public void testChained() {
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,207,final Option o1 = CommandTest.buildCommitCommand();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,208,final Option o2 = SwitchTest.buildDisplaySwitch();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,209,final Option o3 = DefaultOptionTest.buildHelpOption();
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,210,"final List list = OptionTestCase.list(o1, o2, o3);"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,212,Collections.sort(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,213,"list,"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,214,Comparators.chain(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,215,"Comparators.namedFirst(""--help""),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,216,Comparators.commandFirst()));
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,218,OptionTestCase.assertListContentsEqual(
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,219,"OptionTestCase.list(o3, o1, o2),"
True,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,src/test/org/apache/commons/cli2/util/ComparatorsTest.java,220,list);
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,16,package org.apache.commons.cli2.util;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,18,import java.io.BufferedReader;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,19,import java.io.IOException;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,20,import java.io.PrintWriter;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,21,import java.io.StringReader;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,22,import java.io.StringWriter;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,23,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,25,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,27,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,28,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,29,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,30,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,31,import org.apache.commons.cli2.option.ArgumentTest;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,32,import org.apache.commons.cli2.option.DefaultOptionTest;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,34,public class HelpFormatterTest extends TestCase {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,35,private HelpFormatter helpFormatter;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,36,private Option verbose;
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,38,public void setUp() {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,39,"helpFormatter = new HelpFormatter(""|*"", ""*-*"", ""*|"", 80);"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,40,helpFormatter.setDivider(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,42,"helpFormatter.setHeader(""Jakarta Commons CLI"");"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,43,"helpFormatter.setFooter(""Copyright 2003\nApache Software Foundation"");"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,44,"helpFormatter.setShellCommand(""ant"");"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,46,verbose =
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,47,new DefaultOptionBuilder()
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,48,".withLongName(""verbose"")"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,49,".withDescription(""print the version information and exit"")"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,50,.create();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,52,helpFormatter.setGroup(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,53,new GroupBuilder()
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,54,".withName(""options"")"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,55,.withOption(DefaultOptionTest.buildHelpOption())
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,56,.withOption(ArgumentTest.buildTargetsArgument())
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,57,.withOption(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,58,new DefaultOptionBuilder()
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,59,".withLongName(""diagnostics"")"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,60,".withDescription(""print information that might be helpful to diagnose or report problems."")"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,61,.create())
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,62,.withOption(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,63,new DefaultOptionBuilder()
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,64,".withLongName(""projecthelp"")"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,65,".withDescription(""print project help information"")"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,66,.create())
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,67,.withOption(verbose)
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,68,.create());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,71,public void testPrint() throws IOException {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,72,final StringWriter writer = new StringWriter();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,73,helpFormatter.setPrintWriter(new PrintWriter(writer));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,74,helpFormatter.print();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,76,//System.out.println(writer.toString());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,78,final BufferedReader reader =
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,79,new BufferedReader(new StringReader(writer.toString()));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,80,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,82,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,83,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,84,"""|*Jakarta Commons CLI                                                         *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,85,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,86,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,88,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,89,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,90,"""|*Usage:                                                                      *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,91,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,92,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,93,"""|*ant [--help --diagnostics --projecthelp --verbose] [<target1> [<target2>    *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,94,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,95,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,97,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,98,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,100,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,101,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,102,"""|*options              *-*                                                    *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,103,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,104,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,105,"""|*  --help (-?,-h)     *-*Displays the help                                   *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,106,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,107,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,108,"""|*  --diagnostics      *-*print information that might be helpful to diagnose *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,109,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,110,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,111,"""|*                     *-*or report problems.                                 *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,112,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,113,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,114,"""|*  --projecthelp      *-*print project help information                      *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,115,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,116,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,117,"""|*  --verbose          *-*print the version information and exit              *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,118,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,119,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,120,"""|*  target [target ...]*-*The targets ant should build                        *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,121,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,122,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,124,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,125,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,126,"""|*Copyright 2003                                                              *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,127,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,128,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,129,"""|*Apache Software Foundation                                                  *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,130,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,131,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,133,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,134,assertNull(reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,137,public void testPrintHelp() throws IOException {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,138,final StringWriter writer = new StringWriter();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,139,helpFormatter.setPrintWriter(new PrintWriter(writer));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,140,helpFormatter.printHelp();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,141,final BufferedReader reader =
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,142,new BufferedReader(new StringReader(writer.toString()));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,143,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,145,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,146,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,147,"""|*options              *-*                                                    *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,148,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,149,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,150,"""|*  --help (-?,-h)     *-*Displays the help                                   *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,151,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,152,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,153,"""|*  --diagnostics      *-*print information that might be helpful to diagnose *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,154,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,155,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,156,"""|*                     *-*or report problems.                                 *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,157,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,158,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,159,"""|*  --projecthelp      *-*print project help information                      *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,160,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,161,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,162,"""|*  --verbose          *-*print the version information and exit              *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,163,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,164,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,165,"""|*  target [target ...]*-*The targets ant should build                        *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,166,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,167,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,169,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,170,assertNull(reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,173,public void testPrintHelp_WithException() throws IOException {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,174,final StringWriter writer = new StringWriter();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,175,helpFormatter.setPrintWriter(new PrintWriter(writer));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,176,helpFormatter.setException(new OptionException(verbose));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,177,helpFormatter.printHelp();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,178,//System.out.println(writer);
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,179,final BufferedReader reader =
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,180,new BufferedReader(new StringReader(writer.toString()));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,181,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,183,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,184,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,185,"""|*--verbose*-*print the version information and exit                          *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,186,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,187,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,189,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,190,assertNull(reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,193,public void testPrintException() throws IOException {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,194,final StringWriter writer = new StringWriter();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,195,helpFormatter.setPrintWriter(new PrintWriter(writer));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,196,"helpFormatter.setException(new OptionException(verbose, ""cli.error.missing.option""));"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,197,helpFormatter.printException();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,198,//System.out.println(writer);
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,199,final BufferedReader reader =
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,200,new BufferedReader(new StringReader(writer.toString()));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,201,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,203,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,204,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,205,"""|*Missing option --verbose                                                    *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,206,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,207,assertNull(reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,210,public void testPrintUsage() throws IOException {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,211,final StringWriter writer = new StringWriter();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,212,helpFormatter.setPrintWriter(new PrintWriter(writer));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,213,helpFormatter.printUsage();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,214,final BufferedReader reader =
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,215,new BufferedReader(new StringReader(writer.toString()));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,216,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,218,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,219,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,220,"""|*Usage:                                                                      *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,221,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,222,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,223,"""|*ant [--help --diagnostics --projecthelp --verbose] [<target1> [<target2>    *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,224,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,225,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,227,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,228,assertNull(reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,231,public void testPrintHeader() throws IOException {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,232,final StringWriter writer = new StringWriter();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,233,helpFormatter.setPrintWriter(new PrintWriter(writer));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,234,helpFormatter.printHeader();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,235,final BufferedReader reader =
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,236,new BufferedReader(new StringReader(writer.toString()));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,237,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,239,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,240,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,241,"""|*Jakarta Commons CLI                                                         *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,242,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,243,assertNull(reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,246,public void testPrintFooter() throws IOException {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,247,final StringWriter writer = new StringWriter();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,248,helpFormatter.setPrintWriter(new PrintWriter(writer));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,249,helpFormatter.printFooter();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,250,final BufferedReader reader =
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,251,new BufferedReader(new StringReader(writer.toString()));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,252,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,253,"""|*Copyright 2003                                                              *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,254,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,255,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,256,"""|*Apache Software Foundation                                                  *|"","
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,257,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,258,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,260,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,261,assertNull(reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,264,public void testPrintDivider() throws IOException {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,265,final StringWriter writer = new StringWriter();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,266,helpFormatter.setPrintWriter(new PrintWriter(writer));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,267,helpFormatter.printDivider();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,268,final BufferedReader reader =
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,269,new BufferedReader(new StringReader(writer.toString()));
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,270,assertEquals(
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,272,reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,273,assertNull(reader.readLine());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,276,public void testWrap() {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,277,final Iterator i =
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,278,"HelpFormatter.wrap(""Apache Software Foundation"", 30).iterator();"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,279,"assertEquals(""Apache Software Foundation"", i.next());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,280,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,283,public void testWrap_WrapNeeded() {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,284,final Iterator i =
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,285,"HelpFormatter.wrap(""Apache Software Foundation"", 20).iterator();"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,286,"assertEquals(""Apache Software"", i.next());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,287,"assertEquals(""Foundation"", i.next());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,288,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,291,public void testWrap_BeforeSpace() {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,292,final Iterator i =
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,293,"HelpFormatter.wrap(""Apache Software Foundation"", 16).iterator();"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,294,"assertEquals(""Apache Software"", i.next());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,295,"assertEquals(""Foundation"", i.next());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,296,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,299,public void testWrap_AfterSpace() {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,300,final Iterator i =
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,301,"HelpFormatter.wrap(""Apache Software Foundation"", 17).iterator();"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,302,"assertEquals(""Apache Software"", i.next());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,303,"assertEquals(""Foundation"", i.next());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,304,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,307,public void testWrap_InWord() {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,308,final Iterator i =
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,309,"HelpFormatter.wrap(""Apache Software Foundation"", 8).iterator();"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,310,"assertEquals(""Apache"", i.next());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,311,"assertEquals(""Software"", i.next());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,312,"assertEquals(""Foundati"", i.next());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,313,"assertEquals(""on"", i.next());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,314,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,317,public void testWrap_NewLine() {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,318,final Iterator i =
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,319,"HelpFormatter.wrap(""\nApache Software Foundation\n"", 30).iterator();"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,320,"assertEquals("""", i.next());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,321,"assertEquals(""Apache Software Foundation"", i.next());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,322,"assertEquals("""", i.next());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,323,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,326,public void testPad() throws IOException {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,327,final StringWriter writer = new StringWriter();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,328,"HelpFormatter.pad(""hello"", 10, writer);"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,329,"assertEquals(""hello     "", writer.toString());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,332,public void testPad_Null() throws IOException {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,333,final StringWriter writer = new StringWriter();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,334,"HelpFormatter.pad(null, 10, writer);"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,335,"assertEquals(""          "", writer.toString());"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,338,public void testPad_TooLong() throws IOException {
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,339,final StringWriter writer = new StringWriter();
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,340,"HelpFormatter.pad(""hello world"", 10, writer);"
True,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,src/test/org/apache/commons/cli2/util/HelpFormatterTest.java,341,"assertEquals(""hello world"", writer.toString());"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,16,package org.apache.commons.cli2.validation;
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,18,import java.net.URL;
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,19,import java.net.URLClassLoader;
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,20,import java.util.Arrays;
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,21,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,22,import java.util.List;
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,24,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,26,import org.apache.commons.cli2.resource.ResourceHelper;
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,28,public class ClassValidatorTest extends TestCase {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,30,private final static ResourceHelper resources =
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,31,ResourceHelper.getResourceHelper(ClassValidatorTest.class);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,33,private ClassValidator validator;
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,35,protected void setUp() {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,36,validator = new ClassValidator();
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,39,public void testValidName() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,40,"final Object[] array = new Object[] { ""MyApp"", ""org.apache.ant.Main"" };"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,41,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,43,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,45,"assertEquals(""Name is incorrect"", ""MyApp"", list.get(0));"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,46,"assertEquals(""Name is incorrect"", ""org.apache.ant.Main"", list.get(1));"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,49,public void testNameBadStart() {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,50,"final String className = ""1stClass"";"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,51,final Object[] array = new Object[] { className };
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,52,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,54,try {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,55,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,56,"fail(""Class name cannot start with a number."");"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,57,} catch (InvalidArgumentException ive) {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,58,assertEquals(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,59,resources.getMessage(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,60,"""ClassValidator.error.bad.classname"","
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,61,"className),"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,62,ive.getMessage());
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,66,public void testNameBadEnd() {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,67,"final String className = ""My.Class."";"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,69,final Object[] array = new Object[] { className };
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,70,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,72,try {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,73,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,74,"fail(""Trailing period not permitted."");"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,75,} catch (InvalidArgumentException ive) {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,76,assertEquals(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,77,resources.getMessage(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,78,"""ClassValidator.error.bad.classname"","
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,79,"className),"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,80,ive.getMessage());
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,84,public void testNameBadMiddle() {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,85,"final String className = ""My..Class"";"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,87,final Object[] array = new Object[] { className };
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,88,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,90,try {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,91,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,92,"fail(""Two consecutive periods is not permitted."");"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,93,} catch (InvalidArgumentException ive) {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,94,assertEquals(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,95,resources.getMessage(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,96,"""ClassValidator.error.bad.classname"","
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,97,"className),"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,98,ive.getMessage());
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,102,public void testIllegalNameChar() {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,103,"final String className = ""My?Class"";"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,105,final Object[] array = new Object[] { className };
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,106,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,108,try {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,109,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,110,"fail(""Illegal character not allowed in Class name."");"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,111,} catch (InvalidArgumentException ive) {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,112,assertEquals(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,113,resources.getMessage(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,114,"""ClassValidator.error.bad.classname"","
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,115,"className),"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,116,ive.getMessage());
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,120,public void testLoadable() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,121,"assertFalse(""Validator is loadable"", validator.isLoadable());"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,122,validator.setLoadable(true);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,123,"assertTrue(""Validator is NOT loadable"", validator.isLoadable());"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,124,validator.setLoadable(false);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,125,"assertFalse(""Validator is loadable"", validator.isLoadable());"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,128,public void testLoadValid() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,129,final Object[] array =
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,130,new Object[] {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,131,"""org.apache.commons.cli2.Option"","
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,132,"""java.util.Vector"" };"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,133,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,135,validator.setLoadable(true);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,136,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,138,final Iterator i = list.iterator();
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,139,assertEquals(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,140,"""org.apache.commons.cli2.Option"","
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,141,((Class) i.next()).getName());
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,142,"assertEquals(""java.util.Vector"", ((Class) i.next()).getName());"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,143,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,146,public void testLoadInvalid() {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,147,"final String className = ""org.apache.commons.cli2.NonOption"";"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,149,"final Object[] array = new Object[] { className, ""java.util.Vectors"" };"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,150,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,152,validator.setLoadable(true);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,154,try {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,155,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,156,"fail(""Class Not Found"");"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,157,} catch (InvalidArgumentException ive) {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,158,assertEquals(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,159,resources.getMessage(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,160,"""ClassValidator.error.class.notfound"","
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,161,"className),"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,162,ive.getMessage());
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,166,public void testInstantiate() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,167,"assertFalse(""Validator creates instances"", validator.isInstance());"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,168,validator.setInstance(true);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,169,assertTrue(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,170,"""Validator does NOT create instances"","
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,171,validator.isInstance());
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,172,validator.setInstance(false);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,173,"assertFalse(""Validator creates instances"", validator.isInstance());"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,176,public void testCreateClassInstance() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,177,"final Object[] array = new Object[] { ""java.util.Vector"" };"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,178,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,180,validator.setInstance(true);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,182,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,183,assertTrue(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,184,"""Vector instance NOT found"","
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,185,list.get(0) instanceof java.util.Vector);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,188,public void testCreateInterfaceInstance() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,189,"final String className = ""java.util.Map"";"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,190,final Object[] array = new Object[] { className };
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,191,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,193,validator.setInstance(true);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,195,try {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,196,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,197,"fail(""It's not possible to create a '"" + className + ""'"");"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,199,catch (final InvalidArgumentException ive) {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,200,assertEquals(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,201,resources.getMessage(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,202,"""ClassValidator.error.class.create"","
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,203,"className),"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,204,ive.getMessage());
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,208,public void testCreateProtectedInstance() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,209,"final String className = ""org.apache.commons.cli2.validation.protect.ProtectedClass"";"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,210,final Object[] array = new Object[] { className };
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,211,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,213,validator.setInstance(true);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,215,try {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,216,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,217,"fail(""It's not possible to create a '"" + className + ""'"");"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,219,catch (final InvalidArgumentException ive) {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,220,assertEquals(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,221,resources.getMessage(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,222,"""ClassValidator.error.class.access"","
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,223,"className,"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,224,"""Class org.apache.commons.cli2.validation.ClassValidator "" +"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,225,"""can not access a member of class "" +"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,226,"""org.apache.commons.cli2.validation.protect.ProtectedClass "" +"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,227,"""with modifiers \""protected\""""),"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,228,ive.getMessage());
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,232,public void testClassloader() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,233,assertEquals(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,234,"""Wrong classloader found"","
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,235,"validator.getClass().getClassLoader(),"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,236,validator.getClassLoader());
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,238,URLClassLoader classloader = new URLClassLoader(new URL[] {
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,240,validator.setClassLoader(classloader);
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,242,assertEquals(
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,243,"""Wrong classloader found"","
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,244,"classloader,"
True,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,src/test/org/apache/commons/cli2/validation/ClassValidatorTest.java,245,validator.getClassLoader());
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,16,package org.apache.commons.cli2.validation;
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,18,import java.text.DateFormat;
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,19,import java.text.SimpleDateFormat;
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,20,import java.util.Arrays;
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,21,import java.util.Calendar;
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,22,import java.util.Date;
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,23,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,24,import java.util.List;
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,26,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,29,* @author Rob Oxspring
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,30,* @author John Keyes
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,32,public class DateValidatorTest extends TestCase {
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,33,"public static final DateFormat D_M_YY = new SimpleDateFormat(""d/M/yy"");"
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,34,public static final DateFormat YYYY_MM_YY =
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,35,"new SimpleDateFormat(""yyyy-MM-dd"");"
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,36,"private List formats = Arrays.asList(new Object[] { D_M_YY, YYYY_MM_YY });"
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,38,public void testValidate() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,39,"final Object[] array = new Object[] { ""23/12/03"", ""2002-10-12"" };"
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,40,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,41,final Validator validator = new DateValidator(formats);
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,43,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,45,final Iterator i = list.iterator();
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,46,"assertEquals(""2003-12-23"", YYYY_MM_YY.format((Date)i.next()));"
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,47,"assertEquals(""2002-10-12"", YYYY_MM_YY.format((Date)i.next()));"
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,48,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,51,public void testMinimumBounds() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,52,final DateValidator validator = new DateValidator(formats);
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,53,final Calendar cal = Calendar.getInstance();
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,56,"final Object[] array = new Object[] { ""23/12/03"", ""2002-10-12"" };"
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,57,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,58,"cal.set(2002, 1, 12);"
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,59,final Date min = cal.getTime();
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,60,validator.setMinimum(min);
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,61,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,65,"final Object[] array = new Object[] { ""23/12/03"", ""2002-10-12"" };"
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,66,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,67,"cal.set(2003, 1, 12);"
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,68,final Date min = cal.getTime();
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,69,validator.setMinimum(min);
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,71,try {
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,72,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,73,"fail(""minimum out of bounds exception not caught"");"
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,75,catch (final InvalidArgumentException exp) {
True,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,src/test/org/apache/commons/cli2/validation/DateValidatorTest.java,76,"assertEquals(""Out of range: 2002-10-12"", exp.getMessage());"
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,2,* Copyright 2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,16,package org.apache.commons.cli2.validation;
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,18,import java.util.Arrays;
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,19,import java.util.HashSet;
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,20,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,21,import java.util.List;
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,22,import java.util.Set;
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,23,import java.util.TreeSet;
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,25,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,27,public class EnumValidatorTest extends TestCase {
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,28,private final Set enum = new TreeSet(
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,29,Arrays.asList(
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,30,"new Object[]{""red"", ""green"", ""blue""}));"
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,32,public void testValidate() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,33,"final Object[] array = new Object[] { ""red"", ""green""};"
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,34,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,35,final Validator validator = new EnumValidator(enum);
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,37,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,39,final Iterator i = list.iterator();
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,40,"assertEquals(""red"", i.next());"
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,41,"assertEquals(""green"", i.next());"
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,42,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,45,public void testNonMember() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,46,"final Object[] array = new Object[] { ""red"", ""pink""};"
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,47,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,48,final Validator validator = new EnumValidator(enum);
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,50,try{
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,51,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,52,"fail(""InvalidArgumentException"");"
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,54,catch(InvalidArgumentException e){
True,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,src/test/org/apache/commons/cli2/validation/EnumValidatorTest.java,55,"assertEquals(""'pink' is not allowed.  Permitted values are:['blue', 'green', 'red']"",e.getMessage());"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,2,* Copyright 2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,16,package org.apache.commons.cli2.validation;
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,18,import java.io.File;
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,19,import java.util.Arrays;
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,20,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,21,import java.util.List;
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,23,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,25,public class FileValidatorTest extends TestCase {
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,27,public void testValidate() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,28,"final Object[] array = new Object[] { ""src"", ""project.xml"", ""veryunlikelyfilename""};"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,29,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,30,final FileValidator validator = new FileValidator();
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,32,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,34,final Iterator i = list.iterator();
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,35,"assertEquals(new File(""src""), i.next());"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,36,"assertEquals(new File(""project.xml""), i.next());"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,37,"assertEquals(new File(""veryunlikelyfilename""), i.next());"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,38,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,41,public void testValidate_Directory() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,42,"final Object[] array = new Object[] { ""src"", ""project.xml""};"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,43,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,44,final Validator validator = FileValidator.getExistingDirectoryInstance();
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,46,try{
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,47,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,48,"fail(""InvalidArgumentException"");"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,50,catch(InvalidArgumentException e){
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,51,"assertEquals(""project.xml"",e.getMessage());"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,55,public void testValidate_File() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,56,"final Object[] array = new Object[] { ""project.xml"", ""src""};"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,57,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,58,final Validator validator = FileValidator.getExistingFileInstance();
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,60,try{
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,61,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,62,"fail(""InvalidArgumentException"");"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,64,catch(InvalidArgumentException e){
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,65,"assertEquals(""src"",e.getMessage());"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,69,public void testValidate_Existing() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,70,"final Object[] array = new Object[] { ""project.xml"", ""veryunlikelyfilename""};"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,71,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,72,final Validator validator = FileValidator.getExistingInstance();
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,74,try{
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,75,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,76,"fail(""InvalidArgumentException"");"
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,78,catch(InvalidArgumentException e){
True,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,src/test/org/apache/commons/cli2/validation/FileValidatorTest.java,79,"assertEquals(""veryunlikelyfilename"",e.getMessage());"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,16,package org.apache.commons.cli2.validation;
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,18,import java.text.NumberFormat;
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,19,import java.util.Arrays;
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,20,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,21,import java.util.List;
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,23,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,25,public class NumberValidatorTest extends TestCase {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,27,public void testValidate_Number() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,28,final NumberFormat format = NumberFormat.getNumberInstance();
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,30,final Object[] array =
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,31,new Object[] {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,32,"format.format(1d),"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,33,"format.format(1.07d),"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,34,format.format(-.45d)};
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,36,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,37,final Validator validator = NumberValidator.getNumberInstance();
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,39,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,41,final Iterator i = list.iterator();
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,42,"assertEquals(1d, ((Number)i.next()).doubleValue(), 0.0001);"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,43,"assertEquals(1.07d, ((Number)i.next()).doubleValue(), 0.0001);"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,44,"assertEquals(-.45d, ((Number)i.next()).doubleValue(), 0.0001);"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,45,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,48,public void testValidate_Currency() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,49,NumberFormat format = NumberFormat.getCurrencyInstance();
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,50,final Object[] array =
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,51,new Object[] {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,52,"format.format(1d),"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,53,"format.format(1.07),"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,54,format.format(-0.45)};
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,55,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,56,final Validator validator = NumberValidator.getCurrencyInstance();
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,58,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,60,final Iterator i = list.iterator();
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,61,"assertEquals(1d, ((Number)i.next()).doubleValue(), 0.0001);"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,62,"assertEquals(1.07d, ((Number)i.next()).doubleValue(), 0.0001);"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,63,"assertEquals(-.45d, ((Number)i.next()).doubleValue(), 0.0001);"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,64,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,67,public void testValidate_Percent() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,68,final NumberFormat format = NumberFormat.getPercentInstance();
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,70,final Object[] array
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,71,= new Object[] {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,72,"format.format(.01),"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,73,"format.format(1.07),"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,74,"format.format(-.45),"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,75,format.format(0.001) };
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,76,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,77,final Validator validator = NumberValidator.getPercentInstance();
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,79,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,81,final Iterator i = list.iterator();
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,82,"assertEquals(0.01d, ((Number)i.next()).doubleValue(), 0.0001);"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,83,"assertEquals(1.07d, ((Number)i.next()).doubleValue(), 0.0001);"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,84,"assertEquals(-.45d, ((Number)i.next()).doubleValue(), 0.0001);"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,85,"assertEquals(0.00001d, ((Number)i.next()).doubleValue(), 0.0001);"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,86,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,89,public void testValidate_Integer() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,90,"final Object[] array = new Object[] { ""1"", ""107"", ""-45"" };"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,91,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,92,final Validator validator = NumberValidator.getIntegerInstance();
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,94,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,96,final Iterator i = list.iterator();
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,97,"assertEquals(1d, ((Number)i.next()).doubleValue(), 0.0001);"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,98,"assertEquals(107d, ((Number)i.next()).doubleValue(), 0.0001);"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,99,"assertEquals(-45d, ((Number)i.next()).doubleValue(), 0.0001);"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,100,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,103,public void testValidate_ExcessChars() throws InvalidArgumentException {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,104,"final Object[] array = new Object[] { ""10DowningStreet""};"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,105,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,106,final Validator validator = NumberValidator.getIntegerInstance();
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,108,try{
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,109,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,110,"fail(""InvalidArgumentException"");"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,112,catch(InvalidArgumentException e){
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,113,"assertEquals(""10DowningStreet"",e.getMessage());"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,117,public void testValidate_Maximum() {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,118,"final Object[] array = new Object[] { ""1"", ""107"" };"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,119,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,120,final NumberValidator validator = NumberValidator.getIntegerInstance();
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,121,validator.setMaximum(new Integer(100));
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,123,try {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,124,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,125,"fail(""107 too big"");"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,127,catch (InvalidArgumentException ive) {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,128,"assertEquals(""Out of range: 107"", ive.getMessage());"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,132,public void testValidate_Minimum() {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,133,"final Object[] array = new Object[] { ""107"", ""1"" };"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,134,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,135,final NumberValidator validator = NumberValidator.getIntegerInstance();
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,136,validator.setMinimum(new Integer(100));
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,138,try {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,139,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,140,"fail(""1 too small"");"
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,142,catch (InvalidArgumentException ive) {
True,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,src/test/org/apache/commons/cli2/validation/NumberValidatorTest.java,143,"assertEquals(""Out of range: 1"", ive.getMessage());"
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,2,* Copyright 2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,16,package org.apache.commons.cli2.validation;
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,18,import java.net.MalformedURLException;
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,19,import java.net.URL;
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,20,import java.util.Arrays;
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,21,import java.util.Iterator;
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,22,import java.util.List;
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,24,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,26,public class UrlValidatorTest extends TestCase {
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,28,"public void testValidate() throws InvalidArgumentException, MalformedURLException {"
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,29,"final Object[] array = new Object[] { ""http://www.apache.org/"", ""file:///etc""};"
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,30,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,31,final Validator validator = new UrlValidator();
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,33,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,35,final Iterator i = list.iterator();
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,36,"assertEquals(new URL(""http://www.apache.org/""), i.next());"
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,37,"assertEquals(new URL(""file:///etc""), i.next());"
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,38,assertFalse(i.hasNext());
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,41,"public void testBadProtocol() throws InvalidArgumentException, MalformedURLException {"
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,42,"final Object[] array = new Object[] { ""http://www.apache.org/"", ""file:///etc""};"
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,43,final List list = Arrays.asList(array);
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,44,final UrlValidator validator = new UrlValidator();
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,45,"validator.setProtocol(""http"");"
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,47,try{
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,48,validator.validate(list);
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,49,"fail(""Expected InvalidArgumentException"");"
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,51,catch(InvalidArgumentException e){
True,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,src/test/org/apache/commons/cli2/validation/UrlValidatorTest.java,52,"assertEquals(""file:///etc"",e.getMessage());"
True,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,2,* Copyright 2003-2004 The Apache Software Foundation
True,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,14,* limitations under the License.
True,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,16,package org.apache.commons.cli2.validation.protect;
True,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,18,class ProtectedClass {
True,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,src/test/org/apache/commons/cli2/validation/protect/ProtectedClass.java,19,protected ProtectedClass() {
