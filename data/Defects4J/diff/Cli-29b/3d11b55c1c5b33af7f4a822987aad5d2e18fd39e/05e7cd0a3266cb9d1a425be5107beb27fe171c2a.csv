is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,25,ublic class OptionTest extends TestCase {
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,27,rivate static class TestOption extends Option {
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,28,"ublic TestOption(String opt, boolean hasArg, String description) throws IllegalArgumentException {"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,25,public class OptionTest extends TestCase
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,27,private static class TestOption extends Option
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,29,"public TestOption(String opt, boolean hasArg, String description) throws IllegalArgumentException"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,31,ublic boolean addValue(String value) {
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,34,public boolean addValue(String value)
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,37,ublic void testClear() {
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,38,"estOption option = new TestOption(""x"", true, """");"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,39,"ssertEquals(0, option.getValuesList().size());"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,40,"ption.addValue(""a"");"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,41,"ssertEquals(1, option.getValuesList().size());"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,42,ption.clearValues();
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,43,"ssertEquals(0, option.getValuesList().size());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,41,public void testClear()
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,43,"TestOption option = new TestOption(""x"", true, """");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,44,"assertEquals(0, option.getValuesList().size());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,45,"option.addValue(""a"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,46,"assertEquals(1, option.getValuesList().size());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,47,option.clearValues();
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,48,"assertEquals(0, option.getValuesList().size());"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,47,ublic void testClone() throws CloneNotSupportedException {
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,52,public void testClone() throws CloneNotSupportedException
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,62,rivate static class DefaultOption extends Option {
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,68,private static class DefaultOption extends Option
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,66,"ublic DefaultOption(String opt, String description, String defaultValue) throws IllegalArgumentException {"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,72,"public DefaultOption(String opt, String description, String defaultValue) throws IllegalArgumentException"
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,71,ublic String getValue() {
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,78,public String getValue()
False,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,76,ublic void testSubclass() throws CloneNotSupportedException {
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,84,public void testSubclass() throws CloneNotSupportedException
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,92,public void testHasArgName()
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,94,"Option option = new Option(""f"", null);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,96,option.setArgName(null);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,97,assertFalse(option.hasArgName());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,99,"option.setArgName("""");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,100,assertFalse(option.hasArgName());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,102,"option.setArgName(""file"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,103,assertTrue(option.hasArgName());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,106,public void testHasArgs()
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,108,"Option option = new Option(""f"", null);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,110,option.setArgs(0);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,111,assertFalse(option.hasArgs());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,113,option.setArgs(1);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,114,assertFalse(option.hasArgs());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,116,option.setArgs(10);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,117,assertTrue(option.hasArgs());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,119,option.setArgs(Option.UNLIMITED_VALUES);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,120,assertTrue(option.hasArgs());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,122,option.setArgs(Option.UNINITIALIZED);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,123,assertFalse(option.hasArgs());
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,126,public void testGetValue()
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,128,"Option option = new Option(""f"", null);"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,129,option.setArgs(Option.UNLIMITED_VALUES);
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,131,"assertEquals(""default"", option.getValue(""default""));"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,132,"assertEquals(null, option.getValue(0));"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,134,"option.addValueForProcessing(""foo"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,136,"assertEquals(""foo"", option.getValue());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,137,"assertEquals(""foo"", option.getValue(0));"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,138,"assertEquals(""foo"", option.getValue(""default""));"
