is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,2," $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/GnuParser.java,v 1.5 2002/08/14 22:27:39 jkeyes Exp $"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,3, $Revision: 1.5 $
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,4, $Date: 2002/08/14 22:27:39 $
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/GnuParser.java,v 1.6 2002/08/15 22:05:18 jkeyes Exp $"
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,3,* $Revision: 1.6 $
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,4,* $Date: 2002/08/15 22:05:18 $
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,187,f( !iter.hasNext() ) {
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,187,if( !iter.hasNext() && !opt.hasOptionalArg() ) {
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,264,f ( opt.hasArg() ) {
True,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,264,if ( opt.hasArg() ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,109,private boolean optionalArg = false;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,261,* Sets whether this Option can have an optional argument.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,263,* @param optionalArg specifies whether the Option can have
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,264,* an optional argument.
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,266,public void setOptionalArg( boolean optionalArg ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,267,if( optionalArg ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,268,this.numberOfArgs = 1;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,270,this.optionalArg = optionalArg;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,274,* @return whether this Option can have an optional argument
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,276,public boolean hasOptionalArg( ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,277,return this.optionalArg;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,463,option.setOptionalArg( hasOptionalArg() );
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,2," $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/OptionBuilder.java,v 1.4 2002/08/04 23:04:52 jkeyes Exp $"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,3, $Revision: 1.4 $
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,4, $Date: 2002/08/04 23:04:52 $
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/OptionBuilder.java,v 1.5 2002/08/15 22:05:18 jkeyes Exp $"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,3,* $Revision: 1.5 $
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,4,* $Date: 2002/08/15 22:05:18 $
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,86,private static boolean optionalArg;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,227,* <p>The next Option can have an optional argument.</p>
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,229,* @return the OptionBuilder instance
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,231,public static OptionBuilder hasOptionalArg( ) {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,232,instance.optionalArg = true;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,233,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,293,option.setOptionalArg( optionalArg );
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,2," $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/PosixParser.java,v 1.6 2002/08/14 22:27:39 jkeyes Exp $"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,3, $Revision: 1.6 $
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,4, $Date: 2002/08/14 22:27:39 $
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/PosixParser.java,v 1.7 2002/08/15 22:05:18 jkeyes Exp $"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,3,* $Revision: 1.7 $
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,4,* $Date: 2002/08/15 22:05:18 $
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,184,f( token.substring(i+1).length() == 0 ) {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,184,if( token.substring(i+1).length() == 0 && !opt.hasOptionalArg() ) {
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,189,tring var = token.substring(i+1);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,190,har sep = opt.getValueSeparator();
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,192,f( sep > 0 ) {
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,193,nt findex;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,194,hile( ( findex = var.indexOf( sep ) ) != -1 ) {
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,195,"tring val = var.substring( 0, findex );"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,196,ar = var.substring( findex + 1);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,197,f( !opt.addValue( val ) ) {
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,198,md.addArg( val );
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,201,f( !opt.addValue( var ) ) {
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,202,md.addArg( var );
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,206,/ add the argument value
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,210,pt.addValue( token.substring(i+1) );
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,264,ption opt = null;//(Option) options.getOption( arg );
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,243,Option opt = null;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,307,f( !iter.hasNext() ) {
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,286,if( !iter.hasNext() && !opt.hasOptionalArg() ) {
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,323,har sep = opt.getValueSeparator();
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,325,f( sep > 0 ) {
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,326,nt findex;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,327,hile( ( findex = var.indexOf( sep ) ) != -1 ) {
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,328,"tring val = var.substring( 0, findex );"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,329,ar = var.substring( findex + 1);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,330,f( !opt.addValue( val ) ) {
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,331,ter.previous();
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,332,eturn;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,335,f( !opt.addValue( var ) ) {
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,336,ter.previous();
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,337,eturn;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,340,lse if( !opt.addValue( var ) ) {
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,341,ter.previous();
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,342,eturn;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,8," $Id: BugsTest.java,v 1.1 2002/08/15 20:31:23 jkeyes Exp $"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,8,"* $Id: BugsTest.java,v 1.2 2002/08/15 22:05:19 jkeyes Exp $"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,65,public void test11456()
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,67,// Posix
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,68,Options options = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,69,options.addOption( OptionBuilder.hasOptionalArg()
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,70,.create( 'a' ) );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,71,options.addOption( OptionBuilder.hasArg()
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,72,.create( 'b' ) );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,73,"String[] args = new String[] { ""-a"", ""-bvalue"" };"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,75,CommandLineParser parser = CommandLineParserFactory.newParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,77,try {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,78,"CommandLine cmd = parser.parse( options, args );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,79,"assertEquals( cmd.getOptionValue( 'b' ), ""value"" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,81,catch( ParseException exp ) {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,82,"fail( ""Unexpected Exception: "" + exp.getMessage() );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,85,// GNU
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,86,options = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,87,options.addOption( OptionBuilder.hasOptionalArg()
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,88,.create( 'a' ) );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,89,options.addOption( OptionBuilder.hasArg()
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,90,.create( 'b' ) );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,91,"args = new String[] { ""-a"", ""-b"", ""value"" };"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,93,"parser = CommandLineParserFactory.newParser( ""org.apache.commons.cli.GnuParser"" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,95,try {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,96,"CommandLine cmd = parser.parse( options, args );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,97,"assertEquals( cmd.getOptionValue( 'b' ), ""value"" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,99,catch( ParseException exp ) {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,100,"fail( ""Unexpected Exception: "" + exp.getMessage() );"
