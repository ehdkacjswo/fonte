is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,223,"* @see #appendOptionGroup(StringBuffer,OptionGroup)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,224,"* @see #appendOption(StringBuffer,Option,boolean)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,231,rrayList list = new ArrayList();
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,233,final Collection processedGroups = new ArrayList();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,245,/ if the option is part of a group and the group has not already
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,246,/ been processed
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,247,f( group != null && !list.contains(group)) {
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,249,/ add the group to the processed list
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,250,ist.add( group );
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,252,/ get the names of the options from the OptionGroup
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,253,ollection names = group.getNames();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,255,"uff.append( ""["" );"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,257,/ for each option in the OptionGroup
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,258,or( Iterator iter = names.iterator(); iter.hasNext(); ) {
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,259,uff.append( iter.next() );
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,260,f( iter.hasNext() ) {
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,261,"uff.append( "" | "" );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,247,// if the option is part of a group
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,248,if( group != null) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,249,// and if the group has not already been processed
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,250,if( !processedGroups.contains(group) ) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,251,// add the group to the processed list
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,252,processedGroups.add( group );
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,253,// add the usage clause
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,254,"appendOptionGroup( buff, group );"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,264,"uff.append( ""]"" );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,256,// otherwise the option was displayed in the group
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,257,// previously so ignore it.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,268,/ if the Option is not a required option
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,269,f( !option.isRequired() ) {
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,270,"uff.append( ""["" );"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,273,"f( !"" "".equals( option.getOpt() ) ) {"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,274,"uff.append( ""-"" ).append( option.getOpt() );"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,276,lse {
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,277,"uff.append( ""--"" ).append( option.getLongOpt() );"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,280,/ if the Option has a value
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,281,f( option.hasArg() && option.getArgName() != null ) {
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,282,"uff.append( "" "" ).append( option.getArgName() );"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,285,/ if the Option is not a required option
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,286,f( !option.isRequired() ) {
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,287,"uff.append( ""]"" );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,261,"appendOption( buff, option, option.isRequired() );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,264,if( i.hasNext() ){
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,275,* Appends the usage clause for an OptionGroup to a StringBuffer.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,276,* The clause is wrapped in square brackets if the group is required.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,277,* The display of the options is handled by appendOption
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,278,* @param buff the StringBuffer to append to
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,279,* @param group the group to append
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,280,"* @see #appendOption(StringBuffer,Option,boolean)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,282,"private static void appendOptionGroup( final StringBuffer buff, final OptionGroup group )"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,284,if( !group.isRequired() ) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,285,"buff.append( ""["" );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,288,// for each option in the OptionGroup
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,289,for( Iterator i = group.getOptions().iterator(); i.hasNext(); ) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,290,// whether the option is required or not is handled at group level
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,291,"appendOption( buff, (Option)i.next(), true);"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,292,if( i.hasNext() ) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,293,"buff.append( "" | "" );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,297,if( !group.isRequired() ) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,298,"buff.append( ""]"" );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,303,* Appends the usage clause for an Option to a StringBuffer.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,304,* The clause is wrapped in square brackets if the group is required.
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,305,* The display of the options is handled by appendOption
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,306,* @param buff the StringBuffer to append to
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,307,* @param group the group to append
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,308,"* @see #appendOption(StringBuffer,Option,boolean)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,310,"private static void appendOption( final StringBuffer buff, final Option option, final boolean required)"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,312,if( !required ) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,313,"buff.append( ""["" );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,316,if( option.getOpt() != null ) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,317,"buff.append( ""-"" ).append( option.getOpt() );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,319,else {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,320,"buff.append( ""--"" ).append( option.getLongOpt() );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,323,// if the Option has a value
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,324,if( option.hasArg() && option.getArgName() != null ) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,325,"buff.append( "" <"" ).append( option.getArgName() ).append( "">"" );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,328,// if the Option is not a required option
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,329,if( !required ) {
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,330,"buff.append( ""]"" );"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,349,"f (option.getOpt().equals("" ""))"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,386,if ( option.getOpt() == null )
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,365,"ptBuf.append("" <"").append( option.getArgName() ).append( '>' );"
True,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,402,"optBuf.append("" <"").append( option.getArgName() ).append( "">"" );"
