is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,199,* Returns the parent of this option. Options can be organized in a
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,200,* hierarchical manner if they are added to groups. This method can be used
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,201,* for obtaining the parent option of this option. The result may be
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,202,* <b>null</b> if this option does not have a parent.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,204,* @return the parent of this option
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,206,Option getParent();
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,209,* Sets the parent of this option. This method is called when the option is
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,210,* added to a group. Storing the parent of an option makes it possible to
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,211,"* keep track of hierarchical relations between options. For instance, if an"
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,212,"* option is identified while parsing a command line, the group this option"
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,213,* belongs to can also be added to the command line.
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,215,* @param parent the parent option
True,src/java/org/apache/commons/cli2/Option.java,src/java/org/apache/commons/cli2/Option.java,217,void setParent(Option parent);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,73,// ensure that all parent options are also added
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,74,Option parent = option.getParent();
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,75,while (parent != null && !options.contains(parent)) {
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,76,options.add(parent);
True,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java,77,parent = parent.getParent();
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,92,option.setParent(this);
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,36,private Option parent;
False,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,98,ashCode = (hashCode * 37) + getPreferredName().hashCode();
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,99,if (getPreferredName() != null) {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,100,hashCode = (hashCode * 37) + getPreferredName().hashCode();
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,129,public Option getParent() {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,130,return parent;
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,133,public void setParent(Option parent) {
True,src/java/org/apache/commons/cli2/option/OptionImpl.java,src/java/org/apache/commons/cli2/option/OptionImpl.java,134,this.parent = parent;
True,src/test/org/apache/commons/cli2/CommandLineTestCase.java,src/test/org/apache/commons/cli2/CommandLineTestCase.java,436,"assertSame(group, i.next());"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,17,package org.apache.commons.cli2.bug;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,19,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,21,import org.apache.commons.cli2.CommandLine;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,22,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,23,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,24,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,25,import org.apache.commons.cli2.builder.ArgumentBuilder;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,26,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,27,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,28,import org.apache.commons.cli2.commandline.Parser;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,31,* Group options are not added to the command line when child elements are
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,32,* detected. This causes the validation of maximum and minimum to fail.
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,34,* @author Oliver Heger
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,35,* @version $Id$
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,37,public class BugCLI123Test extends TestCase {
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,38,/** An option of the parent group. */
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,39,private Option parentOption;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,41,/** An option of the child group. */
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,42,private Option childOption1;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,44,/** Another option of the child group. */
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,45,private Option childOption2;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,47,/** The parent group. */
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,48,private Group parentGroup;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,50,/** The child group. */
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,51,private Group childGroup;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,53,/** The parser. */
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,54,private Parser parser;
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,56,protected void setUp() throws Exception {
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,57,super.setUp();
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,58,final DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,59,final ArgumentBuilder abuilder = new ArgumentBuilder();
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,60,final GroupBuilder gbuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,61,"parentOption = obuilder.withLongName(""parent"").withShortName(""p"")"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,62,".withArgument(abuilder.withName(""name"").create()).create();"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,63,"childOption1 = obuilder.withLongName(""child"").withShortName(""c"")"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,64,".withArgument(abuilder.withName(""c"").create()).create();"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,65,"childOption2 = obuilder.withLongName(""sub"").withShortName(""s"")"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,66,".withArgument(abuilder.withName(""s"").create()).create();"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,67,"childGroup = gbuilder.withName(""childOptions"").withMinimum(0)"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,68,.withMaximum(2).withOption(childOption1).withOption(
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,69,childOption2).create();
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,70,"parentGroup = gbuilder.withName(""parentOptions"").withMinimum(1)"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,71,.withMaximum(1).withOption(parentOption).withOption(childGroup)
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,72,.create();
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,73,parser = new Parser();
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,74,parser.setGroup(parentGroup);
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,78,* A single option of the child group is specified.
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,80,public void testSingleChildOption() throws OptionException {
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,81,"CommandLine cl = parser.parse(new String[] { ""--child"", ""test"" });"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,82,"assertTrue(""Child option not found"", cl.hasOption(childOption1));"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,83,"assertEquals(""Wrong value for option"", ""test"", cl"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,84,.getValue(childOption1));
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,85,"assertTrue(""Child group not found"", cl.hasOption(childGroup));"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,89,* Two options of the child group are specified.
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,91,public void testMultipleChildOptions() throws OptionException {
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,92,"CommandLine cl = parser.parse(new String[] { ""--child"", ""test"","
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,93,"""--sub"", ""anotherTest"" });"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,94,"assertTrue(""Child option not found"", cl.hasOption(childOption1));"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,95,"assertEquals(""Wrong value for option"", ""test"", cl"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,96,.getValue(childOption1));
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,97,"assertTrue(""Sub option not found"", cl.hasOption(childOption2));"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,98,"assertEquals(""Wrong value for sub option"", ""anotherTest"", cl"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,99,.getValue(childOption2));
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,100,"assertTrue(""Child group not found"", cl.hasOption(childGroup));"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,104,* The option defined for the parent group is specified.
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,106,public void testSingleParentOption() throws OptionException {
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,107,"CommandLine cl = parser.parse(new String[] { ""--parent"", ""yes"" });"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,108,"assertTrue(""Parent option not found"", cl.hasOption(parentOption));"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,109,"assertEquals(""Wrong value for option"", ""yes"", cl.getValue(parentOption));"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,110,"assertFalse(""Found child group"", cl.hasOption(childGroup));"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,114,* The parent option and an option of the child group is specified. This
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,115,* should cause an exception.
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,117,public void testParentOptionAndChildOption() throws OptionException {
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,118,try {
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,119,"parser.parse(new String[] { ""--parent"", ""error"", ""--child"","
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,120,"""exception"" });"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,121,"fail(""Maximum restriction for parent not verified!"");"
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,122,} catch (OptionException oex) {
True,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,src/test/org/apache/commons/cli2/bug/BugCLI123Test.java,123,// ok
