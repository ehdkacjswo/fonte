is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,382,"hrow new UnrecognizedOptionException(""Unrecognized option: """
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,383, arg);
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,382,"throw new UnrecognizedOptionException(""Unrecognized option: "" + arg, arg);"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,29,/** The  unrecognized option */
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,30,private String option;
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,44,* Construct a new <code>UnrecognizedArgumentException</code>
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,45,* with the specified option and detail message.
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,47,* @param message the detail message
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,48,* @param option  the unrecognized option
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,49,* @since 1.2
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,51,"public UnrecognizedOptionException(String message, String option)"
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,53,this(message);
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,54,this.option = option;
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,58,* Returns the unrecognized option.
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,60,* @since 1.2
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,62,public String getOption()
True,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,64,return option;
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,68,ublic void testExtraOption() throws Exception
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,68,public void testUnrecognizedOption() throws Exception
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,70,"tring[] args = new String[] { ""-a"", ""-d"", ""-b"", ""toast"","
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,71,"foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,73,oolean caught = false;
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,70,"String[] args = new String[] { ""-a"", ""-d"", ""-b"", ""toast"", ""foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,77,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,79,"ssertTrue(""Confirm -a is set"", cl.hasOption(""a""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,80,"ssertTrue(""Confirm -b is set"", cl.hasOption(""b""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,81,"ssertTrue(""confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast""));"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,82,"ssertTrue(""Confirm size of extra args"", cl.getArgList().size() == 3);"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,74,"parser.parse(options, args);"
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,75,"fail(""UnrecognizedOptionException wasn't thrown"");"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,86,aught = true;
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,79,"assertEquals(""-d"", e.getOption());"
False,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,89,"ssertTrue( ""Confirm UnrecognizedOptionException caught"", caught );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,88,ublic void testExtraOption() throws Exception
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,88,public void testUnrecognizedOption() throws Exception
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,90,"tring[] args = new String[] { ""-adbtoast"","
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,91,"foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,93,oolean caught = false;
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,90,"String[] args = new String[] { ""-adbtoast"", ""foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,97,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,99,"ssertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,100,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,101,"ssertTrue( ""confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,102,"ssertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 3);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,94,"parser.parse(options, args);"
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,95,"fail(""UnrecognizedOptionException wasn't thrown"");"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,106,aught = true;
True,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,99,"assertEquals(""-adbtoast"", e.getOption());"
False,src/test/org/apache/commons/cli/PosixParserTest.java,src/test/org/apache/commons/cli/PosixParserTest.java,109,"ssertTrue( ""Confirm UnrecognizedOptionException caught"", caught );"
