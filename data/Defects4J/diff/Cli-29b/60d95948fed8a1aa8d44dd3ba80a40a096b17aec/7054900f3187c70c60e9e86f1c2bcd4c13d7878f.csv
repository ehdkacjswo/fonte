is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,2, Copyright 2002-2005 The Apache Software Foundation
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,3," Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,4, you may not use  this file  except in  compliance with the License.
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,5, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,7,   http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,9," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,10," distributed  under the  License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,11," WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,12, implied.
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,15, limitations under the License.
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,17,ackage org.apache.commons.cli.avalon;
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,18,/Renamed from org.apache.avalon.excalibur.cli
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,21, Class to inherit from so when in future when new controls are added
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,22, clients will no have to implement them.
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,23, @version $Revision: 1.2 $
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,24, @see ParserControl
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,26,ublic abstract class AbstractParserControl
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,27,mplements ParserControl
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,30, By default always continue parsing by returning false.
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,32, @param lastOptionCode the code of last option parsed
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,33," @return return true to halt, false to continue parsing"
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,34, @see ParserControl#isFinished(int)
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,36,ublic boolean isFinished( int lastOptionCode )
False,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,src/java/org/apache/commons/cli/avalon/AbstractParserControl.java,38,eturn false;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,2, Copyright 2002-2005 The Apache Software Foundation
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,3," Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,4, you may not use  this file  except in  compliance with the License.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,5, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,7,   http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,9," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,10," distributed  under the  License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,11," WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,12, implied.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,15, limitations under the License.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,17,ackage org.apache.commons.cli.avalon;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,18,/Renamed from org.apache.avalon.excalibur.cli
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,20,mport java.text.ParseException;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,21,mport java.util.Hashtable;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,22,mport java.util.Vector;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,25, Parser for command line arguments.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,27, This parses command lines according to the standard (?) of
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,28, GNU utilities.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,30, Note: This is still used in 1.1 libraries so do not add 1.2+ dependencies.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,32, Note that CLArgs uses a backing hashtable for the options index and so duplicate
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,33, arguments are only returned by getArguments().
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,35, @version $Revision: 1.2 $ $Date: 2005/03/18 15:26:55 $
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,36, @see ParserControl
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,37, @see CLOption
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,38, @see CLOptionDescriptor
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,40,ublic final class CLArgsParser
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,42,/cached character == Integer.MAX_VALUE when invalid
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,43,rivate static final int INVALID = Integer.MAX_VALUE;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,45,rivate static final int STATE_NORMAL = 0;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,46,rivate static final int STATE_REQUIRE_2ARGS = 1;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,47,rivate static final int STATE_REQUIRE_ARG = 2;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,48,rivate static final int STATE_OPTIONAL_ARG = 3;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,49,rivate static final int STATE_NO_OPTIONS = 4;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,50,rivate static final int STATE_OPTION_MODE = 5;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,52,/ Values for creating tokens
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,53,rivate static final int TOKEN_SEPARATOR = 0;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,54,rivate static final int TOKEN_STRING = 1;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,56,rivate static final char[] ARG_SEPARATORS =
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,57,"ew char[]{(char)0, '='};"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,59,rivate static final char[] NULL_SEPARATORS =
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,60,ew char[]{(char)0};
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,62,rivate final CLOptionDescriptor[] m_optionDescriptors;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,63,rivate final Vector m_options;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,64,rivate Hashtable m_optionIndex;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,65,rivate final ParserControl m_control;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,67,rivate String m_errorMessage;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,68,rivate String[] m_unparsedArgs = new String[]{};
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,70,/variables used while parsing options.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,71,rivate char m_ch;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,72,rivate String[] m_args;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,73,rivate boolean m_isLong;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,74,rivate int m_argIndex;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,75,rivate int m_stringIndex;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,76,rivate int m_stringLength;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,78,rivate int m_lastChar = INVALID;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,80,rivate int m_lastOptionId;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,81,rivate CLOption m_option;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,82,rivate int m_state = STATE_NORMAL;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,85, Retrieve an array of arguments that have not been parsed
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,86, due to the parser halting.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,88, @return an array of unparsed args
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,90,ublic final String[] getUnparsedArgs()
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,92,eturn m_unparsedArgs;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,96, Retrieve a list of options that were parsed from command list.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,98, @return the list of options
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,100,ublic final Vector getArguments()
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,102,"/System.out.println( ""Arguments: "" + m_options );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,103,eturn m_options;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,107," Retrieve the {@link CLOption} with specified id, or"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,108, <code>null</code> if no command line option is found.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,110, @param id the command line option id
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,111," @return the {@link CLOption} with the specified id, or"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,112,    <code>null</code> if no CLOption is found.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,113, @see CLOption
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,115,ublic final CLOption getArgumentById( final int id )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,117,eturn (CLOption)m_optionIndex.get( new Integer( id ) );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,121," Retrieve the {@link CLOption} with specified name, or"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,122, <code>null</code> if no command line option is found.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,124, @param name the command line option name
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,125," @return the {@link CLOption} with the specified name, or"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,126,    <code>null</code> if no CLOption is found.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,127, @see CLOption
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,129,ublic final CLOption getArgumentByName( final String name )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,131,eturn (CLOption)m_optionIndex.get( name );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,135, Get Descriptor for option id.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,137, @param id the id
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,138, @return the descriptor
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,140,rivate final CLOptionDescriptor getDescriptorFor( final int id )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,142,or( int i = 0; i < m_optionDescriptors.length; i++ )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,144,f( m_optionDescriptors[i].getId() == id )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,146,eturn m_optionDescriptors[i];
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,150,eturn null;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,154, Retrieve a descriptor by name.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,156, @param name the name
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,157, @return the descriptor
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,159,rivate final CLOptionDescriptor getDescriptorFor( final String name )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,161,or( int i = 0; i < m_optionDescriptors.length; i++ )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,163,f( m_optionDescriptors[i].getName().equals( name ) )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,165,eturn m_optionDescriptors[i];
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,169,eturn null;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,173, Retrieve an error message that occured during parsing if one existed.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,175, @return the error string
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,177,ublic final String getErrorString()
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,179,"/System.out.println( ""ErrorString: "" + m_errorMessage );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,180,eturn m_errorMessage;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,184, Require state to be placed in for option.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,186, @param descriptor the Option Descriptor
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,187, @return the state
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,189,rivate final int getStateFor( final CLOptionDescriptor descriptor )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,191,inal int flags = descriptor.getFlags();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,192,f( (flags & CLOptionDescriptor.ARGUMENTS_REQUIRED_2) ==
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,193,LOptionDescriptor.ARGUMENTS_REQUIRED_2 )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,195,eturn STATE_REQUIRE_2ARGS;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,197,lse if( (flags & CLOptionDescriptor.ARGUMENT_REQUIRED) ==
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,198,LOptionDescriptor.ARGUMENT_REQUIRED )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,200,eturn STATE_REQUIRE_ARG;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,202,lse if( (flags & CLOptionDescriptor.ARGUMENT_OPTIONAL) ==
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,203,LOptionDescriptor.ARGUMENT_OPTIONAL )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,205,eturn STATE_OPTIONAL_ARG;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,207,lse
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,209,eturn STATE_NORMAL;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,214, Create a parser that can deal with options and parses certain args.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,216," @param args the args, typically that passed to the"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,217, <code>public static void main(String[] args)</code> method.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,218, @param optionDescriptors the option descriptors
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,219, @param control the parser control used determine behaviour of parser
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,221,"ublic CLArgsParser( final String[] args,"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,222,"inal CLOptionDescriptor[] optionDescriptors,"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,223,inal ParserControl control )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,225,_optionDescriptors = optionDescriptors;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,226,_control = control;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,227,_options = new Vector();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,228,_args = args;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,230,ry
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,232,arse();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,233,heckIncompatibilities( m_options );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,234,uildOptionIndex();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,236,atch( final ParseException pe )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,238,_errorMessage = pe.getMessage();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,241,"/System.out.println( ""Built : "" + m_options );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,242,"/System.out.println( ""From : "" + Arrays.asList( args ) );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,246, Check for duplicates of an option.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,247, It is an error to have duplicates unless appropriate flags is set in descriptor.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,249, @param arguments the arguments
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,251,rivate final void checkIncompatibilities( final Vector arguments )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,252,hrows ParseException
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,254,inal int size = arguments.size();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,256,or( int i = 0; i < size; i++ )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,258,inal CLOption option = (CLOption)arguments.elementAt( i );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,259,inal int id = option.getDescriptor().getId();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,260,inal CLOptionDescriptor descriptor = getDescriptorFor( id );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,262,/this occurs when id == 0 and user has not supplied a descriptor
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,263,/for arguments
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,264,f( null == descriptor )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,266,ontinue;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,269,inal int[] incompatible = descriptor.getIncompatible();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,271,"heckIncompatible( arguments, incompatible, i );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,275,"rivate final void checkIncompatible( final Vector arguments,"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,276,"inal int[] incompatible,"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,277,inal int original )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,278,hrows ParseException
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,280,inal int size = arguments.size();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,282,or( int i = 0; i < size; i++ )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,284,f( original == i )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,286,ontinue;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,289,inal CLOption option = (CLOption)arguments.elementAt( i );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,290,inal int id = option.getDescriptor().getId();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,292,or( int j = 0; j < incompatible.length; j++ )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,294,f( id == incompatible[j] )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,296,inal CLOption originalOption = (CLOption)arguments.elementAt( original );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,297,inal int originalId = originalOption.getDescriptor().getId();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,299,tring message = null;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,301,f( id == originalId )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,303,essage =
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,304,"Duplicate options for "" + describeDualOption( originalId ) +"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,305," found."";"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,307,lse
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,309,"essage = ""Incompatible options -"" +"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,310,"escribeDualOption( id ) + "" and "" +"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,311,"escribeDualOption( originalId ) + "" found."";"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,313,"hrow new ParseException( message, 0 );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,319,rivate final String describeDualOption( final int id )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,321,inal CLOptionDescriptor descriptor = getDescriptorFor( id );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,322,f( null == descriptor )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,324,"eturn ""<parameter>"";"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,326,lse
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,328,inal StringBuffer sb = new StringBuffer();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,329,oolean hasCharOption = false;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,331,f( Character.isLetter( (char)id ) )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,333,b.append( '-' );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,334,b.append( (char)id );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,335,asCharOption = true;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,338,inal String longOption = descriptor.getName();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,339,f( null != longOption )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,341,f( hasCharOption )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,343,b.append( '/' );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,345,"b.append( ""--"" );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,346,b.append( longOption );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,349,eturn sb.toString();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,354, Create a parser that deals with options and parses certain args.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,356, @param args the args
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,357, @param optionDescriptors the option descriptors
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,359,"ublic CLArgsParser( final String[] args,"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,360,inal CLOptionDescriptor[] optionDescriptors )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,362,"his( args, optionDescriptors, null );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,366, Create a string array that is subset of input array.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,367, The sub-array should start at array entry indicated by index. That array element
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,368, should only include characters from charIndex onwards.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,370, @param array the original array
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,371, @param index the cut-point in array
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,372, @param charIndex the cut-point in element of array
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,373, @return the result array
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,375,"rivate final String[] subArray( final String[] array,"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,376,"inal int index,"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,377,inal int charIndex )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,379,inal int remaining = array.length - index;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,380,inal String[] result = new String[remaining];
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,382,f( remaining > 1 )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,384,"ystem.arraycopy( array, index + 1, result, 1, remaining - 1 );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,387,esult[0] = array[index].substring( charIndex - 1 );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,389,eturn result;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,393, Actually parse arguments
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,395,rivate final void parse()
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,396,hrows ParseException
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,398,f( 0 == m_args.length )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,400,eturn;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,403,_stringLength = m_args[m_argIndex].length();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,405,/ch = peekAtChar();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,407,hile( true )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,409,_ch = peekAtChar();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,411,"/System.out.println( ""Pre State="" + m_state );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,412,"/System.out.println( ""Pre Char="" + (char)ch + ""/"" + (int)ch );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,414,f( m_argIndex >= m_args.length )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,416,reak;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,419,f( null != m_control && m_control.isFinished( m_lastOptionId ) )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,421,/this may need mangling due to peeks
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,422,"_unparsedArgs = subArray( m_args, m_argIndex, m_stringIndex );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,423,eturn;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,426,"/System.out.println( ""State="" + m_state );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,427,"/System.out.println( ""Char="" + (char)ch + ""/"" + (int)ch );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,429,f( STATE_OPTION_MODE == m_state )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,431,/if get to an arg barrier then return to normal mode
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,432,/else continue accumulating options
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,433,f( 0 == m_ch )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,435,etChar(); //strip the null
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,436,_state = STATE_NORMAL;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,438,lse
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,440,arseShortOption();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,443,lse if( STATE_NORMAL == m_state )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,445,arseNormal();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,447,lse if( STATE_NO_OPTIONS == m_state )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,449,/should never get to here when stringIndex != 0
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,450,ddOption( new CLOption( m_args[m_argIndex++] ) );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,452,lse if( STATE_OPTIONAL_ARG == m_state && m_isLong && m_ch != 0)
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,454,_state = STATE_NORMAL;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,455,ddOption( m_option );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,457,lse
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,459,arseArguments();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,463,f( m_option != null )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,465,f( STATE_OPTIONAL_ARG == m_state )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,467,_options.addElement( m_option );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,469,lse if( STATE_REQUIRE_ARG == m_state )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,471,inal CLOptionDescriptor descriptor = getDescriptorFor(
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,472,_option.getDescriptor().getId() );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,473,inal String message =
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,474,"Missing argument to option "" + getOptionDescription( descriptor );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,475,"hrow new ParseException( message, 0 );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,477,lse if( STATE_REQUIRE_2ARGS == m_state )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,479,f( 1 == m_option.getArgumentCount() )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,481,"_option.addArgument( """" );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,482,_options.addElement( m_option );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,484,lse
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,486,inal CLOptionDescriptor descriptor = getDescriptorFor(
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,487,_option.getDescriptor().getId() );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,488,inal String message =
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,489,"Missing argument to option "" + getOptionDescription( descriptor );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,490,"hrow new ParseException( message, 0 );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,493,lse
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,495,"hrow new ParseException( ""IllegalState "" + m_state + "": "" + m_option, 0 );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,500,rivate final String getOptionDescription( final CLOptionDescriptor descriptor )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,502,f( m_isLong )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,504,"eturn ""--"" + descriptor.getName();"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,506,lse
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,508,"eturn ""-"" + (char)descriptor.getId();"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,512,rivate final char peekAtChar()
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,514,f( INVALID == m_lastChar )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,516,_lastChar = readChar();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,518,eturn (char)m_lastChar;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,521,rivate final char getChar()
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,523,f( INVALID != m_lastChar )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,525,inal char result = (char)m_lastChar;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,526,_lastChar = INVALID;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,527,eturn result;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,529,lse
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,531,eturn readChar();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,535,rivate final char readChar()
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,537,f( m_stringIndex >= m_stringLength )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,539,_argIndex++;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,540,_stringIndex = 0;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,542,f( m_argIndex < m_args.length )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,544,_stringLength = m_args[m_argIndex].length();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,546,lse
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,548,_stringLength = 0;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,551,eturn 0;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,554,f( m_argIndex >= m_args.length )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,556,eturn 0;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,559,eturn m_args[m_argIndex].charAt( m_stringIndex++ );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,562,rivate final Token nextToken( final char[] separators )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,564,_ch = getChar();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,566,"f( isSeparator( m_ch, separators ) )"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,568,_ch = getChar();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,569,"eturn new Token( TOKEN_SEPARATOR, null );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,572,inal StringBuffer sb = new StringBuffer();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,574,o
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,576,b.append( m_ch );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,577,_ch = getChar();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,579,"hile( !isSeparator( m_ch, separators ) );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,581,"eturn new Token( TOKEN_STRING, sb.toString() );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,584,"rivate final boolean isSeparator( final char ch, final char[] separators )"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,586,or( int i = 0; i < separators.length; i++ )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,588,f( ch == separators[i] )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,590,eturn true;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,594,eturn false;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,597,rivate final void addOption( final CLOption option )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,599,_options.addElement( option );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,600,_lastOptionId = option.getDescriptor().getId();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,601,_option = null;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,604,"rivate final void parseOption( final CLOptionDescriptor descriptor,"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,605,inal String optionString )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,606,hrows ParseException
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,608,f( null == descriptor )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,610,"hrow new ParseException( ""Unknown option "" + optionString, 0 );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,613,_state = getStateFor( descriptor );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,614,_option = new CLOption( descriptor );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,616,f( STATE_NORMAL == m_state )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,618,ddOption( m_option );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,622,rivate final void parseShortOption()
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,623,hrows ParseException
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,625,_ch = getChar();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,626,inal CLOptionDescriptor descriptor = getDescriptorFor( m_ch );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,627,_isLong = false;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,628,"arseOption( descriptor, ""-"" + m_ch );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,630,f( STATE_NORMAL == m_state )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,632,_state = STATE_OPTION_MODE;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,636,rivate final void parseArguments()
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,637,hrows ParseException
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,639,f( STATE_REQUIRE_ARG == m_state )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,641,f( '=' == m_ch || 0 == m_ch )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,643,etChar();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,646,inal Token token = nextToken( NULL_SEPARATORS );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,647,_option.addArgument( token.getValue() );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,649,ddOption( m_option );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,650,_state = STATE_NORMAL;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,652,lse if( STATE_OPTIONAL_ARG == m_state )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,654,f( '-' == m_ch || 0 == m_ch )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,656,etChar(); //consume stray character
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,657,ddOption( m_option );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,658,_state = STATE_NORMAL;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,659,eturn;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,662,f( '=' == m_ch )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,664,etChar();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,667,inal Token token = nextToken( NULL_SEPARATORS );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,668,_option.addArgument( token.getValue() );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,670,ddOption( m_option );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,671,_state = STATE_NORMAL;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,673,lse if( STATE_REQUIRE_2ARGS == m_state )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,675,f( 0 == m_option.getArgumentCount() )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,678, Fix bug: -D arg1=arg2 was causing parse error; however --define arg1=arg2 is OK
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,679," This seems to be because the parser skips the terminator for the long options,"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,680, but was not doing so for the short options.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,682,f (!m_isLong){
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,683,f (0 == peekAtChar()){
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,684,etChar();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,687,inal Token token = nextToken( ARG_SEPARATORS );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,689,f( TOKEN_SEPARATOR == token.getType() )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,691,inal CLOptionDescriptor descriptor = getDescriptorFor(
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,692,_option.getDescriptor().getId() );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,693,inal String message =
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,694,"Unable to parse first argument for option "" +"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,695,etOptionDescription( descriptor );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,696,"hrow new ParseException( message, 0 );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,698,lse
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,700,_option.addArgument( token.getValue() );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,702,/ Are we about to start a new option?
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,703,f (0 == m_ch && '-' == peekAtChar()){
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,704,"/ Yes, so the second argument is missing"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,705,"_option.addArgument( """" );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,706,_options.addElement( m_option );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,707,_state = STATE_NORMAL;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,710,lse //2nd argument
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,712,inal StringBuffer sb = new StringBuffer();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,714,_ch = getChar();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,715,"hile( !isSeparator( m_ch, NULL_SEPARATORS ) )"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,717,b.append( m_ch );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,718,_ch = getChar();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,721,inal String argument = sb.toString();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,723,"/System.out.println( ""Arguement:"" + argument );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,725,_option.addArgument( argument );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,726,ddOption( m_option );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,727,_option = null;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,728,_state = STATE_NORMAL;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,734, Parse Options from Normal mode.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,736,rivate final void parseNormal()
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,737,hrows ParseException
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,739,f( '-' != m_ch )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,741,/Parse the arguments that are not options
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,742,inal String argument = nextToken( NULL_SEPARATORS ).getValue();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,743,ddOption( new CLOption( argument ) );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,744,_state = STATE_NORMAL;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,746,lse
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,748,etChar(); // strip the -
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,750,f( 0 == peekAtChar() )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,752,"hrow new ParseException( ""Malformed option -"", 0 );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,754,lse
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,756,_ch = peekAtChar();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,758,/if it is a short option then parse it else ...
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,759,f( '-' != m_ch )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,761,arseShortOption();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,763,lse
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,765,etChar(); // strip the -
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,766,/-- sequence .. it can either mean a change of state
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,767,/to STATE_NO_OPTIONS or else a long option
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,769,f( 0 == peekAtChar() )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,771,etChar();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,772,_state = STATE_NO_OPTIONS;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,774,lse
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,776,/its a long option
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,777,inal String optionName = nextToken( ARG_SEPARATORS ).getValue();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,778,inal CLOptionDescriptor descriptor = getDescriptorFor( optionName );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,779,_isLong = true;
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,780,"arseOption( descriptor, ""--"" + optionName );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,788, Build the m_optionIndex lookup map for the parsed options.
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,790,rivate final void buildOptionIndex()
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,792,inal int size = m_options.size();
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,793,_optionIndex = new Hashtable( size * 2 );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,795,or( int i = 0; i < size; i++ )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,797,inal CLOption option = (CLOption)m_options.get( i );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,798,inal CLOptionDescriptor optionDescriptor =
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,799,etDescriptorFor( option.getDescriptor().getId() );
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,801,"_optionIndex.put( new Integer( option.getDescriptor().getId() ), option );"
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,803,f( null != optionDescriptor &&
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,804,ull != optionDescriptor.getName() )
False,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,src/java/org/apache/commons/cli/avalon/CLArgsParser.java,806,"_optionIndex.put( optionDescriptor.getName(), option );"
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,2, Copyright 2002-2005 The Apache Software Foundation
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,3," Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,4, you may not use  this file  except in  compliance with the License.
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,5, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,7,   http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,9," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,10," distributed  under the  License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,11," WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,12, implied.
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,15, limitations under the License.
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,17,ackage org.apache.commons.cli.avalon;
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,18,/ Renamed from org.apache.avalon.excalibur.cli
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,20,mport java.util.Arrays;
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,23, Basic class describing an instance of option.
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,25, @version $Revision: 1.2 $ $Date: 2005/03/18 15:26:55 $
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,27,ublic final class CLOption
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,30, Value of {@link #getId} when the option is a text argument.
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,32,ublic static final int TEXT_ARGUMENT = 0;
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,35," Default descriptor. Required, since code assumes that getDescriptor will never return null."
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,37,rivate static final CLOptionDescriptor TEXT_ARGUMENT_DESCRIPTOR =
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,38,"ew CLOptionDescriptor( null, CLOptionDescriptor.ARGUMENT_OPTIONAL, TEXT_ARGUMENT,"
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,39,ull );
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,41,rivate String[] m_arguments;
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,42,rivate CLOptionDescriptor m_descriptor = TEXT_ARGUMENT_DESCRIPTOR;
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,45, Retrieve argument to option if it takes arguments.
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,47, @return the (first) argument
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,49,ublic final String getArgument()
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,51,eturn getArgument( 0 );
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,55, Retrieve indexed argument to option if it takes arguments.
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,57," @param index The argument index, from 0 to"
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,58, {@link #getArgumentCount()}-1.
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,59, @return the argument
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,61,ublic final String getArgument( final int index )
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,63,f( null == m_arguments || index < 0 || index >= m_arguments.length )
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,65,eturn null;
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,67,lse
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,69,eturn m_arguments[index];
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,74, Retrieve id of option.
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,76, The id is eqivalent to character code if it can be a single letter option.
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,78, @return the id
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,79, @deprecated use <code>getDescriptor().getId()</code> instead
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,81,ublic final int getId()
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,83,eturn m_descriptor == null ? TEXT_ARGUMENT : m_descriptor.getId();
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,86,ublic final CLOptionDescriptor getDescriptor()
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,88,eturn m_descriptor;
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,92, Constructor taking an descriptor
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,94," @param descriptor the descriptor iff null, will default to a ""text argument"" descriptor."
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,96,ublic CLOption( final CLOptionDescriptor descriptor )
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,98,f( descriptor != null )
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,100,_descriptor = descriptor;
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,105, Constructor taking argument for option.
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,107, @param argument the argument
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,109,ublic CLOption( final String argument )
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,111,his( (CLOptionDescriptor)null );
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,112,ddArgument( argument );
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,116, Mutator of Argument property.
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,118, @param argument the argument
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,120,ublic final void addArgument( final String argument )
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,122,f( null == m_arguments )
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,124,_arguments = new String[]{argument};
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,126,lse
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,128,inal String[] arguments = new String[m_arguments.length + 1];
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,129,"ystem.arraycopy( m_arguments, 0, arguments, 0, m_arguments.length );"
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,130,rguments[m_arguments.length] = argument;
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,131,_arguments = arguments;
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,136, Get number of arguments.
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,138, @return the number of arguments
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,140,ublic final int getArgumentCount()
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,142,f( null == m_arguments )
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,144,eturn 0;
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,146,lse
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,148,eturn m_arguments.length;
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,153, Convert to String.
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,155, @return the string value
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,157,ublic final String toString()
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,159,inal StringBuffer sb = new StringBuffer();
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,160,"b.append( ""[Option "" );"
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,161,b.append( (char)m_descriptor.getId() );
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,163,f( null != m_arguments )
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,165,"b.append( "", "" );"
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,166,b.append( Arrays.asList( m_arguments ) );
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,169,"b.append( "" ]"" );"
False,src/java/org/apache/commons/cli/avalon/CLOption.java,src/java/org/apache/commons/cli/avalon/CLOption.java,171,eturn sb.toString();
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,2, Copyright 2002-2005 The Apache Software Foundation
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,3," Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,4, you may not use  this file  except in  compliance with the License.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,5, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,7,   http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,9," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,10," distributed  under the  License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,11," WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,12, implied.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,15, limitations under the License.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,17,ackage org.apache.commons.cli.avalon;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,18,/Renamed from org.apache.avalon.excalibur.cli
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,21, Basic class describing an type of option.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,22," Typically, one creates a static array of <code>CLOptionDescriptor</code>s,"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,23," and passes it to {@link CLArgsParser#CLArgsParser(String[], CLOptionDescriptor[])}."
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,25, @version $Revision: 1.2 $ $Date: 2005/03/18 15:26:55 $
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,26, @see CLArgsParser
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,27, @see CLUtil
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,29,ublic final class CLOptionDescriptor
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,31,** Flag to say that one argument is required */
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,32,ublic static final int ARGUMENT_REQUIRED = 1 << 1;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,33,** Flag to say that the argument is optional */
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,34,ublic static final int ARGUMENT_OPTIONAL = 1 << 2;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,35,** Flag to say this option does not take arguments */
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,36,ublic static final int ARGUMENT_DISALLOWED = 1 << 3;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,37,** Flag to say this option requires 2 arguments */
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,38,ublic static final int ARGUMENTS_REQUIRED_2 = 1 << 4;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,39,** Flag to say this option may be repeated on the command line */
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,40,ublic static final int DUPLICATES_ALLOWED = 1 << 5;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,42,rivate final int m_id;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,43,rivate final int m_flags;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,44,rivate final String m_name;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,45,rivate final String m_description;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,46,rivate final int[] m_incompatible;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,49, Constructor.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,51, @param name the name/long option
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,52, @param flags the flags
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,53, @param id the id/character option
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,54, @param description description of option usage
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,56,"ublic CLOptionDescriptor( final String name,"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,57,"inal int flags,"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,58,"inal int id,"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,59,inal String description )
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,61,"his( name, flags, id, description,"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,62,(flags & CLOptionDescriptor.DUPLICATES_ALLOWED) > 0)
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,63, new int[0] : new int[]{id} );
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,67, Constructor.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,69, @param name the name/long option
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,70, @param flags the flags
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,71, @param id the id/character option
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,72, @param description description of option usage
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,73, @param incompatible an array listing the ids of all incompatible options
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,74, @deprecated use the version with the array of CLOptionDescriptor's
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,76,"ublic CLOptionDescriptor( final String name,"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,77,"inal int flags,"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,78,"inal int id,"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,79,"inal String description,"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,80,inal int[] incompatible )
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,82,_id = id;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,83,_name = name;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,84,_flags = flags;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,85,_description = description;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,86,_incompatible = incompatible;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,88,nt modeCount = 0;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,89,f( (ARGUMENT_REQUIRED & flags) == ARGUMENT_REQUIRED )
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,91,odeCount++;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,93,f( (ARGUMENT_OPTIONAL & flags) == ARGUMENT_OPTIONAL )
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,95,odeCount++;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,97,f( (ARGUMENT_DISALLOWED & flags) == ARGUMENT_DISALLOWED )
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,99,odeCount++;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,101,f( (ARGUMENTS_REQUIRED_2 & flags) == ARGUMENTS_REQUIRED_2 )
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,103,odeCount++;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,106,f( 0 == modeCount )
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,108,"inal String message = ""No mode specified for option "" + this;"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,109,hrow new IllegalStateException( message );
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,111,lse if( 1 != modeCount )
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,113,"inal String message = ""Multiple modes specified for option "" + this;"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,114,hrow new IllegalStateException( message );
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,119, Constructor.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,121, @param name the name/long option
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,122, @param flags the flags
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,123, @param id the id/character option
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,124, @param description description of option usage
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,126,"ublic CLOptionDescriptor( final String name,"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,127,"inal int flags,"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,128,"inal int id,"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,129,"inal String description,"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,130,inal CLOptionDescriptor[] incompatible )
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,132,_id = id;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,133,_name = name;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,134,_flags = flags;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,135,_description = description;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,137,_incompatible = new int[incompatible.length];
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,138,or( int i = 0; i < incompatible.length; i++ )
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,140,_incompatible[i] = incompatible[i].getId();
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,145, @deprecated Use the correctly spelled {@link #getIncompatible} instead.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,146, @return the array of incompatible option ids
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,148,rotected final int[] getIncompatble()
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,150,eturn getIncompatible();
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,154, Get the array of incompatible option ids.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,156, @return the array of incompatible option ids
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,158,rotected final int[] getIncompatible()
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,160,eturn m_incompatible;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,164, Retrieve textual description.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,166, @return the description
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,168,ublic final String getDescription()
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,170,eturn m_description;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,174, Retrieve flags about option.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,175, Flags include details such as whether it allows parameters etc.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,177, @return the flags
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,179,ublic final int getFlags()
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,181,eturn m_flags;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,185, Retrieve the id for option.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,186, The id is also the character if using single character options.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,188, @return the id
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,190,ublic final int getId()
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,192,eturn m_id;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,196, Retrieve name of option which is also text for long option.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,198, @return name/long option
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,200,ublic final String getName()
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,202,eturn m_name;
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,206, Convert to String.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,208, @return the converted value to string.
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,210,ublic final String toString()
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,212,inal StringBuffer sb = new StringBuffer();
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,213,"b.append( ""[OptionDescriptor "" );"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,214,b.append( m_name );
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,215,"b.append( ""[OptionDescriptor "" );"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,216,b.append( m_name );
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,217,"b.append( "", "" );"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,218,b.append( m_id );
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,219,"b.append( "", "" );"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,220,b.append( m_flags );
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,221,"b.append( "", "" );"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,222,b.append( m_description );
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,223,"b.append( "" ]"" );"
False,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,src/java/org/apache/commons/cli/avalon/CLOptionDescriptor.java,224,eturn sb.toString();
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,2, Copyright 2002-2005 The Apache Software Foundation
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,3," Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,4, you may not use  this file  except in  compliance with the License.
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,5, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,7,   http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,9," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,10," distributed  under the  License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,11," WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,12, implied.
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,15, limitations under the License.
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,17,ackage org.apache.commons.cli.avalon;
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,18,/Renamed from org.apache.avalon.excalibur.cli
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,21, CLUtil offers basic utility operations for use both internal and external to package.
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,23, @version $Revision: 1.2 $ $Date: 2005/03/18 15:26:55 $
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,24, @see CLOptionDescriptor
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,26,ublic final class CLUtil
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,28,rivate static final int MAX_DESCRIPTION_COLUMN_LENGTH = 60;
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,31, Format options into StringBuffer and return. This is typically used to
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,32," print ""Usage"" text in response to a ""--help"" or invalid option."
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,34, @param options the option descriptors
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,35, @return the formatted description/help for options
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,37,ublic static final StringBuffer describeOptions( final CLOptionDescriptor[] options )
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,39,"inal String lSep = System.getProperty( ""line.separator"" );"
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,40,inal StringBuffer sb = new StringBuffer();
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,42,or( int i = 0; i < options.length; i++ )
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,44,inal char ch = (char)options[i].getId();
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,45,inal String name = options[i].getName();
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,46,tring description = options[i].getDescription();
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,47,nt flags = options[i].getFlags();
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,48,oolean argumentRequired =
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,49,(flags & CLOptionDescriptor.ARGUMENT_REQUIRED) ==
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,50,LOptionDescriptor.ARGUMENT_REQUIRED);
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,51,oolean twoArgumentsRequired =
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,52,(flags & CLOptionDescriptor.ARGUMENTS_REQUIRED_2) ==
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,53,LOptionDescriptor.ARGUMENTS_REQUIRED_2);
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,54,oolean needComma = false;
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,55,f( twoArgumentsRequired )
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,57,rgumentRequired = true;
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,60,b.append( '\t' );
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,62,f( Character.isLetter( ch ) )
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,64,"b.append( ""-"" );"
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,65,b.append( ch );
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,66,eedComma = true;
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,69,f( null != name )
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,71,f( needComma )
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,73,"b.append( "", "" );"
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,76,"b.append( ""--"" );"
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,77,b.append( name );
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,80,f( argumentRequired )
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,82,"b.append( "" <argument>"" );"
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,84,f( twoArgumentsRequired )
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,86,"b.append( ""=<value>"" );"
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,88,b.append( lSep );
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,90,f( null != description )
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,92,hile( description.length() > MAX_DESCRIPTION_COLUMN_LENGTH )
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,94,inal String descriptionPart =
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,95,"escription.substring( 0, MAX_DESCRIPTION_COLUMN_LENGTH );"
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,96,escription =
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,97,escription.substring( MAX_DESCRIPTION_COLUMN_LENGTH );
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,98,"b.append( ""\t\t"" );"
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,99,b.append( descriptionPart );
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,100,b.append( lSep );
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,103,"b.append( ""\t\t"" );"
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,104,b.append( description );
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,105,b.append( lSep );
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,108,eturn sb;
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,112, Private Constructor so that no instance can ever be created.
False,src/java/org/apache/commons/cli/avalon/CLUtil.java,src/java/org/apache/commons/cli/avalon/CLUtil.java,115,rivate CLUtil()
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,2, Copyright 2002-2005 The Apache Software Foundation
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,3," Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,4, you may not use  this file  except in  compliance with the License.
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,5, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,7,   http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,9," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,10," distributed  under the  License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,11," WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,12, implied.
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,15, limitations under the License.
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,17,ackage org.apache.commons.cli.avalon;
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,18,/Renamed from org.apache.avalon.excalibur.cli
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,21, ParserControl is used to control particular behaviour of the parser.
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,23, @version $Revision: 1.2 $ $Date: 2005/03/18 15:26:55 $
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,24, @see AbstractParserControl
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,26,ublic interface ParserControl
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,29, Called by the parser to determine whether it should stop
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,30, after last option parsed.
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,32, @param lastOptionCode the code of last option parsed
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,33," @return return true to halt, false to continue parsing"
False,src/java/org/apache/commons/cli/avalon/ParserControl.java,src/java/org/apache/commons/cli/avalon/ParserControl.java,35,oolean isFinished( int lastOptionCode );
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,2, Copyright 2002-2005 The Apache Software Foundation
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,3," Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,4, you may not use  this file  except in  compliance with the License.
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,5, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,7,   http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,9," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,10," distributed  under the  License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,11," WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,12, implied.
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,15, limitations under the License.
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,17,ackage org.apache.commons.cli.avalon;
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,18,/Renamed from org.apache.avalon.excalibur.cli
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,21, Token handles tokenizing the CLI arguments
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,23, @version $Revision: 1.2 $ $Date: 2005/03/18 15:26:55 $
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,24, @since 4.0
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,26,lass Token
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,28,** Type for a separator token */
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,29,ublic static final int TOKEN_SEPARATOR = 0;
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,30,** Type for a text token */
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,31,ublic static final int TOKEN_STRING = 1;
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,33,rivate final int m_type;
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,34,rivate final String m_value;
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,37, New Token object with a type and value
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,39,"oken( final int type, final String value )"
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,41,_type = type;
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,42,_value = value;
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,46, Get the value of the token
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,48,inal String getValue()
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,50,eturn m_value;
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,54, Get the type of the token
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,56,inal int getType()
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,58,eturn m_type;
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,62, Convert to a string
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,64,ublic final String toString()
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,66,inal StringBuffer sb = new StringBuffer();
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,67,b.append( m_type );
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,68,"b.append( "":"" );"
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,69,b.append( m_value );
False,src/java/org/apache/commons/cli/avalon/Token.java,src/java/org/apache/commons/cli/avalon/Token.java,70,eturn sb.toString();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,2, Copyright 2002-2005 The Apache Software Foundation
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,3," Licensed  under the  Apache License,  Version 2.0  (the ""License"");"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,4, you may not use  this file  except in  compliance with the License.
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,5, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,7,   http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,9," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,10," distributed  under the  License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,11," WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,12, implied.
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,15, limitations under the License.
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,17,ackage org.apache.commons.cli.avalon;
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,18,/Renamed from org.apache.avalon.excalibur.cli
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,20,mport java.util.List;
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,22,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,27,ublic final class ClutilTestCase
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,28,xtends TestCase
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,30,rivate static final String[] ARGLIST1 = new String[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,32,"--you"", ""are"", ""--all"", ""-cler"", ""kid"""
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,35,rivate static final String[] ARGLIST2 = new String[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,37,"-Dstupid=idiot"", ""are"", ""--all"", ""here"", ""-d"""
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,40,rivate static final String[] ARGLIST3 = new String[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,42,/duplicates
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,43,"-Dstupid=idiot"", ""are"", ""--all"", ""--all"", ""here"""
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,46,rivate static final String[] ARGLIST4 = new String[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,48,/incompatable (blee/all)
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,49,"-Dstupid"",""idiot"", ""are"", ""--all"", ""--blee"", ""here"""
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,52,rivate static final String[] ARGLIST5 = new String[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,54,"-f"", ""myfile.txt"""
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,57,rivate static final int DEFINE_OPT = 'D';
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,58,rivate static final int CASE_CHECK_OPT = 'd';
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,59,rivate static final int YOU_OPT = 'y';
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,60,rivate static final int ALL_OPT = 'a';
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,61,rivate static final int CLEAR1_OPT = 'c';
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,62,rivate static final int CLEAR2_OPT = 'l';
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,63,rivate static final int CLEAR3_OPT = 'e';
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,64,rivate static final int CLEAR5_OPT = 'r';
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,65,rivate static final int BLEE_OPT = 'b';
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,66,rivate static final int FILE_OPT = 'f';
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,67,rivate static final int TAINT_OPT = 'T';
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,69,rivate static final CLOptionDescriptor DEFINE =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,70,"ew CLOptionDescriptor( ""define"","
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,71,"LOptionDescriptor.ARGUMENTS_REQUIRED_2,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,72,"EFINE_OPT,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,73,"define"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,74,rivate static final CLOptionDescriptor DEFINE_MANY =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,75,"ew CLOptionDescriptor( ""define"","
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,76,"LOptionDescriptor.ARGUMENTS_REQUIRED_2|CLOptionDescriptor.DUPLICATES_ALLOWED,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,77,"EFINE_OPT,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,78,"define"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,80,rivate static final CLOptionDescriptor CASE_CHECK =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,81,"ew CLOptionDescriptor( ""charCheck"","
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,82,"LOptionDescriptor.ARGUMENT_DISALLOWED,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,83,"ASE_CHECK_OPT,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,84,"check character case sensitivity"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,85,rivate static final CLOptionDescriptor YOU =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,86,"ew CLOptionDescriptor( ""you"", CLOptionDescriptor.ARGUMENT_DISALLOWED, YOU_OPT, ""you"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,88,rivate static final CLOptionDescriptor CLEAR1 =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,89,"ew CLOptionDescriptor( ""c"", CLOptionDescriptor.ARGUMENT_DISALLOWED, CLEAR1_OPT, ""c"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,90,rivate static final CLOptionDescriptor CLEAR2 =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,91,"ew CLOptionDescriptor( ""l"", CLOptionDescriptor.ARGUMENT_DISALLOWED, CLEAR2_OPT, ""l"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,92,rivate static final CLOptionDescriptor CLEAR3 =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,93,"ew CLOptionDescriptor( ""e"", CLOptionDescriptor.ARGUMENT_DISALLOWED, CLEAR3_OPT, ""e"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,94,rivate static final CLOptionDescriptor CLEAR5 =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,95,"ew CLOptionDescriptor( ""r"", CLOptionDescriptor.ARGUMENT_DISALLOWED, CLEAR5_OPT, ""r"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,96,rivate static final CLOptionDescriptor BLEE =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,97,"ew CLOptionDescriptor( ""blee"","
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,98,"LOptionDescriptor.ARGUMENT_DISALLOWED,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,99,"LEE_OPT,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,100,"blee"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,102,rivate static final CLOptionDescriptor ALL =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,103,"ew CLOptionDescriptor( ""all"","
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,104,"LOptionDescriptor.ARGUMENT_DISALLOWED,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,105,"LL_OPT,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,106,"all"","
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,107,ew CLOptionDescriptor[]{BLEE} );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,109,rivate static final CLOptionDescriptor FILE =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,110,"ew CLOptionDescriptor( ""file"","
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,111,"LOptionDescriptor.ARGUMENT_REQUIRED,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,112,"ILE_OPT,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,113,"the build file."" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,114,rivate static final CLOptionDescriptor TAINT =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,115,"ew CLOptionDescriptor( ""taint"","
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,116,"LOptionDescriptor.ARGUMENT_OPTIONAL,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,117,"AINT_OPT,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,118,"turn on tainting checks (optional level)."" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,120,ublic ClutilTestCase()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,122,"his( ""Command Line Interpreter Test Case"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,125,ublic ClutilTestCase( String name )
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,127,uper( name );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,130,ublic void testOptionalArgWithSpace()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,132,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,134,"LL, TAINT"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,137,"inal String[] args = new String[]{""-T"", ""param"", ""-a""};"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,139,"inal CLArgsParser parser = new CLArgsParser( args, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,141,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,143,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,144,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,146,"ssertEquals( ""Option count"", 3, size );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,148,inal CLOption option0 = (CLOption)clOptions.get( 0 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,149,"ssertEquals( ""Option Code: "" + option0.getDescriptor().getId(), TAINT_OPT,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,150,ption0.getDescriptor().getId() );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,151,"ssertEquals( ""Option Arg: "" + option0.getArgument( 0 ),"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,152,"ull, option0.getArgument( 0 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,154,inal CLOption option1 = (CLOption)clOptions.get( 1 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,155,"ssertEquals( option1.getDescriptor().getId(), CLOption.TEXT_ARGUMENT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,156,"ssertEquals( option1.getArgument( 0 ), ""param"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,158,inal CLOption option2 = (CLOption)clOptions.get( 2 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,159,"ssertEquals( option2.getDescriptor().getId(), ALL_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,160,"ssertEquals( option2.getArgument( 0 ), null );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,163,ublic void testOptionalArgLong()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,165,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,167,"LL, TAINT"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,170,/ Check that optional args work woth long options
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,171,"inal String[] args = new String[]{""--taint"", ""param"", ""-a""};"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,173,"inal CLArgsParser parser = new CLArgsParser( args, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,175,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,177,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,178,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,180,"ssertEquals( ""Option count"", 3, size );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,182,inal CLOption option0 = (CLOption)clOptions.get( 0 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,183,"ssertEquals( ""Option Code: "" + option0.getDescriptor().getId(), TAINT_OPT,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,184,ption0.getDescriptor().getId() );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,185,"ssertEquals( ""Option Arg: "" + option0.getArgument( 0 ),"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,186,"ull, option0.getArgument( 0 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,188,inal CLOption option1 = (CLOption)clOptions.get( 1 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,189,"ssertEquals( CLOption.TEXT_ARGUMENT , option1.getDescriptor().getId());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,190,"ssertEquals( ""param"" , option1.getArgument( 0 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,192,inal CLOption option2 = (CLOption)clOptions.get( 2 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,193,"ssertEquals( option2.getDescriptor().getId(), ALL_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,194,"ssertEquals( option2.getArgument( 0 ), null );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,197,ublic void testShortOptArgUnenteredBeforeOtherOpt()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,199,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,201,"LL, TAINT"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,204,"inal String[] args = new String[]{""-T"", ""-a""};"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,206,"inal CLArgsParser parser = new CLArgsParser( args, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,208,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,210,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,211,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,213,"ssertEquals( ""Option count"", 2, size );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,215,inal CLOption option0 = (CLOption)clOptions.get( 0 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,216,"ssertEquals( ""Option Code: "" + option0.getDescriptor().getId(), TAINT_OPT,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,217,ption0.getDescriptor().getId() );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,218,"ssertEquals( ""Option Arg: "" + option0.getArgument( 0 ), null, option0.getArgument( 0 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,220,inal CLOption option1 = (CLOption)clOptions.get( 1 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,221,"ssertEquals( option1.getDescriptor().getId(), ALL_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,222,"ssertEquals( option1.getArgument( 0 ), null );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,225,ublic void testOptionalArgsWithArgShortBeforeOtherOpt()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,227,"/""-T3"",""-a"""
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,228,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,230,"LL, TAINT"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,233,"inal String[] args = new String[]{""-T3"", ""-a""};"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,235,"/System.out.println(""[before parsing]"");"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,237,"inal CLArgsParser parser = new CLArgsParser( args, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,239,"/System.out.println(""[after parsing]"");"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,241,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,243,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,244,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,246,"ssertEquals( size, 2 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,247,inal CLOption option0 = (CLOption)clOptions.get( 0 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,248,"ssertEquals( option0.getDescriptor().getId(), TAINT_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,249,"ssertEquals( option0.getArgument( 0 ), ""3"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,251,inal CLOption option1 = (CLOption)clOptions.get( 1 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,252,"ssertEquals( ALL_OPT, option1.getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,253,"ssertEquals( null, option1.getArgument( 0 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,256,ublic void testOptionalArgsNoArgShortBeforeOtherOpt()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,258,"/""-T"",""-a"""
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,259,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,261,"LL, TAINT"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,264,"inal String[] args = new String[]{""-T"", ""-a""};"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,266,"/System.out.println(""[before parsing]"");"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,267,"inal CLArgsParser parser = new CLArgsParser( args, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,269,"/System.out.println(""[after parsing]"");"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,271,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,273,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,274,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,276,"ssertEquals( size, 2 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,277,inal CLOption option0 = (CLOption)clOptions.get( 0 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,278,"ssertEquals( TAINT_OPT, option0.getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,279,"ssertEquals( null, option0.getArgument( 0 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,281,inal CLOption option1 = (CLOption)clOptions.get( 1 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,282,"ssertEquals( ALL_OPT, option1.getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,283,"ssertEquals( null, option1.getArgument( 0 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,286,ublic void testFullParse()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,288,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,290,"OU, ALL, CLEAR1, CLEAR2, CLEAR3, CLEAR5"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,293,"inal CLArgsParser parser = new CLArgsParser( ARGLIST1, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,295,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,297,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,298,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,300,"ssertEquals( size, 8 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,301,"ssertEquals( ((CLOption)clOptions.get( 0 )).getDescriptor().getId(), YOU_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,302,"ssertEquals( ((CLOption)clOptions.get( 1 )).getDescriptor().getId(), 0 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,303,"ssertEquals( ((CLOption)clOptions.get( 2 )).getDescriptor().getId(), ALL_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,304,"ssertEquals( ((CLOption)clOptions.get( 3 )).getDescriptor().getId(), CLEAR1_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,305,"ssertEquals( ((CLOption)clOptions.get( 4 )).getDescriptor().getId(), CLEAR2_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,306,"ssertEquals( ((CLOption)clOptions.get( 5 )).getDescriptor().getId(), CLEAR3_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,307,"ssertEquals( ((CLOption)clOptions.get( 6 )).getDescriptor().getId(), CLEAR5_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,308,"ssertEquals( ((CLOption)clOptions.get( 7 )).getDescriptor().getId(), 0 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,311,ublic void testDuplicateOptions()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,313,"/""-Dstupid=idiot"",""are"",""--all"",""--all"",""here"""
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,314,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,316,"EFINE, ALL, CLEAR1"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,319,"inal CLArgsParser parser = new CLArgsParser( ARGLIST3, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,321,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,323,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,324,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,326,"ssertEquals( size, 5 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,327,"ssertEquals( ((CLOption)clOptions.get( 0 )).getDescriptor().getId(), DEFINE_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,328,"ssertEquals( ((CLOption)clOptions.get( 1 )).getDescriptor().getId(), 0 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,329,"ssertEquals( ((CLOption)clOptions.get( 2 )).getDescriptor().getId(), ALL_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,330,"ssertEquals( ((CLOption)clOptions.get( 3 )).getDescriptor().getId(), ALL_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,331,"ssertEquals( ((CLOption)clOptions.get( 4 )).getDescriptor().getId(), 0 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,334,ublic void testIncompatableOptions()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,336,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,338,"EFINE, ALL, CLEAR1, BLEE"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,341,"inal CLArgsParser parser = new CLArgsParser( ARGLIST4, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,343,ssertNotNull( parser.getErrorString() );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,345,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,346,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,348,"ssertEquals( size, 5 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,349,"ssertEquals( ((CLOption)clOptions.get( 0 )).getDescriptor().getId(), DEFINE_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,350,"ssertEquals( ((CLOption)clOptions.get( 1 )).getDescriptor().getId(), 0 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,351,"ssertEquals( ((CLOption)clOptions.get( 2 )).getDescriptor().getId(), ALL_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,352,"ssertEquals( ((CLOption)clOptions.get( 3 )).getDescriptor().getId(), BLEE_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,353,"ssertEquals( ((CLOption)clOptions.get( 4 )).getDescriptor().getId(), 0 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,356,ublic void testSingleArg()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,358,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,360,ILE
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,363,"inal CLArgsParser parser = new CLArgsParser( ARGLIST5, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,365,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,367,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,368,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,370,"ssertEquals( size, 1 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,371,"ssertEquals( ((CLOption)clOptions.get( 0 )).getDescriptor().getId(), FILE_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,372,"ssertEquals( ((CLOption)clOptions.get( 0 )).getArgument(), ""myfile.txt"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,374,ublic void testSingleArg2()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,376,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,378,ILE
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,381,inal CLArgsParser parser = new CLArgsParser(
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,382,"ew String[]{""-f-=,=-""} // Check delimiters are allowed"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,383, options );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,385,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,387,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,388,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,390,"ssertEquals( 1, size );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,391,"ssertEquals( FILE_OPT ,((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,392,"ssertEquals( ""-=,=-"", ((CLOption)clOptions.get( 0 )).getArgument() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,395,ublic void testSingleArg3()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,397,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,399,ILE
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,402,inal CLArgsParser parser = new CLArgsParser(
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,403,"ew String[]{""--file=-=,-""} // Check delimiters are allowed"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,404, options );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,406,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,408,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,409,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,411,"ssertEquals( 1, size );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,412,"ssertEquals( FILE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,413,"ssertEquals( ""-=,-"" , ((CLOption)clOptions.get( 0 )).getArgument() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,416,ublic void testSingleArg4()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,418,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,420,ILE
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,423,inal CLArgsParser parser = new CLArgsParser(
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,424,"ew String[]{""--file"",""myfile.txt""}"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,425, options );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,427,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,429,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,430,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,432,"ssertEquals( 1, size );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,433,"ssertEquals( FILE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,434,"ssertEquals( ""myfile.txt"", ((CLOption)clOptions.get( 0 )).getArgument() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,437,ublic void testSingleArg5()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,439,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,441,ILE
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,444,inal CLArgsParser parser = new CLArgsParser(
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,445,"ew String[]{""-f"",""myfile.txt""}"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,446, options );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,448,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,450,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,451,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,453,"ssertEquals( 1, size );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,454,"ssertEquals( FILE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,455,"ssertEquals( ""myfile.txt"", ((CLOption)clOptions.get( 0 )).getArgument() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,458,ublic void testSingleArg6()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,460,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,462,ILE
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,465,inal CLArgsParser parser = new CLArgsParser(
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,466,"ew String[]{""-f"",""-=-""}"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,467, options );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,469,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,471,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,472,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,474,"ssertEquals( 1, size );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,475,"ssertEquals( FILE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,476,"ssertEquals( ""-=-"", ((CLOption)clOptions.get( 0 )).getArgument() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,479,ublic void testSingleArg7()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,481,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,483,ILE
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,486,inal CLArgsParser parser = new CLArgsParser(
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,487,"ew String[]{""--file=-=-""}"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,488, options );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,490,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,492,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,493,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,495,"ssertEquals( 1, size );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,496,"ssertEquals( FILE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,497,"ssertEquals( ""-=-"", ((CLOption)clOptions.get( 0 )).getArgument() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,500,ublic void testSingleArg8()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,502,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,504,ILE
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,507,inal CLArgsParser parser = new CLArgsParser(
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,508,"ew String[]{""--file"",""-=-""}"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,509, options );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,511,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,513,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,514,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,516,"ssertEquals( 1, size );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,517,"ssertEquals( FILE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,518,"ssertEquals( ""-=-"", ((CLOption)clOptions.get( 0 )).getArgument() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,521,ublic void testSingleArg9()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,523,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,525,ILE
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,528,inal CLArgsParser parser = new CLArgsParser(
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,529,"ew String[]{""--file"",""-=-""}"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,530, options );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,532,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,534,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,535,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,537,"ssertEquals( 1, size );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,538,"ssertEquals( FILE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,539,"ssertEquals( ""-=-"", ((CLOption)clOptions.get( 0 )).getArgument() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,542,ublic void testCombinedArgs1()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,544,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,546,"LEE, TAINT"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,549,inal CLArgsParser parser = new CLArgsParser(
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,550,"ew String[]{""-bT"",""rest""}"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,551, options );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,553,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,555,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,556,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,557,"ssertEquals( 3, size);"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,558,"ssertEquals( BLEE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,559,"ssertEquals( TAINT_OPT, ((CLOption)clOptions.get( 1 )).getDescriptor().getId());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,560,"ssertEquals( 0, ((CLOption)clOptions.get( 2 )).getDescriptor().getId());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,561,"ssertEquals( ""rest"", ((CLOption)clOptions.get( 2 )).getArgument());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,564,ublic void testCombinedArgs2()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,566,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,568,"LEE, TAINT, FILE"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,571,inal CLArgsParser parser = new CLArgsParser(
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,572,"ew String[]{""-bT"",""-fa""}"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,573, options );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,575,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,577,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,578,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,579,"ssertEquals( 3, size);"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,580,"ssertEquals( BLEE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,581,"ssertEquals( TAINT_OPT, ((CLOption)clOptions.get( 1 )).getDescriptor().getId());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,582,"ssertEquals( FILE_OPT, ((CLOption)clOptions.get( 2 )).getDescriptor().getId());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,583,"ssertEquals( ""a"", ((CLOption)clOptions.get( 2 )).getArgument());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,586,ublic void testCombinedArgs3()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,588,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,590,"LEE, TAINT, FILE"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,593,inal CLArgsParser parser = new CLArgsParser(
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,594,"ew String[]{""-bT"",""--"",""-fa""}// Should not detect trailing option"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,595, options );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,597,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,599,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,600,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,601,"ssertEquals( 3, size);"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,602,"ssertEquals( BLEE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,603,"ssertEquals( TAINT_OPT, ((CLOption)clOptions.get( 1 )).getDescriptor().getId());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,604,"ssertEquals( 0, ((CLOption)clOptions.get( 2 )).getDescriptor().getId());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,605,"ssertEquals( ""-fa"", ((CLOption)clOptions.get( 2 )).getArgument());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,608,ublic void testCombinedArgs4()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,610,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,612,"LEE, TAINT, FILE"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,615,inal CLArgsParser parser = new CLArgsParser(
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,616,"ew String[]{""-bT"",""rest"",""-fa""} // should detect trailing option"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,617, options );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,619,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,621,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,622,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,623,"ssertEquals( 4, size);"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,624,"ssertEquals( BLEE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,625,"ssertEquals( TAINT_OPT, ((CLOption)clOptions.get( 1 )).getDescriptor().getId());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,626,"ssertEquals( 0, ((CLOption)clOptions.get( 2 )).getDescriptor().getId());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,627,"ssertEquals( ""rest"", ((CLOption)clOptions.get( 2 )).getArgument());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,628,"ssertEquals( FILE_OPT, ((CLOption)clOptions.get( 3 )).getDescriptor().getId());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,629,"ssertEquals( ""a"", ((CLOption)clOptions.get( 3 )).getArgument());"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,632,ublic void test2ArgsParse()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,634,"/""-Dstupid=idiot"",""are"",""--all"",""here"""
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,635,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,637,"EFINE, ALL, CLEAR1, CASE_CHECK"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,640,"inal CLArgsParser parser = new CLArgsParser( ARGLIST2, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,642,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,644,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,645,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,647,"ssertEquals( size, 5 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,648,"ssertEquals( ((CLOption)clOptions.get( 0 )).getDescriptor().getId(), DEFINE_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,649,"ssertEquals( ((CLOption)clOptions.get( 1 )).getDescriptor().getId(), 0 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,650,"ssertEquals( ((CLOption)clOptions.get( 2 )).getDescriptor().getId(), ALL_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,651,"ssertEquals( ((CLOption)clOptions.get( 3 )).getDescriptor().getId(), 0 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,652,"ssertEquals( ((CLOption)clOptions.get( 4 )).getDescriptor().getId(), CASE_CHECK_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,654,inal CLOption option = (CLOption)clOptions.get( 0 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,655,"ssertEquals( ""stupid"", option.getArgument( 0 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,656,"ssertEquals( ""idiot"", option.getArgument( 1 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,659,ublic void test2ArgsParse2()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,661,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,663,EFINE
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,666,inal CLArgsParser parser = new CLArgsParser(
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,667,"ew String[] {""--define"",""a-b,c=d-e,f""}, // Check ""-"" is allowed in arg2"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,668,ptions );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,670,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,672,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,673,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,675,"ssertEquals( 1, size );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,676,"ssertEquals( DEFINE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,678,inal CLOption option = (CLOption)clOptions.get( 0 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,679,"ssertEquals( ""a-b,c"", option.getArgument( 0 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,680,"ssertEquals( ""d-e,f"", option.getArgument( 1 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,683,ublic void test2ArgsParse3()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,685,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,687,EFINE
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,690,inal CLArgsParser parser = new CLArgsParser(
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,691,"ew String[] {""-D"",""A-b,c"",""G-e,f""},"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,692,ptions );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,694,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,696,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,697,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,699,"ssertEquals( 1, size );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,700,"ssertEquals( DEFINE_OPT, ((CLOption)clOptions.get( 0 )).getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,702,inal CLOption option = (CLOption)clOptions.get( 0 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,703,"ssertEquals( ""A-b,c"", option.getArgument( 0 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,704,"ssertEquals( ""G-e,f"", option.getArgument( 1 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,707,ublic void test2ArgsParse4()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,709,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,711,EFINE_MANY
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,714,inal CLArgsParser parser = new CLArgsParser(
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,715,"ew String[] {""-Dval1=-1"",""-D"",""val2=-2"","
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,716,"--define=val-3=-3"",""--define"",""val4-=-4""},"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,717,ptions );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,719,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,721,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,722,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,724,"ssertEquals( 4, size );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,725,or (int i=0;i<size;i++){
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,726,"ssertEquals( DEFINE_OPT, ((CLOption)clOptions.get( i )).getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,729,LOption option;
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,730,ption = (CLOption)clOptions.get( 0 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,731,"ssertEquals( ""val1"", option.getArgument( 0 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,732,"ssertEquals( ""-1"", option.getArgument( 1 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,734,ption = (CLOption)clOptions.get( 1 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,735,"ssertEquals( ""val2"", option.getArgument( 0 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,736,"ssertEquals( ""-2"", option.getArgument( 1 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,738,ption = (CLOption)clOptions.get( 2 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,739,"ssertEquals( ""val-3"", option.getArgument( 0 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,740,"ssertEquals( ""-3"", option.getArgument( 1 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,742,ption = (CLOption)clOptions.get( 3 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,743,"ssertEquals( ""val4-"", option.getArgument( 0 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,744,"ssertEquals( ""-4"", option.getArgument( 1 ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,747,ublic void testPartParse()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,749,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,751,OU
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,754,inal ParserControl control = new AbstractParserControl()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,756,ublic boolean isFinished( int lastOptionCode )
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,758,eturn (lastOptionCode == YOU_OPT);
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,762,"inal CLArgsParser parser = new CLArgsParser( ARGLIST1, options, control );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,764,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,766,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,767,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,769,"ssertEquals( size, 1 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,770,"ssertEquals( ((CLOption)clOptions.get( 0 )).getDescriptor().getId(), YOU_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,773,ublic void test2PartParse()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,775,inal CLOptionDescriptor[] options1 = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,777,OU
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,780,inal CLOptionDescriptor[] options2 = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,782,"LL, CLEAR1, CLEAR2, CLEAR3, CLEAR5"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,785,inal ParserControl control1 = new AbstractParserControl()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,787,ublic boolean isFinished( int lastOptionCode )
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,789,eturn (lastOptionCode == YOU_OPT);
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,793,"inal CLArgsParser parser1 = new CLArgsParser( ARGLIST1, options1, control1 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,795,"ssertNull( parser1.getErrorString(), parser1.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,797,inal List clOptions1 = parser1.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,798,inal int size1 = clOptions1.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,800,"ssertEquals( size1, 1 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,801,"ssertEquals( ((CLOption)clOptions1.get( 0 )).getDescriptor().getId(), YOU_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,803,inal CLArgsParser parser2 =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,804,"ew CLArgsParser( parser1.getUnparsedArgs(), options2 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,806,"ssertNull( parser2.getErrorString(), parser2.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,808,inal List clOptions2 = parser2.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,809,inal int size2 = clOptions2.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,811,"ssertEquals( size2, 7 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,812,"ssertEquals( ((CLOption)clOptions2.get( 0 )).getDescriptor().getId(), 0 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,813,"ssertEquals( ((CLOption)clOptions2.get( 1 )).getDescriptor().getId(), ALL_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,814,"ssertEquals( ((CLOption)clOptions2.get( 2 )).getDescriptor().getId(), CLEAR1_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,815,"ssertEquals( ((CLOption)clOptions2.get( 3 )).getDescriptor().getId(), CLEAR2_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,816,"ssertEquals( ((CLOption)clOptions2.get( 4 )).getDescriptor().getId(), CLEAR3_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,817,"ssertEquals( ((CLOption)clOptions2.get( 5 )).getDescriptor().getId(), CLEAR5_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,818,"ssertEquals( ((CLOption)clOptions2.get( 6 )).getDescriptor().getId(), 0 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,821,ublic void test2PartPartialParse()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,823,inal CLOptionDescriptor[] options1 = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,825,"OU, ALL, CLEAR1"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,828,inal CLOptionDescriptor[] options2 = new CLOptionDescriptor[]{};
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,830,inal ParserControl control1 = new AbstractParserControl()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,832,ublic boolean isFinished( final int lastOptionCode )
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,834,eturn (lastOptionCode == CLEAR1_OPT);
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,838,"inal CLArgsParser parser1 = new CLArgsParser( ARGLIST1, options1, control1 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,840,"ssertNull( parser1.getErrorString(), parser1.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,842,inal List clOptions1 = parser1.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,843,inal int size1 = clOptions1.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,845,"ssertEquals( size1, 4 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,846,"ssertEquals( ((CLOption)clOptions1.get( 0 )).getDescriptor().getId(), YOU_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,847,"ssertEquals( ((CLOption)clOptions1.get( 1 )).getDescriptor().getId(), 0 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,848,"ssertEquals( ((CLOption)clOptions1.get( 2 )).getDescriptor().getId(), ALL_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,849,"ssertEquals( ((CLOption)clOptions1.get( 3 )).getDescriptor().getId(), CLEAR1_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,851,"ssertTrue( parser1.getUnparsedArgs()[0].equals( ""ler"" ) );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,853,inal CLArgsParser parser2 =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,854,"ew CLArgsParser( parser1.getUnparsedArgs(), options2 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,856,"ssertNull( parser2.getErrorString(), parser2.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,858,inal List clOptions2 = parser2.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,859,inal int size2 = clOptions2.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,861,"ssertEquals( size2, 2 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,862,"ssertEquals( ((CLOption)clOptions2.get( 0 )).getDescriptor().getId(), 0 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,863,"ssertEquals( ((CLOption)clOptions2.get( 1 )).getDescriptor().getId(), 0 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,866,ublic void testDuplicatesFail()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,868,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,870,"OU, ALL, CLEAR1, CLEAR2, CLEAR3, CLEAR5"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,873,"inal CLArgsParser parser = new CLArgsParser( ARGLIST1, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,875,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,878,ublic void testIncomplete2Args()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,880,"/""-Dstupid="""
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,881,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,883,EFINE
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,886,"inal CLArgsParser parser = new CLArgsParser( new String[]{""-Dstupid=""}, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,888,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,890,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,891,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,893,"ssertEquals( size, 1 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,894,inal CLOption option = (CLOption)clOptions.get( 0 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,895,"ssertEquals( option.getDescriptor().getId(), DEFINE_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,896,"ssertEquals( option.getArgument( 0 ), ""stupid"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,897,"ssertEquals( option.getArgument( 1 ), """" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,900,ublic void testIncomplete2ArgsMixed()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,902,"/""-Dstupid="",""-c"""
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,903,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,905,"EFINE, CLEAR1"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,908,"inal String[] args = new String[]{""-Dstupid="", ""-c""};"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,910,"inal CLArgsParser parser = new CLArgsParser( args, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,912,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,914,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,915,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,917,"ssertEquals( size, 2 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,918,"ssertEquals( ((CLOption)clOptions.get( 1 )).getDescriptor().getId(), CLEAR1_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,919,inal CLOption option = (CLOption)clOptions.get( 0 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,920,"ssertEquals( option.getDescriptor().getId(), DEFINE_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,921,"ssertEquals( option.getArgument( 0 ), ""stupid"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,922,"ssertEquals( option.getArgument( 1 ), """" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,925,ublic void testIncomplete2ArgsMixedNoEq()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,927,"/""-Dstupid"",""-c"""
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,928,inal CLOptionDescriptor[] options = new CLOptionDescriptor[]
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,930,"EFINE, CLEAR1"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,933,"inal String[] args = new String[]{""-DStupid"", ""-c""};"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,935,"inal CLArgsParser parser = new CLArgsParser( args, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,937,"ssertNull( parser.getErrorString(), parser.getErrorString() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,939,inal List clOptions = parser.getArguments();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,940,inal int size = clOptions.size();
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,942,"ssertEquals( size, 2 );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,943,"ssertEquals( ((CLOption)clOptions.get( 1 )).getDescriptor().getId(), CLEAR1_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,944,inal CLOption option = (CLOption)clOptions.get( 0 );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,945,"ssertEquals( option.getDescriptor().getId(), DEFINE_OPT );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,946,"ssertEquals( option.getArgument( 0 ), ""Stupid"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,947,"ssertEquals( option.getArgument( 1 ), """" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,951, Test the getArgumentById and getArgumentByName lookup methods.
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,953,ublic void testArgumentLookup()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,955,"inal String[] args = {""-f"", ""testarg""};"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,956,inal CLOptionDescriptor[] options = {FILE};
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,957,"inal CLArgsParser parser = new CLArgsParser( args, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,959,LOption optionById = parser.getArgumentById( FILE_OPT );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,960,ssertNotNull( optionById );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,961,"ssertEquals( FILE_OPT, optionById.getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,963,LOption optionByName = parser.getArgumentByName( FILE.getName() );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,964,ssertNotNull( optionByName );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,965,"ssertEquals( FILE_OPT, optionByName.getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,969, Test that you can have null long forms.
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,971,ublic void testNullLongForm()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,973,inal CLOptionDescriptor test =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,974,"ew CLOptionDescriptor( null,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,975,"LOptionDescriptor.ARGUMENT_DISALLOWED,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,976,"n',"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,977,"test null long form"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,979,"inal String[] args = {""-n"", ""testarg""};"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,980,inal CLOptionDescriptor[] options = {test};
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,981,"inal CLArgsParser parser = new CLArgsParser( args, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,983,inal CLOption optionByID = parser.getArgumentById( 'n' );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,984,ssertNotNull( optionByID );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,985,"ssertEquals( 'n', optionByID.getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,987,inal CLOption optionByName = parser.getArgumentByName( FILE.getName() );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,988,"ssertNull( ""Looking for non-existent option by name"", optionByName );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,992, Test that you can have null descriptions.
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,994,ublic void testNullDescription()
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,996,inal CLOptionDescriptor test =
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,997,"ew CLOptionDescriptor( ""nulltest"","
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,998,"LOptionDescriptor.ARGUMENT_DISALLOWED,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,999,"n',"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1000,ull );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1002,"inal String[] args = {""-n"", ""testarg""};"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1003,inal CLOptionDescriptor[] options = {test};
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1004,"inal CLArgsParser parser = new CLArgsParser( args, options );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1006,inal CLOption optionByID = parser.getArgumentById( 'n' );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1007,ssertNotNull( optionByID );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1008,"ssertEquals( 'n', optionByID.getDescriptor().getId() );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1010,inal StringBuffer sb = CLUtil.describeOptions( options );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1011,"inal String lineSeparator = System.getProperty( ""line.separator"" );"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1012,"ssertEquals( ""Testing display of null description"","
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1013,"\t-n, --nulltest"" + lineSeparator,"
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1014,b.toString() );
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1017,  TODO add tests to check for:
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1018,  - name clash
False,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,src/test/org/apache/commons/cli/avalon/ClutilTestCase.java,1019,  - long option abbreviations (match shortest unique abbreviation)
