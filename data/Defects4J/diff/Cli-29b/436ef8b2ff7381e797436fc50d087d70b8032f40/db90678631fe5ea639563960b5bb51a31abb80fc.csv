is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,81,/** specified whether this group is required */
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,82,private boolean required;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,143,* @param required specifies if this group is required
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,145,public void setRequired( boolean required ) {
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,146,this.required = required;
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,150,* Returns whether this option group is required.
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,152,* @returns whether this option group is required
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,154,public boolean isRequired() {
True,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,155,return this.required;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,116,if( group.isRequired() ) {
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,117,requiredOpts.add( group );
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,122,// an Option cannot be required if it is in an
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,123,"// OptionGroup, either the group is required or"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,124,// nothing is required
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,125,option.setRequired( false );
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,2," $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/Parser.java,v 1.6 2002/10/08 21:24:11 jkeyes Exp $"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,3, $Revision: 1.6 $
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,4, $Date: 2002/10/08 21:24:11 $
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/Parser.java,v 1.7 2002/10/24 23:17:49 jkeyes Exp $"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,3,* $Revision: 1.7 $
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,4,* $Date: 2002/10/24 23:17:49 $
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,75, @version $Revision: 1.6 $
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,75,* @version $Revision: 1.7 $
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,268, (OptionGroup)( options.getOptionGroup( opt ) ) ).setSelected( opt );
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,268,OptionGroup group = ( OptionGroup ) options.getOptionGroup( opt );
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,269,if( group.isRequired() ) {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,270,requiredOptions.remove( group );
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,272,group.setSelected( opt );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,8," $Id: BugsTest.java,v 1.9 2002/10/19 21:18:26 jkeyes Exp $"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,8,"* $Id: BugsTest.java,v 1.10 2002/10/24 23:17:49 jkeyes Exp $"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,281,public void test13935() {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,282,OptionGroup directions = new OptionGroup();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,284,"Option left = new Option( ""l"", ""left"", false, ""go left"" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,285,"Option right = new Option( ""r"", ""right"", false, ""go right"" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,286,"Option straight = new Option( ""s"", ""straight"", false, ""go straight"" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,287,"Option forward = new Option( ""f"", ""forward"", false, ""go forward"" );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,288,forward.setRequired( true );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,290,directions.addOption( left );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,291,directions.addOption( right );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,292,directions.setRequired( true );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,294,Options opts = new Options();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,295,opts.addOptionGroup( directions );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,296,opts.addOption( straight );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,298,CommandLineParser parser = new PosixParser();
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,299,boolean exception = false;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,301,String[] args = new String[] {  };
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,302,try {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,303,"CommandLine line = parser.parse( opts, args );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,305,catch( ParseException exp ) {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,306,exception = true;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,309,if( !exception ) {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,310,"fail( ""Expected exception not caught."");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,313,exception = false;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,315,"args = new String[] { ""-s"" };"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,316,try {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,317,"CommandLine line = parser.parse( opts, args );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,319,catch( ParseException exp ) {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,320,exception = true;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,323,if( !exception ) {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,324,"fail( ""Expected exception not caught."");"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,327,exception = false;
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,329,"args = new String[] { ""-s"", ""-l"" };"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,330,try {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,331,"CommandLine line = parser.parse( opts, args );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,333,catch( ParseException exp ) {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,334,"fail( ""Unexpected exception: "" + exp.getMessage() );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,337,opts.addOption( forward );
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,338,"args = new String[] { ""-s"", ""-l"", ""-f"" };"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,339,try {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,340,"CommandLine line = parser.parse( opts, args );"
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,342,catch( ParseException exp ) {
True,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,343,"fail( ""Unexpected exception: "" + exp.getMessage() );"
