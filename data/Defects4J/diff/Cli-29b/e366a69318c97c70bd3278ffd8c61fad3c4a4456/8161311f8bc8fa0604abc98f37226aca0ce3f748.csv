is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,15,* limitations under the License.
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,18,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,20,import java.util.Collection;
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,23,* Exception thrown when an option can't be identified from a partial name.
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,25,* @author Emmanuel Bourg
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,26,"* @version $Revision$, $Date$"
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,27,* @since 1.3
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,29,public class AmbiguousOptionException extends UnrecognizedOptionException
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,31,/** The list of options matching the partial name specified */
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,32,private Collection matchingOptions;
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,35,* Constructs a new AmbiguousOptionException.
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,37,* @param option          the partial option name
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,38,* @param matchingOptions the options matching the name
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,40,"public AmbiguousOptionException(String option, Collection matchingOptions)"
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,42,"super(""Ambiguous option: "" + option, option);"
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,43,this.matchingOptions = matchingOptions;
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,47,* Returns the options matching the partial name.
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,49,public Collection getMatchingOptions()
True,src/java/org/apache/commons/cli/AmbiguousOptionException.java,src/java/org/apache/commons/cli/AmbiguousOptionException.java,51,return matchingOptions;
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,217,* Returns the options with a long name starting with the name specified.
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,219,* @param opt the partial name of the option
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,220,"* @return the options matching the partial name specified, or an empty list if none matches"
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,221,* @since 1.3
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,223,public List getMatchingOptions(String opt)
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,225,opt = Util.stripLeadingHyphens(opt);
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,227,List matchingOpts = new ArrayList();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,229,Iterator it = longOpts.keySet().iterator();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,230,while (it.hasNext())
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,232,String longOpt = (String) it.next();
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,233,if (longOpt.startsWith(opt))
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,235,matchingOpts.add(longOpt);
True,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,239,return matchingOpts;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,71,"rotected abstract String[] flatten(Options opts, String[] arguments, boolean stopAtNonOption);"
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,71,"protected abstract String[] flatten(Options opts, String[] arguments, boolean stopAtNonOption) throws ParseException;"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,95,"rotected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,95,"protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,109,// single or double hyphen
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,110,"if (""-"".equals(token) || ""--"".equals(token))"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,112,tokens.add(token);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,110,"f (token.startsWith(""--""))"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,116,"else if (token.startsWith(""--""))"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,121,List matchingOpts = options.getMatchingOptions(opt);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,115,f (!options.hasOption(opt))
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,123,if (matchingOpts.isEmpty())
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,127,else if (matchingOpts.size() > 1)
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,129,"throw new AmbiguousOptionException(opt, matchingOpts);"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,121,urrentOption = options.getOption(opt);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,133,currentOption = options.getOption((String) matchingOpts.get(0));
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,123,okens.add(opt);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,135,"tokens.add(""--"" + currentOption.getLongOpt());"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,131,/ single hyphen
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,132,"lse if (""-"".equals(token))"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,134,okens.add(token);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,149,else if (!options.getMatchingOptions(token).isEmpty())
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,151,List matchingOpts = options.getMatchingOptions(token);
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,152,if (matchingOpts.size() > 1)
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,154,"throw new AmbiguousOptionException(token, matchingOpts);"
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,156,else
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,158,Option opt = options.getOption((String) matchingOpts.get(0));
True,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,159,"processOptionToken(""-"" + opt.getLongOpt(), stopAtNonOption);"
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,57,public void testUnambiguousPartialLongOption1() throws Exception
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,59,// not supported by the BasicParser
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,62,public void testUnambiguousPartialLongOption2() throws Exception
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,64,// not supported by the BasicParser
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,67,public void testAmbiguousPartialLongOption1() throws Exception
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,69,// not supported by the BasicParser
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,72,public void testAmbiguousPartialLongOption2() throws Exception
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,74,// not supported by the BasicParser
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,77,public void testPartialLongOptionWithShort() throws Exception
True,src/test/org/apache/commons/cli/BasicParserTest.java,src/test/org/apache/commons/cli/BasicParserTest.java,79,// not supported by the BasicParser
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,28,public void testUnambiguousPartialLongOption1() throws Exception
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,30,// not supported by the GnuParser
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,33,public void testUnambiguousPartialLongOption2() throws Exception
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,35,// not supported by the GnuParser
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,38,public void testAmbiguousPartialLongOption1() throws Exception
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,40,// not supported by the GnuParser
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,43,public void testAmbiguousPartialLongOption2() throws Exception
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,45,// not supported by the GnuParser
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,48,public void testPartialLongOptionWithShort() throws Exception
True,src/test/org/apache/commons/cli/GnuParserTest.java,src/test/org/apache/commons/cli/GnuParserTest.java,50,// not supported by the GnuParser
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,163,public void testGetMatchingOpts()
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,165,Options options = new Options();
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,166,"options.addOption(OptionBuilder.withLongOpt(""version"").create());"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,167,"options.addOption(OptionBuilder.withLongOpt(""verbose"").create());"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,169,"assertTrue(options.getMatchingOptions(""foo"").isEmpty());"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,170,"assertEquals(1, options.getMatchingOptions(""version"").size());"
True,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,171,"assertEquals(2, options.getMatchingOptions(""ver"").size());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,307,public void testUnambiguousPartialLongOption1() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,309,"String[] args = new String[] { ""--ver"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,311,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,312,"options.addOption(OptionBuilder.withLongOpt(""version"").create());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,313,"options.addOption(OptionBuilder.withLongOpt(""help"").create());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,315,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,317,"assertTrue(""Confirm --version is set"", cl.hasOption(""version""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,320,public void testUnambiguousPartialLongOption2() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,322,"String[] args = new String[] { ""-ver"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,324,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,325,"options.addOption(OptionBuilder.withLongOpt(""version"").create());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,326,"options.addOption(OptionBuilder.withLongOpt(""help"").create());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,328,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,330,"assertTrue(""Confirm --version is set"", cl.hasOption(""version""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,333,public void testAmbiguousPartialLongOption1() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,335,"String[] args = new String[] { ""--ver"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,337,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,338,"options.addOption(OptionBuilder.withLongOpt(""version"").create());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,339,"options.addOption(OptionBuilder.withLongOpt(""verbose"").create());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,341,boolean caught = false;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,343,try
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,345,"parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,347,catch (AmbiguousOptionException e)
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,349,caught = true;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,350,"assertEquals(""Partial option"", ""--ver"", e.getOption());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,351,"assertNotNull(""Matching options null"", e.getMatchingOptions());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,352,"assertEquals(""Matching options size"", 2, e.getMatchingOptions().size());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,355,"assertTrue( ""Confirm MissingArgumentException caught"", caught );"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,358,public void testAmbiguousPartialLongOption2() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,360,"String[] args = new String[] { ""-ver"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,362,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,363,"options.addOption(OptionBuilder.withLongOpt(""version"").create());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,364,"options.addOption(OptionBuilder.withLongOpt(""verbose"").create());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,366,boolean caught = false;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,368,try
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,370,"parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,372,catch (AmbiguousOptionException e)
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,374,caught = true;
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,375,"assertEquals(""Partial option"", ""-ver"", e.getOption());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,376,"assertNotNull(""Matching options null"", e.getMatchingOptions());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,377,"assertEquals(""Matching options size"", 2, e.getMatchingOptions().size());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,380,"assertTrue( ""Confirm MissingArgumentException caught"", caught );"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,383,public void testPartialLongOptionWithShort() throws Exception
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,385,"String[] args = new String[] { ""-ver"" };"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,387,Options options = new Options();
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,388,"options.addOption(OptionBuilder.withLongOpt(""version"").create());"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,389,options.addOption(OptionBuilder.hasArg().create('v'));
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,391,"CommandLine cl = parser.parse(options, args);"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,393,"assertTrue(""Confirm --version is set"", cl.hasOption(""version""));"
True,src/test/org/apache/commons/cli/ParserTestCase.java,src/test/org/apache/commons/cli/ParserTestCase.java,394,"assertTrue(""Confirm -v is not set"", !cl.hasOption(""v""));"
