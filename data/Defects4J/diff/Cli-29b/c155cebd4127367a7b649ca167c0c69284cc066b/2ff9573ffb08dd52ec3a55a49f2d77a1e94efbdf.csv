is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,635,* <p>Clear the Option values. After a
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,636,"* parse is complete, these are left with data in them"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,637,* and they need clearing if another parse is done. </p>
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,639,"* See: <a href=""https://issues.apache.org/jira/browse/CLI-71"">CLI-71</a>"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,641,void clearValues() {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,642,this.values.clear();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,136,// clear out the data in options in case it's been used before (CLI-71)
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,137,for (Iterator it = options.helpOptions().iterator(); it.hasNext();) {
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,138,Option opt = (Option) it.next();
True,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,139,opt.clearValues();
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,17,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,19,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,22,* @author brianegge
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,24,public class OptionTest extends TestCase {
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,26,public void testClear() {
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,27,"Option option = new Option(""x"", true, """");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,28,"assertEquals(0, option.getValuesList().size());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,29,"option.addValue(""a"");"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,30,"assertEquals(1, option.getValuesList().size());"
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,31,option.clearValues();
True,src/test/org/apache/commons/cli/OptionTest.java,src/test/org/apache/commons/cli/OptionTest.java,32,"assertEquals(0, option.getValuesList().size());"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,17,package org.apache.commons.cli.bug;
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,19,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,21,import org.apache.commons.cli.*;
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,23,public class BugCLI71Test extends TestCase {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,25,private Options options;
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,26,private CommandLineParser parser;
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,28,public void setUp() {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,29,options = new Options();
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,31,"Option algorithm = new Option(""a"" , ""algo"", true, ""the algorithm which it to perform executing"");"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,32,"algorithm.setArgName(""algorithm name"");"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,33,options.addOption(algorithm);
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,35,"Option key = new Option(""k"" , ""key"", true, ""the key the setted algorithm uses to process"");"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,36,"algorithm.setArgName(""value"");"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,37,options.addOption(key);
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,39,parser = new PosixParser();
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,42,public void testBasic() throws Exception {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,43,"String[] args = new String[] { ""-a"", ""Caesar"", ""-k"", ""A"" };"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,44,"CommandLine line = parser.parse( options, args);"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,45,"assertEquals( ""Caesar"", line.getOptionValue(""a"") );"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,46,"assertEquals( ""A"", line.getOptionValue(""k"") );"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,49,public void testMistakenArgument() throws Exception {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,50,"String[] args = new String[] { ""-a"", ""Caesar"", ""-k"", ""A"" };"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,51,"CommandLine line = parser.parse( options, args);"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,52,"args = new String[] { ""-a"", ""Caesar"", ""-k"", ""a"" };"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,53,"line = parser.parse( options, args);"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,54,"assertEquals( ""Caesar"", line.getOptionValue(""a"") );"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,55,"assertEquals( ""a"", line.getOptionValue(""k"") );"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,58,public void testLackOfError() throws Exception {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,59,"String[] args = new String[] { ""-k"", ""-a"",  ""Caesar"" };"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,60,try {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,61,"CommandLine line = parser.parse( options, args);"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,62,"fail(""MissingArgumentException expected"");"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,63,} catch(MissingArgumentException mae) {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,64,// expected
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,68,public void testGetsDefaultIfOptional() throws Exception {
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,69,"String[] args = new String[] { ""-k"", ""-a"", ""Caesar"" };"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,70,"options.getOption(""k"").setOptionalArg(true);"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,71,"CommandLine line = parser.parse( options, args);"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,73,"assertEquals( ""Caesar"", line.getOptionValue(""a"") );"
True,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,src/test/org/apache/commons/cli/bug/BugCLI71Test.java,74,"assertEquals( ""a"", line.getOptionValue(""k"", ""a"") );"
