is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,36,private boolean required;
False,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,50,"ew GroupImpl(options, name, description, minimum, maximum);"
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,51,"new GroupImpl(options, name, description, minimum, maximum, required);"
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,67,required = true;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,122,* Sets the required flag. This flag is evaluated for groups that are
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,123,* added to other groups as child groups. If set to <b>true</b> the
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,124,* minimum and maximum constraints of the child group are always evaluated.
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,125,* @param newRequired the required flag
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,126,* @return this builder
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,128,public GroupBuilder withRequired(final boolean newRequired) {
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,129,this.required = newRequired;
True,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,src/java/org/apache/commons/cli2/builder/GroupBuilder.java,130,return this;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,63,* @param required a flag whether this group is required
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,68,inal int maximum) {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,69,"uper(0, false);"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,69,"final int maximum,"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,70,final boolean required) {
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,71,"super(0, required);"
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,250,oolean validate = option.isRequired() || option instanceof Group;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,252,boolean validate = option.isRequired();
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,473,ublic boolean isRequired() {
False,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,474,eturn getMinimum() > 0;
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,476,* Tests whether this option is required. For groups we evaluate the
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,477,"* <code>required</code> flag common to all options, but also take the"
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,478,* minimum constraints into account.
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,480,* @return a flag whether this option is required
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,482,public boolean isRequired()
True,src/java/org/apache/commons/cli2/option/GroupImpl.java,src/java/org/apache/commons/cli2/option/GroupImpl.java,484,return (getParent() == null || super.isRequired()) && getMinimum() > 0;
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,17,package org.apache.commons.cli2.bug;
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,19,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,21,import org.apache.commons.cli2.CommandLine;
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,22,import org.apache.commons.cli2.Group;
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,23,import org.apache.commons.cli2.Option;
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,24,import org.apache.commons.cli2.OptionException;
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,25,import org.apache.commons.cli2.builder.DefaultOptionBuilder;
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,26,import org.apache.commons.cli2.builder.GroupBuilder;
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,27,import org.apache.commons.cli2.commandline.Parser;
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,30,* Inconsistent handling of minimum and maximum constraints for groups and their
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,31,* child groups.
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,33,* @author Oliver Heger
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,34,* @version $Id$
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,36,public class BugCLI159Test extends TestCase
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,38,/** The parent group. */
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,39,private Group parent;
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,41,/** The child group. */
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,42,private Group child;
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,44,/** The parser. */
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,45,private Parser parser;
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,48,"* Creates some test options, including a group with a child group."
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,50,* @param childGroupRequired a flag whether the child group is required
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,52,private void setUpOptions(boolean childGroupRequired)
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,54,final DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,55,final GroupBuilder gbuilder = new GroupBuilder();
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,56,"Option parentOpt = obuilder.withLongName(""parent"").withShortName(""p"")"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,57,.create();
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,58,"Option childOpt1 = obuilder.withLongName(""child"").withShortName(""c"")"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,59,.create();
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,60,"Option childOpt2 = obuilder.withLongName(""sub"").withShortName(""s"")"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,61,.create();
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,62,"Option childOpt3 = obuilder.withLongName(""test"").withShortName(""t"")"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,63,.create();
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,64,"child = gbuilder.withName(""childOptions"").withOption(childOpt1)"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,65,.withOption(childOpt2).withOption(childOpt3).withMinimum(2)
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,66,.withRequired(childGroupRequired).create();
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,67,"parent = gbuilder.withName(""options"").withOption(parentOpt).withOption("
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,68,child).withMinimum(0).create();
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,69,parser = new Parser();
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,70,parser.setGroup(parent);
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,74,* Tests whether the child group can be omitted.
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,76,public void testNoChildGroup() throws OptionException
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,78,setUpOptions(false);
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,79,CommandLine cl = parser.parse(new String[] {
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,80,"""--parent"""
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,82,"assertNotNull(""No command line parsed"", cl);"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,83,"assertFalse(""Child group found"", cl.hasOption(child));"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,87,* Tests whether a required child groupd can be omitted.
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,89,public void testNoChildGroupRequired()
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,91,setUpOptions(true);
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,92,try
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,94,parser.parse(new String[] {
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,95,"""--parent"""
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,97,"fail(""Missing child group not detected!"");"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,99,catch (OptionException oex)
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,101,// ok
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,106,* Tests parsing an empty command line. Because the parent group is optional
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,107,* this should be possible.
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,109,public void testNoOptions() throws OptionException
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,111,setUpOptions(false);
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,112,CommandLine cl = parser.parse(new String[0]);
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,113,"assertFalse(""Found parent option"", cl.hasOption(""--parent""));"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,114,"assertFalse(""Found child option"", cl.hasOption(""--child""));"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,118,* Tests parsing a command line with options of the child group.
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,120,public void testWithChildOptions() throws OptionException
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,122,setUpOptions(false);
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,123,CommandLine cl = parser.parse(new String[] {
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,124,"""-ct"""
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,126,"assertTrue(""child option not found"", cl.hasOption(""--child""));"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,127,"assertTrue(""test option not found"", cl.hasOption(""--test""));"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,131,"* Tests a command line containing options of the child group, but the"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,132,* minimum constraint is violated.
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,134,public void testWithChildOptionsMissing()
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,136,setUpOptions(false);
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,137,try
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,139,parser.parse(new String[] {
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,140,"""--parent"", ""--sub"""
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,142,"fail(""Missing options of child group not detected!"");"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,144,catch (OptionException oex)
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,146,// ok
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,151,* Tests whether the root group is always validated.
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,153,public void testRequiredRootGroup()
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,155,setUpOptions(false);
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,156,parser.setGroup(child);
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,157,try
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,159,parser.parse(new String[] {
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,160,"""--test"""
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,162,"fail(""Missing options not detected!"");"
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,164,catch (OptionException oex)
True,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,src/test/org/apache/commons/cli2/bug/BugCLI159Test.java,166,// ok
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,58,"eturn new GroupImpl(options, ""httpd-cmds"", ""The command to pass to the server"", 1, 1);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,58,"return new GroupImpl(options, ""httpd-cmds"", ""The command to pass to the server"", 1, 1, true);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,67,nteger.MAX_VALUE);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,67,"Integer.MAX_VALUE, true);"
False,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,75,"eturn new GroupImpl(options, ""ant"", ""The options for ant"", 0, Integer.MAX_VALUE);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,75,"return new GroupImpl(options, ""ant"", ""The options for ant"", 0, Integer.MAX_VALUE, true);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,78,"private static Group buildRequiredTestGroup(final boolean required,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,79,final int minimum)
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,81,"final Group group = new GroupImpl(new ArrayList(), ""test"", null,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,82,"minimum, Integer.MAX_VALUE, required);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,83,final List options = new ArrayList(1);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,84,options.add(group);
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,85,"new GroupImpl(options, ""parent"", null, 0, Integer.MAX_VALUE, false);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,86,return group;
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,453,* Tests isRequired() for a child group if neither the required flag nor a
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,454,* minimum constraint is set.
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,456,public void testIsRequired_ChildNoFlagNoMinimum()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,458,"final Group group = buildRequiredTestGroup(false, 0);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,459,"assertFalse(""Group is required"", group.isRequired());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,463,"* Tests isRequired() for a child group that has a minimum constraint, but"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,464,* the required flag is not set.
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,466,public void testIsRequired_ChildNoFlagMinimum()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,468,"final Group group = buildRequiredTestGroup(false, 10);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,469,"assertFalse(""Group is required"", group.isRequired());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,473,"* Tests isRequired() for a child group that has the required flag set, but"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,474,* no minimum constraint. In this constellation the group is de facto not
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,475,* required.
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,477,public void testIsRequired_ChildFlagNoMinimum()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,479,"final Group group = buildRequiredTestGroup(true, 0);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,480,"assertFalse(""Group is required"", group.isRequired());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,484,* Tests isRequired() for a child group that has both the required flag and
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,485,* a minimum constraint set. This is indeed a required group.
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,487,public void testIsRequired_ChildFlagMinimum()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,489,"final Group group = buildRequiredTestGroup(true, 10);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,490,"assertTrue(""Group is not required"", group.isRequired());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,494,* Tests isRequired() for the root group when no minimum constraint is set.
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,496,public void testIsRequired_ParentNoMinimum()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,498,"final Group parent = (Group) buildRequiredTestGroup(false, 0)"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,499,.getParent();
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,500,"assertFalse(""Group is required"", parent.isRequired());"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,504,* Tests isRequired() for the root group with a minimum constraint.
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,506,public void testIsRequired_ParentMiminum()
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,508,"final Group parent = new GroupImpl(new ArrayList(), ""test"", null, 10,"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,509,"Integer.MAX_VALUE, false);"
True,src/test/org/apache/commons/cli2/option/GroupTest.java,src/test/org/apache/commons/cli2/option/GroupTest.java,510,"assertTrue(""Group not required"", parent.isRequired());"
