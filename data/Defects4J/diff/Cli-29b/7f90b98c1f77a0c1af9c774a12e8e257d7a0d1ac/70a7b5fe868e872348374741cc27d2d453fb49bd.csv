is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,119,private void validateOption( String opt )
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,120,throws IllegalArgumentException
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,122,if( opt == null ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,123,"throw new IllegalArgumentException( ""opt is null"" );"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,125,else if( opt.length() == 1 ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,126,if ( !isValidOpt( opt.charAt( 0 ) ) ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,127,"throw new IllegalArgumentException( ""illegal option value '"""
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,128,"+ opt.charAt( 0 ) + ""'"" );"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,131,else {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,132,char[] chars = opt.toCharArray();
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,133,for( int i = 0; i < chars.length; i++ ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,134,if( !isValidChar( chars[i] ) ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,135,"throw new IllegalArgumentException( ""opt contains illegal character value '"" + chars[i] + ""'"" );"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,141,private boolean isValidOpt( char c )
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,143,if ( ! ( isValidChar( c ) || c == '?' || c == '@') ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,144,return false;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,146,return true;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,149,private boolean isValidChar( char c )
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,151,if ( ! ( Character.isLetter( c ) ) ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,152,return false;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,154,return true;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,126,"ublic Option(String opt, boolean hasArg, String description) {"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,163,"public Option(String opt, boolean hasArg, String description)"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,164,throws IllegalArgumentException
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,138,"ublic Option(String opt, String longOpt, boolean hasArg, String description) {"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,177,"public Option(String opt, String longOpt, boolean hasArg, String description)"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,178,throws IllegalArgumentException
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,152,oolean required ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,193,boolean required )
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,194,throws IllegalArgumentException
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,168,"oolean required, boolean multipleArgs ) {"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,211,"boolean required, boolean multipleArgs )"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,212,throws IllegalArgumentException
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,185,"oolean required, boolean multipleArgs, Object type ) {"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,230,"boolean required, boolean multipleArgs, Object type )"
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,231,throws IllegalArgumentException
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,233,validateOption( opt );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,266,public void setType( Object type ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,267,this.type = type;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,278,public void setLongOpt( String longOpt ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,279,this.longOpt = longOpt;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,314,public void setRequired( boolean required ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,315,this.required = required;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,326,public void setMultipleArgs( boolean multipleArgs ) {
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,327,this.multipleArgs = multipleArgs;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,1,package org.apache.commons.cli;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,3,public class OptionBuilder {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,5,private static String longopt;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,6,private static String description;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,7,private static boolean arg;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,8,private static boolean required;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,9,private static boolean multipleArgs;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,10,private static Object type;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,12,private static OptionBuilder instance = new OptionBuilder();
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,14,// private constructor
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,15,private OptionBuilder() {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,18,private static void reset() {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,19,description = null;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,20,longopt = null;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,21,type = null;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,22,arg = false;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,23,required = false;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,24,multipleArgs = false;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,27,public static OptionBuilder withLongOpt( String longopt ) {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,28,instance.longopt = longopt;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,29,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,32,public static OptionBuilder hasArg( ) {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,33,instance.arg = true;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,34,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,37,public static OptionBuilder isRequired( ) {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,38,instance.required = true;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,39,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,42,public static OptionBuilder hasMultipleArgs( ) {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,43,instance.multipleArgs = true;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,44,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,47,public static OptionBuilder withType( Object type ) {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,48,instance.type = type;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,49,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,52,public static OptionBuilder withDescription( String description ) {
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,53,instance.description = description;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,54,return instance;
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,57,public static Option create( char opt )
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,58,throws IllegalArgumentException
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,60,return create( String.valueOf( opt ) );
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,63,public static Option create( String opt )
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,64,throws IllegalArgumentException
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,66,"Option option = new Option( opt, arg, description );"
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,67,option.setLongOpt( longopt );
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,68,option.setRequired( required );
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,69,option.setMultipleArgs( multipleArgs );
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,70,option.setType( type );
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,71,instance.reset();
True,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,72,return option;
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,1,package org.apache.commons.cli;
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,3,import junit.framework.Test;
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,4,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,5,import junit.framework.TestSuite;
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,7,import junit.textui.TestRunner;
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,9,public class OptionBuilderTest extends TestCase {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,11,public OptionBuilderTest( String name ) {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,12,super( name );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,15,public static Test suite() {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,16,return new TestSuite( OptionBuilderTest.class );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,19,public static void main( String args[] ) {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,20,TestRunner.run( suite() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,23,public void testCompleteOption( ) {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,24,"Option simple = OptionBuilder.withLongOpt( ""simple option"")"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,25,.hasArg( )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,26,.isRequired( )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,27,.hasMultipleArgs( )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,28,.withType( new Float( 10 ) )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,29,".withDescription( ""this is a simple option"" )"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,30,.create( 's' );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,32,"assertEquals( ""s"", simple.getOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,33,"assertEquals( ""simple option"", simple.getLongOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,34,"assertEquals( ""this is a simple option"", simple.getDescription() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,35,"assertEquals( simple.getType().getClass(), Float.class );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,36,assertTrue( simple.hasArg() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,37,assertTrue( simple.isRequired() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,38,assertTrue( simple.hasMultipleArgs() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,41,public void testTwoCompleteOptions( ) {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,42,"Option simple = OptionBuilder.withLongOpt( ""simple option"")"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,43,.hasArg( )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,44,.isRequired( )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,45,.hasMultipleArgs( )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,46,.withType( new Float( 10 ) )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,47,".withDescription( ""this is a simple option"" )"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,48,.create( 's' );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,50,"assertEquals( ""s"", simple.getOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,51,"assertEquals( ""simple option"", simple.getLongOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,52,"assertEquals( ""this is a simple option"", simple.getDescription() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,53,"assertEquals( simple.getType().getClass(), Float.class );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,54,assertTrue( simple.hasArg() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,55,assertTrue( simple.isRequired() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,56,assertTrue( simple.hasMultipleArgs() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,58,"simple = OptionBuilder.withLongOpt( ""dimple option"")"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,59,.hasArg( )
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,60,".withDescription( ""this is a dimple option"" )"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,61,.create( 'd' );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,63,"assertEquals( ""d"", simple.getOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,64,"assertEquals( ""dimple option"", simple.getLongOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,65,"assertEquals( ""this is a dimple option"", simple.getDescription() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,66,assertNull( simple.getType() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,67,assertTrue( simple.hasArg() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,68,assertTrue( !simple.isRequired() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,69,assertTrue( !simple.hasMultipleArgs() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,72,public void testBaseOptionCharOpt() {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,73,"Option base = OptionBuilder.withDescription( ""option description"")"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,74,.create( 'o' );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,76,"assertEquals( ""o"", base.getOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,77,"assertEquals( ""option description"", base.getDescription() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,78,assertTrue( !base.hasArg() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,81,public void testBaseOptionStringOpt() {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,82,"Option base = OptionBuilder.withDescription( ""option description"")"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,83,".create( ""o"" );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,85,"assertEquals( ""o"", base.getOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,86,"assertEquals( ""option description"", base.getDescription() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,87,assertTrue( !base.hasArg() );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,90,public void testSpecialOptChars() {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,93,try {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,94,"Option opt = OptionBuilder.withDescription( ""help options"" )"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,95,.create( '?' );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,96,"assertEquals( ""?"", opt.getOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,98,catch( IllegalArgumentException arg ) {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,99,"fail( ""IllegalArgumentException caught"" );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,103,try {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,104,"Option opt = OptionBuilder.withDescription( ""read from stdin"" )"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,105,.create( '@' );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,106,"assertEquals( ""@"", opt.getOpt() );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,108,catch( IllegalArgumentException arg ) {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,109,"fail( ""IllegalArgumentException caught"" );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,113,public void testIllegalOptions() {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,114,// bad single character option
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,115,try {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,116,"Option opt = OptionBuilder.withDescription( ""option description"" )"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,117,".create( '""' );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,118,"fail( ""IllegalArgumentException not caught"" );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,120,catch( IllegalArgumentException exp ) {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,121,// success
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,124,// bad character in option string
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,125,try {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,126,"Option opt = OptionBuilder.create( ""opt`"" );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,127,"fail( ""IllegalArgumentException not caught"" );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,129,catch( IllegalArgumentException exp ) {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,130,// success
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,133,// null option
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,134,try {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,135,Option opt = OptionBuilder.create( null );
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,136,"fail( ""IllegalArgumentException not caught"" );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,138,catch( IllegalArgumentException exp ) {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,139,// success
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,142,// valid option
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,143,try {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,144,"Option opt = OptionBuilder.create( ""opt"" );"
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,145,// success
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,147,catch( IllegalArgumentException exp ) {
True,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,148,"fail( ""IllegalArgumentException caught"" );"
