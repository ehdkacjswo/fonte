is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,15, limitations under the License.
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,17,ackage org.apache.commons.lang3;
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,20, <p>Operations on {@code CharSequence} that are
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,21, <code>null</code> safe.</p>
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,23, <p>#ThreadSafe#</p>
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,25, @author Apache Software Foundation
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,26, @author Gary Gregory
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,27, @since 3.0
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,28, @version $Id$
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,30,ublic class CharSequenceUtils {
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,33, <p>{@code CharSequenceUtils} instances should NOT be constructed in
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,34," standard programming. Instead, the static methods on the class should"
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,35," be used, such as {@code CharSequenceUtils.subSequence(cs, 4);}.</p>"
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,37, <p>This constructor is public to permit tools that require a JavaBean
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,38, instance to operate.</p>
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,40,ublic CharSequenceUtils() {
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,41,uper();
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,46, <p>Returns a new {@code CharSequence} that is a subsequence of this
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,47, sequence starting with the {@code char} value at the specified index.</p>
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,49, <p>This provides the {@code CharSequence} equivalent to {@link String#substring(int)}.
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,50," The length (in {@code char}) of the returned sequence is {@code length() - start},"
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,51, so if {@code start == end} then an empty sequence is returned.</p>
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,53," @param cs  the specified subsequence, null returns null"
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,54," @param start  the start index, inclusive, valid"
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,55," @return a new subsequence, may be null"
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,56, @throws IndexOutOfBoundsException if {@code start} is negative or if
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,57,  {@code start} is greater than {@code length()}
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,59,"ublic static CharSequence subSequence(CharSequence cs, int start) {"
False,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,src/main/java/org/apache/commons/lang3/CharSequenceUtils.java,60,"eturn cs == null ? null : cs.subSequence(start, cs.length());"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5024,"append(CharSequenceUtils.subSequence(cs, 1))"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5024,".append(StringUtils.subSequence(cs, 1))"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5059,"append(CharSequenceUtils.subSequence(cs, 1))"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5059,".append(StringUtils.subSequence(cs, 1))"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6390,* <p>Returns a new {@code CharSequence} that is a subsequence of this
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6391,* sequence starting with the {@code char} value at the specified index.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6393,* <p>This provides the {@code CharSequence} equivalent to {@link String#substring(int)}.
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6394,"* The length (in {@code char}) of the returned sequence is {@code length() - start},"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6395,* so if {@code start == end} then an empty sequence is returned.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6397,"* @param cs  the specified subsequence, null returns null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6398,"* @param start  the start index, inclusive, valid"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6399,"* @return a new subsequence, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6400,* @throws IndexOutOfBoundsException if {@code start} is negative or if
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6401,*  {@code start} is greater than {@code length()}
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6403,"public static CharSequence subSequence(CharSequence cs, int start) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6404,"return cs == null ? null : cs.subSequence(start, cs.length());"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,15, limitations under the License.
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,17,ackage org.apache.commons.lang3;
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,19,mport java.lang.reflect.Constructor;
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,20,mport java.lang.reflect.Modifier;
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,22,mport junit.framework.Assert;
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,23,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,26, Tests CharSequenceUtils
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,28, @author Gary Gregory
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,29, @version $Id$
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,31,ublic class CharSequenceUtilsTest extends TestCase {
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,34,ublic void testConstructor() {
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,35,ssertNotNull(new CharSequenceUtils());
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,36,onstructor<?>[] cons = CharSequenceUtils.class.getDeclaredConstructors();
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,37,"ssertEquals(1, cons.length);"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,38,"ssertEquals(true, Modifier.isPublic(cons[0].getModifiers()));"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,39,"ssertEquals(true, Modifier.isPublic(CharSequenceUtils.class.getModifiers()));"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,40,"ssertEquals(false, Modifier.isFinal(CharSequenceUtils.class.getModifiers()));"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,44,ublic void testSubSequence() {
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,46,/ null input
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,48,"ssert.assertEquals(null, CharSequenceUtils.subSequence(null, -1));"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,49,"ssert.assertEquals(null, CharSequenceUtils.subSequence(null, 0));"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,50,"ssert.assertEquals(null, CharSequenceUtils.subSequence(null, 1));"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,52,/ non-null input
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,54,"ssert.assertEquals(StringUtils.EMPTY, CharSequenceUtils.subSequence(StringUtils.EMPTY, 0));"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,55,"ssert.assertEquals(""012"", CharSequenceUtils.subSequence(""012"", 0));"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,56,"ssert.assertEquals(""12"", CharSequenceUtils.subSequence(""012"", 1));"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,57,"ssert.assertEquals(""2"", CharSequenceUtils.subSequence(""012"", 2));"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,58,"ssert.assertEquals(StringUtils.EMPTY, CharSequenceUtils.subSequence(""012"", 3));"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,60,/ Exception expected
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,62,ry {
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,63,"ssert.assertEquals(null, CharSequenceUtils.subSequence(StringUtils.EMPTY, -1));"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,64,"ssert.fail(""Expected "" + IndexOutOfBoundsException.class.getName());"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,65, catch (IndexOutOfBoundsException e) {
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,66,/ Expected
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,68,ry {
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,69,"ssert.assertEquals(null, CharSequenceUtils.subSequence(StringUtils.EMPTY, 1));"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,70,"ssert.fail(""Expected "" + IndexOutOfBoundsException.class.getName());"
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,71, catch (IndexOutOfBoundsException e) {
False,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java,72,/ Expected
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,20,import org.junit.Assert;
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,318,public void testSubSequence() {
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,320,// null input
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,322,"Assert.assertEquals(null, StringUtils.subSequence(null, -1));"
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,323,"Assert.assertEquals(null, StringUtils.subSequence(null, 0));"
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,324,"Assert.assertEquals(null, StringUtils.subSequence(null, 1));"
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,326,// non-null input
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,328,"Assert.assertEquals(StringUtils.EMPTY, StringUtils.subSequence(StringUtils.EMPTY, 0));"
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,329,"Assert.assertEquals(""012"", StringUtils.subSequence(""012"", 0));"
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,330,"Assert.assertEquals(""12"", StringUtils.subSequence(""012"", 1));"
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,331,"Assert.assertEquals(""2"", StringUtils.subSequence(""012"", 2));"
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,332,"Assert.assertEquals(StringUtils.EMPTY, StringUtils.subSequence(""012"", 3));"
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,334,// Exception expected
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,336,try {
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,337,"Assert.assertEquals(null, StringUtils.subSequence(StringUtils.EMPTY, -1));"
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,338,"Assert.fail(""Expected "" + IndexOutOfBoundsException.class.getName());"
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,339,} catch (IndexOutOfBoundsException e) {
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,340,// Expected
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,342,try {
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,343,"Assert.assertEquals(null, StringUtils.subSequence(StringUtils.EMPTY, 1));"
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,344,"Assert.fail(""Expected "" + IndexOutOfBoundsException.class.getName());"
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,345,} catch (IndexOutOfBoundsException e) {
True,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,src/test/java/org/apache/commons/lang3/StringUtilsSubstringTest.java,346,// Expected
