is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,142, Creates a new instance of <code>VariableFormat</code> and initializes it. Uses a default escaping character.
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,142,* Creates a new instance of <code>VariableFormat</code> and initializes it.
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,143,* Uses a default escaping character.
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,158, Creates a new instance of <code>VariableFormat</code> and initializes it. Uses defaults for variable prefix and
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,159, suffix and the escaping character.
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,159,* Creates a new instance of <code>VariableFormat</code> and initializes it.
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,160,* Uses defaults for variable prefix and suffix and the escaping character.
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,180," Sets the escape character. If this character is placed before a variable reference in the source text, this"
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,181, variable will be ignored.
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,181,* Sets the escape character. If this character is placed before a
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,182,"* variable reference in the source text, this variable will be ignored."
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,263, Replaces the occurrences of all variables in the given source data by their current values. If the source
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,264," consists only of a single variable reference, this method directly returns the value of this variable (which can"
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,265," be an arbitrary object). If the source contains multiple variable references or static text, the return value"
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,266, will always be a String with the concatenation of all these elements.
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,264,* Replaces the occurrences of all variables in the given source data by
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,265,* their current values. If the source consists only of a single variable
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,266,"* reference, this method directly returns the value of this variable"
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,267,* (which can be an arbitrary object). If the source contains multiple
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,268,"* variable references or static text, the return value will always be a"
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,269,* String with the concatenation of all these elements.
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,278, Replaces the occurrences of all variables in the given source data by their current values.
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,281,* Replaces the occurrences of all variables in the given source data by
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,282,* their current values.
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,291, Replaces the occurrences of all variables in the given source data by their current values obtained from the
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,292, passed in map.
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,295,* Replaces the occurrences of all variables in the given source data by
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,296,* their current values obtained from the passed in map.
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,305, Replaces the occurrences of all variables in the given source data by their current values obtained from the
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,306, passed in map. This method allows to specifiy a custom variable prefix and suffix
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,309,* Replaces the occurrences of all variables in the given source data by
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,310,* their current values obtained from the passed in map. This method
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,311,* allows to specifiy a custom variable prefix and suffix
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,323, Replaces all variables in the given source data with values obtained from system properties.
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,328,* Replaces all variables in the given source data with values obtained
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,329,* from system properties.
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,334," Checks if the variable reference found at the specified position is escaped and if this is the case, where the"
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,335, escaped text starts.
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,340,* Checks if the variable reference found at the specified position is
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,341,"* escaped and if this is the case, where the escaped text starts."
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,355, Unescapes an escaped variable reference. This method is called if <code>escaped()</code> has determined an
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,356, escaped variable reference. Its purpose is to remove any escaping characters and to add the resulting text into
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,357," the target buffer. This implementation will remove the first escape character. So if the default values are used,"
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,361,* Unescapes an escaped variable reference. This method is called if
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,362,* <code>escaped()</code> has determined an escaped variable reference.
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,363,* Its purpose is to remove any escaping characters and to add the
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,364,* resulting text into the target buffer. This implementation will remove
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,365,"* the first escape character. So if the default values are used,"
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,359, <code>$$$${var with dollars}</code> will result in <code>$$${var with dollars}</code>. Text between the
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,360, first variable start token and the last unescaped variable end token can contain variable references and will be
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,367,* <code>$$$${var with dollars}</code> will result in <code>$$${var with
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,368,* dollars}</code>. Text between the first variable start token and the last
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,369,* unescaped variable end token can contain variable references and will be
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,362," <code>Variable $${${varName$}} is incorrect!</code> (note how the first &quot;}&quot; character is escaped, so"
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,363, that the second &quot;}&quot; marks the end of this construct.
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,371,* <code>Variable $${${varName$}} is incorrect!</code> (note how the first
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,372,"* &quot;}&quot; character is escaped, so that the second &quot;}&quot;"
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,373,* marks the end of this construct.
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,386, Searches for a variable end token in the given string from the specified start position.
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,396,* Searches for a variable end token in the given string from the
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,397,* specified start position.
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,405, Resolves the specified variable. This method is called whenever a variable reference is detected in the source
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,406, text. It is passed the variable's name and must return the corresponding value. This implementation accesses the
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,407, value map using the variable's name as key. Derived classes may overload this method to implement a different
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,416,* Resolves the specified variable. This method is called whenever a
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,417,* variable reference is detected in the source text. It is passed the
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,418,* variable's name and must return the corresponding value.
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,419,* This implementation accesses the value map using the variable's name
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,420,* as key. Derived classes may override this method to implement a different
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,419," Recursive handler for multple levels of interpolation. This is the main interpolation method, which resolves the"
False,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,420, values of all variable references contained in the passed in text.
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,432,* Recursive handler for multple levels of interpolation. This is the main
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,433,"* interpolation method, which resolves the values of all variable"
True,src/java/org/apache/commons/lang/text/VariableFormatter.java,src/java/org/apache/commons/lang/text/VariableFormatter.java,434,* references contained in the passed in text.
