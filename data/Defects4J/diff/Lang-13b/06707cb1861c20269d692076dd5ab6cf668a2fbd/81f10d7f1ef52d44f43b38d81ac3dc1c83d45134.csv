is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,882,oundUp = offset > 6;
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,882,roundUp = offset >= 6;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,17,package org.apache.commons.lang.time;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,19,import java.text.DateFormat;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,20,import java.text.SimpleDateFormat;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,21,import java.util.Calendar;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,22,import java.util.Date;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,23,import java.util.Locale;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,25,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,26,import junit.framework.Test;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,27,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,30,* These Unit-tests will check all possible extremes when using some rounding-methods of DateUtils.
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,31,* The extremes are tested at the switch-point in milliseconds
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,33,* According to the implementation SEMI_MONTH will either round/truncate to the 1st or 16th
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,34,* When rounding Calendar.MONTH it depends on the number of days within that month.
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,35,* A month with 28 days will be rounded up from the 15th
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,36,* A month with 29 or 30 days will be rounded up from the 16th
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,37,* A month with 31 days will be rounded up from the 17th
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,39,* @todo Add DateUtils.ceil()-tests if method is available
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,41,* @author Robert Scholte
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,42,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,45,public class DateUtilsRoundingTest extends TestCase {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,47,public static Test suite() {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,48,TestSuite suite = new TestSuite(DateUtilsRoundingTest.class);
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,49,"suite.setName(""DateUtils Rounding Tests"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,50,return suite;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,53,DateFormat dateTimeParser;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,55,Date januaryOneDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,56,Date targetYearDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,57,"//No targetMonths, these must be tested for every type of month(28-31 days)"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,58,"Date targetDateDate, targetDayOfMonthDate, targetAmDate, targetPmDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,59,"Date targetHourOfDayDate, targetHourDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,60,Date targetMinuteDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,61,Date targetSecondDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,62,Date targetMilliSecondDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,64,Calendar januaryOneCalendar;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,65,FastDateFormat fdf = DateFormatUtils.ISO_DATETIME_FORMAT;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,67,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,68,super.setUp();
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,69,"dateTimeParser = new SimpleDateFormat(""MMM dd, yyyy H:mm:ss.SSS"", Locale.ENGLISH);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,71,"targetYearDate = dateTimeParser.parse(""January 1, 2007 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,72,"targetDateDate = targetDayOfMonthDate = dateTimeParser.parse(""June 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,73,"targetAmDate =  dateTimeParser.parse(""June 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,74,"targetPmDate = dateTimeParser.parse(""June 1, 2008 12:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,75,"targetHourDate = dateTimeParser.parse(""June 1, 2008 8:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,76,"targetHourOfDayDate = dateTimeParser.parse(""June 1, 2008 8:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,77,"targetMinuteDate =  dateTimeParser.parse(""June 1, 2008 8:15:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,78,"targetSecondDate =  dateTimeParser.parse(""June 1, 2008 8:15:14.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,79,"targetMilliSecondDate =  dateTimeParser.parse(""June 1, 2008 8:15:14.231"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,81,"januaryOneDate = dateTimeParser.parse(""January 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,82,januaryOneCalendar = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,83,januaryOneCalendar.setTime(januaryOneDate);
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,87,* Tests DateUtils.round()-method with Calendar.Year
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,89,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,90,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,92,public void testRoundYear() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,93,final int calendarField = Calendar.YEAR;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,94,"Date roundedUpDate = dateTimeParser.parse(""January 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,95,Date roundedDownDate = targetYearDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,96,"Date lastRoundedDownDate = dateTimeParser.parse(""June 30, 2007 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,97,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,101,* Tests DateUtils.round()-method with Calendar.MONTH
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,102,"* Includes rounding months with 28, 29, 30 and 31 days"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,103,* Includes rounding to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,105,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,106,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,108,public void testRoundMonth() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,109,final int calendarField = Calendar.MONTH;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,110,"Date roundedUpDate, roundedDownDate, lastRoundedDownDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,111,"Date minDate, maxDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,113,//month with 28 days
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,114,"roundedUpDate = dateTimeParser.parse(""March 1, 2007 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,115,"roundedDownDate = dateTimeParser.parse(""February 1, 2007 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,116,"lastRoundedDownDate = dateTimeParser.parse(""February 14, 2007 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,117,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,119,//month with 29 days
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,120,"roundedUpDate = dateTimeParser.parse(""March 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,121,"roundedDownDate = dateTimeParser.parse(""February 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,122,"lastRoundedDownDate = dateTimeParser.parse(""February 15, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,123,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,125,//month with 30 days
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,126,"roundedUpDate = dateTimeParser.parse(""May 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,127,"roundedDownDate = dateTimeParser.parse(""April 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,128,"lastRoundedDownDate = dateTimeParser.parse(""April 15, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,129,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,131,//month with 31 days
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,132,"roundedUpDate = dateTimeParser.parse(""June 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,133,"roundedDownDate = dateTimeParser.parse(""May 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,134,"lastRoundedDownDate = dateTimeParser.parse(""May 16, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,135,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,137,//round to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,138,"minDate = dateTimeParser.parse(""December 17, 2007 00:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,139,"maxDate = dateTimeParser.parse(""January 16, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,140,"roundToJanuaryFirst(minDate, maxDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,144,* Tests DateUtils.round()-method with DateUtils.SEMI_MONTH
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,145,"* Includes rounding months with 28, 29, 30 and 31 days, each with first and second half"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,146,* Includes rounding to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,148,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,149,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,151,public void testRoundSemiMonth() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,152,final int calendarField = DateUtils.SEMI_MONTH;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,153,"Date roundedUpDate, roundedDownDate, lastRoundedDownDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,154,"Date minDate, maxDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,156,//month with 28 days (1)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,157,"roundedUpDate = dateTimeParser.parse(""February 16, 2007 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,158,"roundedDownDate = dateTimeParser.parse(""February 1, 2007 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,159,"lastRoundedDownDate = dateTimeParser.parse(""February 8, 2007 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,160,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,162,//month with 28 days (2)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,163,"roundedUpDate = dateTimeParser.parse(""March 1, 2007 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,164,"roundedDownDate = dateTimeParser.parse(""February 16, 2007 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,165,"lastRoundedDownDate = dateTimeParser.parse(""February 23, 2007 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,166,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,168,//month with 29 days (1)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,169,"roundedUpDate = dateTimeParser.parse(""February 16, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,170,"roundedDownDate = dateTimeParser.parse(""February 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,171,"lastRoundedDownDate = dateTimeParser.parse(""February 8, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,172,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,174,//month with 29 days (2)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,175,"roundedUpDate = dateTimeParser.parse(""March 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,176,"roundedDownDate = dateTimeParser.parse(""February 16, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,177,"lastRoundedDownDate = dateTimeParser.parse(""February 23, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,178,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,180,//month with 30 days (1)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,181,"roundedUpDate = dateTimeParser.parse(""April 16, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,182,"roundedDownDate = dateTimeParser.parse(""April 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,183,"lastRoundedDownDate = dateTimeParser.parse(""April 8, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,184,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,186,//month with 30 days (2)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,187,"roundedUpDate = dateTimeParser.parse(""May 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,188,"roundedDownDate = dateTimeParser.parse(""April 16, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,189,"lastRoundedDownDate = dateTimeParser.parse(""April 23, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,190,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,192,//month with 31 days (1)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,193,"roundedUpDate = dateTimeParser.parse(""May 16, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,194,"roundedDownDate = dateTimeParser.parse(""May 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,195,"lastRoundedDownDate = dateTimeParser.parse(""May 8, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,196,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,198,//month with 31 days (2)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,199,"roundedUpDate = dateTimeParser.parse(""June 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,200,"roundedDownDate = dateTimeParser.parse(""May 16, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,201,"lastRoundedDownDate = dateTimeParser.parse(""May 23, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,202,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,204,//round to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,205,"minDate = dateTimeParser.parse(""December 24, 2007 00:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,206,"maxDate = dateTimeParser.parse(""January 8, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,207,"roundToJanuaryFirst(minDate, maxDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,211,* Tests DateUtils.round()-method with Calendar.DATE
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,212,* Includes rounding the extremes of one day
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,213,* Includes rounding to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,215,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,216,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,218,public void testRoundDate() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,219,final int calendarField = Calendar.DATE;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,220,"Date roundedUpDate, roundedDownDate, lastRoundedDownDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,221,"Date minDate, maxDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,223,"roundedUpDate = dateTimeParser.parse(""June 2, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,224,roundedDownDate = targetDateDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,225,"lastRoundedDownDate = dateTimeParser.parse(""June 1, 2008 11:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,226,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,228,//round to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,229,"minDate = dateTimeParser.parse(""December 31, 2007 12:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,230,"maxDate = dateTimeParser.parse(""January 1, 2008 11:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,231,"roundToJanuaryFirst(minDate, maxDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,235,* Tests DateUtils.round()-method with Calendar.DAY_OF_MONTH
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,236,* Includes rounding the extremes of one day
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,237,* Includes rounding to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,239,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,240,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,242,public void testRoundDayOfMonth() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,243,final int calendarField = Calendar.DAY_OF_MONTH;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,244,"Date roundedUpDate, roundedDownDate, lastRoundedDownDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,245,"Date minDate, maxDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,247,"roundedUpDate = dateTimeParser.parse(""June 2, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,248,roundedDownDate = targetDayOfMonthDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,249,"lastRoundedDownDate = dateTimeParser.parse(""June 1, 2008 11:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,250,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,252,//round to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,253,"minDate = dateTimeParser.parse(""December 31, 2007 12:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,254,"maxDate = dateTimeParser.parse(""January 1, 2008 11:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,255,"roundToJanuaryFirst(minDate, maxDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,259,* Tests DateUtils.round()-method with Calendar.AM_PM
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,260,* Includes rounding the extremes of both AM and PM of one day
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,261,* Includes rounding to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,263,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,264,* @3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,266,public void testRoundAmPm() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,267,final int calendarField = Calendar.AM_PM;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,268,"Date roundedUpDate, roundedDownDate, lastRoundedDownDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,269,"Date minDate, maxDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,271,//AM
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,272,"roundedUpDate = dateTimeParser.parse(""June 1, 2008 12:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,273,roundedDownDate = targetAmDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,274,"lastRoundedDownDate = dateTimeParser.parse(""June 1, 2008 5:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,275,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,277,//PM
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,278,"roundedUpDate = dateTimeParser.parse(""June 2, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,279,roundedDownDate = targetPmDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,280,"lastRoundedDownDate = dateTimeParser.parse(""June 1, 2008 17:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,281,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,283,//round to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,284,"minDate = dateTimeParser.parse(""December 31, 2007 18:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,285,"maxDate = dateTimeParser.parse(""January 1, 2008 5:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,286,"roundToJanuaryFirst(minDate, maxDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,290,* Tests DateUtils.round()-method with Calendar.HOUR_OF_DAY
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,291,* Includes rounding the extremes of one hour
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,292,* Includes rounding to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,294,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,295,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,297,public void testRoundHourOfDay() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,298,final int calendarField = Calendar.HOUR_OF_DAY;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,299,"Date roundedUpDate, roundedDownDate, lastRoundedDownDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,300,"Date minDate, maxDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,302,"roundedUpDate = dateTimeParser.parse(""June 1, 2008 9:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,303,roundedDownDate = targetHourOfDayDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,304,"lastRoundedDownDate = dateTimeParser.parse(""June 1, 2008 8:29:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,305,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,307,//round to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,308,"minDate = dateTimeParser.parse(""December 31, 2007 23:30:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,309,"maxDate = dateTimeParser.parse(""January 1, 2008 0:29:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,310,"roundToJanuaryFirst(minDate, maxDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,314,* Tests DateUtils.round()-method with Calendar.HOUR
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,315,* Includes rounding the extremes of one hour
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,316,* Includes rounding to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,318,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,319,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,321,public void testRoundHour() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,322,final int calendarField = Calendar.HOUR;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,323,"Date roundedUpDate, roundedDownDate, lastRoundedDownDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,324,"Date minDate, maxDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,326,"roundedUpDate = dateTimeParser.parse(""June 1, 2008 9:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,327,roundedDownDate = targetHourDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,328,"lastRoundedDownDate = dateTimeParser.parse(""June 1, 2008 8:29:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,329,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,331,//round to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,332,"minDate = dateTimeParser.parse(""December 31, 2007 23:30:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,333,"maxDate = dateTimeParser.parse(""January 1, 2008 0:29:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,334,"roundToJanuaryFirst(minDate, maxDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,338,* Tests DateUtils.round()-method with Calendar.MINUTE
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,339,* Includes rounding the extremes of one minute
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,340,* Includes rounding to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,342,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,343,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,345,public void testRoundMinute() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,346,final int calendarField = Calendar.MINUTE;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,347,"Date roundedUpDate, roundedDownDate, lastRoundedDownDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,348,"Date minDate, maxDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,350,"roundedUpDate = dateTimeParser.parse(""June 1, 2008 8:16:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,351,roundedDownDate = targetMinuteDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,352,"lastRoundedDownDate = dateTimeParser.parse(""June 1, 2008 8:15:29.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,353,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,355,//round to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,356,"minDate = dateTimeParser.parse(""December 31, 2007 23:59:30.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,357,"maxDate = dateTimeParser.parse(""January 1, 2008 0:00:29.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,358,"roundToJanuaryFirst(minDate, maxDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,362,* Tests DateUtils.round()-method with Calendar.SECOND
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,363,* Includes rounding the extremes of one second
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,364,* Includes rounding to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,366,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,367,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,369,public void testRoundSecond() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,370,final int calendarField = Calendar.SECOND;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,371,"Date roundedUpDate, roundedDownDate, lastRoundedDownDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,372,"Date minDate, maxDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,374,"roundedUpDate = dateTimeParser.parse(""June 1, 2008 8:15:15.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,375,roundedDownDate = targetSecondDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,376,"lastRoundedDownDate = dateTimeParser.parse(""June 1, 2008 8:15:14.499"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,377,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,379,//round to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,380,"minDate = dateTimeParser.parse(""December 31, 2007 23:59:59.500"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,381,"maxDate = dateTimeParser.parse(""January 1, 2008 0:00:00.499"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,382,"roundToJanuaryFirst(minDate, maxDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,386,* Tests DateUtils.round()-method with Calendar.MILLISECOND
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,387,* Includes rounding the extremes of one second
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,388,* Includes rounding to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,390,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,391,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,393,public void testRoundMilliSecond() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,394,final int calendarField = Calendar.MILLISECOND;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,395,"Date roundedUpDate, roundedDownDate, lastRoundedDownDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,396,"Date minDate, maxDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,398,roundedDownDate = lastRoundedDownDate = targetMilliSecondDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,399,"roundedUpDate = dateTimeParser.parse(""June 1, 2008 8:15:14.232"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,400,"baseRoundTest(roundedUpDate, roundedDownDate, lastRoundedDownDate,  calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,402,//round to January 1
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,403,minDate = maxDate = januaryOneDate;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,404,"roundToJanuaryFirst(minDate, maxDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,408,* Test DateUtils.truncate()-method with Calendar.YEAR
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,410,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,411,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,413,public void testTruncateYear() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,414,final int calendarField = Calendar.YEAR;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,415,"Date lastTruncateDate = dateTimeParser.parse(""December 31, 2007 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,416,"baseTruncateTest(targetYearDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,420,* Test DateUtils.truncate()-method with Calendar.MONTH
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,422,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,423,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,425,public void testTruncateMonth() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,426,final int calendarField = Calendar.MONTH;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,427,"Date truncatedDate = dateTimeParser.parse(""March 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,428,"Date lastTruncateDate = dateTimeParser.parse(""March 31, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,429,"baseTruncateTest(truncatedDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,433,* Test DateUtils.truncate()-method with DateUtils.SEMI_MONTH
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,434,"* Includes truncating months with 28, 29, 30 and 31 days, each with first and second half"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,436,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,437,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,439,public void testTruncateSemiMonth() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,440,final int calendarField = DateUtils.SEMI_MONTH;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,441,"Date truncatedDate, lastTruncateDate;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,443,//month with 28 days (1)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,444,"truncatedDate = dateTimeParser.parse(""February 1, 2007 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,445,"lastTruncateDate = dateTimeParser.parse(""February 15, 2007 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,446,"baseTruncateTest(truncatedDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,448,//month with 28 days (2)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,449,"truncatedDate = dateTimeParser.parse(""February 16, 2007 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,450,"lastTruncateDate = dateTimeParser.parse(""February 28, 2007 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,451,"baseTruncateTest(truncatedDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,453,//month with 29 days (1)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,454,"truncatedDate = dateTimeParser.parse(""February 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,455,"lastTruncateDate = dateTimeParser.parse(""February 15, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,456,"baseTruncateTest(truncatedDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,458,//month with 29 days (2)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,459,"truncatedDate = dateTimeParser.parse(""February 16, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,460,"lastTruncateDate = dateTimeParser.parse(""February 29, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,461,"baseTruncateTest(truncatedDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,463,//month with 30 days (1)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,464,"truncatedDate = dateTimeParser.parse(""April 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,465,"lastTruncateDate = dateTimeParser.parse(""April 15, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,466,"baseTruncateTest(truncatedDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,468,//month with 30 days (2)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,469,"truncatedDate = dateTimeParser.parse(""April 16, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,470,"lastTruncateDate = dateTimeParser.parse(""April 30, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,471,"baseTruncateTest(truncatedDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,473,//month with 31 days (1)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,474,"truncatedDate = dateTimeParser.parse(""March 1, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,475,"lastTruncateDate = dateTimeParser.parse(""March 15, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,476,"baseTruncateTest(truncatedDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,478,//month with 31 days (2)
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,479,"truncatedDate = dateTimeParser.parse(""March 16, 2008 0:00:00.000"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,480,"lastTruncateDate = dateTimeParser.parse(""March 31, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,481,"baseTruncateTest(truncatedDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,486,* Test DateUtils.truncate()-method with Calendar.DATE
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,488,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,489,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,491,public void testTruncateDate() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,492,final int calendarField = Calendar.DATE;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,493,"Date lastTruncateDate = dateTimeParser.parse(""June 1, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,494,"baseTruncateTest(targetDateDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,498,* Test DateUtils.truncate()-method with Calendar.DAY_OF_MONTH
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,500,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,501,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,503,public void testTruncateDayOfMonth() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,504,final int calendarField = Calendar.DAY_OF_MONTH;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,505,"Date lastTruncateDate = dateTimeParser.parse(""June 1, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,506,"baseTruncateTest(targetDayOfMonthDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,510,* Test DateUtils.truncate()-method with Calendar.AM_PM
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,511,* Includes truncating the extremes of both AM and PM of one day
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,513,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,514,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,516,public void testTruncateAmPm() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,517,final int calendarField = Calendar.AM_PM;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,519,//AM
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,520,"Date lastTruncateDate = dateTimeParser.parse(""June 1, 2008 11:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,521,"baseTruncateTest(targetAmDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,523,//PM
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,524,"lastTruncateDate = dateTimeParser.parse(""June 1, 2008 23:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,525,"baseTruncateTest(targetPmDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,529,* Test DateUtils.truncate()-method with Calendar.HOUR
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,531,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,532,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,534,public void testTruncateHour() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,535,final int calendarField = Calendar.HOUR;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,536,"Date lastTruncateDate = dateTimeParser.parse(""June 1, 2008 8:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,537,"baseTruncateTest(targetHourDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,541,* Test DateUtils.truncate()-method with Calendar.HOUR_OF_DAY
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,543,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,544,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,546,public void testTruncateHourOfDay() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,547,final int calendarField = Calendar.HOUR_OF_DAY;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,548,"Date lastTruncateDate = dateTimeParser.parse(""June 1, 2008 8:59:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,549,"baseTruncateTest(targetHourOfDayDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,553,* Test DateUtils.truncate()-method with Calendar.MINUTE
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,555,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,556,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,558,public void testTruncateMinute() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,559,final int calendarField = Calendar.MINUTE;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,560,"Date lastTruncateDate = dateTimeParser.parse(""June 1, 2008 8:15:59.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,561,"baseTruncateTest(targetMinuteDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,565,* Test DateUtils.truncate()-method with Calendar.SECOND
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,567,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,568,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,570,public void testTruncateSecond() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,571,final int calendarField = Calendar.SECOND;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,572,"Date lastTruncateDate = dateTimeParser.parse(""June 1, 2008 8:15:14.999"");"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,573,"baseTruncateTest(targetSecondDate, lastTruncateDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,577,* Test DateUtils.truncate()-method with Calendar.SECOND
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,579,* @throws Exception
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,580,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,582,public void testTruncateMilliSecond() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,583,final int calendarField = Calendar.MILLISECOND;
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,584,"baseTruncateTest(targetMilliSecondDate, targetMilliSecondDate, calendarField);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,588,* When using this basetest all extremes are tested.<br>
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,589,"* It will test the Date, Calendar and Object-implementation<br>"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,590,* lastRoundDownDate should round down to roundedDownDate<br>
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,591,* lastRoundDownDate + 1 millisecond should round up to roundedUpDate
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,593,* @param roundedUpDate the next rounded date after <strong>roundedDownDate</strong> when using <strong>calendarField</strong>
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,594,* @param roundedDownDate the result if <strong>lastRoundDownDate</strong> was rounded with <strong>calendarField</strong>
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,595,* @param lastRoundDownDate rounding this value with <strong>calendarField</strong> will result in <strong>roundedDownDate</strong>
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,596,* @param calendarField
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,597,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,599,"protected void baseRoundTest(final Date roundedUpDate, final Date roundedDownDate, final Date lastRoundDownDate, final int calendarField) {"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,600,"Date firstRoundUpDate = DateUtils.addMilliseconds(lastRoundDownDate, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,602,//Date-comparison
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,603,"assertEquals(roundedDownDate, DateUtils.round(roundedDownDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,604,"assertEquals(roundedUpDate, DateUtils.round(roundedUpDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,605,"assertEquals(roundedDownDate, DateUtils.round(lastRoundDownDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,606,"assertEquals(roundedUpDate, DateUtils.round(firstRoundUpDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,608,//Calendar-initiations
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,609,"Calendar roundedUpCalendar, roundedDownCalendar, lastRoundDownCalendar, firstRoundUpCalendar;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,610,roundedDownCalendar = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,611,roundedUpCalendar = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,612,lastRoundDownCalendar = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,613,firstRoundUpCalendar = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,614,roundedDownCalendar.setTime(roundedDownDate);
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,615,roundedUpCalendar.setTime(roundedUpDate);
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,616,lastRoundDownCalendar.setTime(lastRoundDownDate);
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,617,firstRoundUpCalendar.setTime(firstRoundUpDate);
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,619,//Calendar-comparison
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,620,"assertEquals(roundedDownCalendar, DateUtils.round(roundedDownCalendar, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,621,"assertEquals(roundedUpCalendar, DateUtils.round(roundedUpCalendar, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,622,"assertEquals(roundedDownCalendar, DateUtils.round(lastRoundDownCalendar, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,623,"assertEquals(roundedUpCalendar, DateUtils.round(firstRoundUpCalendar, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,625,//Object-comparison
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,626,"assertEquals(roundedDownDate, DateUtils.round((Object) roundedDownDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,627,"assertEquals(roundedUpDate, DateUtils.round((Object) roundedUpDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,628,"assertEquals(roundedDownDate, DateUtils.round((Object) lastRoundDownDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,629,"assertEquals(roundedUpDate, DateUtils.round((Object) firstRoundUpDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,630,"assertEquals(roundedDownDate, DateUtils.round((Object) roundedDownCalendar, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,631,"assertEquals(roundedUpDate, DateUtils.round((Object) roundedUpCalendar, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,632,"assertEquals(roundedDownDate, DateUtils.round((Object) lastRoundDownDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,633,"assertEquals(roundedUpDate, DateUtils.round((Object) firstRoundUpDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,637,* When using this basetest all extremes are tested.<br>
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,638,"* It will test the Date, Calendar and Object-implementation<br>"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,639,* lastTruncateDate should round down to truncatedDate<br>
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,640,* lastTruncateDate + 1 millisecond should never round down to truncatedDate
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,642,* @param truncatedDate expected Date when <strong>lastTruncateDate</strong> is truncated with <strong>calendarField</strong>
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,643,* @param lastTruncateDate the last possible Date which will truncate to <strong>truncatedDate</strong> with <strong>calendarField</strong>
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,644,* @param calendarField a Calendar.field value
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,645,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,647,"protected void baseTruncateTest(final Date truncatedDate, final Date lastTruncateDate, final int calendarField) {"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,648,"Date nextTruncateDate = DateUtils.addMilliseconds(lastTruncateDate, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,650,//Date-comparison
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,651,"assertEquals(""Truncating ""+ fdf.format(truncatedDate) +"" as Date with CalendarField-value ""+ calendarField +"" must return itself"", truncatedDate, DateUtils.truncate(truncatedDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,652,"assertEquals(truncatedDate, DateUtils.truncate(lastTruncateDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,653,"assertFalse(fdf.format(lastTruncateDate) +"" is not an extreme when truncating as Date with CalendarField-value ""+ calendarField, truncatedDate.equals(DateUtils.truncate(nextTruncateDate, calendarField)));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,655,//Calendar-initiations
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,656,"Calendar truncatedCalendar, lastTruncateCalendar, nextTruncateCalendar;"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,657,truncatedCalendar = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,658,lastTruncateCalendar = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,659,nextTruncateCalendar = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,660,truncatedCalendar.setTime(truncatedDate);
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,661,lastTruncateCalendar.setTime(lastTruncateDate);
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,662,nextTruncateCalendar.setTime(nextTruncateDate);
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,664,//Calendar-comparison
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,665,"assertEquals(""Truncating ""+ fdf.format(truncatedCalendar) +"" as Calendar with CalendarField-value ""+ calendarField +"" must return itself"", truncatedCalendar, DateUtils.truncate(truncatedCalendar, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,666,"assertEquals(truncatedCalendar, DateUtils.truncate(lastTruncateCalendar, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,667,"assertFalse(fdf.format(lastTruncateCalendar) +"" is not an extreme when truncating as Calendar with CalendarField-value ""+ calendarField, truncatedCalendar.equals(DateUtils.truncate(nextTruncateCalendar, calendarField)));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,669,//Object-comparison
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,670,"assertEquals(""Truncating ""+ fdf.format(truncatedDate) +"" as Date cast to Object with CalendarField-value ""+ calendarField +"" must return itself as Date"", truncatedDate, DateUtils.truncate((Object) truncatedDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,671,"assertEquals(truncatedDate, DateUtils.truncate((Object) lastTruncateDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,672,"assertFalse(fdf.format(lastTruncateDate) +"" is not an extreme when truncating as Date cast to Object with CalendarField-value ""+ calendarField, truncatedDate.equals(DateUtils.truncate((Object) nextTruncateDate, calendarField)));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,673,"assertEquals(""Truncating ""+ fdf.format(truncatedCalendar) +"" as Calendar cast to Object with CalendarField-value ""+ calendarField +"" must return itself as Date"", truncatedDate, DateUtils.truncate((Object) truncatedCalendar, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,674,"assertEquals(truncatedDate, DateUtils.truncate((Object) lastTruncateCalendar, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,675,"assertFalse(fdf.format(lastTruncateCalendar) +"" is not an extreme when truncating as Calendar cast to Object with CalendarField-value ""+ calendarField, truncatedDate.equals(DateUtils.truncate((Object) nextTruncateCalendar, calendarField)));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,680,* Any January 1 could be considered as the ultimate extreme.
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,681,* Instead of comparing the results if the input has a difference of 1 millisecond we check the output to be exactly January first.
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,683,* @param minDate
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,684,* @param maxDate
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,685,* @param calendarField
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,686,* @since 3.0
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,688,"protected void roundToJanuaryFirst(Date minDate, Date maxDate, int calendarField) {"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,689,"assertEquals(""Rounding ""+ fdf.format(januaryOneDate) +"" as Date with CalendarField-value ""+ calendarField +"" must return itself"", januaryOneDate, DateUtils.round(januaryOneDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,690,"assertEquals(januaryOneDate, DateUtils.round(minDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,691,"assertEquals(januaryOneDate, DateUtils.round(maxDate, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,693,Calendar minCalendar = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,694,minCalendar.setTime(minDate);
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,695,Calendar maxCalendar = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,696,maxCalendar.setTime(maxDate);
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,697,"assertEquals(""Rounding ""+ fdf.format(januaryOneCalendar) +"" as Date with CalendarField-value ""+ calendarField +"" must return itself"", januaryOneCalendar, DateUtils.round(januaryOneCalendar, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,698,"assertEquals(januaryOneCalendar, DateUtils.round(minCalendar, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,699,"assertEquals(januaryOneCalendar, DateUtils.round(maxCalendar, calendarField));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,701,"Date toPrevRoundDate = DateUtils.addMilliseconds(minDate, -1);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,702,"Date toNextRoundDate = DateUtils.addMilliseconds(maxDate, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,703,"assertFalse(fdf.format(minDate) +"" is not an lower-extreme when rounding as Date with CalendarField-value ""+ calendarField, januaryOneDate.equals(DateUtils.round(toPrevRoundDate, calendarField)));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,704,"assertFalse(fdf.format(maxDate) +"" is not an upper-extreme when rounding as Date with CalendarField-value ""+ calendarField, januaryOneDate.equals(DateUtils.round(toNextRoundDate, calendarField)));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,706,Calendar toPrevRoundCalendar = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,707,toPrevRoundCalendar.setTime(toPrevRoundDate);
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,708,Calendar toNextRoundCalendar = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,709,toNextRoundCalendar.setTime(toNextRoundDate);
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,710,"assertFalse(fdf.format(minCalendar) +"" is not an lower-extreme when rounding as Date with CalendarField-value ""+ calendarField, januaryOneDate.equals(DateUtils.round(toPrevRoundDate, calendarField)));"
True,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,src/test/org/apache/commons/lang/time/DateUtilsRoundingTest.java,711,"assertFalse(fdf.format(maxCalendar) +"" is not an upper-extreme when rounding as Date with CalendarField-value ""+ calendarField, januaryOneDate.equals(DateUtils.round(toNextRoundDate, calendarField)));"
True,src/test/org/apache/commons/lang/time/TimeTestSuite.java,src/test/org/apache/commons/lang/time/TimeTestSuite.java,58,suite.addTest(DateUtilsRoundingTest.suite());
