is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,40,* The float value.
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,44,* The standard name.
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,49,* Constructor.
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,51,* @param value  the float value
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,52,"* @param name  the standard name, not null"
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,48, Whether this version of Java is at least the version
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,49, of Java passed in.
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,51, For example:
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,52,  myVersion.atLeast(JavaVersion.JAVA_1_4)
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,61,* <p>Whether this version of Java is at least the version of Java passed in.</p>
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,54, @param requiredVersion to check this version is at least equivalent to
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,63,* <p>For example:<br />
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,64,*  {@code myVersion.atLeast(JavaVersion.JAVA_1_4)}<p>
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,56, @return Whether this version is at least the passed in version
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,66,"* @param requiredVersion  the version to check against, not null"
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,67,* @return true if this version is equal to or greater than the specified version
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,67,"f(""0.9"".equals(nom)) {"
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,79,"if (""0.9"".equals(nom)) {"
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,69, else
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,70,"f(""1.1"".equals(nom)) {"
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,81,"} else if (""1.1"".equals(nom)) {"
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,72, else
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,73,"f(""1.2"".equals(nom)) {"
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,83,"} else if (""1.2"".equals(nom)) {"
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,75, else
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,76,"f(""1.3"".equals(nom)) {"
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,85,"} else if (""1.3"".equals(nom)) {"
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,78, else
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,79,"f(""1.4"".equals(nom)) {"
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,87,"} else if (""1.4"".equals(nom)) {"
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,81, else
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,82,"f(""1.5"".equals(nom)) {"
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,89,"} else if (""1.5"".equals(nom)) {"
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,84, else
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,85,"f(""1.6"".equals(nom)) {"
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,91,"} else if (""1.6"".equals(nom)) {"
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,87, else
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,88,"f(""1.7"".equals(nom)) {"
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,93,"} else if (""1.7"".equals(nom)) {"
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,90, else
False,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,91,"f(""1.8"".equals(nom)) {"
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,95,"} else if (""1.8"".equals(nom)) {"
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,104,* <p>The string value is overridden to return the standard name.</p>
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,106,"* <p>For example, '1.5'.</p>"
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,108,"* @return the name, not null"
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,110,@Override
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,111,public String toString() {
True,src/main/java/org/apache/commons/lang3/JavaVersion.java,src/main/java/org/apache/commons/lang3/JavaVersion.java,112,return name;
False,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,21,mport static org.apache.commons.lang3.JavaVersion.*;
True,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,21,import static org.apache.commons.lang3.JavaVersion.JAVA_0_9;
True,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,22,import static org.apache.commons.lang3.JavaVersion.JAVA_1_1;
True,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,23,import static org.apache.commons.lang3.JavaVersion.JAVA_1_2;
True,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,24,import static org.apache.commons.lang3.JavaVersion.JAVA_1_3;
True,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,25,import static org.apache.commons.lang3.JavaVersion.JAVA_1_4;
True,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,26,import static org.apache.commons.lang3.JavaVersion.JAVA_1_5;
True,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,27,import static org.apache.commons.lang3.JavaVersion.JAVA_1_6;
True,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,28,import static org.apache.commons.lang3.JavaVersion.JAVA_1_7;
True,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,29,import static org.apache.commons.lang3.JavaVersion.JAVA_1_8;
True,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,30,import static org.apache.commons.lang3.JavaVersion.get;
True,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,31,import static org.apache.commons.lang3.JavaVersion.getJavaVersion;
True,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,65,public void testToString() {
True,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,src/test/java/org/apache/commons/lang3/JavaVersionTest.java,66,"assertEquals(""1.2"", JAVA_1_2.toString());"
