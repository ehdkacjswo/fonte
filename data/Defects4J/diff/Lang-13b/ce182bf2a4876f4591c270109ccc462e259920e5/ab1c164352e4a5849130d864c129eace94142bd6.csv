is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,694,"* <p>Returns a <code>String</code> value for a CSV column escaping with double quotes,"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,695,* if required.</p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,697,"* <p>If the value contains a comma, newline or double quote, then the"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,698,*    String value is returned enclosed in double quotes.</p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,699,* </p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,701,* <p>Any double quote characters in the value are escaped with another double quote.</p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,703,"* see <a href=""http://en.wikipedia.org/wiki/Comma-separated_values"">Wikipedia</a> and"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,704,"* <a href=""http://tools.ietf.org/html/rfc4180"">RFC 4180</a>."
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,706,"* @param str  the string to escape, may be null"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,707,"* @return a new String, escaped for CSV, <code>null</code> if null string input"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,708,* @since 2.4
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,710,public static String escapeCsv(String str) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,711,if (!containsCsvChars(str)) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,712,return str;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,714,StringBuffer buffer = new StringBuffer(str.length() + 10);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,715,"buffer.append('""');"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,716,for (int i = 0; i < str.length(); i++) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,717,char c = str.charAt(i);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,718,"if (c == '""') {"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,719,"buffer.append('""'); // escape double quote"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,721,buffer.append(c);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,723,"buffer.append('""');"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,724,return buffer.toString();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,728,"* <p>Writes a <code>String</code> value for a CSV column escaping with double quotes,"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,729,* if required.</p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,731,"* <p>If the value contains a comma, newline or double quote, then the"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,732,*    String value is written enclosed in double quotes.</p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,733,* </p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,735,* <p>Any double quote characters in the value are escaped with another double quote.</p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,737,"* see <a href=""http://en.wikipedia.org/wiki/Comma-separated_values"">Wikipedia</a> and"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,738,"* <a href=""http://tools.ietf.org/html/rfc4180"">RFC 4180</a>."
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,740,"* @param str  the string to escape, may be null"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,741,* @param out  Writer to write escaped string into
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,742,"* in double quotes or only when the value contains double quotes, commas or newline"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,743,* characters.
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,744,* @throws IOException if error occurs on underlying Writer
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,745,* @since 2.4
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,747,"public static void escapeCsv(Writer out, String str) throws IOException {"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,748,if (!containsCsvChars(str)) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,749,if (str != null) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,750,out.write(str);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,752,return;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,754,"out.write('""');"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,755,for (int i = 0; i < str.length(); i++) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,756,char c = str.charAt(i);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,757,"if (c == '""') {"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,758,"out.write('""'); // escape double quote"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,760,out.write(c);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,762,"out.write('""');"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,766,* Determine if the String contains any characters that need escaping for CSV files.
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,768,"* @param str  the string to escape, may be null"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,769,* @return <code>true</code> if the String contains characters that need escaping
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,770,"* for CSV files, otherwise <code>false</code>"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,771,* @since 2.4
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,773,private static boolean containsCsvChars(String str) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,774,"return (StringUtils.contains(str, '""') ||"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,775,"StringUtils.contains(str, ',') ||"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,776,"StringUtils.contains(str, CharUtils.CR) ||"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,777,"StringUtils.contains(str, CharUtils.LF));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,336,public void testEscapeCsvString() throws Exception
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,338,"assertEquals(""foo.bar"",          StringEscapeUtils.escapeCsv(""foo.bar""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,339,"assertEquals(""\""foo,bar\"""",      StringEscapeUtils.escapeCsv(""foo,bar""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,340,"assertEquals(""\""foo\nbar\"""",     StringEscapeUtils.escapeCsv(""foo\nbar""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,341,"assertEquals(""\""foo\rbar\"""",     StringEscapeUtils.escapeCsv(""foo\rbar""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,342,"assertEquals(""\""foo\""\""bar\"""",   StringEscapeUtils.escapeCsv(""foo\""bar""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,343,"assertEquals("""",   StringEscapeUtils.escapeCsv(""""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,344,"assertEquals(null, StringEscapeUtils.escapeCsv(null));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,347,public void testEscapeCsvWriter() throws Exception
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,349,"checkCsvEscapeWriter(""foo.bar"",        ""foo.bar"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,350,"checkCsvEscapeWriter(""\""foo,bar\"""",    ""foo,bar"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,351,"checkCsvEscapeWriter(""\""foo\nbar\"""",   ""foo\nbar"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,352,"checkCsvEscapeWriter(""\""foo\rbar\"""",   ""foo\rbar"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,353,"checkCsvEscapeWriter(""\""foo\""\""bar\"""", ""foo\""bar"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,354,"checkCsvEscapeWriter("""", null);"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,355,"checkCsvEscapeWriter("""", """");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,358,"private void checkCsvEscapeWriter(String expected, String value) {"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,359,try {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,360,StringWriter writer = new StringWriter();
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,361,"StringEscapeUtils.escapeCsv(writer, value);"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,362,"assertEquals(expected, writer.toString());"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,363,} catch (IOException e) {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,364,"fail(""Threw: "" + e);"
