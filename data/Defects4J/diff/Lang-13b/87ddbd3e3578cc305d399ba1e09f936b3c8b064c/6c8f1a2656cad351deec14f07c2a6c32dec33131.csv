is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,14,* limitations under the License.
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,16,package org.apache.commons.lang.mutable;
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,19,* A mutable object.
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,21,* @author Matthew Hawthorne
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,22,* @since 2.1
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,23,"* @version $Id: Mutable.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,25,public interface Mutable {
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,28,* Sets the value of this object.
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,30,* @param value the value of this object.
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,32,public void setValue(Object value);
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,35,* Gets the value of this object.
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,37,* @return a value.
True,src/java/org/apache/commons/lang/mutable/Mutable.java,src/java/org/apache/commons/lang/mutable/Mutable.java,39,public Object getValue();
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,14,* limitations under the License.
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,16,package org.apache.commons.lang.mutable;
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,19,* A mutable <code>Byte</code>.
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,21,* @since 2.1
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,22,"* @version $Id: MutableByte.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,24,public class MutableByte extends MutableNumber {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,27,* Internal value.
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,29,private byte value;
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,32,* Instantiates with the specified value
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,33,* @param value a value.
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,35,public MutableByte(byte value) {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,36,super();
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,37,this.value = value;
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,40,public void setValue(byte value) {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,41,this.value = value;
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,44,public long longValue() {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,45,return this.value;
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,48,public double doubleValue() {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,49,return this.value;
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,52,public int intValue() {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,53,return this.value;
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,57,* @return a <code>Byte</code>
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,59,public Object getValue() {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,60,return new Byte(this.value);
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,64,* @param value a <code>Byte</code>
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,66,public void setValue(Object value) {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,67,setValue(((Number)value).byteValue());
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,14,* limitations under the License.
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,16,package org.apache.commons.lang.mutable;
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,19,* A mutable <code>Double</code>
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,21,* @since 2.1
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,22,"* @version $Id: MutableDouble.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,24,public class MutableDouble extends MutableNumber {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,27,* Internal value.
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,29,private double value;
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,32,* Instantiates with the specified value
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,33,* @param value a value.
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,35,public MutableDouble(double value) {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,36,super();
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,37,this.value = value;
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,40,public void setValue(double value) {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,41,this.value = value;
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,44,public double doubleValue() {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,45,return this.value;
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,48,public long longValue() {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,49,return (long)this.value;
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,52,public int intValue() {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,53,return (int)this.value;
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,56,public Object getValue() {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,57,return new Double(this.value);
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,60,public void setValue(Object value) {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,61,setValue(((Number)value).doubleValue());
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,14,* limitations under the License.
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,16,package org.apache.commons.lang.mutable;
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,19,* A mutable <code>Float</code>
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,21,* @since 2.1
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,22,"* @version $Id: MutableFloat.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,24,public class MutableFloat extends MutableNumber {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,27,* Internal value.
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,29,private float value;
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,32,* Instantiates with the specified value
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,34,* @param value a value.
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,36,public MutableFloat(float value) {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,37,super();
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,38,this.value = value;
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,41,public void setValue(float value) {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,42,this.value = value;
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,45,public double doubleValue() {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,46,return this.value;
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,49,public int intValue() {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,50,return (int)this.value;
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,53,public long longValue() {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,54,return (long)this.value;
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,57,public Object getValue() {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,58,return new Float(this.value);
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,61,public void setValue(Object value) {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,62,setValue(((Number)value).floatValue());
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,14,* limitations under the License.
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,16,package org.apache.commons.lang.mutable;
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,19,* A mutable <code>Integer</code>.
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,21,* @since 2.1
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,22,"* @version $Id: MutableInteger.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,24,public class MutableInteger extends MutableNumber {
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,27,* Internal value.
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,29,private int value;
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,32,* Instantiates with the specified value
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,34,* @param value a value.
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,36,public MutableInteger(int value) {
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,37,super();
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,38,this.value = value;
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,41,public void setValue(int value) {
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,42,this.value = value;
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,45,public double doubleValue() {
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,46,return this.value;
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,49,public long longValue() {
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,50,return this.value;
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,53,public int intValue() {
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,54,return this.value;
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,57,public Object getValue() {
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,58,return new Float(this.value);
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,61,public void setValue(Object value) {
True,src/java/org/apache/commons/lang/mutable/MutableInteger.java,src/java/org/apache/commons/lang/mutable/MutableInteger.java,62,setValue(((Number)value).intValue());
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,14,* limitations under the License.
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,16,package org.apache.commons.lang.mutable;
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,19,* A mutable <code>Long</code>
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,21,* @since 2.1
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,22,"* @version $Id: MutableLong.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,24,public class MutableLong extends MutableNumber {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,27,* Internal value.
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,29,private long value;
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,32,* Instantiates with the specified value
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,33,* @param value a value.
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,35,public MutableLong(long value) {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,36,super();
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,37,setValue(value);
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,40,public void setValue(long value) {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,41,this.value = value;
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,44,public double doubleValue() {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,45,return this.value;
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,48,public long longValue() {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,49,return this.value;
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,52,public int intValue() {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,53,return (int)this.value;
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,56,public Object getValue() {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,57,return new Long(this.value);
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,60,public void setValue(Object value) {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,61,setValue(((Number)value).longValue());
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,14,* limitations under the License.
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,17,package org.apache.commons.lang.mutable;
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,19,import java.io.Serializable;
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,22,* A mutable <code>Number</code>.
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,24,* @since 2.1
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,25,"* @version $Id: MutableNumber.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,27,public abstract class MutableNumber
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,28,extends Number
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,29,"implements Comparable, Mutable, Serializable {"
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,31,MutableNumber() {
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,32,super();
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,36,// Number overrides
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,39,public float floatValue() {
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,40,return (float)doubleValue();
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,44,// Object overrides
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,47,public String toString() {
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,48,return String.valueOf(doubleValue()).intern();
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,51,public int hashCode() {
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,52,return super.hashCode();
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,56,* Compares <code>this</code> to another object.
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,58,* @param obj an object to compare to
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,59,* @return <code>true</code> if <code>this</code> is equal to
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,60,* <code>obj</code>.
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,61,* @see #compareTo(Object)
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,63,public boolean equals(Object obj) {
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,64,return super.equals(obj);
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,68,//  Comparable overrides
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,72,* Compares to another object
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,74,* @param o an object to compare to
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,75,"* @return -1 if <code>this < o</code>, 0 if <code>this.equals(o)</code>,"
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,76,*  1 if <code>this > o<code>
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,77,* @throws ClassCastException if <code>o</code> is not a
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,78,* <code>Number</code>.
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,80,public int compareTo(Object o) {
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,81,final double d = ((Number)o).doubleValue();
True,src/java/org/apache/commons/lang/mutable/MutableNumber.java,src/java/org/apache/commons/lang/mutable/MutableNumber.java,82,return (doubleValue() < d) ? -1 : (doubleValue() > d) ? 1 : 0;
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,14,* limitations under the License.
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,16,package org.apache.commons.lang.mutable;
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,19,* A mutable <code>Short</code>
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,21,* @since 2.1
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,22,"* @version $Id: MutableShort.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,24,public class MutableShort extends MutableNumber {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,27,* Internal value.
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,29,private short value;
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,32,* Instantiates with the specified value
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,33,* @param value a value.
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,35,public MutableShort(short value) {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,36,super();
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,37,this.value = value;
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,40,public void setValue(short value) {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,41,this.value = value;
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,44,public double doubleValue() {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,45,return this.value;
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,48,public int intValue() {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,49,return this.value;
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,52,public long longValue() {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,53,return this.value;
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,56,public Object getValue() {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,57,return new Short(this.value);
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,60,public void setValue(Object value) {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,61,setValue(((Number)value).shortValue());
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,16,package org.apache.commons.lang.mutable;
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,18,import junit.framework.Test;
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,19,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,20,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,23,* JUnit tests.
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,25,"* @version $Id: MutableByteTest.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,26,* @see MutableByte
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,28,public class MutableByteTest extends MutableNumberTest {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,30,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,31,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,34,public static Test suite() {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,35,return new TestSuite(MutableByteTest.class);
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,38,public MutableByteTest(String testName) {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,39,super(testName);
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,42,public MutableNumber getMutableNumber(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,43,return new MutableByte((byte)value);
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,47,//  Converters
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,50,public byte byteValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,51,return (byte)value;
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,54,public short shortValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,55,return (byte)value;
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,58,public int intValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,59,return (byte)value;
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,62,public long longValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,63,return (byte)value;
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,66,public float floatValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,67,return (byte)value;
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,70,public double doubleValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,71,return (byte)value;
True,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,74,} // MutableByteTest
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,16,package org.apache.commons.lang.mutable;
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,18,import junit.framework.Test;
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,19,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,20,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,23,* JUnit tests.
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,25,"* @version $Id: MutableDoubleTest.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,26,* @see MutableDouble
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,28,public class MutableDoubleTest extends MutableNumberTest {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,30,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,31,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,34,public static Test suite() {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,35,return new TestSuite(MutableDoubleTest.class);
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,38,public MutableDoubleTest(String testName) {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,39,super(testName);
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,42,public MutableNumber getMutableNumber(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,43,return new MutableDouble(value);
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,46,// Converters
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,49,public byte byteValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,50,return (byte)value;
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,53,public short shortValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,54,return (short)value;
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,57,public int intValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,58,return (int)value;
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,61,public long longValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,62,return (long)value;
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,65,public float floatValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,66,return (float)value;
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,69,public double doubleValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,70,return value;
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,16,package org.apache.commons.lang.mutable;
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,18,import junit.framework.Test;
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,19,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,20,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,23,* JUnit tests.
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,25,"* @version $Id: MutableFloatTest.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,26,* @see MutableFloat
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,28,public class MutableFloatTest extends MutableNumberTest {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,30,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,31,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,34,public static Test suite() {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,35,return new TestSuite(MutableFloatTest.class);
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,39,* @param testName
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,41,public MutableFloatTest(String testName) {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,42,super(testName);
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,45,public MutableNumber getMutableNumber(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,46,return new MutableFloat((float)value);
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,49,//  Converters
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,51,public byte byteValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,52,return (byte)(float)value;
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,55,public short shortValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,56,return (short)(float)value;
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,59,public int intValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,60,return (int)(float)value;
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,63,public long longValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,64,return (long)(float)value;
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,67,public float floatValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,68,return (float)value;
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,71,public double doubleValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,72,return (float)value;
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,16,package org.apache.commons.lang.mutable;
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,18,import junit.framework.Test;
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,19,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,20,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,23,* JUnit tests.
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,25,"* @version $Id: MutableIntegerTest.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,26,* @see MutableInteger
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,28,public class MutableIntegerTest extends MutableNumberTest {
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,30,public MutableIntegerTest(String testName) {
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,31,super(testName);
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,34,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,35,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,38,public static Test suite() {
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,39,return new TestSuite(MutableIntegerTest.class);
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,42,public MutableNumber getMutableNumber(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,43,return new MutableInteger((int)value);
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,47,//  Converters
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,50,public byte byteValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,51,return (byte)(int)value;
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,54,public double doubleValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,55,return (int)value;
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,58,public float floatValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,59,return (int)value;
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,62,public int intValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,63,return (int)value;
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,66,public long longValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,67,return (int)value;
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,70,public short shortValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,src/test/org/apache/commons/lang/mutable/MutableIntegerTest.java,71,return (short)(int)value;
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,16,package org.apache.commons.lang.mutable;
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,18,import junit.framework.Test;
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,19,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,20,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,23,* JUnit tests.
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,25,"* @version $Id: MutableLongTest.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,26,* @see MutableLong
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,28,public class MutableLongTest extends MutableNumberTest {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,30,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,31,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,34,public static Test suite() {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,35,return new TestSuite(MutableLongTest.class);
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,38,public MutableLongTest(String testName) {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,39,super(testName);
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,42,public MutableNumber getMutableNumber(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,43,return new MutableLong((long)value);
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,47,// Converters
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,50,public byte byteValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,51,return (byte)(long)value;
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,54,public short shortValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,55,return (short)(long)value;
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,58,public int intValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,59,return (int)(long)value;
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,62,public long longValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,63,return (long)value;
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,66,public float floatValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,67,return (long)value;
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,70,public double doubleValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,71,return (long)value;
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,16,package org.apache.commons.lang.mutable;
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,18,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,21,* JUnit tests.
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,23,"* @version $Id: MutableNumberTest.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,24,* @see MutableNumber
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,26,public abstract class MutableNumberTest extends TestCase {
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,28,public MutableNumberTest(String testName) {
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,29,super(testName);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,33,* Gets an instance to test.
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,34,* @param value the value of the number.
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,35,* @return a <code>MutableNumber</code>
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,37,public abstract MutableNumber getMutableNumber(double value);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,40,// Converters
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,43,public abstract byte byteValue(double value);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,45,public abstract short shortValue(double value);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,47,public abstract int intValue(double value);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,49,public abstract long longValue(double value);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,51,public abstract float floatValue(double value);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,53,public abstract double doubleValue(double value);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,56,// Tests
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,59,public void testCompareTo() {
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,60,final double num = 0;
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,61,final MutableNumber mutNum = getMutableNumber(num);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,63,"assertEquals(""Equality"", 0, mutNum.compareTo(new Double(num)));"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,65,assertEquals(
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,66,"""Less than"","
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,67,"-1,"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,68,mutNum.compareTo(new Double(Double.POSITIVE_INFINITY)));
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,70,assertEquals(
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,71,"""Greater than"","
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,72,"1,"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,73,mutNum.compareTo(new Double(Double.NEGATIVE_INFINITY)));
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,76,public void testPrimitiveAccessors() {
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,77,testPrimitiveAccessors(0);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,78,testPrimitiveAccessors(Double.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,79,testPrimitiveAccessors(-Double.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,81,testPrimitiveAccessors(Float.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,82,testPrimitiveAccessors(-Float.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,84,testPrimitiveAccessors(Long.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,85,testPrimitiveAccessors(Long.MIN_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,87,testPrimitiveAccessors(Integer.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,88,testPrimitiveAccessors(Integer.MIN_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,90,testPrimitiveAccessors(Short.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,91,testPrimitiveAccessors(Short.MIN_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,93,testPrimitiveAccessors(Byte.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,94,testPrimitiveAccessors(Byte.MIN_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,97,public void XtestObjectAccessors() {
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,98,testObjectAccessors(0);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,99,testObjectAccessors(Double.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,100,testObjectAccessors(-Double.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,102,testObjectAccessors(Float.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,103,testObjectAccessors(-Float.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,105,testObjectAccessors(Long.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,106,testObjectAccessors(Long.MIN_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,108,testObjectAccessors(Integer.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,109,testObjectAccessors(Integer.MIN_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,111,testObjectAccessors(Short.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,112,testObjectAccessors(Short.MIN_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,114,testObjectAccessors(Byte.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,115,testObjectAccessors(Byte.MIN_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,118,public void testSetValue() {
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,119,setValueAndTestAccessors(Double.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,120,setValueAndTestAccessors(-Double.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,122,setValueAndTestAccessors(Float.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,123,setValueAndTestAccessors(-Float.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,125,setValueAndTestAccessors(Long.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,126,setValueAndTestAccessors(Long.MIN_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,128,setValueAndTestAccessors(Integer.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,129,setValueAndTestAccessors(Integer.MIN_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,131,setValueAndTestAccessors(Short.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,132,setValueAndTestAccessors(Short.MIN_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,134,setValueAndTestAccessors(Byte.MAX_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,135,setValueAndTestAccessors(Byte.MIN_VALUE);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,139,// Private methods
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,142,private void setValueAndTestAccessors(double num) {
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,143,final MutableNumber mutNum = getMutableNumber(0);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,144,mutNum.setValue(new Double(num));
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,145,"testPrimitiveAccessors(mutNum, num);"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,146,"//testObjectAccessors(mutNum, num);"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,149,private void testPrimitiveAccessors(double num) {
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,150,"testPrimitiveAccessors(getMutableNumber(num), num);"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,153,"private void testPrimitiveAccessors(MutableNumber mutNum, double num) {"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,154,"assertEquals(""byte comparison"", byteValue(num), mutNum.byteValue());"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,155,"assertEquals(""short comparison"", shortValue(num), mutNum.shortValue());"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,156,"assertEquals(""int comparison"", intValue(num), mutNum.intValue());"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,157,"assertEquals(""long comparison"", longValue(num), mutNum.longValue());"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,159,assertEquals(
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,160,"""float comparison"","
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,161,"floatValue(num),"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,162,"mutNum.floatValue(),"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,163,0);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,165,assertEquals(
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,166,"""double comparison"","
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,167,"doubleValue(num),"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,168,"mutNum.doubleValue(),"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,169,0);
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,172,private void testObjectAccessors(double num) {
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,173,"testObjectAccessors(getMutableNumber(num), num);"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,176,"private void testObjectAccessors(MutableNumber mutNum, double num) {"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,177,assertEquals(
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,178,"""byte comparison"","
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,179,"new Byte(byteValue(num)),"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,180,mutNum.getValue());
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,182,assertEquals(
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,183,"""short comparison"","
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,184,"new Short(shortValue(num)),"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,185,mutNum.getValue());
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,187,assertEquals(
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,188,"""int comparison"","
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,189,"new Integer(intValue(num)),"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,190,mutNum.getValue());
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,192,assertEquals(
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,193,"""long comparison"","
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,194,"new Long(longValue(num)),"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,195,mutNum.getValue());
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,197,assertEquals(
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,198,"""float comparison"","
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,199,"new Float(floatValue(num)),"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,200,mutNum.getValue());
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,202,assertEquals(
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,203,"""double comparison"","
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,204,"new Double(doubleValue(num)),"
True,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,src/test/org/apache/commons/lang/mutable/MutableNumberTest.java,205,mutNum.getValue());
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,16,package org.apache.commons.lang.mutable;
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,18,import junit.framework.Test;
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,19,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,20,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,23,* JUnit tests.
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,25,"* @version $Id: MutableShortTest.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,26,* @see MutableShort
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,28,public class MutableShortTest extends MutableNumberTest {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,30,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,31,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,34,public static Test suite() {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,35,return new TestSuite(MutableShortTest.class);
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,38,public MutableShortTest(String testName) {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,39,super(testName);
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,43,//  Converters
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,46,public MutableNumber getMutableNumber(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,47,return new MutableShort((short)value);
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,50,public byte byteValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,51,return (byte)(short)value;
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,54,public short shortValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,55,return (short)value;
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,58,public int intValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,59,return (short)value;
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,62,public long longValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,63,return (short)value;
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,66,public float floatValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,67,return (short)value;
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,70,public double doubleValue(double value) {
True,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,71,return (short)value;
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,14,* limitations under the License.
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,16,package org.apache.commons.lang.mutable;
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,18,import junit.framework.Test;
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,19,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,20,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,23,* JUnit tests.
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,25,"* @version $Id: MutableTestSuite.java,v 1.1 2004/06/11 02:26:32 matth Exp $"
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,27,public final class MutableTestSuite {
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,29,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,30,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,33,public static Test suite() {
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,34,final TestSuite suite = new TestSuite();
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,36,suite.addTest(MutableByteTest.suite());
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,37,suite.addTest(MutableShortTest.suite());
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,38,suite.addTest(MutableIntegerTest.suite());
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,39,suite.addTest(MutableLongTest.suite());
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,40,suite.addTest(MutableFloatTest.suite());
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,41,suite.addTest(MutableDoubleTest.suite());
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,43,return suite;
True,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,src/test/org/apache/commons/lang/mutable/MutableTestSuite.java,46,private MutableTestSuite() {}
