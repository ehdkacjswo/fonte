is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,15, limitations under the License.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,18,ackage org.apache.commons.lang;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,20,mport java.io.IOException;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,21,mport java.io.StringWriter;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,22,mport java.io.Writer;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,23,mport java.util.HashMap;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,24,mport java.util.Map;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,25,mport java.util.TreeMap;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,28, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,29, Provides HTML and XML entity utilities.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,30, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,32," @see <a href=""http://hotwired.lycos.com/webmonkey/reference/special_characters/"">ISO Entities</a>"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,33," @see <a href=""http://www.w3.org/TR/REC-html32#latin1"">HTML 3.2 Character Entities for ISO Latin-1</a>"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,34," @see <a href=""http://www.w3.org/TR/REC-html40/sgml/entities.html"">HTML 4.0 Character entity references</a>"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,35," @see <a href=""http://www.w3.org/TR/html401/charset.html#h-5.3"">HTML 4.01 Character References</a>"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,36," @see <a href=""http://www.w3.org/TR/html401/charset.html#code-position"">HTML 4.01 Code positions</a>"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,38," @author <a href=""mailto:alex@purpletech.com"">Alexander Day Chaffee</a>"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,39," @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,40, @since 2.0
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,41, @version $Id$
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,43,lass Entities {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,45,"rivate static final String[][] BASIC_ARRAY = {{""quot"", ""34""}, // "" - double-quote"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,46,"""amp"", ""38""}, // & - ampersand"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,47,"""lt"", ""60""}, // < - less-than"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,48,"""gt"", ""62""}, // > - greater-than"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,51,"rivate static final String[][] APOS_ARRAY = {{""apos"", ""39""}, // XML apostrophe"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,54,"rivate static final String[][] ISO8859_1_ARRAY = {{""nbsp"", ""160""}, // non-breaking space"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,55,"""iexcl"", ""161""}, // inverted exclamation mark"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,56,"""cent"", ""162""}, // cent sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,57,"""pound"", ""163""}, // pound sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,58,"""curren"", ""164""}, // currency sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,59,"""yen"", ""165""}, // yen sign = yuan sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,60,"""brvbar"", ""166""}, // broken bar = broken vertical bar"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,61,"""sect"", ""167""}, // section sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,62,"""uml"", ""168""}, // diaeresis = spacing diaeresis"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,63,"""copy"", ""169""}, //  - copyright sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,64,"""ordf"", ""170""}, // feminine ordinal indicator"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,65,"""laquo"", ""171""}, // left-pointing double angle quotation mark = left pointing guillemet"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,66,"""not"", ""172""}, // not sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,67,"""shy"", ""173""}, // soft hyphen = discretionary hyphen"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,68,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,69,"""macr"", ""175""}, // macron = spacing macron = overline = APL overbar"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,70,"""deg"", ""176""}, // degree sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,71,"""plusmn"", ""177""}, // plus-minus sign = plus-or-minus sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,72,"""sup2"", ""178""}, // superscript two = superscript digit two = squared"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,73,"""sup3"", ""179""}, // superscript three = superscript digit three = cubed"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,74,"""acute"", ""180""}, // acute accent = spacing acute"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,75,"""micro"", ""181""}, // micro sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,76,"""para"", ""182""}, // pilcrow sign = paragraph sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,77,"""middot"", ""183""}, // middle dot = Georgian comma = Greek middle dot"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,78,"""cedil"", ""184""}, // cedilla = spacing cedilla"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,79,"""sup1"", ""185""}, // superscript one = superscript digit one"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,80,"""ordm"", ""186""}, // masculine ordinal indicator"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,81,"""raquo"", ""187""}, // right-pointing double angle quotation mark = right pointing guillemet"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,82,"""frac14"", ""188""}, // vulgar fraction one quarter = fraction one quarter"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,83,"""frac12"", ""189""}, // vulgar fraction one half = fraction one half"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,84,"""frac34"", ""190""}, // vulgar fraction three quarters = fraction three quarters"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,85,"""iquest"", ""191""}, // inverted question mark = turned question mark"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,86,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,87,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,88,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,89,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,90,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,91,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,92,"""copy"", ""169""}, //  - copyright sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,93,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,94,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,95,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,96,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,97,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,98,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,99,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,100,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,101,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,102,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,103,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,104,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,105,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,106,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,107,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,108,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,109,"""times"", ""215""}, // multiplication sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,110,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,111,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,112,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,113,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,114,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,115,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,116,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,117,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,118,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,119,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,120,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,121,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,122,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,123,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,124,"""copy"", ""169""}, //  - copyright sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,125,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,126,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,127,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,128,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,129,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,130,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,131,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,132,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,133,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,134,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,135,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,136,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,137,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,138,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,139,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,140,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,141,"""divide"", ""247""}, // division sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,142,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,143,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,144,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,145,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,146,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,147,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,148,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,149,"""reg"", ""174""}, //  - registered trademark sign"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,152,/ package scoped for testing
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,153,tatic int ISO8859_1_ARRAY_LENGTH = ISO8859_1_ARRAY.length;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,155,"tatic String getISO8859_1(int i, int j) {"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,156,eturn ISO8859_1_ARRAY[i][j];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,159,/ http://www.w3.org/TR/REC-html40/sgml/entities.html
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,160,rivate static final String[][] HTML40_ARRAY = {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,161,/ <!-- Latin Extended-B -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,162,"""fnof"", ""402""}, // latin small f with hook = function= florin, U+0192 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,163,/ <!-- Greek -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,164,"""Alpha"", ""913""}, // greek capital letter alpha, U+0391 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,165,"""Beta"", ""914""}, // greek capital letter beta, U+0392 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,166,"""Gamma"", ""915""}, // greek capital letter gamma,U+0393 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,167,"""Delta"", ""916""}, // greek capital letter delta,U+0394 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,168,"""Epsilon"", ""917""}, // greek capital letter epsilon, U+0395 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,169,"""Zeta"", ""918""}, // greek capital letter zeta, U+0396 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,170,"""Eta"", ""919""}, // greek capital letter eta, U+0397 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,171,"""Theta"", ""920""}, // greek capital letter theta,U+0398 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,172,"""Iota"", ""921""}, // greek capital letter iota, U+0399 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,173,"""Kappa"", ""922""}, // greek capital letter kappa, U+039A -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,174,"""Lambda"", ""923""}, // greek capital letter lambda,U+039B ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,175,"""Mu"", ""924""}, // greek capital letter mu, U+039C -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,176,"""Nu"", ""925""}, // greek capital letter nu, U+039D -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,177,"""Xi"", ""926""}, // greek capital letter xi, U+039E ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,178,"""Omicron"", ""927""}, // greek capital letter omicron, U+039F -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,179,"""Pi"", ""928""}, // greek capital letter pi, U+03A0 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,180,"""Rho"", ""929""}, // greek capital letter rho, U+03A1 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,181,"/ <!-- there is no Sigmaf, and no U+03A2 character either -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,182,"""Sigma"", ""931""}, // greek capital letter sigma,U+03A3 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,183,"""Tau"", ""932""}, // greek capital letter tau, U+03A4 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,184,"""Upsilon"", ""933""}, // greek capital letter upsilon,U+03A5 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,185,"""Phi"", ""934""}, // greek capital letter phi,U+03A6 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,186,"""Chi"", ""935""}, // greek capital letter chi, U+03A7 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,187,"""Psi"", ""936""}, // greek capital letter psi,U+03A8 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,188,"""Omega"", ""937""}, // greek capital letter omega,U+03A9 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,189,"""alpha"", ""945""}, // greek small letter alpha,U+03B1 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,190,"""beta"", ""946""}, // greek small letter beta, U+03B2 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,191,"""gamma"", ""947""}, // greek small letter gamma,U+03B3 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,192,"""delta"", ""948""}, // greek small letter delta,U+03B4 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,193,"""epsilon"", ""949""}, // greek small letter epsilon,U+03B5 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,194,"""zeta"", ""950""}, // greek small letter zeta, U+03B6 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,195,"""eta"", ""951""}, // greek small letter eta, U+03B7 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,196,"""theta"", ""952""}, // greek small letter theta,U+03B8 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,197,"""iota"", ""953""}, // greek small letter iota, U+03B9 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,198,"""kappa"", ""954""}, // greek small letter kappa,U+03BA ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,199,"""lambda"", ""955""}, // greek small letter lambda,U+03BB ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,200,"""mu"", ""956""}, // greek small letter mu, U+03BC ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,201,"""nu"", ""957""}, // greek small letter nu, U+03BD ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,202,"""xi"", ""958""}, // greek small letter xi, U+03BE ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,203,"""omicron"", ""959""}, // greek small letter omicron, U+03BF NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,204,"""pi"", ""960""}, // greek small letter pi, U+03C0 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,205,"""rho"", ""961""}, // greek small letter rho, U+03C1 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,206,"""sigmaf"", ""962""}, // greek small letter final sigma,U+03C2 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,207,"""sigma"", ""963""}, // greek small letter sigma,U+03C3 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,208,"""tau"", ""964""}, // greek small letter tau, U+03C4 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,209,"""upsilon"", ""965""}, // greek small letter upsilon,U+03C5 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,210,"""phi"", ""966""}, // greek small letter phi, U+03C6 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,211,"""chi"", ""967""}, // greek small letter chi, U+03C7 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,212,"""psi"", ""968""}, // greek small letter psi, U+03C8 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,213,"""omega"", ""969""}, // greek small letter omega,U+03C9 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,214,"""thetasym"", ""977""}, // greek small letter theta symbol,U+03D1 NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,215,"""upsih"", ""978""}, // greek upsilon with hook symbol,U+03D2 NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,216,"""piv"", ""982""}, // greek pi symbol, U+03D6 ISOgrk3 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,217,/ <!-- General Punctuation -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,218,"""bull"", ""8226""}, // bullet = black small circle,U+2022 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,219,"/ <!-- bullet is NOT the same as bullet operator, U+2219 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,220,"""hellip"", ""8230""}, // horizontal ellipsis = three dot leader,U+2026 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,221,"""prime"", ""8242""}, // prime = minutes = feet, U+2032 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,222,"""Prime"", ""8243""}, // double prime = seconds = inches,U+2033 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,223,"""oline"", ""8254""}, // overline = spacing overscore,U+203E NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,224,"""frasl"", ""8260""}, // fraction slash, U+2044 NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,225,/ <!-- Letterlike Symbols -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,226,"""weierp"", ""8472""}, // script capital P = power set= Weierstrass p, U+2118 ISOamso -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,227,"""image"", ""8465""}, // blackletter capital I = imaginary part,U+2111 ISOamso -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,228,"""real"", ""8476""}, // blackletter capital R = real part symbol,U+211C ISOamso -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,229,"""trade"", ""8482""}, // trade mark sign, U+2122 ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,230,"""alefsym"", ""8501""}, // alef symbol = first transfinite cardinal,U+2135 NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,231,"/ <!-- alef symbol is NOT the same as hebrew letter alef,U+05D0 although the"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,232,/ same glyph could be used to depict both characters -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,233,/ <!-- Arrows -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,234,"""larr"", ""8592""}, // leftwards arrow, U+2190 ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,235,"""uarr"", ""8593""}, // upwards arrow, U+2191 ISOnum-->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,236,"""rarr"", ""8594""}, // rightwards arrow, U+2192 ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,237,"""darr"", ""8595""}, // downwards arrow, U+2193 ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,238,"""harr"", ""8596""}, // left right arrow, U+2194 ISOamsa -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,239,"""crarr"", ""8629""}, // downwards arrow with corner leftwards= carriage return, U+21B5 NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,240,"""lArr"", ""8656""}, // leftwards double arrow, U+21D0 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,241,/ <!-- ISO 10646 does not say that lArr is the same as the 'is implied by'
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,242,/ arrow but also does not have any other character for that function.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,243,/ So ? lArr canbe used for 'is implied by' as ISOtech suggests -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,244,"""uArr"", ""8657""}, // upwards double arrow, U+21D1 ISOamsa -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,245,"""rArr"", ""8658""}, // rightwards double arrow,U+21D2 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,246,/ <!-- ISO 10646 does not say this is the 'implies' character but does not
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,247,/ have another character with this function so ?rArr can be used for
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,248,/ 'implies' as ISOtech suggests -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,249,"""dArr"", ""8659""}, // downwards double arrow, U+21D3 ISOamsa -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,250,"""hArr"", ""8660""}, // left right double arrow,U+21D4 ISOamsa -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,251,/ <!-- Mathematical Operators -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,252,"""forall"", ""8704""}, // for all, U+2200 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,253,"""part"", ""8706""}, // partial differential, U+2202 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,254,"""exist"", ""8707""}, // there exists, U+2203 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,255,"""empty"", ""8709""}, // empty set = null set = diameter,U+2205 ISOamso -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,256,"""nabla"", ""8711""}, // nabla = backward difference,U+2207 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,257,"""isin"", ""8712""}, // element of, U+2208 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,258,"""notin"", ""8713""}, // not an element of, U+2209 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,259,"""ni"", ""8715""}, // contains as member, U+220B ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,260,/ <!-- should there be a more memorable name than 'ni'? -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,261,"""prod"", ""8719""}, // n-ary product = product sign,U+220F ISOamsb -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,262,/ <!-- prod is NOT the same character as U+03A0 'greek capital letter pi'
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,263,/ though the same glyph might be used for both -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,264,"""sum"", ""8721""}, // n-ary summation, U+2211 ISOamsb -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,265,/ <!-- sum is NOT the same character as U+03A3 'greek capital letter sigma'
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,266,/ though the same glyph might be used for both -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,267,"""minus"", ""8722""}, // minus sign, U+2212 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,268,"""lowast"", ""8727""}, // asterisk operator, U+2217 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,269,"""radic"", ""8730""}, // square root = radical sign,U+221A ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,270,"""prop"", ""8733""}, // proportional to, U+221D ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,271,"""infin"", ""8734""}, // infinity, U+221E ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,272,"""ang"", ""8736""}, // angle, U+2220 ISOamso -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,273,"""and"", ""8743""}, // logical and = wedge, U+2227 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,274,"""or"", ""8744""}, // logical or = vee, U+2228 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,275,"""cap"", ""8745""}, // intersection = cap, U+2229 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,276,"""cup"", ""8746""}, // union = cup, U+222A ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,277,"""int"", ""8747""}, // integral, U+222B ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,278,"""there4"", ""8756""}, // therefore, U+2234 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,279,"""sim"", ""8764""}, // tilde operator = varies with = similar to,U+223C ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,280,"/ <!-- tilde operator is NOT the same character as the tilde, U+007E,although"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,281,/ the same glyph might be used to represent both -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,282,"""cong"", ""8773""}, // approximately equal to, U+2245 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,283,"""asymp"", ""8776""}, // almost equal to = asymptotic to,U+2248 ISOamsr -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,284,"""ne"", ""8800""}, // not equal to, U+2260 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,285,"""equiv"", ""8801""}, // identical to, U+2261 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,286,"""le"", ""8804""}, // less-than or equal to, U+2264 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,287,"""ge"", ""8805""}, // greater-than or equal to,U+2265 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,288,"""sub"", ""8834""}, // subset of, U+2282 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,289,"""sup"", ""8835""}, // superset of, U+2283 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,290,"/ <!-- note that nsup, 'not a superset of, U+2283' is not covered by the"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,291,"/ Symbol font encoding and is not included. Should it be, for symmetry?"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,292,"/ It is in ISOamsn --> <!ENTITY nsub"", ""8836""},"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,293,"/ not a subset of, U+2284 ISOamsn -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,294,"""sube"", ""8838""}, // subset of or equal to, U+2286 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,295,"""supe"", ""8839""}, // superset of or equal to,U+2287 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,296,"""oplus"", ""8853""}, // circled plus = direct sum,U+2295 ISOamsb -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,297,"""otimes"", ""8855""}, // circled times = vector product,U+2297 ISOamsb -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,298,"""perp"", ""8869""}, // up tack = orthogonal to = perpendicular,U+22A5 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,299,"""sdot"", ""8901""}, // dot operator, U+22C5 ISOamsb -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,300,/ <!-- dot operator is NOT the same character as U+00B7 middle dot -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,301,/ <!-- Miscellaneous Technical -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,302,"""lceil"", ""8968""}, // left ceiling = apl upstile,U+2308 ISOamsc -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,303,"""rceil"", ""8969""}, // right ceiling, U+2309 ISOamsc -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,304,"""lfloor"", ""8970""}, // left floor = apl downstile,U+230A ISOamsc -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,305,"""rfloor"", ""8971""}, // right floor, U+230B ISOamsc -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,306,"""lang"", ""9001""}, // left-pointing angle bracket = bra,U+2329 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,307,/ <!-- lang is NOT the same character as U+003C 'less than' or U+2039 'single left-pointing angle quotation
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,308,/ mark' -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,309,"""rang"", ""9002""}, // right-pointing angle bracket = ket,U+232A ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,310,/ <!-- rang is NOT the same character as U+003E 'greater than' or U+203A
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,311,/ 'single right-pointing angle quotation mark' -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,312,/ <!-- Geometric Shapes -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,313,"""loz"", ""9674""}, // lozenge, U+25CA ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,314,/ <!-- Miscellaneous Symbols -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,315,"""spades"", ""9824""}, // black spade suit, U+2660 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,316,/ <!-- black here seems to mean filled as opposed to hollow -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,317,"""clubs"", ""9827""}, // black club suit = shamrock,U+2663 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,318,"""hearts"", ""9829""}, // black heart suit = valentine,U+2665 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,319,"""diams"", ""9830""}, // black diamond suit, U+2666 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,321,/ <!-- Latin Extended-A -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,322,"""OElig"", ""338""}, // -- latin capital ligature OE,U+0152 ISOlat2 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,323,"""oelig"", ""339""}, // -- latin small ligature oe, U+0153 ISOlat2 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,324,"/ <!-- ligature is a misnomer, this is a separate character in some languages -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,325,"""Scaron"", ""352""}, // -- latin capital letter S with caron,U+0160 ISOlat2 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,326,"""scaron"", ""353""}, // -- latin small letter s with caron,U+0161 ISOlat2 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,327,"""Yuml"", ""376""}, // -- latin capital letter Y with diaeresis,U+0178 ISOlat2 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,328,/ <!-- Spacing Modifier Letters -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,329,"""circ"", ""710""}, // -- modifier letter circumflex accent,U+02C6 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,330,"""tilde"", ""732""}, // small tilde, U+02DC ISOdia -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,331,/ <!-- General Punctuation -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,332,"""ensp"", ""8194""}, // en space, U+2002 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,333,"""emsp"", ""8195""}, // em space, U+2003 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,334,"""thinsp"", ""8201""}, // thin space, U+2009 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,335,"""zwnj"", ""8204""}, // zero width non-joiner,U+200C NEW RFC 2070 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,336,"""zwj"", ""8205""}, // zero width joiner, U+200D NEW RFC 2070 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,337,"""lrm"", ""8206""}, // left-to-right mark, U+200E NEW RFC 2070 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,338,"""rlm"", ""8207""}, // right-to-left mark, U+200F NEW RFC 2070 -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,339,"""ndash"", ""8211""}, // en dash, U+2013 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,340,"""mdash"", ""8212""}, // em dash, U+2014 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,341,"""lsquo"", ""8216""}, // left single quotation mark,U+2018 ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,342,"""rsquo"", ""8217""}, // right single quotation mark,U+2019 ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,343,"""sbquo"", ""8218""}, // single low-9 quotation mark, U+201A NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,344,"""ldquo"", ""8220""}, // left double quotation mark,U+201C ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,345,"""rdquo"", ""8221""}, // right double quotation mark,U+201D ISOnum -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,346,"""bdquo"", ""8222""}, // double low-9 quotation mark, U+201E NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,347,"""dagger"", ""8224""}, // dagger, U+2020 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,348,"""Dagger"", ""8225""}, // double dagger, U+2021 ISOpub -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,349,"""permil"", ""8240""}, // per mille sign, U+2030 ISOtech -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,350,"""lsaquo"", ""8249""}, // single left-pointing angle quotation mark,U+2039 ISO proposed -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,351,/ <!-- lsaquo is proposed but not yet ISO standardized -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,352,"""rsaquo"", ""8250""}, // single right-pointing angle quotation mark,U+203A ISO proposed -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,353,/ <!-- rsaquo is proposed but not yet ISO standardized -->
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,354,"""euro"", ""8364""}, // -- euro sign, U+20AC NEW -->"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,357,/ package scoped for testing
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,358,tatic int HTML40_ARRAY_LENGTH = HTML40_ARRAY.length;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,360,"tatic String getHTML40(int i, int j) {"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,361,eturn HTML40_ARRAY[i][j];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,365, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,366, The set of entities supported by standard XML.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,367, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,369,ublic static final Entities XML;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,372, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,373, The set of entities supported by HTML 3.2.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,374, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,376,ublic static final Entities HTML32;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,379, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,380, The set of entities supported by HTML 4.0.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,381, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,383,ublic static final Entities HTML40;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,385,tatic {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,386,ML = new Entities();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,387,ML.addEntities(BASIC_ARRAY);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,388,ML.addEntities(APOS_ARRAY);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,391,tatic {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,392,TML32 = new Entities();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,393,TML32.addEntities(BASIC_ARRAY);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,394,TML32.addEntities(ISO8859_1_ARRAY);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,397,tatic {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,398,TML40 = new Entities();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,399,illWithHtml40Entities(HTML40);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,403, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,404, Fills the specified entities instance with HTML 40 entities.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,405, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,407, @param entities
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,408,            the instance to be filled.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,410,tatic void fillWithHtml40Entities(Entities entities) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,411,ntities.addEntities(BASIC_ARRAY);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,412,ntities.addEntities(ISO8859_1_ARRAY);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,413,ntities.addEntities(HTML40_ARRAY);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,416,tatic interface EntityMap {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,418, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,419, Add an entry to this entity map.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,420, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,422, @param name
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,423,            the entity name
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,424, @param value
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,425,            the entity value
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,427,"oid add(String name, int value);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,430, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,431, Returns the name of the entity identified by the specified value.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,432, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,434, @param value
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,435,            the value to locate
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,436, @return entity name associated with the specified value
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,438,tring name(int value);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,441, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,442, Returns the value of the entity identified by the specified name.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,443, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,445, @param name
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,446,            the name to locate
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,447, @return entity value associated with the specified name
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,449,nt value(String name);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,452,tatic class PrimitiveEntityMap implements EntityMap {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,453,"rivate final Map<String, Integer> mapNameToValue = new HashMap<String, Integer>();"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,455,rivate final IntHashMap mapValueToName = new IntHashMap();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,458, {@inheritDoc}
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,460,"ublic void add(String name, int value) {"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,461,"apNameToValue.put(name, new Integer(value));"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,462,"apValueToName.put(value, name);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,466, {@inheritDoc}
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,468,ublic String name(int value) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,469,eturn (String) mapValueToName.get(value);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,473, {@inheritDoc}
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,475,ublic int value(String name) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,476,bject value = mapNameToValue.get(name);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,477,f (value == null) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,478,eturn -1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,480,eturn ((Integer) value).intValue();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,484,tatic abstract class MapIntMap implements Entities.EntityMap {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,485,"rotected Map<String, Integer> mapNameToValue;"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,487,"rotected Map<Integer, String> mapValueToName;"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,490, {@inheritDoc}
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,492,"ublic void add(String name, int value) {"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,493,"apNameToValue.put(name, new Integer(value));"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,494,"apValueToName.put(new Integer(value), name);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,498, {@inheritDoc}
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,500,ublic String name(int value) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,501,eturn mapValueToName.get(new Integer(value));
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,505, {@inheritDoc}
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,507,ublic int value(String name) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,508,bject value = mapNameToValue.get(name);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,509,f (value == null) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,510,eturn -1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,512,eturn ((Integer) value).intValue();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,516,tatic class HashEntityMap extends MapIntMap {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,518, Constructs a new instance of <code>HashEntityMap</code>.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,520,ublic HashEntityMap() {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,521,"apNameToValue = new HashMap<String, Integer>();"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,522,"apValueToName = new HashMap<Integer, String>();"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,526,tatic class TreeEntityMap extends MapIntMap {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,528, Constructs a new instance of <code>TreeEntityMap</code>.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,530,ublic TreeEntityMap() {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,531,"apNameToValue = new TreeMap<String, Integer>();"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,532,"apValueToName = new TreeMap<Integer, String>();"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,536,tatic class LookupEntityMap extends PrimitiveEntityMap {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,537,rivate String[] lookupTable;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,539,rivate int LOOKUP_TABLE_SIZE = 256;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,542, {@inheritDoc}
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,544,Override
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,545,ublic String name(int value) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,546,f (value < LOOKUP_TABLE_SIZE) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,547,eturn lookupTable()[value];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,549,eturn super.name(value);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,553, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,554, Returns the lookup table for this entity map. The lookup table is created if it has not been previously.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,555, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,557, @return the lookup table
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,559,rivate String[] lookupTable() {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,560,f (lookupTable == null) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,561,reateLookupTable();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,563,eturn lookupTable;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,567, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,568," Creates an entity lookup table of LOOKUP_TABLE_SIZE elements, initialized with entity names."
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,569, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,571,rivate void createLookupTable() {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,572,ookupTable = new String[LOOKUP_TABLE_SIZE];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,573,or (int i = 0; i < LOOKUP_TABLE_SIZE; ++i) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,574,ookupTable[i] = super.name(i);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,579,tatic class ArrayEntityMap implements EntityMap {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,580,rotected int growBy = 100;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,582,rotected int size = 0;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,584,rotected String[] names;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,586,rotected int[] values;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,589, Constructs a new instance of <code>ArrayEntityMap</code>.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,591,ublic ArrayEntityMap() {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,592,ames = new String[growBy];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,593,alues = new int[growBy];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,597, Constructs a new instance of <code>ArrayEntityMap</code> specifying the size by which the array should
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,598, grow.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,600, @param growBy
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,601,            array will be initialized to and will grow by this amount
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,603,ublic ArrayEntityMap(int growBy) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,604,his.growBy = growBy;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,605,ames = new String[growBy];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,606,alues = new int[growBy];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,610, {@inheritDoc}
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,612,"ublic void add(String name, int value) {"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,613,nsureCapacity(size + 1);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,614,ames[size] = name;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,615,alues[size] = value;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,616,ize++;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,620," Verifies the capacity of the entity array, adjusting the size if necessary."
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,622, @param capacity
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,623,            size the array should be
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,625,rotected void ensureCapacity(int capacity) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,626,f (capacity > names.length) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,627,"nt newSize = Math.max(capacity, size + growBy);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,628,tring[] newNames = new String[newSize];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,629,"ystem.arraycopy(names, 0, newNames, 0, size);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,630,ames = newNames;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,631,nt[] newValues = new int[newSize];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,632,"ystem.arraycopy(values, 0, newValues, 0, size);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,633,alues = newValues;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,638, {@inheritDoc}
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,640,ublic String name(int value) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,641,or (int i = 0; i < size; ++i) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,642,f (values[i] == value) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,643,eturn names[i];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,646,eturn null;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,650, {@inheritDoc}
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,652,ublic int value(String name) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,653,or (int i = 0; i < size; ++i) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,654,f (names[i].equals(name)) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,655,eturn values[i];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,658,eturn -1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,662,tatic class BinaryEntityMap extends ArrayEntityMap {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,665, Constructs a new instance of <code>BinaryEntityMap</code>.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,667,ublic BinaryEntityMap() {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,668,uper();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,672, Constructs a new instance of <code>ArrayEntityMap</code> specifying the size by which the underlying array
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,673, should grow.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,675, @param growBy
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,676,            array will be initialized to and will grow by this amount
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,678,ublic BinaryEntityMap(int growBy) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,679,uper(growBy);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,683, Performs a binary search of the entity array for the specified key. This method is based on code in
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,684, {@link java.util.Arrays}.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,686, @param key
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,687,            the key to be found
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,688, @return the index of the entity array matching the specified key
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,690,rivate int binarySearch(int key) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,691,nt low = 0;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,692,nt high = size - 1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,694,hile (low <= high) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,695,nt mid = (low + high) >>> 1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,696,nt midVal = values[mid];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,698,f (midVal < key) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,699,ow = mid + 1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,700, else if (midVal > key) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,701,igh = mid - 1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,702, else {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,703,eturn mid; // key found
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,706,eturn -(low + 1); // key not found.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,710, {@inheritDoc}
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,712,Override
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,713,"ublic void add(String name, int value) {"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,714,nsureCapacity(size + 1);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,715,nt insertAt = binarySearch(value);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,716,f (insertAt > 0) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,717,eturn; // note: this means you can't insert the same value twice
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,719,nsertAt = -(insertAt + 1); // binarySearch returns it negative and off-by-one
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,720,"ystem.arraycopy(values, insertAt, values, insertAt + 1, size - insertAt);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,721,alues[insertAt] = value;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,722,"ystem.arraycopy(names, insertAt, names, insertAt + 1, size - insertAt);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,723,ames[insertAt] = name;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,724,ize++;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,728, {@inheritDoc}
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,730,Override
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,731,ublic String name(int value) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,732,nt index = binarySearch(value);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,733,f (index < 0) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,734,eturn null;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,736,eturn names[index];
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,740,/ package scoped for testing
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,741,ntityMap map = new Entities.LookupEntityMap();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,744, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,745, Adds entities to this entity.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,746, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,748, @param entityArray
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,749,            array of entities to be added
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,751,ublic void addEntities(String[][] entityArray) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,752,or (String[] element : entityArray) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,753,"ddEntity(element[0], Integer.parseInt(element[1]));"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,758, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,759, Add an entity to this entity.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,760, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,762, @param name
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,763,            name of the entity
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,764, @param value
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,765,            vale of the entity
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,767,"ublic void addEntity(String name, int value) {"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,768,"ap.add(name, value);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,772, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,773, Returns the name of the entity identified by the specified value.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,774, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,776, @param value
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,777,            the value to locate
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,778, @return entity name associated with the specified value
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,780,ublic String entityName(int value) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,781,eturn map.name(value);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,785, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,786, Returns the value of the entity identified by the specified name.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,787, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,789, @param name
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,790,            the name to locate
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,791, @return entity value associated with the specified name
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,793,ublic int entityValue(String name) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,794,eturn map.value(name);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,798, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,799, Escapes the characters in a <code>String</code>.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,800, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,802, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,803," For example, if you have called addEntity(&quot;foo&quot;, 0xA1), escape(&quot;\u00A1&quot;) will return"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,804, &quot;&amp;foo;&quot;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,805, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,807, @param str
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,808,            The <code>String</code> to escape.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,809, @return A new escaped <code>String</code>.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,811,ublic String escape(String str) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,812,tringWriter stringWriter = createStringWriter(str);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,813,ry {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,814,"his.escape(stringWriter, str);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,815, catch (IOException e) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,816,"/ This should never happen because ALL the StringWriter methods called by #escape(Writer, String) do not"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,817,/ throw IOExceptions.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,818,hrow new UnhandledException(e);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,820,eturn stringWriter.toString();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,824, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,825, Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,826, passed.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,827, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,829, @param writer
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,830,            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,831, @param str
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,832,            The <code>String</code> to escape. Assumed to be a non-null value.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,833, @throws IOException
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,834,             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,835,             methods.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,837, @see #escape(String)
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,838, @see Writer
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,840,"ublic void escape(Writer writer, String str) throws IOException {"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,841,nt len = str.length();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,842,or (int i = 0; i < len; i++) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,843,"nt c = Character.codePointAt(str, i);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,844,tring entityName = this.entityName(c);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,845,f (entityName == null) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,846,f (c >= 0x010000 && i < len - 1) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,847,"riter.write(""&#"");"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,848,"riter.write(Integer.toString(c, 10));"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,849,riter.write(';');
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,850,++;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,851, else if (c > 0x7F) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,852,"riter.write(""&#"");"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,853,"riter.write(Integer.toString(c, 10));"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,854,riter.write(';');
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,855, else {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,856,riter.write(c);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,858, else {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,859,riter.write('&');
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,860,riter.write(entityName);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,861,riter.write(';');
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,867, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,868, Unescapes the entities in a <code>String</code>.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,869, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,871, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,872," For example, if you have called addEntity(&quot;foo&quot;, 0xA1), unescape(&quot;&amp;foo;&quot;) will return"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,873, &quot;\u00A1&quot;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,874, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,876, @param str
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,877,            The <code>String</code> to escape.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,878, @return A new escaped <code>String</code>.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,880,ublic String unescape(String str) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,881,nt firstAmp = str.indexOf('&');
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,882,f (firstAmp < 0) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,883,eturn str;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,884, else {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,885,tringWriter stringWriter = createStringWriter(str);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,886,ry {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,887,"his.doUnescape(stringWriter, str, firstAmp);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,888, catch (IOException e) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,889,"/ This should never happen because ALL the StringWriter methods called by #escape(Writer, String)"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,890,/ do not throw IOExceptions.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,891,hrow new UnhandledException(e);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,893,eturn stringWriter.toString();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,898, Make the StringWriter 10% larger than the source String to avoid growing the writer
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,900, @param str The source string
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,901, @return A newly created StringWriter
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,903,rivate StringWriter createStringWriter(String str) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,904,eturn new StringWriter((int) (str.length() + (str.length() * 0.1)));
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,908, <p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,909, Unescapes the escaped entities in the <code>String</code> passed and writes the result to the
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,910, <code>Writer</code> passed.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,911, </p>
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,913, @param writer
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,914,            The <code>Writer</code> to write the results to; assumed to be non-null.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,915, @param str
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,916,            The source <code>String</code> to unescape; assumed to be non-null.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,917, @throws IOException
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,918,             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,919,             methods.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,921, @see #escape(String)
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,922, @see Writer
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,924,"ublic void unescape(Writer writer, String str) throws IOException {"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,925,nt firstAmp = str.indexOf('&');
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,926,f (firstAmp < 0) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,927,riter.write(str);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,928,eturn;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,929, else {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,930,"oUnescape(writer, str, firstAmp);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,935, Underlying unescape method that allows the optimisation of not starting from the 0 index again.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,937, @param writer
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,938,            The <code>Writer</code> to write the results to; assumed to be non-null.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,939, @param str
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,940,            The source <code>String</code> to unescape; assumed to be non-null.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,941, @param firstAmp
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,942,            The <code>int</code> index of the first ampersand in the source String.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,943, @throws IOException
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,944,             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,945,             methods.
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,947,"rivate void doUnescape(Writer writer, String str, int firstAmp) throws IOException {"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,948,"riter.write(str, 0, firstAmp);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,949,nt len = str.length();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,950,or (int i = firstAmp; i < len; i++) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,951,har c = str.charAt(i);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,952,f (c == '&') {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,953,nt nextIdx = i + 1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,954,"nt semiColonIdx = str.indexOf(';', nextIdx);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,955,f (semiColonIdx == -1) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,956,riter.write(c);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,957,ontinue;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,959,"nt amphersandIdx = str.indexOf('&', i + 1);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,960,f (amphersandIdx != -1 && amphersandIdx < semiColonIdx) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,961,/ Then the text looks like &...&...;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,962,riter.write(c);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,963,ontinue;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,965,"tring entityContent = str.substring(nextIdx, semiColonIdx);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,966,nt entityValue = -1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,967,nt entityContentLen = entityContent.length();
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,968,f (entityContentLen > 0) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,969,f (entityContent.charAt(0) == '#') { // escaped value content is an integer (decimal or
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,970,/ hexidecimal)
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,971,f (entityContentLen > 1) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,972,har isHexChar = entityContent.charAt(1);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,973,ry {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,974,witch (isHexChar) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,975,ase 'X' :
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,976,ase 'x' : {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,977,"ntityValue = Integer.parseInt(entityContent.substring(2), 16);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,978,reak;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,980,efault : {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,981,"ntityValue = Integer.parseInt(entityContent.substring(1), 10);"
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,984,f (entityValue > 0xFFFF) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,985,ntityValue = -1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,987, catch (NumberFormatException e) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,988,ntityValue = -1;
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,991, else { // escaped value content is an entity name
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,992,ntityValue = this.entityValue(entityContent);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,996,f (entityValue == -1) {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,997,riter.write('&');
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,998,riter.write(entityContent);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,999,riter.write(';');
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,1000, else {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,1001,riter.write(entityValue);
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,1003, = semiColonIdx; // move index up to the semi-colon
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,1004, else {
False,src/java/org/apache/commons/lang/Entities.java,src/java/org/apache/commons/lang/Entities.java,1005,riter.write(c);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,20,mport java.io.StringWriter;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,22,mport java.util.Locale;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,22,import org.apache.commons.lang.text.translate.EscapeUtils;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,23,import org.apache.commons.lang.text.translate.UnescapeUtils;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,42,"rivate static final char CSV_DELIMITER = ',';"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,43,"rivate static final char CSV_QUOTE = '""';"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,44,rivate static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,45,"rivate static final char[] CSV_SEARCH_CHARS = new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,85,"eturn escapeJavaStyleString(str, false, false);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,81,return EscapeUtils.ESCAPE_JAVA.translate(str);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,101,"scapeJavaStyleString(out, str, false, false);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,97,"EscapeUtils.ESCAPE_JAVA.translate(str, out);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,126,"eturn escapeJavaStyleString(str, true, true);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,122,return EscapeUtils.ESCAPE_ECMASCRIPT.translate(str);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,142,"scapeJavaStyleString(out, str, true, true);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,146, <p>Worker method for the {@link #escapeJavaScript(String)} method.</p>
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,148," @param str String to escape values in, may be null"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,149, @param escapeSingleQuotes escapes single quotes if <code>true</code>
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,150, @param escapeForwardSlash TODO
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,151, @return the escaped string
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,153,"rivate static String escapeJavaStyleString(String str, boolean escapeSingleQuotes, boolean escapeForwardSlash) {"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,154,f (str == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,155,eturn null;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,157,ry {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,158,tringWriter writer = new StringWriter(str.length() * 2);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,159,"scapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,160,eturn writer.toString();
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,161, catch (IOException ioe) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,162,/ this should never ever happen while writing to a StringWriter
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,163,hrow new UnhandledException(ioe);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,168, <p>Worker method for the {@link #escapeJavaScript(String)} method.</p>
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,170, @param out write to receieve the escaped string
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,171," @param str String to escape values in, may be null"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,172, @param escapeSingleQuote escapes single quotes if <code>true</code>
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,173, @param escapeForwardSlash TODO
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,174, @throws IOException if an IOException occurs
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,176,"rivate static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote,"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,177,oolean escapeForwardSlash) throws IOException {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,178,f (out == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,179,"hrow new IllegalArgumentException(""The Writer must not be null"");"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,181,f (str == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,182,eturn;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,184,nt sz;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,185,z = str.length();
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,186,or (int i = 0; i < sz; i++) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,187,har ch = str.charAt(i);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,189,/ handle unicode
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,190,f (ch > 0xfff) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,191,"ut.write(""\\u"" + hex(ch));"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,192, else if (ch > 0xff) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,193,"ut.write(""\\u0"" + hex(ch));"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,194, else if (ch > 0x7f) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,195,"ut.write(""\\u00"" + hex(ch));"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,196, else if (ch < 32) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,197,witch (ch) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,198,ase '\b' :
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,199,ut.write('\\');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,200,ut.write('b');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,201,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,202,ase '\n' :
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,203,ut.write('\\');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,204,ut.write('n');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,205,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,206,ase '\t' :
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,207,ut.write('\\');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,208,ut.write('t');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,209,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,210,ase '\f' :
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,211,ut.write('\\');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,212,ut.write('f');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,213,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,214,ase '\r' :
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,215,ut.write('\\');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,216,ut.write('r');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,217,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,218,efault :
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,219,f (ch > 0xf) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,220,"ut.write(""\\u00"" + hex(ch));"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,221, else {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,222,"ut.write(""\\u000"" + hex(ch));"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,224,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,226, else {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,227,witch (ch) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,228,ase '\'' :
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,229,f (escapeSingleQuote) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,230,ut.write('\\');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,232,ut.write('\'');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,233,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,234,"ase '""' :"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,235,ut.write('\\');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,236,"ut.write('""');"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,237,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,238,ase '\\' :
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,239,ut.write('\\');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,240,ut.write('\\');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,241,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,242,ase '/' :
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,243,f (escapeForwardSlash) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,244,ut.write('\\');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,246,ut.write('/');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,247,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,248,efault :
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,249,ut.write(ch);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,250,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,257, <p>Returns an upper case hexadecimal <code>String</code> for the given
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,258, character.</p>
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,260, @param ch The character to convert.
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,261, @return An upper case hexadecimal <code>String</code>
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,263,rivate static String hex(char ch) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,264,eturn Integer.toHexString(ch).toUpperCase(Locale.ENGLISH);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,138,"EscapeUtils.ESCAPE_ECMASCRIPT.translate(str, out);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,277,f (str == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,278,eturn null;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,280,ry {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,281,tringWriter writer = new StringWriter(str.length());
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,282,"nescapeJava(writer, str);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,283,eturn writer.toString();
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,284, catch (IOException ioe) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,285,/ this should never ever happen while writing to a StringWriter
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,286,hrow new UnhandledException(ioe);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,151,return UnescapeUtils.UNESCAPE_JAVA.translate(str);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,306,f (out == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,307,"hrow new IllegalArgumentException(""The Writer must not be null"");"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,309,f (str == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,310,eturn;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,312,nt sz = str.length();
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,313,tringBuffer unicode = new StringBuffer(4);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,314,oolean hadSlash = false;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,315,oolean inUnicode = false;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,316,or (int i = 0; i < sz; i++) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,317,har ch = str.charAt(i);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,318,f (inUnicode) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,319,"/ if in unicode, then we're reading unicode"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,320,/ values in somehow
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,321,nicode.append(ch);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,322,f (unicode.length() == 4) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,323,/ unicode now contains the four hex digits
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,324,/ which represents our unicode character
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,325,ry {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,326,"nt value = Integer.parseInt(unicode.toString(), 16);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,327,ut.write((char) value);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,328,nicode.setLength(0);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,329,nUnicode = false;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,330,adSlash = false;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,331, catch (NumberFormatException nfe) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,332,"hrow new UnhandledException(""Unable to parse unicode value: "" + unicode, nfe);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,335,ontinue;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,337,f (hadSlash) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,338,/ handle an escaped value
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,339,adSlash = false;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,340,witch (ch) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,341,ase '\\':
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,342,ut.write('\\');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,343,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,344,ase '\'':
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,345,ut.write('\'');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,346,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,347,"ase '\""':"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,348,"ut.write('""');"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,349,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,350,ase 'r':
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,351,ut.write('\r');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,352,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,353,ase 'f':
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,354,ut.write('\f');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,355,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,356,ase 't':
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,357,ut.write('\t');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,358,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,359,ase 'n':
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,360,ut.write('\n');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,361,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,362,ase 'b':
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,363,ut.write('\b');
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,364,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,365,ase 'u':
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,367,"/ uh-oh, we're in unicode country...."
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,368,nUnicode = true;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,369,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,371,efault :
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,372,ut.write(ch);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,373,reak;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,375,ontinue;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,376, else if (ch == '\\') {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,377,adSlash = true;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,378,ontinue;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,380,ut.write(ch);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,382,f (hadSlash) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,383,/ then we're in the weird case of a \ at the end of the
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,384,"/ string, let's output it anyway."
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,385,ut.write('\\');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,170,"UnescapeUtils.UNESCAPE_JAVA.translate(str, out);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,401,eturn unescapeJava(str);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,185,return UnescapeUtils.UNESCAPE_ECMASCRIPT.translate(str);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,421,"nescapeJava(out, str);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,205,"UnescapeUtils.UNESCAPE_ECMASCRIPT.translate(str, out);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,453,f (str == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,454,eturn null;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,456,ry {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,457,tringWriter writer = new StringWriter ((int)(str.length() * 1.5));
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,458,"scapeHtml(writer, str);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,459,eturn writer.toString();
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,460, catch (IOException ioe) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,461,/should be impossible
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,462,hrow new UnhandledException(ioe);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,237,return EscapeUtils.ESCAPE_HTML4.translate(str);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,496,f (writer == null ) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,497,"hrow new IllegalArgumentException (""The Writer must not be null."");"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,499,f (string == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,500,eturn;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,502,"ntities.HTML40.escape(writer, string);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,270,"EscapeUtils.ESCAPE_HTML4.translate(string, writer);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,523,f (str == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,524,eturn null;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,526,ry {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,527,tringWriter writer = new StringWriter ((int)(str.length() * 1.5));
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,528,"nescapeHtml(writer, str);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,529,eturn writer.toString();
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,530, catch (IOException ioe) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,531,/should be impossible
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,532,hrow new UnhandledException(ioe);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,291,return UnescapeUtils.UNESCAPE_HTML4.translate(str);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,555,f (writer == null ) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,556,"hrow new IllegalArgumentException (""The Writer must not be null."");"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,558,f (string == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,559,eturn;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,561,"ntities.HTML40.unescape(writer, string);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,313,"UnescapeUtils.UNESCAPE_HTML4.translate(string, writer);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,585,f (writer == null ) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,586,"hrow new IllegalArgumentException (""The Writer must not be null."");"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,588,f (str == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,589,eturn;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,591,"ntities.XML.escape(writer, str);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,337,"EscapeUtils.ESCAPE_XML.translate(str, writer);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,612,f (str == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,613,eturn null;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,615,eturn Entities.XML.escape(str);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,358,return EscapeUtils.ESCAPE_XML.translate(str);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,637,f (writer == null ) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,638,"hrow new IllegalArgumentException (""The Writer must not be null."");"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,640,f (str == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,641,eturn;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,643,"ntities.XML.unescape(writer, str);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,380,"UnescapeUtils.UNESCAPE_XML.translate(str, writer);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,662,f (str == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,663,eturn null;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,665,eturn Entities.XML.unescape(str);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,399,return UnescapeUtils.UNESCAPE_XML.translate(str);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,693,"f (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,694,eturn str;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,696,ry {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,697,tringWriter writer = new StringWriter();
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,698,"scapeCsv(writer, str);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,699,eturn writer.toString();
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,700, catch (IOException ioe) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,701,/ this should never ever happen while writing to a StringWriter
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,702,hrow new UnhandledException(ioe);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,427,return EscapeUtils.ESCAPE_CSV.translate(str);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,730,"f (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,731,f (str != null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,732,ut.write(str);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,734,eturn;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,736,ut.write(CSV_QUOTE);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,737,or (int i = 0; i < str.length(); i++) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,738,har c = str.charAt(i);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,739,f (c == CSV_QUOTE) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,740,ut.write(CSV_QUOTE); // escape double quote
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,742,ut.write(c);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,744,ut.write(CSV_QUOTE);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,454,"EscapeUtils.ESCAPE_CSV.translate(str, out);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,770,f (str == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,771,eturn null;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,773,ry {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,774,tringWriter writer = new StringWriter();
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,775,"nescapeCsv(writer, str);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,776,eturn writer.toString();
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,777, catch (IOException ioe) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,778,/ this should never ever happen while writing to a StringWriter
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,779,hrow new UnhandledException(ioe);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,480,return UnescapeUtils.UNESCAPE_CSV.translate(str);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,807,f (str == null) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,808,eturn;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,810,f (str.length() < 2) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,811,ut.write(str);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,812,eturn;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,814,f ( str.charAt(0) != CSV_QUOTE || str.charAt(str.length() - 1) != CSV_QUOTE ) {
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,815,ut.write(str);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,816,eturn;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,819,/ strip quotes
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,820,"tring quoteless = str.substring(1, str.length() - 1);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,822,"f ( StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS) ) {"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,823,"/ deal with escaped quotes; ie) """""
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,824,"tr = StringUtils.replace(quoteless, CSV_QUOTE_STR + CSV_QUOTE_STR, CSV_QUOTE_STR);"
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,827,ut.write(str);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,507,"UnescapeUtils.UNESCAPE_CSV.translate(str, out);"
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,17,package org.apache.commons.lang.text.translate;
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,19,import java.io.IOException;
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,20,import java.io.Writer;
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,23,* Executes a sequence of translators one after the other. Execution ends whenever
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,24,* the first translator consumes codepoints from the input.
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,25,* @since 3.0
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,27,public class AggregateTranslator extends CharSequenceTranslator {
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,29,private CharSequenceTranslator[] translators;
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,32,* Specify the translators to be used at creation time.
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,34,public AggregateTranslator(CharSequenceTranslator... translators) {
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,35,this.translators = translators;
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,39,* The first translator to consume codepoints from the input is the 'winner'.
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,40,* Execution stops with the number of consumed codepoints being returned.
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,41,* {@inheritDoc}
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,43,"public int translate(CharSequence input, int index, Writer out) throws IOException {"
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,44,for (CharSequenceTranslator translator : translators) {
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,45,"int consumed = translator.translate(input, index, out);"
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,46,if(consumed != 0) {
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,47,return consumed;
True,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java,50,return 0;
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,17,package org.apache.commons.lang.text.translate;
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,19,import java.io.IOException;
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,20,import java.io.Writer;
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,21,import java.io.StringWriter;
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,22,import java.util.Locale;
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,24,import org.apache.commons.lang.UnhandledException;
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,27,* An API for translating text.
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,28,* Its core use is to escape and unescape text. Because escaping and unescaping
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,29,"* is completely contextual, the API does not present two separate signatures."
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,30,* @since 3.0
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,32,public abstract class CharSequenceTranslator {
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,35,"* Translate a set of codepoints, represented by an int index into a CharSequence,"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,36,"* into another set of codepoints. The number of codepoints consumed must be returned,"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,37,* and the only IOExceptions thrown must be from interacting with the Writer so that
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,38,* the top level API may reliable ignore StringWriter IOExceptions.
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,40,* @param input CharSequence that is being translated
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,41,* @param index int representing the current point of translation
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,42,* @param out Writer to translate the text to
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,43,* @return int count of codepoints consumed
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,45,"public abstract int translate(CharSequence input, int index, Writer out) throws IOException;"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,48,* Helper for non-Writer usage.
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,49,* @param input CharSequence to be translated
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,50,* @return String output of translation
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,52,public final String translate(CharSequence input) {
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,53,if (input == null) {
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,54,return null;
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,56,try {
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,57,StringWriter writer = new StringWriter(input.length() * 2);  // TODO: Make the 2 part of the API???
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,58,"translate(input, writer);"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,59,return writer.toString();
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,60,} catch (IOException ioe) {
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,61,// this should never ever happen while writing to a StringWriter
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,62,throw new UnhandledException(ioe);
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,66,// TODO: Point to CsvEscaper as a way to 'override'?
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,68,* Translate an input onto a Writer. This is intentionally final as its algorithm is
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,69,* tightly coupled with the abstract method of this class.
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,71,* @param input CharSequence that is being translated
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,72,* @param out Writer to translate the text to
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,73,* @throws IOException if and only if the Writer produces an IOException
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,75,"public final void translate(CharSequence input, Writer out) throws IOException {"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,76,if (out == null) {
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,77,"throw new IllegalArgumentException(""The Writer must not be null"");"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,79,if (input == null) {
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,80,return;
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,82,"int sz = Character.codePointCount(input, 0, input.length());"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,83,for (int i = 0; i < sz; i++) {
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,85,// consumed is the number of codepoints consumed
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,86,"int consumed = translate(input, i, out);"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,88,if(consumed == 0) {
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,89,"out.write( Character.toChars( Character.codePointAt(input, i) ) );"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,90,} else {
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,91,// contract with translators is that they have to understand codepoints and they just took care of a surrogate pair
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,92,for(int j=0; j<consumed; j++) {
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,93,if(i < sz - 2) {
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,94,"i += Character.charCount( Character.codePointAt(input, i) );"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,95,} else {
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,96,"// If the String ends with a high surrogate, just add the 1 and don't worry about such things"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,97,i++;
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,100,"// for loop will increment 1 anyway, so remove 1 to account for that"
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,101,i--;
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,107,* <p>Returns an upper case hexadecimal <code>String</code> for the given
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,108,* character.</p>
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,110,* @param codepoint The codepoint to convert.
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,111,* @return An upper case hexadecimal <code>String</code>
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,113,public static String hex(int codepoint) {
True,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,src/java/org/apache/commons/lang/text/translate/CharSequenceTranslator.java,114,return Integer.toHexString(codepoint).toUpperCase(Locale.ENGLISH);
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,17,package org.apache.commons.lang.text.translate;
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,19,import java.io.IOException;
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,20,import java.io.Writer;
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,23,* Helper subclass to CharSequenceTranslator to allow for translations that
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,24,* will replace up to one character at a time.
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,25,* @since 3.0
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,27,public abstract class CodePointTranslator extends CharSequenceTranslator {
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,30,"* Implementation of translate that maps onto the abstract translate(int, Writer) method."
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,31,* {@inheritDoc}
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,33,"public final int translate(CharSequence input, int index, Writer out) throws IOException {"
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,34,"int codepoint = Character.codePointAt(input, index);"
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,35,"boolean consumed = translate(codepoint, out);"
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,36,if(consumed) {
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,37,return 1;
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,38,} else {
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,39,return 0;
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,44,* Translate the specified codepoint into another.
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,46,* @param codepoint int character input to translate
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,47,* @param out Writer to optionally push the translated output to
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,48,* @return boolean as to whether translation occurred or not
True,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java,50,"public abstract boolean translate(int codepoint, Writer out) throws IOException;"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,17,package org.apache.commons.lang.text.translate;
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,20,* Package private class holding varius entity data for HTML and XML.
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,21,* All arrays are of length [*][2].
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,23,* @since 3.0
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,25,class EntityArrays {
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,27,static final String[][] ISO8859_1_ESCAPE = {
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,28,"{""\u00A0"", ""&nbsp;""}, // non-breaking space"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,29,"{""\u00A1"", ""&iexcl;""}, // inverted exclamation mark"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,30,"{""\u00A2"", ""&cent;""}, // cent sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,31,"{""\u00A3"", ""&pound;""}, // pound sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,32,"{""\u00A4"", ""&curren;""}, // currency sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,33,"{""\u00A5"", ""&yen;""}, // yen sign = yuan sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,34,"{""\u00A6"", ""&brvbar;""}, // broken bar = broken vertical bar"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,35,"{""\u00A7"", ""&sect;""}, // section sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,36,"{""\u00A8"", ""&uml;""}, // diaeresis = spacing diaeresis"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,37,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,38,"{""\u00AA"", ""&ordf;""}, // feminine ordinal indicator"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,39,"{""\u00AB"", ""&laquo;""}, // left-pointing double angle quotation mark = left pointing guillemet"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,40,"{""\u00AC"", ""&not;""}, // not sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,41,"{""\u00AD"", ""&shy;""}, // soft hyphen = discretionary hyphen"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,42,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,43,"{""\u00AF"", ""&macr;""}, // macron = spacing macron = overline = APL overbar"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,44,"{""\u00B0"", ""&deg;""}, // degree sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,45,"{""\u00B1"", ""&plusmn;""}, // plus-minus sign = plus-or-minus sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,46,"{""\u00B2"", ""&sup2;""}, // superscript two = superscript digit two = squared"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,47,"{""\u00B3"", ""&sup3;""}, // superscript three = superscript digit three = cubed"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,48,"{""\u00B4"", ""&acute;""}, // acute accent = spacing acute"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,49,"{""\u00B5"", ""&micro;""}, // micro sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,50,"{""\u00B6"", ""&para;""}, // pilcrow sign = paragraph sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,51,"{""\u00B7"", ""&middot;""}, // middle dot = Georgian comma = Greek middle dot"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,52,"{""\u00B8"", ""&cedil;""}, // cedilla = spacing cedilla"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,53,"{""\u00B9"", ""&sup1;""}, // superscript one = superscript digit one"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,54,"{""\u00BA"", ""&ordm;""}, // masculine ordinal indicator"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,55,"{""\u00BB"", ""&raquo;""}, // right-pointing double angle quotation mark = right pointing guillemet"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,56,"{""\u00BC"", ""&frac14;""}, // vulgar fraction one quarter = fraction one quarter"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,57,"{""\u00BD"", ""&frac12;""}, // vulgar fraction one half = fraction one half"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,58,"{""\u00BE"", ""&frac34;""}, // vulgar fraction three quarters = fraction three quarters"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,59,"{""\u00BF"", ""&iquest;""}, // inverted question mark = turned question mark"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,60,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,61,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,62,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,63,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,64,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,65,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,66,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,67,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,68,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,69,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,70,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,71,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,72,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,73,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,74,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,75,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,76,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,77,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,78,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,79,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,80,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,81,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,82,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,83,"{""\u00D8"", ""&times;""}, // multiplication sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,84,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,85,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,86,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,87,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,88,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,89,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,90,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,91,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,92,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,93,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,94,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,95,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,96,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,97,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,98,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,99,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,100,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,101,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,102,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,103,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,104,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,105,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,106,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,107,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,108,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,109,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,110,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,111,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,112,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,113,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,114,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,115,"{""\u00F7"", ""&divide;""}, // division sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,116,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,117,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,118,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,119,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,120,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,121,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,122,"{""\u00C0"", ""&Agrave;""}, //  - uppercase A, grave accent"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,123,"""reg"", ""174""}, //  - registered trademark sign"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,126,static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,128,// http://www.w3.org/TR/REC-html40/sgml/entities.html
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,129,static final String[][] HTML40_EXTENDED_ESCAPE = {
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,130,// <!-- Latin Extended-B -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,131,"{""\u0192"", ""&fnof;""}, // latin small f with hook = function= florin, U+0192 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,132,// <!-- Greek -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,133,"{""\u0391"", ""&Alpha;""}, // greek capital letter alpha, U+0391 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,134,"{""\u0392"", ""&Beta;""}, // greek capital letter beta, U+0392 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,135,"{""\u0393"", ""&Gamma;""}, // greek capital letter gamma,U+0393 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,136,"{""\u0394"", ""&Delta;""}, // greek capital letter delta,U+0394 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,137,"{""\u0395"", ""&Epsilon;""}, // greek capital letter epsilon, U+0395 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,138,"{""\u0396"", ""&Zeta;""}, // greek capital letter zeta, U+0396 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,139,"{""\u0397"", ""&Eta;""}, // greek capital letter eta, U+0397 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,140,"{""\u0398"", ""&Theta;""}, // greek capital letter theta,U+0398 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,141,"{""\u0399"", ""&Iota;""}, // greek capital letter iota, U+0399 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,142,"{""\u039A"", ""&Kappa;""}, // greek capital letter kappa, U+039A -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,143,"{""\u039B"", ""&Lambda;""}, // greek capital letter lambda,U+039B ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,144,"{""\u039C"", ""&Mu;""}, // greek capital letter mu, U+039C -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,145,"{""\u039D"", ""&Nu;""}, // greek capital letter nu, U+039D -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,146,"{""\u039E"", ""&Xi;""}, // greek capital letter xi, U+039E ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,147,"{""\u039F"", ""&Omicron;""}, // greek capital letter omicron, U+039F -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,148,"{""\u03A0"", ""&Pi;""}, // greek capital letter pi, U+03A0 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,149,"{""\u03A1"", ""&Rho;""}, // greek capital letter rho, U+03A1 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,150,"// <!-- there is no Sigmaf, and no U+03A2 character either -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,151,"{""\u03A3"", ""&Sigma;""}, // greek capital letter sigma,U+03A3 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,152,"{""\u03A4"", ""&Tau;""}, // greek capital letter tau, U+03A4 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,153,"{""\u03A5"", ""&Upsilon;""}, // greek capital letter upsilon,U+03A5 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,154,"{""\u03A6"", ""&Phi;""}, // greek capital letter phi,U+03A6 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,155,"{""\u03A7"", ""&Chi;""}, // greek capital letter chi, U+03A7 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,156,"{""\u03A8"", ""&Psi;""}, // greek capital letter psi,U+03A8 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,157,"{""\u03A9"", ""&Omega;""}, // greek capital letter omega,U+03A9 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,158,"{""\u03B1"", ""&alpha;""}, // greek small letter alpha,U+03B1 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,159,"{""\u03B2"", ""&beta;""}, // greek small letter beta, U+03B2 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,160,"{""\u03B3"", ""&gamma;""}, // greek small letter gamma,U+03B3 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,161,"{""\u03B4"", ""&delta;""}, // greek small letter delta,U+03B4 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,162,"{""\u03B5"", ""&epsilon;""}, // greek small letter epsilon,U+03B5 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,163,"{""\u03B6"", ""&zeta;""}, // greek small letter zeta, U+03B6 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,164,"{""\u03B7"", ""&eta;""}, // greek small letter eta, U+03B7 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,165,"{""\u03B8"", ""&theta;""}, // greek small letter theta,U+03B8 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,166,"{""\u03B9"", ""&iota;""}, // greek small letter iota, U+03B9 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,167,"{""\u03BA"", ""&kappa;""}, // greek small letter kappa,U+03BA ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,168,"{""\u03BB"", ""&lambda;""}, // greek small letter lambda,U+03BB ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,169,"{""\u03BC"", ""&mu;""}, // greek small letter mu, U+03BC ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,170,"{""\u03BD"", ""&nu;""}, // greek small letter nu, U+03BD ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,171,"{""\u03BE"", ""&xi;""}, // greek small letter xi, U+03BE ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,172,"{""\u03BF"", ""&omicron;""}, // greek small letter omicron, U+03BF NEW -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,173,"{""\u03C0"", ""&pi;""}, // greek small letter pi, U+03C0 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,174,"{""\u03C1"", ""&rho;""}, // greek small letter rho, U+03C1 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,175,"{""\u03C2"", ""&sigmaf;""}, // greek small letter final sigma,U+03C2 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,176,"{""\u03C3"", ""&sigma;""}, // greek small letter sigma,U+03C3 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,177,"{""\u03C4"", ""&tau;""}, // greek small letter tau, U+03C4 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,178,"{""\u03C5"", ""&upsilon;""}, // greek small letter upsilon,U+03C5 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,179,"{""\u03C6"", ""&phi;""}, // greek small letter phi, U+03C6 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,180,"{""\u03C7"", ""&chi;""}, // greek small letter chi, U+03C7 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,181,"{""\u03C8"", ""&psi;""}, // greek small letter psi, U+03C8 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,182,"{""\u03C9"", ""&omega;""}, // greek small letter omega,U+03C9 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,183,"{""\u03D1"", ""&thetasym;""}, // greek small letter theta symbol,U+03D1 NEW -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,184,"{""\u03D2"", ""&upsih;""}, // greek upsilon with hook symbol,U+03D2 NEW -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,185,"{""\u03D6"", ""&piv;""}, // greek pi symbol, U+03D6 ISOgrk3 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,186,// <!-- General Punctuation -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,187,"{""\u2022"", ""&bull;""}, // bullet = black small circle,U+2022 ISOpub -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,188,"// <!-- bullet is NOT the same as bullet operator, U+2219 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,189,"{""\u2026"", ""&hellip;""}, // horizontal ellipsis = three dot leader,U+2026 ISOpub -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,190,"{""\u2032"", ""&prime;""}, // prime = minutes = feet, U+2032 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,191,"{""\u2033"", ""&Prime;""}, // double prime = seconds = inches,U+2033 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,192,"{""\u203E"", ""&oline;""}, // overline = spacing overscore,U+203E NEW -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,193,"{""\u2044"", ""&frasl;""}, // fraction slash, U+2044 NEW -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,194,// <!-- Letterlike Symbols -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,195,"{""\u2118"", ""&weierp;""}, // script capital P = power set= Weierstrass p, U+2118 ISOamso -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,196,"{""\u2111"", ""&image;""}, // blackletter capital I = imaginary part,U+2111 ISOamso -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,197,"{""\u211C"", ""&real;""}, // blackletter capital R = real part symbol,U+211C ISOamso -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,198,"{""\u2122"", ""&trade;""}, // trade mark sign, U+2122 ISOnum -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,199,"{""\u2135"", ""&alefsym;""}, // alef symbol = first transfinite cardinal,U+2135 NEW -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,200,"// <!-- alef symbol is NOT the same as hebrew letter alef,U+05D0 although the"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,201,// same glyph could be used to depict both characters -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,202,// <!-- Arrows -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,203,"{""\u2190"", ""&larr;""}, // leftwards arrow, U+2190 ISOnum -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,204,"{""\u2191"", ""&uarr;""}, // upwards arrow, U+2191 ISOnum-->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,205,"{""\u2192"", ""&rarr;""}, // rightwards arrow, U+2192 ISOnum -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,206,"{""\u2193"", ""&darr;""}, // downwards arrow, U+2193 ISOnum -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,207,"{""\u2194"", ""&harr;""}, // left right arrow, U+2194 ISOamsa -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,208,"{""\u21B5"", ""&crarr;""}, // downwards arrow with corner leftwards= carriage return, U+21B5 NEW -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,209,"{""\u21D0"", ""&lArr;""}, // leftwards double arrow, U+21D0 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,210,// <!-- ISO 10646 does not say that lArr is the same as the 'is implied by'
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,211,// arrow but also does not have any other character for that function.
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,212,// So ? lArr canbe used for 'is implied by' as ISOtech suggests -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,213,"{""\u21D1"", ""&uArr;""}, // upwards double arrow, U+21D1 ISOamsa -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,214,"{""\u21D2"", ""&rArr;""}, // rightwards double arrow,U+21D2 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,215,// <!-- ISO 10646 does not say this is the 'implies' character but does not
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,216,// have another character with this function so ?rArr can be used for
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,217,// 'implies' as ISOtech suggests -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,218,"{""\u21D3"", ""&dArr;""}, // downwards double arrow, U+21D3 ISOamsa -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,219,"{""\u21D4"", ""&hArr;""}, // left right double arrow,U+21D4 ISOamsa -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,220,// <!-- Mathematical Operators -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,221,"{""\u2200"", ""&forall;""}, // for all, U+2200 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,222,"{""\u2202"", ""&part;""}, // partial differential, U+2202 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,223,"{""\u2203"", ""&exist;""}, // there exists, U+2203 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,224,"{""\u2205"", ""&empty;""}, // empty set = null set = diameter,U+2205 ISOamso -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,225,"{""\u2207"", ""&nabla;""}, // nabla = backward difference,U+2207 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,226,"{""\u2208"", ""&isin;""}, // element of, U+2208 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,227,"{""\u2209"", ""&notin;""}, // not an element of, U+2209 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,228,"{""\u220B"", ""&ni;""}, // contains as member, U+220B ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,229,// <!-- should there be a more memorable name than 'ni'? -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,230,"{""\u220F"", ""&prod;""}, // n-ary product = product sign,U+220F ISOamsb -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,231,// <!-- prod is NOT the same character as U+03A0 'greek capital letter pi'
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,232,// though the same glyph might be used for both -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,233,"{""\u2211"", ""&sum;""}, // n-ary summation, U+2211 ISOamsb -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,234,// <!-- sum is NOT the same character as U+03A3 'greek capital letter sigma'
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,235,// though the same glyph might be used for both -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,236,"{""\u2122"", ""&minus;""}, // minus sign, U+2212 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,237,"{""\u2217"", ""&lowast;""}, // asterisk operator, U+2217 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,238,"{""\u221A"", ""&radic;""}, // square root = radical sign,U+221A ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,239,"{""\u221D"", ""&prop;""}, // proportional to, U+221D ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,240,"{""\u221E"", ""&infin;""}, // infinity, U+221E ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,241,"{""\u2220"", ""&ang;""}, // angle, U+2220 ISOamso -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,242,"{""\u2227"", ""&and;""}, // logical and = wedge, U+2227 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,243,"{""\u2228"", ""&or;""}, // logical or = vee, U+2228 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,244,"{""\u2229"", ""&cap;""}, // intersection = cap, U+2229 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,245,"{""\u222A"", ""&cup;""}, // union = cup, U+222A ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,246,"{""\u222B"", ""&int;""}, // integral, U+222B ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,247,"{""\u2234"", ""&there4;""}, // therefore, U+2234 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,248,"{""\u223C"", ""&sim;""}, // tilde operator = varies with = similar to,U+223C ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,249,"// <!-- tilde operator is NOT the same character as the tilde, U+007E,although"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,250,// the same glyph might be used to represent both -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,251,"{""\u2245"", ""&cong;""}, // approximately equal to, U+2245 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,252,"{""\u2248"", ""&asymp;""}, // almost equal to = asymptotic to,U+2248 ISOamsr -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,253,"{""\u2260"", ""&ne;""}, // not equal to, U+2260 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,254,"{""\u2261"", ""&equiv;""}, // identical to, U+2261 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,255,"{""\u2264"", ""&le;""}, // less-than or equal to, U+2264 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,256,"{""\u2265"", ""&ge;""}, // greater-than or equal to,U+2265 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,257,"{""\u2282"", ""&sub;""}, // subset of, U+2282 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,258,"{""\u2283"", ""&sup;""}, // superset of, U+2283 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,259,"// <!-- note that nsup, 'not a superset of, U+2283' is not covered by the"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,260,"// Symbol font encoding and is not included. Should it be, for symmetry?"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,261,"// It is in ISOamsn --> <!ENTITY nsub"", ""8836""},"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,262,"// not a subset of, U+2284 ISOamsn -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,263,"{""\u2286"", ""&sube;""}, // subset of or equal to, U+2286 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,264,"{""\u2287"", ""&supe;""}, // superset of or equal to,U+2287 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,265,"{""\u2295"", ""&oplus;""}, // circled plus = direct sum,U+2295 ISOamsb -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,266,"{""\u2297"", ""&otimes;""}, // circled times = vector product,U+2297 ISOamsb -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,267,"{""\u22A5"", ""&perp;""}, // up tack = orthogonal to = perpendicular,U+22A5 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,268,"{""\u22C5"", ""&sdot;""}, // dot operator, U+22C5 ISOamsb -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,269,// <!-- dot operator is NOT the same character as U+00B7 middle dot -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,270,// <!-- Miscellaneous Technical -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,271,"{""\u2308"", ""&lceil;""}, // left ceiling = apl upstile,U+2308 ISOamsc -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,272,"{""\u2309"", ""&rceil;""}, // right ceiling, U+2309 ISOamsc -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,273,"{""\u230A"", ""&lfloor;""}, // left floor = apl downstile,U+230A ISOamsc -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,274,"{""\u230B"", ""&rfloor;""}, // right floor, U+230B ISOamsc -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,275,"{""\u2329"", ""&lang;""}, // left-pointing angle bracket = bra,U+2329 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,276,// <!-- lang is NOT the same character as U+003C 'less than' or U+2039 'single left-pointing angle quotation
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,277,// mark' -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,278,"{""\u232A"", ""&rang;""}, // right-pointing angle bracket = ket,U+232A ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,279,// <!-- rang is NOT the same character as U+003E 'greater than' or U+203A
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,280,// 'single right-pointing angle quotation mark' -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,281,// <!-- Geometric Shapes -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,282,"{""\u25CA"", ""&loz;""}, // lozenge, U+25CA ISOpub -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,283,// <!-- Miscellaneous Symbols -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,284,"{""\u2660"", ""&spades;""}, // black spade suit, U+2660 ISOpub -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,285,// <!-- black here seems to mean filled as opposed to hollow -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,286,"{""\u2663"", ""&clubs;""}, // black club suit = shamrock,U+2663 ISOpub -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,287,"{""\u2665"", ""&hearts;""}, // black heart suit = valentine,U+2665 ISOpub -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,288,"{""\u2666"", ""&diams;""}, // black diamond suit, U+2666 ISOpub -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,290,// <!-- Latin Extended-A -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,291,"{""\u0152"", ""&OElig;""}, // -- latin capital ligature OE,U+0152 ISOlat2 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,292,"{""\u0153"", ""&oelig;""}, // -- latin small ligature oe, U+0153 ISOlat2 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,293,"// <!-- ligature is a misnomer, this is a separate character in some languages -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,294,"{""\u0160"", ""&Scaron;""}, // -- latin capital letter S with caron,U+0160 ISOlat2 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,295,"{""\u0161"", ""&scaron;""}, // -- latin small letter s with caron,U+0161 ISOlat2 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,296,"{""\u0178"", ""&Yuml;""}, // -- latin capital letter Y with diaeresis,U+0178 ISOlat2 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,297,// <!-- Spacing Modifier Letters -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,298,"{""\u02C6"", ""&circ;""}, // -- modifier letter circumflex accent,U+02C6 ISOpub -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,299,"{""\u02DC"", ""&tilde;""}, // small tilde, U+02DC ISOdia -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,300,// <!-- General Punctuation -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,301,"{""\u2002"", ""&ensp;""}, // en space, U+2002 ISOpub -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,302,"{""\u2003"", ""&emsp;""}, // em space, U+2003 ISOpub -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,303,"{""\u2009"", ""&thinsp;""}, // thin space, U+2009 ISOpub -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,304,"{""\u200C"", ""&zwnj;""}, // zero width non-joiner,U+200C NEW RFC 2070 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,305,"{""\u200D"", ""&zwj;""}, // zero width joiner, U+200D NEW RFC 2070 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,306,"{""\u200E"", ""&lrm;""}, // left-to-right mark, U+200E NEW RFC 2070 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,307,"{""\u200F"", ""&rlm;""}, // right-to-left mark, U+200F NEW RFC 2070 -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,308,"{""\u2013"", ""&ndash;""}, // en dash, U+2013 ISOpub -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,309,"{""\u2014"", ""&mdash;""}, // em dash, U+2014 ISOpub -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,310,"{""\u2018"", ""&lsquo;""}, // left single quotation mark,U+2018 ISOnum -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,311,"{""\u2019"", ""&rsquo;""}, // right single quotation mark,U+2019 ISOnum -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,312,"{""\u201A"", ""&sbquo;""}, // single low-9 quotation mark, U+201A NEW -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,313,"{""\u201C"", ""&ldquo;""}, // left double quotation mark,U+201C ISOnum -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,314,"{""\u201D"", ""&rdquo;""}, // right double quotation mark,U+201D ISOnum -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,315,"{""\u201E"", ""&bdquo;""}, // double low-9 quotation mark, U+201E NEW -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,316,"{""\u2020"", ""&dagger;""}, // dagger, U+2020 ISOpub -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,317,"{""\u2021"", ""&Dagger;""}, // double dagger, U+2021 ISOpub -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,318,"{""\u2030"", ""&permil;""}, // per mille sign, U+2030 ISOtech -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,319,"{""\u2039"", ""&lsaquo;""}, // single left-pointing angle quotation mark,U+2039 ISO proposed -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,320,// <!-- lsaquo is proposed but not yet ISO standardized -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,321,"{""\u203A"", ""&rsaquo;""}, // single right-pointing angle quotation mark,U+203A ISO proposed -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,322,// <!-- rsaquo is proposed but not yet ISO standardized -->
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,323,"{""\u20AC"", ""&euro;""}, // -- euro sign, U+20AC NEW -->"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,326,static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,328,static final String[][] BASIC_ESCAPE = {
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,329,"{""\"""", ""&quot;""}, // "" - double-quote"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,330,"{""&"", ""&amp;""},   // & - ampersand"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,331,"{""<"", ""&lt;""},    // < - less-than"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,332,"{"">"", ""&gt;""},    // > - greater-than"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,335,static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,337,static final String[][] APOS_ESCAPE = {
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,338,"{""'"", ""&apos;""}, // XML apostrophe"
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,341,static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,344,* Used to invert an escape array into an unescape array
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,345,* @param array String[][] to be inverted
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,346,* @return String[][] inverted array
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,348,static String[][] invert(String[][] array) {
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,349,String[][] newarray = new String[array.length][2];
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,350,for(int i = 0; i<array.length; i++) {
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,351,newarray[i][0] = array[i][1];
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,352,newarray[i][1] = array[i][0];
True,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,src/java/org/apache/commons/lang/text/translate/EntityArrays.java,354,return newarray;
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,17,package org.apache.commons.lang.text.translate;
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,19,import java.io.IOException;
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,20,import java.io.Writer;
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,23,"* Escapes ASCII under 32 to Unicode, except for the following"
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,24,"* special values, '\b \n \t \f \r', which are escaped to their"
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,25,* Java types.
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,26,* @since 3.0
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,28,// TODO: Is this not the combination of a LookupTranslator for the 5
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,29,"// TODO: special values, followed by a UnicodeEscaper?"
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,30,// TODO: It means passing a numerical range to the UnicodeEscaper
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,31,// TOOD: to make it only hit < 32.
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,32,public class EscapeLowAsciiAsUnicode extends UnicodeEscaper {
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,35,* {@inheritDoc}
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,37,"public boolean translate(int ch, Writer out) throws IOException {"
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,38,if (ch < 32) {
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,39,switch (ch) {
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,40,case '\b' :
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,41,out.write('\\');
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,42,out.write('b');
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,43,break;
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,44,case '\n' :
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,45,out.write('\\');
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,46,out.write('n');
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,47,break;
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,48,case '\t' :
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,49,out.write('\\');
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,50,out.write('t');
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,51,break;
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,52,case '\f' :
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,53,out.write('\\');
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,54,out.write('f');
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,55,break;
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,56,case '\r' :
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,57,out.write('\\');
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,58,out.write('r');
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,59,break;
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,60,default :
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,61,"super.translate(ch, out);"
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,62,break;
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,64,return true;
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,65,} else {
True,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeLowAsciiAsUnicode.java,66,return false;
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,17,package org.apache.commons.lang.text.translate;
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,19,import java.io.IOException;
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,20,import java.io.Writer;
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,23,* Translates codepoints greater than ASCII 127 to their numerical
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,24,* XML entity.
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,25,* @since 3.0
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,27,public class EscapeNonAsciiAsNumericEntity extends CodePointTranslator {
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,30,* {@inheritDoc}
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,32,"public boolean translate(int codepoint, Writer out) throws IOException {"
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,33,// TODO: if (codepoint > 0xffff) {
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,34,if (codepoint > 0x7f) {
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,35,"out.write(""&#"");"
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,36,"out.write(Integer.toString(codepoint, 10));"
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,37,out.write(';');
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,38,return true;
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,39,} else {
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsNumericEntity.java,40,return false;
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,17,package org.apache.commons.lang.text.translate;
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,19,import java.io.IOException;
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,20,import java.io.Writer;
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,23,* Translates codepoints greater than ASCII 127 to the unicode.
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,24,* @since 3.0
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,26,public class EscapeNonAsciiAsUnicode extends UnicodeEscaper {
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,29,* {@inheritDoc}
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,31,"public boolean translate(int codepoint, Writer out) throws IOException {"
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,32,// if (codepoint > 0xffff) {
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,33,// TODO: Figure out what to do. Output as two unicodes?
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,34,//       Does this make this a Java-specific output class?
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,36,if (codepoint > 0x7f) {
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,37,"super.translate(codepoint, out);"
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,38,return true;
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,39,} else {
True,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,src/java/org/apache/commons/lang/text/translate/EscapeNonAsciiAsUnicode.java,40,return false;
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,17,package org.apache.commons.lang.text.translate;
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,19,import java.io.IOException;
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,20,import java.io.Writer;
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,22,// CsvEscaper
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,23,import org.apache.commons.lang.StringUtils;
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,24,import org.apache.commons.lang.CharUtils;
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,27,* Helper class defining various standard language escape functions.
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,28,* @since 3.0
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,30,public class EscapeUtils {
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,32,public static final CharSequenceTranslator ESCAPE_JAVA =
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,33,new AggregateTranslator(
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,34,new LookupTranslator(
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,35,new String[][] {
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,39,"new EscapeLowAsciiAsUnicode(),"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,40,new EscapeNonAsciiAsUnicode()
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,43,public static final CharSequenceTranslator ESCAPE_ECMASCRIPT =
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,44,new AggregateTranslator(
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,45,new LookupTranslator(
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,46,new String[][] {
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,52,"new EscapeLowAsciiAsUnicode(),"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,53,new EscapeNonAsciiAsUnicode()
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,56,public static final CharSequenceTranslator ESCAPE_XML =
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,57,new AggregateTranslator(
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,58,"new LookupTranslator(EntityArrays.BASIC_ESCAPE),"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,59,"new LookupTranslator(EntityArrays.APOS_ESCAPE),"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,60,new EscapeNonAsciiAsNumericEntity()
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,63,public static final CharSequenceTranslator ESCAPE_HTML3 =
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,64,new AggregateTranslator(
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,65,"new LookupTranslator(EntityArrays.BASIC_ESCAPE),"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,66,"new LookupTranslator(EntityArrays.ISO8859_1_ESCAPE),"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,67,new EscapeNonAsciiAsNumericEntity()
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,70,public static final CharSequenceTranslator ESCAPE_HTML4 =
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,71,new AggregateTranslator(
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,72,"new LookupTranslator(EntityArrays.BASIC_ESCAPE),"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,73,"new LookupTranslator(EntityArrays.ISO8859_1_ESCAPE),"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,74,"new LookupTranslator(EntityArrays.HTML40_EXTENDED_ESCAPE),"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,75,new EscapeNonAsciiAsNumericEntity()
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,78,public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,80,// TODO: Create a parent class - 'SinglePassTranslator' ?
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,81,"// TODO: It would handle the index checking, and length returning, and"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,82,// TODO: could also have an optimization check method.
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,83,static class CsvEscaper extends CharSequenceTranslator {
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,85,"private static final char CSV_DELIMITER = ',';"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,86,"private static final char CSV_QUOTE = '""';"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,87,private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,88,"private static final char[] CSV_SEARCH_CHARS = new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,90,// TODO: Replace with a RegexTranslator. That should consume the number of characters the regex uses up?
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,91,"public int translate(CharSequence input, int index, Writer out) throws IOException {"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,93,if(index != 0) {
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,94,"throw new IllegalStateException(""CsvEscaper should never reach the [1] index"");"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,97,"if (StringUtils.containsNone(input.toString(), CSV_SEARCH_CHARS)) {"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,98,out.write(input.toString());
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,99,} else {
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,100,out.write(CSV_QUOTE);
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,101,"out.write(StringUtils.replace(input.toString(), CSV_QUOTE_STR, CSV_QUOTE_STR + CSV_QUOTE_STR));"
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,102,out.write(CSV_QUOTE);
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,104,return input.length();
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,17,package org.apache.commons.lang.text.translate;
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,19,import java.io.IOException;
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,20,import java.io.Writer;
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,23,* Translates a value using a lookup table.
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,24,* @since 3.0
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,26,public class LookupTranslator extends CharSequenceTranslator {
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,28,protected CharSequence[][] lookup;
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,31,* Define the lookup table to be used in translation
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,33,* @param CharSequence[][] Lookup table of size [*][2]
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,35,public LookupTranslator(CharSequence[][] lookup) {
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,36,this.lookup = lookup;
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,40,* {@inheritDoc}
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,42,"public int translate(CharSequence input, int index, Writer out) throws IOException {"
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,43,"CharSequence subsequence = input.subSequence(index, input.length());"
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,44,for(CharSequence[] seq : lookup) {
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,45,if( subsequence.toString().startsWith(seq[0].toString()) ) {
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,46,out.write(seq[1].toString());
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,47,return seq[0].length();
True,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,src/java/org/apache/commons/lang/text/translate/LookupTranslator.java,50,return 0;
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,17,package org.apache.commons.lang.text.translate;
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,19,import java.io.IOException;
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,20,import java.io.Writer;
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,23,* Translate XML numeric entities of the form &#[xX]?\d+; to
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,24,* the specific codepoint.
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,25,* @since 3.0
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,27,public class NumericEntityUnescaper extends CharSequenceTranslator {
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,30,* {@inheritDoc}
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,32,"public int translate(CharSequence input, int index, Writer out) throws IOException {"
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,33,// TODO: Protect from ArrayIndexOutOfBounds
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,34,if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,35,int start = index + 2;
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,36,boolean isHex = false;
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,38,char firstChar = input.charAt(start);
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,39,if(firstChar == 'x' || firstChar == 'X') {
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,40,start++;
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,41,isHex = true;
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,44,int end = start;
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,45,while(input.charAt(end) != ';') {
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,46,end++;
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,49,int entityValue;
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,50,try {
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,51,if(isHex) {
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,52,"entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);"
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,53,} else {
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,54,"entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);"
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,56,} catch(NumberFormatException nfe) {
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,57,return 0;
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,60,// TODO: if(entityValue > 0xFFFF) {
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,61,out.write(entityValue);
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,62,return 2 + (end - start) + (isHex ? 1 : 0) + 1;
True,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java,64,return 0;
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,17,package org.apache.commons.lang.text.translate;
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,19,import java.io.IOException;
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,20,import java.io.Writer;
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,22,// CsvUnescaper
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,23,import org.apache.commons.lang.StringUtils;
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,24,import org.apache.commons.lang.CharUtils;
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,27,* Helper class defining various standard language unescape functions.
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,28,* @since 3.0
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,30,public class UnescapeUtils {
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,32,"// throw ""illegal character: \92"" as an Exception if a \ on the end of the Java (as per the compiler)?"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,33,public static final CharSequenceTranslator UNESCAPE_JAVA =
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,34,new AggregateTranslator(
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,35,"new UnicodeUnescaper(),"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,36,new LookupTranslator(
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,37,new String[][] {
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,41,"{""\\r"", ""\r""},"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,42,"{""\\f"", ""\f""},"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,43,"{""\\t"", ""\t""},"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,44,"{""\\n"", ""\n""},"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,45,"{""\\b"", ""\b""},"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,50,public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,52,public static final CharSequenceTranslator UNESCAPE_HTML4 =
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,53,new AggregateTranslator(
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,54,"new LookupTranslator(EntityArrays.BASIC_UNESCAPE),"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,55,"new LookupTranslator(EntityArrays.ISO8859_1_UNESCAPE),"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,56,"new LookupTranslator(EntityArrays.HTML40_EXTENDED_UNESCAPE),"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,57,new NumericEntityUnescaper()
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,60,public static final CharSequenceTranslator UNESCAPE_XML =
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,61,new AggregateTranslator(
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,62,"new LookupTranslator(EntityArrays.BASIC_UNESCAPE),"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,63,"new LookupTranslator(EntityArrays.APOS_UNESCAPE),"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,64,new NumericEntityUnescaper()
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,67,public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,69,static class CsvUnescaper extends CharSequenceTranslator {
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,71,"private static final char CSV_DELIMITER = ',';"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,72,"private static final char CSV_QUOTE = '""';"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,73,private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,74,"private static final char[] CSV_SEARCH_CHARS = new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,76,// TODO: Replace with a RegexTranslator. That should consume the number of characters the regex uses up?
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,77,"public int translate(CharSequence input, int index, Writer out) throws IOException {"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,79,if(index != 0) {
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,80,"throw new IllegalStateException(""CsvUnescaper should never reach the [1] index"");"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,83,if ( input.charAt(0) != CSV_QUOTE || input.charAt(input.length() - 1) != CSV_QUOTE ) {
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,84,out.write(input.toString());
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,85,return input.length();
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,88,// strip quotes
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,89,"String quoteless = input.subSequence(1, input.length() - 1).toString();"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,91,"if ( StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS) ) {"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,92,"// deal with escaped quotes; ie) """""
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,93,"out.write(StringUtils.replace(quoteless, CSV_QUOTE_STR + CSV_QUOTE_STR, CSV_QUOTE_STR));"
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,94,} else {
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,95,out.write(input.toString());
True,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java,97,return input.length();
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,17,package org.apache.commons.lang.text.translate;
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,19,import java.io.IOException;
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,20,import java.io.Writer;
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,23,* Translates codepoints to their unicode escape value.
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,24,* @since 3.0
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,26,public class UnicodeEscaper extends CodePointTranslator {
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,29,* {@inheritDoc}
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,31,"public boolean translate(int codepoint, Writer out) throws IOException {"
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,32,if (codepoint > 0xffff) {
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,33,// TODO: Figure out what to do. Output as two unicodes?
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,34,//       Does this make this a Java-specific output class?
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,35,"out.write(""\\u"" + hex(codepoint));"
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,36,} else if (codepoint > 0xfff) {
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,37,"out.write(""\\u"" + hex(codepoint));"
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,38,} else if (codepoint > 0xff) {
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,39,"out.write(""\\u0"" + hex(codepoint));"
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,40,} else if (codepoint > 0xf) {
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,41,"out.write(""\\u00"" + hex(codepoint));"
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,42,} else {
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,43,"out.write(""\\u000"" + hex(codepoint));"
True,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java,45,return true;
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,17,package org.apache.commons.lang.text.translate;
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,19,import java.io.IOException;
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,20,import java.io.Writer;
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,22,import org.apache.commons.lang.UnhandledException;
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,25,* Translates escaped unicode values of the form \\u+\d\d\d\d back to
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,26,* unicode.
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,27,* @since 3.0
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,29,public class UnicodeUnescaper extends CharSequenceTranslator {
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,32,* {@inheritDoc}
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,34,"public int translate(CharSequence input, int index, Writer out) throws IOException {"
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,35,if(input.charAt(index) == '\\') {
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,36,if( (index + 1 < input.length()) && input.charAt(index + 1) == 'u') {
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,37,// consume optional additional 'u' chars
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,38,int i=2;
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,39,while( (index + i < input.length()) && input.charAt(index + i) == 'u') {
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,40,i++;
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,43,if( (index + i + 4 <= input.length()) ) {
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,44,// Get 4 hex digits
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,45,"CharSequence unicode = input.subSequence(index + i, index + i + 4);"
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,47,try {
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,48,"int value = Integer.parseInt(unicode.toString(), 16);"
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,49,out.write((char) value);
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,50,} catch (NumberFormatException nfe) {
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,51,"throw new UnhandledException(""Unable to parse unicode value: "" + unicode, nfe);"
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,53,return i + 4;
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,54,} else {
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,55,"throw new IllegalArgumentException(""Less than 4 hex digits in unicode value: '"" +"
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,56,"input.subSequence(index, input.length()) +"
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,57,"""' due to end of CharSequence"");"
True,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java,61,return 0;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,17,ackage org.apache.commons.lang;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,19,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,20,mport junit.framework.TestCase;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,21,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,22,mport junit.textui.TestRunner;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,24,ublic class EntitiesPerformanceTest extends TestCase {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,25,rivate int COUNT = 10000;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,26,rivate int STRING_LENGTH = 1000;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,28,rivate static String stringWithUnicode;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,29,rivate static String stringWithEntities;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,30,rivate static Entities treeEntities;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,31,rivate static Entities hashEntities;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,32,rivate static Entities arrayEntities;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,33,rivate static Entities binaryEntities;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,34,rivate static Entities primitiveEntities;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,35,rivate static Entities lookupEntities;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,37,ublic EntitiesPerformanceTest(String name) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,38,uper(name);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,41,ublic static void main(String[] args) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,42,estRunner.run(suite());
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,45,ublic static Test suite() {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,46,estSuite suite = new TestSuite(EntitiesPerformanceTest.class);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,47,eturn suite;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,50,Override
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,51,ublic void setUp() {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,52,f (stringWithUnicode == null) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,53,tringBuffer buf = new StringBuffer(STRING_LENGTH);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,54,or (int i = 0; i < STRING_LENGTH / 5; ++i) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,55,"uf.append(""xxxx"");"
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,56,har ch = isovalue(i);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,57,uf.append(ch);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,59,tringWithUnicode = buf.toString();
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,60,tringWithEntities = Entities.HTML40.unescape(stringWithUnicode);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,64,rivate char html40value(int i) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,65,"tring entityValue = Entities.getHTML40(i % Entities.HTML40_ARRAY_LENGTH, 1);"
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,66,har ch = (char) Integer.parseInt(entityValue);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,67,eturn ch;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,70,rivate char isovalue(int i) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,71,"tring entityValue = Entities.getISO8859_1(i % Entities.ISO8859_1_ARRAY_LENGTH, 1);"
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,72,har ch = (char) Integer.parseInt(entityValue);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,73,eturn ch;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,76,ublic void testBuildHash() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,77,or (int i = 0; i < COUNT; ++i) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,78,ashEntities = build(new Entities.HashEntityMap());
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,83,ublic void testBuildTree() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,84,or (int i = 0; i < COUNT; ++i) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,85,reeEntities = build(new Entities.TreeEntityMap());
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,89,ublic void testBuildArray() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,90,or (int i = 0; i < COUNT; ++i) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,91,rrayEntities = build(new Entities.ArrayEntityMap());
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,95,ublic void testBuildBinary() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,96,or (int i = 0; i < COUNT; ++i) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,97,inaryEntities = build(new Entities.BinaryEntityMap());
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,101,ublic void testBuildPrimitive() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,102,or (int i = 0; i < COUNT; ++i) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,103,uildPrimitive();
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,107,rivate void buildPrimitive()
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,109,rimitiveEntities = build(new Entities.PrimitiveEntityMap());
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,112,ublic void testBuildLookup() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,113,or (int i = 0; i < COUNT; ++i) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,114,uildLookup();
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,118,rivate void buildLookup()
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,120,ookupEntities = build(new Entities.LookupEntityMap());
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,123,rivate Entities build(Entities.EntityMap intMap) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,124,ntities entities;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,125,ntities = new Entities();
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,126,ntities.map = intMap;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,127,ntities.fillWithHtml40Entities(entities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,128,eturn entities;
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,131,ublic void testLookupHash() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,132,ookup(hashEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,135,ublic void testLookupTree() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,136,ookup(treeEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,139,ublic void testLookupArray() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,140,ookup(arrayEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,143,ublic void testLookupBinary() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,144,ookup(binaryEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,147,ublic void testLookupPrimitive() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,148,f (primitiveEntities == null) buildPrimitive();
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,149,ookup(primitiveEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,152,ublic void testLookupLookup() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,153,f (lookupEntities == null) buildLookup();
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,154,ookup(lookupEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,157,ublic void testEscapeHash() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,158,scapeIt(hashEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,161,ublic void testEscapeTree() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,162,scapeIt(treeEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,165,ublic void testEscapeArray() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,166,scapeIt(arrayEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,169,ublic void testEscapeBinary() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,170,scapeIt(binaryEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,173,ublic void testEscapePrimitive() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,174,scapeIt(primitiveEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,177,ublic void testEscapeLookup() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,178,scapeIt(lookupEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,181,ublic void testUnescapeHash() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,182,nescapeIt(hashEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,185,ublic void testUnescapeTree() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,186,nescapeIt(treeEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,189,ublic void testUnescapeArray() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,190,nescapeIt(arrayEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,193,ublic void testUnescapeBinary() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,194,nescapeIt(binaryEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,197,rivate void lookup(Entities entities) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,198,or (int i = 0; i < COUNT * 1000; ++i) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,199,ntities.entityName(isovalue(i));
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,203,rivate void escapeIt(Entities entities) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,204,or (int i = 0; i < COUNT; ++i) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,205,tring escaped = entities.escape(stringWithUnicode);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,206,"ssertEquals(""xxxx&nbsp;"", escaped.substring(0, 10));"
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,210,rivate void unescapeIt(Entities entities) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,211,or (int i = 0; i < COUNT; ++i) {
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,212,tring unescaped = entities.unescape(stringWithEntities);
False,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,src/test/org/apache/commons/lang/EntitiesPerformanceTest.java,213,"ssertEquals(""xxxx\u00A0"", unescaped.substring(0, 5));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,17,ackage org.apache.commons.lang;
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,19,mport java.io.StringWriter;
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,21,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,22,mport junit.framework.TestCase;
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,23,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,24,mport junit.textui.TestRunner;
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,27, Unit tests for {@link StringEscapeUtils}.
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,29," @author <a href=""mailto:alex@purpletech.com"">Alexander Day Chaffee</a>"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,30," @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,31, @version $Id$
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,33,ublic class EntitiesTest extends TestCase
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,35,ublic EntitiesTest(String name) {
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,36,uper(name);
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,39,ublic static void main(String[] args) {
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,40,estRunner.run(suite());
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,43,ublic static Test suite() {
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,44,estSuite suite = new TestSuite(EntitiesTest.class);
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,45,"uite.setName(""EntitiesTest Tests"");"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,46,eturn suite;
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,49,ntities entities;
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,51,Override
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,52,ublic void setUp()
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,54,ntities = new Entities();
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,55,"ntities.addEntity(""foo"", 161);"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,56,"ntities.addEntity(""bar"", 162);"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,59,ublic void testEscapeNamedEntity() throws Exception
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,61,"oTestEscapeNamedEntity(""&foo;"", ""\u00A1"");"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,62,"oTestEscapeNamedEntity(""x&foo;"", ""x\u00A1"");"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,63,"oTestEscapeNamedEntity(""&foo;x"", ""\u00A1x"");"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,64,"oTestEscapeNamedEntity(""x&foo;x"", ""x\u00A1x"");"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,65,"oTestEscapeNamedEntity(""&foo;&bar;"", ""\u00A1\u00A2"");"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,68,"rivate void doTestEscapeNamedEntity(final String expected, final String entity) throws Exception"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,70,"ssertEquals(expected, entities.escape(entity));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,71,tringWriter writer = new StringWriter();
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,72,"ntities.escape(writer, entity);"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,73,"ssertEquals(expected, writer.toString());"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,76,ublic void testUnescapeNamedEntity() throws Exception
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,78,"ssertEquals(""\u00A1"", entities.unescape(""&foo;""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,79,"ssertEquals(""x\u00A1"", entities.unescape(""x&foo;""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,80,"ssertEquals(""\u00A1x"", entities.unescape(""&foo;x""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,81,"ssertEquals(""x\u00A1x"", entities.unescape(""x&foo;x""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,82,"ssertEquals(""\u00A1\u00A2"", entities.unescape(""&foo;&bar;""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,85,ublic void testUnescapeUnknownEntity() throws Exception
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,87,"oTestUnescapeEntity(""&zzzz;"", ""&zzzz;"");"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,90,ublic void testUnescapeMiscellaneous() throws Exception
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,92,"oTestUnescapeEntity(""&hello"", ""&hello"");"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,93,"oTestUnescapeEntity(""&;"", ""&;"");"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,94,"oTestUnescapeEntity(""&#;"", ""&#;"");"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,95,"oTestUnescapeEntity(""&#invalid;"", ""&#invalid;"");"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,96,"oTestUnescapeEntity(""A"", ""&#X41;"");"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,99,"rivate void doTestUnescapeEntity(final String expected, final String entity) throws Exception"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,101,"ssertEquals(expected, entities.unescape(entity));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,102,tringWriter writer = new StringWriter();
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,103,"ntities.unescape(writer, entity);"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,104,"ssertEquals(expected, writer.toString());"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,107,ublic void testAddEntitiesArray() throws Exception
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,109,"tring[][] array = {{""foo"", ""100""}, {""bar"", ""101""}};"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,110,ntities e = new Entities();
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,111,.addEntities(array);
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,112,"ssertEquals(""foo"", e.entityName(100));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,113,"ssertEquals(""bar"", e.entityName(101));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,114,"ssertEquals(100, e.entityValue(""foo""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,115,"ssertEquals(101, e.entityValue(""bar""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,118,ublic void testEntitiesXmlObject() throws Exception
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,120,"ssertEquals(""gt"", Entities.XML.entityName('>'));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,121,"ssertEquals('>', Entities.XML.entityValue(""gt""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,122,"ssertEquals(-1, Entities.XML.entityValue(""xyzzy""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,125,ublic void testArrayIntMap() throws Exception
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,127,ntities.ArrayEntityMap map = new Entities.ArrayEntityMap(2);
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,128,heckSomeEntityMap(map);
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,129,ntities.ArrayEntityMap map1 = new Entities.ArrayEntityMap();
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,130,heckSomeEntityMap(map1);
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,131,"ssertEquals(-1, map.value(""null""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,132,ssertNull(map.name(-1));
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,135,ublic void testTreeIntMap() throws Exception
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,137,ntities.EntityMap map = new Entities.TreeEntityMap();
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,138,heckSomeEntityMap(map);
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,141,ublic void testHashIntMap() throws Exception
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,143,ntities.EntityMap map = new Entities.HashEntityMap();
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,144,heckSomeEntityMap(map);
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,145,"ssertEquals(-1, map.value(""noname""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,148,ublic void testBinaryIntMap() throws Exception
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,150,ntities.BinaryEntityMap map = new Entities.BinaryEntityMap(2);
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,151,heckSomeEntityMap(map);
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,152,ntities.BinaryEntityMap map1 = new Entities.BinaryEntityMap();
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,153,heckSomeEntityMap(map1);
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,155,/ value cannot be added twice
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,156,"ap1.add(""baz4a"", 4);"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,157,"ap1.add(""baz4b"", 4);"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,158,"ssertEquals(-1, map1.value(""baz4b""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,159,"ssertEquals(""baz4a"", map1.name(4));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,160,ssertNull(map1.name(99));
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,162,ntities.BinaryEntityMap map2 = new Entities.BinaryEntityMap();
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,163,"ap2.add(""val1"", 1);"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,164,"ap2.add(""val2"", 2);"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,165,"ap2.add(""val3"", 3);"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,166,"ap2.add(""val4"", 4);"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,167,"ap2.add(""val5"", 5);"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,168,"ssertEquals(""val5"", map2.name(5));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,169,"ssertEquals(""val4"", map2.name(4));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,170,"ssertEquals(""val3"", map2.name(3));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,171,"ssertEquals(""val2"", map2.name(2));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,172,"ssertEquals(""val1"", map2.name(1));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,175,ublic void testPrimitiveIntMap() throws Exception
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,177,ntities.PrimitiveEntityMap map = new Entities.PrimitiveEntityMap();
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,178,heckSomeEntityMap(map);
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,181,rivate void checkSomeEntityMap(Entities.EntityMap map) {
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,182,"ap.add(""foo"", 1);"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,183,"ssertEquals(1, map.value(""foo""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,184,"ssertEquals(""foo"", map.name(1));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,185,"ap.add(""bar"", 2);"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,186,"ap.add(""baz"", 3);"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,187,"ssertEquals(3, map.value(""baz""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,188,"ssertEquals(""baz"", map.name(3));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,191,ublic void testHtml40Nbsp() throws Exception
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,193,"ssertEquals(""&nbsp;"", Entities.HTML40.escape(""\u00A0""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,194,ntities e = new Entities();
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,195,.map = new Entities.PrimitiveEntityMap();
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,196,ntities.fillWithHtml40Entities(e);
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,197,"ssertEquals(""&nbsp;"", e.escape(""\u00A0""));"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,200,ublic void testNumberOverflow() throws Exception {
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,201,"oTestUnescapeEntity(""&#12345678;"", ""&#12345678;"");"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,202,"oTestUnescapeEntity(""x&#12345678;y"", ""x&#12345678;y"");"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,203,"oTestUnescapeEntity(""&#x12345678;"", ""&#x12345678;"");"
False,src/test/org/apache/commons/lang/EntitiesTest.java,src/test/org/apache/commons/lang/EntitiesTest.java,204,"oTestUnescapeEntity(""x&#x12345678;y"", ""x&#x12345678;y"");"
False,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,65,uite.addTest(EntitiesTest.suite());
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,157,"ssertUnescapeJava(""\\"", ""\\"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,157,"assertUnescapeJava("""", ""\\"");"
