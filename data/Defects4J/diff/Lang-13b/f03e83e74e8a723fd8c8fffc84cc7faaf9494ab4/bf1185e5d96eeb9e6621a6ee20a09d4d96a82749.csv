is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,4,* Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,5,* reserved.
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,9,* are met:
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,17,*    distribution.
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,54,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,56,import java.util.StringTokenizer;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,57,import java.util.Iterator;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,58,import java.util.Map;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,59,import java.util.HashMap;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,60,import java.io.IOException;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,61,import java.io.Writer;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,62,import java.io.StringWriter;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,64,import org.apache.commons.lang.exception.NestableRuntimeException;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,67,* <p>Common <code>String</code> escaping routines.</p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,69,* <p>Originally from
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,70,"* <a href=""http://jakarta.apache.org/turbine/"">Turbine</a> and the"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,71,* GenerationJavaCore library and from
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,72,"* <a href=""http://www.purpletech.com/code/"">Purple Technology</a>"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,73,* </p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,75,* @author original author of escape and unescape=?
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,76,"* @author <a href=""mailto:alex@purpletech.com"">Alexander Day Chaffee</a>"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,77,"* @author <a href=""mailto:cybertiger@cyberiantiger.org"">cybertiger@cyberiantiger.org</a>"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,78,* @author Helge Tesgaard
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,79,"* @author <a href=""sean@boohai.com"">Sean Brown</a>"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,80,* @since 2.0
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,81,"* @version $Id: StringEscapeUtils.java,v 1.1 2003/03/31 03:53:52 alex Exp $"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,83,public class StringEscapeUtils {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,86,* <p><code>StringEscapeUtils<code> instances should NOT be constructed in
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,87,"* standard programming. Instead, the class should be used as"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,88,"* <code>StringEscapeUtils.escapeJava(""foo"");</code>.</p>"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,90,* <p>This constructor is public to permit tools that require a JavaBean
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,91,* instance to operate.</p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,93,public StringEscapeUtils() {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,96,// Java and JavaScript
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,99,* <p>Escapes any values it finds into their Java String form.
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,100,"* Deals correctly with quotes and control-chars (tab, backslash, cr, ff, etc.) </p>"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,102,* <p>So a tab becomes the characters <code>'\\'</code> and
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,103,* <code>'t'</code>.</p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,105,* <p>The only difference between Java strings and JavaScript strings
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,106,"* is that in JavaScript, a single quote must be escaped.</p>"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,108,* <p>Example:
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,109,* <pre>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,110,"* input string: He didn't say, ""Stop!"""
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,111,"* output string: He didn't say, \""Stop!\"""
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,112,* </pre>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,113,* </p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,115,* @param str String to escape values in
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,116,* @return String with escaped values
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,117,* @throws NullPointerException if str is <code>null</code>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,119,public static String escapeJava(String str) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,120,"return escapeJavaStyleString(str, false);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,124,* @see #escapeJava(java.lang.String)
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,125,* @param out Writer to write escaped string into
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,126,* @param str String to escape values in
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,127,* @throws NullPointerException if str is <code>null</code>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,128,* @throws IOException if error occurs on undelying Writer
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,130,"public static void escapeJava(Writer out, String str) throws IOException {"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,131,"escapeJavaStyleString(out, str, false);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,135,* <p>Escapes any values it finds into their JavaScript String form.
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,136,"* Deals correctly with quotes and control-chars (tab, backslash, cr, ff, etc.) </p>"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,138,* <p>So a tab becomes the characters <code>'\\'</code> and
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,139,* <code>'t'</code>.</p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,141,* <p>The only difference between Java strings and JavaScript strings
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,142,"* is that in JavaScript, a single quote must be escaped.</p>"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,144,* <p>Example:
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,145,* <pre>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,146,"* input string: He didn't say, ""Stop!"""
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,147,"* output string: He didn\'t say, \""Stop!\"""
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,148,* </pre>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,149,* </p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,151,* @param str String to escape values in
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,152,* @return String with escaped values
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,153,* @throws NullPointerException if str is <code>null</code>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,155,public static String escapeJavaScript(String str) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,156,"return escapeJavaStyleString(str, true);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,160,* @see #escapeJavaScript(java.lang.String)
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,161,* @param out Writer to write escaped string into
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,162,* @param str String to escape values in
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,163,* @throws NullPointerException if str is <code>null</code>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,164,* @throws IOException if error occurs on undelying Writer
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,166,"public static void escapeJavaScript(Writer out, String str) throws IOException {"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,167,"escapeJavaStyleString(out, str, true);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,170,"private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,171,try {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,172,StringPrintWriter writer = new StringPrintWriter(str.length() * 2);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,173,"escapeJavaStyleString(writer, str, escapeSingleQuotes);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,174,return writer.getString();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,176,catch (IOException ioe) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,177,// this should never ever happen while writing to a StringWriter
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,178,ioe.printStackTrace();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,179,return null;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,183,"private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,184,int sz;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,185,sz = str.length();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,186,for (int i = 0; i < sz; i++) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,187,char ch = str.charAt(i);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,189,// handle unicode
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,190,if (ch > 0xfff) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,191,"out.write(""\\u"" + Integer.toHexString(ch));"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,192,} else if (ch > 0xff) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,193,"out.write(""\\u0"" + Integer.toHexString(ch));"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,194,} else if (ch > 0x7f) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,195,"out.write(""\\u00"" + Integer.toHexString(ch));"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,196,} else if (ch < 32) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,197,switch (ch) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,198,case '\b' :
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,199,out.write('\\');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,200,out.write('b');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,201,break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,202,case '\n' :
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,203,out.write('\\');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,204,out.write('n');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,205,break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,206,case '\t' :
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,207,out.write('\\');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,208,out.write('t');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,209,break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,210,case '\f' :
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,211,out.write('\\');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,212,out.write('f');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,213,break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,214,case '\r' :
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,215,out.write('\\');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,216,out.write('r');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,217,break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,218,default :
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,219,if (ch > 0xf) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,220,"out.write(""\\u00"" + Integer.toHexString(ch));"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,221,} else {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,222,"out.write(""\\u000"" + Integer.toHexString(ch));"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,224,break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,226,} else {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,227,switch (ch) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,228,case '\'' :
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,229,if (escapeSingleQuote) out.write('\\');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,230,out.write('\'');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,231,break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,232,"case '""' :"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,233,out.write('\\');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,234,"out.write('""');"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,235,break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,236,case '\\' :
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,237,out.write('\\');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,238,out.write('\\');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,239,break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,240,default :
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,241,out.write(ch);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,242,break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,249,"* Unescapes any Java literals found in the String. For example,"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,250,"* it will turn a sequence of '\' and 'n' into a newline character,"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,251,* unless the '\' is preceded by another '\'.
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,253,public static String unescapeJava(String str) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,254,try {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,255,StringPrintWriter writer = new StringPrintWriter(str.length());
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,256,"unescapeJava(writer, str);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,257,return writer.getString();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,259,catch (IOException ioe) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,260,// this should never ever happen while writing to a StringWriter
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,261,ioe.printStackTrace();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,262,return null;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,266,"public static void unescapeJava(Writer out, String str) throws IOException {"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,267,int sz = str.length();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,268,StringBuffer unicode = new StringBuffer(4);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,269,boolean hadSlash = false;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,270,boolean inUnicode = false;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,271,for (int i = 0; i < sz; i++) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,272,char ch = str.charAt(i);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,273,if(inUnicode) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,274,"// if in unicode, then we're reading unicode"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,275,// values in somehow
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,276,if(unicode.length() == 4) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,277,// unicode now contains the four hex digits
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,278,// which represents our unicode chacater
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,279,try {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,280,"int value = Integer.parseInt(unicode.toString(), 16);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,281,out.write( (char)value );
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,282,unicode.setLength(0);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,283,unicode.setLength(4);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,284,inUnicode = false;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,285,hadSlash = false;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,286,} catch(NumberFormatException nfe) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,287,"throw new NestableRuntimeException(""Unable to parse unicode value: ""+unicode, nfe);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,289,} else {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,290,unicode.append(ch);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,291,continue;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,294,if(hadSlash) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,295,// handle an escaped value
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,296,hadSlash = false;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,297,switch(ch) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,298,case '\\': out.write('\\'); break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,299,case '\'': out.write('\''); break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,300,"case '\""': out.write('""'); break;"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,301,case 'r':  out.write('\r'); break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,302,case 'f':  out.write('\f'); break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,303,case 't':  out.write('\t'); break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,304,case 'n':  out.write('\n'); break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,305,case 'b':  out.write('\b'); break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,306,case 'u':  {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,307,"// uh-oh, we're in unicode country...."
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,308,inUnicode=true;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,309,break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,311,default :
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,312,out.write(ch);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,313,break;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,315,continue;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,316,} else
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,317,if(ch == '\\') {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,318,hadSlash = true;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,319,continue;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,321,out.write(ch);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,323,if(hadSlash) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,324,// then we're in the weird case of a \ at the end of the
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,325,"// string, let's output it anyway."
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,326,out.write('\\');
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,330,public static String unescapeJavaScript(String str) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,331,return unescapeJava(str);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,334,"public static void unescapeJavaScript(Writer out, String str) throws IOException {"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,335,"unescapeJava(out,str);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,338,// HTML and XML
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,341,// see http://hotwired.lycos.com/webmonkey/reference/special_characters/
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,342,"//todo: initialize these lazily (on first request, rather than at classload time)"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,343,static Object[][] entities = {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,344,"// {""#39"", new Integer(39)},       // ' - apostrophe"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,345,"{""quot"", new Integer(34)},      // "" - double-quote"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,346,"{""amp"", new Integer(38)},       // & - ampersand"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,347,"{""lt"", new Integer(60)},        // < - less-than"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,348,"{""gt"", new Integer(62)},        // > - greater-than"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,349,"{""nbsp"", new Integer(160)},     // non-breaking space"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,350,"{""copy"", new Integer(169)},     //  - copyright"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,351,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,352,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,353,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,354,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,355,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,356,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,357,"{""copy"", new Integer(169)},     //  - copyright"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,358,"{""copy"", new Integer(169)},     //  - copyright"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,359,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,360,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,361,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,362,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,363,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,364,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,365,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,366,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,367,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,368,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,369,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,370,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,371,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,372,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,373,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,374,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,375,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,376,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,377,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,378,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,379,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,380,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,381,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,382,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,383,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,384,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,385,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,386,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,387,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,388,"{""copy"", new Integer(169)},     //  - copyright"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,389,"{""copy"", new Integer(169)},     //  - copyright"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,390,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,391,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,392,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,393,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,394,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,395,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,396,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,397,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,398,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,399,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,400,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,401,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,402,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,403,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,404,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,405,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,406,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,407,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,408,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,409,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,410,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,411,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,412,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,413,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,414,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,415,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,416,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,417,"{""reg"", new Integer(174)},      //  - registered trademark"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,418,"{""euro"", new Integer(8364)},    // Euro symbol"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,420,static Map e2i = new HashMap();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,421,static Map i2e = new HashMap();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,422,static {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,423,for (int i=0; i<entities.length; ++i) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,424,"e2i.put(entities[i][0], entities[i][1]);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,425,"i2e.put(entities[i][1], entities[i][0]);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,430,* Turns funky characters into HTML entity equivalents<p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,431,"* e.g. <tt>""bread"" & ""butter""</tt> => <tt>&amp;quot;bread&amp;quot; &amp;amp; &amp;quot;butter&amp;quot;</tt>."
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,432,"* Supports all known HTML entities, including funky accents. See the source code for more detail."
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,433,* see http://hotwired.lycos.com/webmonkey/reference/special_characters/
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,434,* @see #unescapeHtml(String)
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,436,public static String escapeHtml(String str)
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,438,StringBuffer buf = new StringBuffer(str.length() * 2);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,439,int i;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,440,for (i=0; i<str.length(); ++i) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,441,char ch = str.charAt(i);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,442,String entity = (String)i2e.get( new Integer((int)ch) );
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,443,if (entity == null) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,444,if (((int)ch) > 128) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,445,int intValue = ((int)ch);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,446,"buf.append(""&#"" + intValue + "";"");"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,448,else {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,449,buf.append(ch);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,452,else {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,453,"buf.append(""&"" + entity + "";"");"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,456,return buf.toString();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,460,"* Given a string containing entity escapes, returns a string"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,461,* containing the actual Unicode characters corresponding to the
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,462,* escapes.
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,464,* @see #escapeHtml(String)
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,466,public static String unescapeHtml(String str) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,467,StringBuffer buf = new StringBuffer(str.length());
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,468,int i;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,469,for (i=0; i<str.length(); ++i) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,470,char ch = str.charAt(i);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,471,if (ch == '&') {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,472,"int semi = str.indexOf(';', i+1);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,473,if (semi == -1) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,474,buf.append(ch);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,475,continue;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,477,"String entity = str.substring(i+1, semi);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,478,Integer iso;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,479,if (entity.charAt(0) == '#') {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,480,iso = new Integer(entity.substring(1));
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,482,else {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,483,iso = (Integer)e2i.get(entity);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,485,if (iso == null) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,486,"buf.append(""&"" + entity + "";"");"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,488,else {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,489,buf.append((char)(iso.intValue()));
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,491,i = semi;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,493,else {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,494,buf.append(ch);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,497,return buf.toString();
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,4,* Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,5,* reserved.
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,9,* are met:
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,17,*    distribution.
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,54,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,56,import java.io.*;
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,59,* A PrintWriter that maintains a String as its backing store.
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,60,* Usage: <pre>
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,61,* StringPrintWriter out = new StringPrintWriter();
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,62,* printTo(out);
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,63,* System.out.println( out.getString() );
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,64,* </pre>
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,65,* @author Alex Chaffee
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,66,* @author Scott Stanchfield
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,68,public class StringPrintWriter extends PrintWriter {
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,69,public StringPrintWriter() {
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,70,super(new StringWriter());
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,73,public StringPrintWriter(int initialSize) {
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,74,super(new StringWriter(initialSize));
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,78,"* Since toString() returns information *about* this object, we"
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,79,* want a separate method to extract just the contents of the
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,80,* internal buffer as a String.
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,81,* @return the contents of the internal string buffer
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,83,public String getString() {
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,84,flush();
True,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,85,return ((StringWriter) out).toString();
False,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,66," @version $Id: LangTestSuite.java,v 1.13 2003/03/23 21:49:13 scolebourne Exp $"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,66,"* @version $Id: LangTestSuite.java,v 1.14 2003/03/31 03:53:52 alex Exp $"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,104,suite.addTest(StringEscapeUtilsTest.suite());
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,4,* Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,5,* reserved.
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,9,* are met:
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,17,*    distribution.
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,54,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,56,import java.util.Arrays;
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,57,import java.io.IOException;
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,59,import junit.framework.Test;
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,60,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,61,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,62,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,65,* Unit tests {@link StringUtils}.
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,67,* @author of original StringUtilsTest.testEscape = ?
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,68,"* @author <a href=""mailto:alex@purpletech.com"">Alexander Day Chaffee</a>"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,69,"* @version $Id: StringEscapeUtilsTest.java,v 1.1 2003/03/31 03:53:52 alex Exp $"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,71,public class StringEscapeUtilsTest extends TestCase {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,72,"private final static String FOO = ""foo"";"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,74,public StringEscapeUtilsTest(String name) {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,75,super(name);
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,78,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,79,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,82,public static Test suite() {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,83,TestSuite suite = new TestSuite(StringEscapeUtilsTest.class);
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,84,"suite.setName(""StringEscapeUtilsTest Tests"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,85,return suite;
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,90,public void testEscapeJava() throws IOException {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,91,"assertEscapeJava(""empty string"", """", """");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,92,"assertEscapeJava(FOO, FOO);"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,93,"assertEscapeJava(""tab"", ""\\t"", ""\t"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,94,"assertEscapeJava(""backslash"", ""\\\\"", ""\\"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,95,"assertEscapeJava(""single quote should not be escaped"", ""'"", ""'"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,96,"assertEscapeJava(""\\\\\\b\\t\\r"", ""\\\b\t\r"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,97,"assertEscapeJava(""\\u1234"", ""\u1234"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,98,"assertEscapeJava(""\\u0234"", ""\u0234"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,99,"assertEscapeJava(""\\u00fd"", ""\u00fd"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,101,"assertEscapeJava(""He didn't say, \\\""stop!\\\"""","
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,102,"""He didn't say, \""stop!\"""");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,103,"assertEscapeJava(""non-breaking space"", ""This space is non-breaking:"" + ""\\u00a0"","
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,104,"""This space is non-breaking:\u00a0"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,105,"assertEscapeJava(""\\uabcd\\u1234\\u012c"","
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,106,"""\uABCD\u1234\u012C"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,109,"private void assertEscapeJava(String escaped, String original) throws IOException {"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,110,"assertEscapeJava(null, escaped, original);"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,113,"private void assertEscapeJava(String message, String expected, String original) throws IOException {"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,114,String converted = StringEscapeUtils.escapeJava(original);
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,115,"message = ""escapeJava(String) failed"" + (message == null ? """" : ("": "" + message));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,116,"assertEquals(message, expected, converted);"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,118,StringPrintWriter writer = new StringPrintWriter();
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,119,"StringEscapeUtils.escapeJava(writer, original);"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,120,"assertEquals(expected, writer.getString());"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,123,public void testUnescapeJava() throws IOException {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,124,"assertUnescapeJava("""", """");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,125,"assertUnescapeJava(""test"", ""test"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,126,"assertUnescapeJava(""\ntest\b"", ""\\ntest\\b"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,127,"assertUnescapeJava(""\u123425foo\ntest\b"", ""\\u123425foo\\ntest\\b"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,130,"private void assertUnescapeJava(String unescaped, String original) throws IOException {"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,131,"assertEquals(""unescape(String) failed"","
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,132,"unescaped, StringUtils.unescape(original));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,134,StringPrintWriter writer = new StringPrintWriter();
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,135,"StringEscapeUtils.unescapeJava(writer, original);"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,136,"assertEquals(unescaped, writer.getString());"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,140,public void testEscapeJavaScript() {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,141,"assertEquals(""He didn\\'t say, \\\""stop!\\\"""", StringEscapeUtils.escapeJavaScript(""He didn't say, \""stop!\""""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,145,// HTML
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,147,String[][] htmlEscapes = {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,148,"{""no escaping"", ""plain text"", ""plain text""},"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,149,"{""no escaping"", ""plain text"", ""plain text""},"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,150,"{""empty string"", """", """"},"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,151,"{""ampersand"", ""bread &amp; butter"", ""bread & butter""},"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,152,"{""quotes"", ""&quot;bread&quot; &amp; butter"", ""\""bread\"" & butter""},"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,153,"{""final character only"", ""greater than &gt;"", ""greater than >""},"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,154,"{""first character only"", ""&lt; less than"", ""< less than""},"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,155,"{""apostrophe"", ""Huntington's chorea"", ""Huntington's chorea""},"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,156,"{""languages"", ""English,Fran&ccedil;ais,&#26085;&#26412;&#35486; (nihongo)"", ""English,Franais,\u65E5\u672C\u8A9E (nihongo)""},"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,159,public void testEscapeHtml() {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,160,for (int i = 0; i < htmlEscapes.length; ++i) {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,161,"assertEquals(htmlEscapes[i][0], htmlEscapes[i][1], StringEscapeUtils.escapeHtml(htmlEscapes[i][2]));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,162,// todo: add test for (and implement) Writer-based version
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,166,public void testHtmlunescape() {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,167,for (int i = 0; i < htmlEscapes.length; ++i) {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,168,"assertEquals(htmlEscapes[i][0], htmlEscapes[i][2], StringEscapeUtils.unescapeHtml(htmlEscapes[i][1]));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,169,// todo: add test for (and implement) Writer-based version
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,171,"// should we unicode-escape the cedilla here, for 7-bit cleanliness?"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,172,"assertEquals(""funny chars pass through OK"", ""Franais"", StringEscapeUtils.unescapeHtml(""Franais""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,175,// SQL
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,176,// see http://www.jguru.com/faq/view.jsp?EID=8881
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,178,//    public void testEscapeSQL() throws Exception {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,179,// sql doubles-up single-quotes
