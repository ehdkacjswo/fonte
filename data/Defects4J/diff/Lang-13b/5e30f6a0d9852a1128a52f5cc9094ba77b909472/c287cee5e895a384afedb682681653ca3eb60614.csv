is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/java/org/apache/commons/lang3/builder/EqualsBuilder.java,845,* Reset the EqualsBuilder so you can use the same object again
True,src/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/java/org/apache/commons/lang3/builder/EqualsBuilder.java,847,public void reset() {
True,src/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/java/org/apache/commons/lang3/builder/EqualsBuilder.java,848,this.isEquals = true;
True,src/test/org/apache/commons/lang3/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang3/builder/EqualsBuilderTest.java,395,public void testReset() {
True,src/test/org/apache/commons/lang3/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang3/builder/EqualsBuilderTest.java,396,EqualsBuilder equalsBuilder = new EqualsBuilder();
True,src/test/org/apache/commons/lang3/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang3/builder/EqualsBuilderTest.java,397,assertTrue(equalsBuilder.isEquals());
True,src/test/org/apache/commons/lang3/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang3/builder/EqualsBuilderTest.java,398,equalsBuilder.setEquals(false);
True,src/test/org/apache/commons/lang3/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang3/builder/EqualsBuilderTest.java,399,assertFalse(equalsBuilder.isEquals());
True,src/test/org/apache/commons/lang3/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang3/builder/EqualsBuilderTest.java,400,equalsBuilder.reset();
True,src/test/org/apache/commons/lang3/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang3/builder/EqualsBuilderTest.java,401,assertTrue(equalsBuilder.isEquals());
