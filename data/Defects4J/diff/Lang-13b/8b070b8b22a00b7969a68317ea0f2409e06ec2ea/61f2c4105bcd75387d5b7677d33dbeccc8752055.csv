is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,4,* Copyright (c) 1999-2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,5,* reserved.
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,9,* are met:
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,17,*    distribution.
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,54,package org.apache.commons.lang.time;
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,57,* <p><code>StopWatch</code> provides a convenient API for timings.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,59,* <p>The methods do <b>not</b> protect against inappropriate calls. Thus you
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,60,"* can call stop before start, resume before suspend or unsplit before split."
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,61,* The results are indeterminate in these cases.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,63,"* <p>To start the watch, call {@link #start()}. At this point you can:</p>"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,64,* <ul>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,65,* <li>{@link #split()} the watch to get the time whilst the watch continues in the
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,66,"*  background. {@link #unsplit()} will remove the effect of the split. At this point,"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,67,*  these three options are available again.
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,68,* <li>{@link #suspend()} the watch to pause it. {@link #resume()} allows the watch
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,69,*  to continue. Any time between the suspend and resume will not be counted in
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,70,"*  the total. At this point, these three options are available again."
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,71,* <li>{@link #stop()} the watch to complete the timing session.
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,72,* </ul>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,73,* <p>It is intended that the output methods {@link #toString()} and {@link #getTime()}
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,74,"* should only be called after stop, split or suspend, however a suitable result will"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,75,* be returned at other points.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,77,* @author Henri Yandell
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,78,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,79,* @since 2.0
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,80,"* @version $Id: StopWatch.java,v 1.1 2002/12/22 22:59:58 scolebourne Exp $"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,82,public class StopWatch {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,84,private static final int MILLIS_IN_HOUR = 60 * 60 * 1000;
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,85,private static final int MILLIS_IN_MINUTE = 60 * 1000;
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,87,/** The start time */
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,88,private long startTime = -1;
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,89,/** The stop time */
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,90,private long stopTime = -1;
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,93,* <p>Constructor.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,95,public StopWatch() {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,99,* <p>Start the stopwatch.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,101,"* <p>This method starts a new timing session, clearing any previous values.</p>"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,103,public void start() {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,104,stopTime = -1;
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,105,startTime = System.currentTimeMillis();
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,109,* <p>Stop the stopwatch.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,111,"* <p>This method ends a new timing session, allowing the time to be retrieved.</p>"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,113,public void stop() {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,114,stopTime = System.currentTimeMillis();
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,118,* <p>Reset the stopwatch.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,120,* <p>This method clears the internal values to allow the object to be reused.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,122,public void reset() {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,123,startTime = -1;
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,124,stopTime = -1;
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,128,* <p>Split the time.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,130,* <p>This method sets the stop time of the watch to allow a time to be extracted.
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,131,"* The start time is unaffected, enabling {@link #unsplit()} to contine the"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,132,* timing from the original start point.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,134,public void split() {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,135,stopTime = System.currentTimeMillis();
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,139,* <p>Remove a split.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,141,"* <p>This method clears the stop time. The start time is unaffected, enabling"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,142,* timing from the original start point to continue.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,144,public void unsplit() {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,145,stopTime = -1;
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,149,* <p>Suspend the stopwatch for later resumption.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,151,* <p>This method suspends the watch until it is resumed. The watch will not include
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,152,* time between the suspend and resume calls in the total time.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,154,public void suspend() {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,155,stopTime = System.currentTimeMillis();
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,159,* <p>Resume the stopwatch after a suspend.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,161,* <p>This method resumes the watch after it was suspended. The watch will not include
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,162,* time between the suspend and resume calls in the total time.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,164,public void resume() {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,165,startTime += (System.currentTimeMillis() - stopTime);
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,166,stopTime = -1;
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,170,* <p>Get the time on the stopwatch.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,172,"* <p>This is either the time between start and latest split, between start"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,173,"* and stop, or the time between the start and the moment this method is called.</p>"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,175,* @return the time in milliseconds
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,177,public long getTime() {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,178,if (stopTime == -1) {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,179,if (startTime == -1) {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,180,return 0;
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,182,return (System.currentTimeMillis() - this.startTime);
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,184,return (this.stopTime - this.startTime);
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,188,* <p>Gets a summary of the time that the stopwatch recorded as a string.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,190,"* <p>The format used is ISO8601,"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,191,* <i>hours</i>:<i>minutes</i>:<i>seconds</i>.<i>milliseconds</i>.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,193,* @return the time as a String
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,195,public String toString() {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,196,return StopWatch.toString(getTime());
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,200,* <p>Get the time gap as a string.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,202,"* <p>The format used is ISO8601,"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,203,* <i>hours</i>:<i>minutes</i>:<i>seconds</i>.<i>milliseconds</i>.</p>
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,205,* @return the time as a String
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,207,public static String toString(long time) {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,208,"int hours, minutes, seconds, milliseconds;"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,209,hours = (int) (time / MILLIS_IN_HOUR);
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,210,time = time - (hours * MILLIS_IN_HOUR);
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,211,minutes = (int) (time / MILLIS_IN_MINUTE);
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,212,time = time - (minutes * MILLIS_IN_MINUTE);
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,213,seconds = (int) (time / 1000);
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,214,time = time - (seconds * 1000);
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,215,milliseconds = (int) time;
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,217,StringBuffer buf = new StringBuffer(32);
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,218,buf.append(hours);
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,219,buf.append(':');
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,220,if (minutes < 10) {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,221,buf.append('0');
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,223,buf.append(minutes);
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,224,buf.append(':');
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,225,if (seconds < 10) {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,226,buf.append('0');
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,228,buf.append(seconds);
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,229,buf.append('.');
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,230,if (milliseconds < 10) {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,231,"buf.append(""00"");"
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,232,} else if (milliseconds < 100) {
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,233,buf.append('0');
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,235,buf.append(milliseconds);
True,src/java/org/apache/commons/lang/time/StopWatch.java,src/java/org/apache/commons/lang/time/StopWatch.java,236,return buf.toString();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,5,* reserved.
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,9,* are met:
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,17,*    distribution.
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,26,"* 4. The names ""The Jakarta Project"", ""Ant"", and ""Apache Software"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,33,*    permission of the Apache Group.
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,54,package org.apache.commons.lang.time;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,56,import java.util.Date;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,57,import java.util.Calendar;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,58,import java.util.TimeZone;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,60,import junit.framework.Test;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,61,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,62,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,63,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,66,* TestCase for StopWatch.
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,68,* @author Stephen Colebourne
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,69,"* @version $Id: StopWatchTest.java,v 1.1 2002/12/22 22:59:58 scolebourne Exp $"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,71,public class StopWatchTest extends TestCase {
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,73,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,74,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,77,public static Test suite() {
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,78,TestSuite suite = new TestSuite(StopWatchTest.class);
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,79,"suite.setName(""StopWatch Tests"");"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,80,return suite;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,83,public StopWatchTest(String s) {
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,84,super(s);
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,87,public void testToString(){
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,88,long time = 0;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,89,"assertEquals(""0:00:00.000"", StopWatch.toString(time));"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,91,time = 1;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,92,"assertEquals(""0:00:00.001"", StopWatch.toString(time));"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,94,time = 15;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,95,"assertEquals(""0:00:00.015"", StopWatch.toString(time));"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,97,time = 165;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,98,"assertEquals(""0:00:00.165"", StopWatch.toString(time));"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,100,time = 1675;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,101,"assertEquals(""0:00:01.675"", StopWatch.toString(time));"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,103,time = 13465;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,104,"assertEquals(""0:00:13.465"", StopWatch.toString(time));"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,106,time = 72789;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,107,"assertEquals(""0:01:12.789"", StopWatch.toString(time));"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,109,time = 12789 + 32 * 60000;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,110,"assertEquals(""0:32:12.789"", StopWatch.toString(time));"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,112,time = 12789 + 62 * 60000;
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,113,"assertEquals(""1:02:12.789"", StopWatch.toString(time));"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,116,public void testStopWatchSimple(){
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,117,StopWatch watch = new StopWatch();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,118,"assertEquals(0, watch.getTime());"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,120,watch.start();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,121,try {Thread.sleep(550);} catch (InterruptedException ex) {}
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,122,watch.stop();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,123,long time = watch.getTime();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,124,"assertEquals(time, watch.getTime());"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,126,assertTrue(time >= 500);
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,127,assertTrue(time < 650);
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,129,watch.reset();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,130,"assertEquals(0, watch.getTime());"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,133,public void testStopWatchSplit(){
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,134,StopWatch watch = new StopWatch();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,135,watch.start();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,136,try {Thread.sleep(550);} catch (InterruptedException ex) {}
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,137,watch.split();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,138,long splitTime = watch.getTime();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,139,try {Thread.sleep(550);} catch (InterruptedException ex) {}
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,140,watch.unsplit();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,141,try {Thread.sleep(550);} catch (InterruptedException ex) {}
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,142,watch.stop();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,143,long totalTime = watch.getTime();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,145,"//        System.err.println(splitTime +""  ""+totalTime);"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,146,assertTrue(splitTime >= 500);
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,147,assertTrue(splitTime < 650);
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,148,assertTrue(totalTime >= 1500);
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,149,assertTrue(totalTime < 1800);
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,152,public void testStopWatchSuspend(){
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,153,StopWatch watch = new StopWatch();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,154,watch.start();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,155,try {Thread.sleep(550);} catch (InterruptedException ex) {}
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,156,watch.suspend();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,157,long suspendTime = watch.getTime();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,158,try {Thread.sleep(550);} catch (InterruptedException ex) {}
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,159,watch.resume();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,160,try {Thread.sleep(550);} catch (InterruptedException ex) {}
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,161,watch.stop();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,162,long totalTime = watch.getTime();
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,164,"//        System.err.println(suspendTime +""  ""+totalTime);"
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,165,assertTrue(suspendTime >= 500);
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,166,assertTrue(suspendTime < 600);
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,167,assertTrue(totalTime >= 1000);
True,src/test/org/apache/commons/lang/time/StopWatchTest.java,src/test/org/apache/commons/lang/time/StopWatchTest.java,168,assertTrue(totalTime < 1200);
False,src/test/org/apache/commons/lang/time/TimeTestSuite.java,src/test/org/apache/commons/lang/time/TimeTestSuite.java,64," @version $Id: TimeTestSuite.java,v 1.1 2002/12/18 23:30:19 scolebourne Exp $"
True,src/test/org/apache/commons/lang/time/TimeTestSuite.java,src/test/org/apache/commons/lang/time/TimeTestSuite.java,64,"* @version $Id: TimeTestSuite.java,v 1.2 2002/12/22 22:59:58 scolebourne Exp $"
True,src/test/org/apache/commons/lang/time/TimeTestSuite.java,src/test/org/apache/commons/lang/time/TimeTestSuite.java,90,suite.addTest(StopWatchTest.suite());
