is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,38," @version $Id: Validate.java,v 1.12 2004/06/01 21:25:35 scolebourne Exp $"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,38,"* @version $Id: Validate.java,v 1.13 2004/10/08 21:44:41 scolebourne Exp $"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,499, are not of type <code>clazz</code>.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,499,* are not of type <code>clazz</code> or a subclass.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,502," Validate.allElementsOfClass(collection, String.class, ""Collection has invalid elements"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,502,"* Validate.allElementsOfType(collection, String.class, ""Collection has invalid elements"");"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,505, @param collection  the collection to check
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,506, @param clazz  the <code>Class</code> which the collection's elements are expected to be
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,505,"* @param collection  the collection to check, not null"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,506,"* @param clazz  the <code>Class</code> which the collection's elements are expected to be, not null"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,510,"ublic static void allElementsOfClass(Collection collection, Class clazz, String message) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,510,"public static void allElementsOfType(Collection collection, Class clazz, String message) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,512,Validate.notNull(clazz);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,513,f ((it.next().getClass().equals(clazz)) == false) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,514,if (clazz.isInstance(it.next()) == false) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,522, type <code>clazz</code>.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,523,* type <code>clazz</code> or a subclass.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,525," Validate.allElementsOfClass(collection, String.class);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,526,"* Validate.allElementsOfType(collection, String.class);"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,530, @param collection  the collection to check
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,531, @param clazz the <code>Class</code> which the collection's elements are expected to be
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,531,"* @param collection  the collection to check, not null"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,532,"* @param clazz the <code>Class</code> which the collection's elements are expected to be, not null"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,534,"ublic static void allElementsOfClass(Collection collection, Class clazz) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,535,"public static void allElementsOfType(Collection collection, Class clazz) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,537,Validate.notNull(clazz);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,538,f ((it.next().getClass().equals(clazz)) == false) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,540,if (clazz.isInstance(it.next()) == false) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,540," (clazz == null ? ""null"" : clazz.getName()) + "" at index: "" + i);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,542,"+ clazz.getName() + "" at index: "" + i);"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,33," @version $Id: ValidateTest.java,v 1.5 2004/02/18 23:06:19 ggregory Exp $"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,33,"* @version $Id: ValidateTest.java,v 1.6 2004/10/08 21:44:41 scolebourne Exp $"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,361,ublic void testAllElementsOfClass() {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,361,public void testAllElementsOfType() {
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,365,"alidate.allElementsOfClass(coll, String.class, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,365,"Validate.allElementsOfType(coll, String.class, ""MSG"");"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,367,"alidate.allElementsOfClass(coll, Integer.class, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,367,"Validate.allElementsOfType(coll, Integer.class, ""MSG"");"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,374,"alidate.allElementsOfClass(coll, String.class);"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,374,"Validate.allElementsOfType(coll, String.class);"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,380,coll = new ArrayList();
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,381,coll.add(new Integer(5));
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,382,coll.add(new Double(2.0d));
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,383,"Validate.allElementsOfType(coll, Number.class, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,384,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,385,"Validate.allElementsOfType(coll, Integer.class, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,386,"fail(""Expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,387,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,388,"assertEquals(""MSG"", ex.getMessage());"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,390,try {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,391,"Validate.allElementsOfType(coll, Double.class, ""MSG"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,392,"fail(""Expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,393,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,394,"assertEquals(""MSG"", ex.getMessage());"
