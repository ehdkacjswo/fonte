is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,17,package org.apache.commons.lang.exception;
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,19,import java.io.Serializable;
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,20,import java.util.Set;
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,23,* Provides an easier and safer way for developers to provide context when
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,24,"* generating checked exceptions.  Often, additional information, besides what's"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,25,"* embedded in the exception cause, is needed for developers to debug and correct"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,26,"* a bug.  Often, this additional information can reduce the time it takes"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,27,* to replicate and fix a bug.
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,29,* <p>ContextedException is easier as developers don't need to be concerned
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,30,* with formatting the exception message to include additional information
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,31,* with the exception.  Additional information is automatically included
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,32,* in the message and printed stack trace.  This often thins out exception
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,33,* handling code.</p>
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,35,* <p>ContextedException is safer as the additional code needed to embed additional
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,36,* information in a normal exception tends to be tested less and is more vulnerable
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,37,* to errors such as null pointer exceptions.</p>
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,39,* <p>An unchecked version of this exception is provided by ContextedRuntimeException.</p>
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,41,* <p>To use this class write code as follows:</p>
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,43,* <pre>
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,44,*   try {
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,48,*   } catch (Throwable e) {
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,49,"*     throw new ContextedException(""Error posting account transaction"", e)"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,50,"*          .addLabeledValue(""accountNumber"", accountNumber)"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,51,"*          .addLabeledValue(""amountPosted"", amountPosted)"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,52,"*          .addLabeledValue(""previousBalance"", previousBalance)"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,55,* </pre>
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,57,* <p>The output in a printStacktrace() (which often is written to a log) would look something like the following:
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,58,* <pre>
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,59,* org.apache.commons.lang.exception.ContextedException: java.lang.Exception: Error posting account transaction
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,60,*  Exception Context:
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,61,*  [accountNumber=null]
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,62,*  [amountPosted=100.00]
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,63,*  [previousBalance=-2.17]
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,66,*  at org.apache.commons.lang.exception.ContextedExceptionTest.testAddLabeledValue(ContextedExceptionTest.java:88)
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,67,*  ..... (rest of trace)
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,68,* </pre>
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,70,* @see ContextedRuntimeException
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,71,* @author D. Ashmore
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,72,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,75,public class ContextedException extends Exception implements ExceptionContext {
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,77,private static final long serialVersionUID = 8940917952810290164L;
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,78,private ExceptionContext exceptionContext = new DefaultExceptionContext();
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,81,* Instantiates ContextedException without message or cause.
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,82,* <p>DefaultExceptionContext used to store and format context information.</p>
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,84,public ContextedException() {
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,88,"* Instantiates ContextedException with message, but without cause."
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,89,* <p>DefaultExceptionContext used to store and format context information.</p>
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,90,* @param message The exception message
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,92,public ContextedException(String message) {
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,93,super(message);
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,97,"* Instantiates ContextedException with cause, but without message."
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,98,* <p>DefaultExceptionContext used to store and format context information.</p>
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,99,* @param cause Exception creating need for ContextedException
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,101,public ContextedException(Throwable cause) {
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,102,super(cause);
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,106,* Instantiates ContextedException with cause and message.
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,107,* <p>DefaultExceptionContext used to store and format context information.</p>
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,108,* @param message The exception message
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,109,* @param cause Exception creating need for ContextedException
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,111,"public ContextedException(String message, Throwable cause) {"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,112,"super(message, cause);"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,116,"* Instantiates ContextedException with cause, message, and ExceptionContext."
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,117,* @param message The exception message
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,118,* @param cause Exception creating need for ContextedException
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,119,* @param context Context used to store additional information
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,120,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,122,"public ContextedException(String message, Throwable cause, ExceptionContext context) {"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,123,"super(message, cause);"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,124,if (context != null) {
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,125,this.exceptionContext = context;
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,130,* Adds information helpful to a developer in diagnosing and correcting
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,131,"* the problem.  For the information to be meaningful, the value passed"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,132,* should have a reasonable toString() implementation.
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,134,"* <p>Note:  If the value provided isn't Serializable, one solution would be"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,135,* to provide its toString() if it has a meaningful implementation or
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,136,* individual properties of the value object instead.</p>
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,137,* @param label  a textual label associated with information
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,138,* @param value  information needed to understand exception.  May be <code>null</code>.
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,139,* @return this
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,140,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,142,"public ContextedException addLabeledValue(String label, Serializable value) {"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,143,"this.exceptionContext.addLabeledValue(label, value);"
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,145,return this;
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,149,* Convenience method to retrieve a value from the underlying ExceptionContext.
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,150,* @param label  a textual label associated with information
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,151,* @return value  information needed to understand exception.  May be <code>null</code>.
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,152,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,154,public Serializable getLabeledValue(String label) {
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,155,return  this.exceptionContext.getLabeledValue(label);
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,159,* Convenience method to retrieve currently defined labels from the underlying ExceptionContext.
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,160,* @return labelSet
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,161,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,163,public Set<String> getLabelSet() {
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,164,return this.exceptionContext.getLabelSet();
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,168,* Provides message pertaining to exception.
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,169,* @see java.lang.Throwable#getMessage()
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,170,* @return message
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,171,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,173,@Override
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,174,public String getMessage(){
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,175,return getFormattedExceptionMessage(super.getMessage());
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,179,* {@inheritDoc}
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,181,public String getFormattedExceptionMessage(String baseMessage) {
True,src/java/org/apache/commons/lang/exception/ContextedException.java,src/java/org/apache/commons/lang/exception/ContextedException.java,182,return this.exceptionContext.getFormattedExceptionMessage(baseMessage);
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,17,package org.apache.commons.lang.exception;
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,19,import java.io.Serializable;
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,20,import java.util.Set;
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,23,* Provides an unchecked version of ContextedException
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,24,* @see ContextedException
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,25,* @author D. Ashmore
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,26,* @author J&ouml;rg Schaible
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,27,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,30,public class ContextedRuntimeException extends RuntimeException implements ExceptionContext {
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,32,private static final long serialVersionUID = 1459691936045811817L;
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,33,private ExceptionContext exceptionContext = new DefaultExceptionContext();
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,36,* Instantiates ContextedRuntimeException without message or cause.
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,37,* <p>DefaultExceptionContext used to store and format context information.</p>
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,40,public ContextedRuntimeException() {
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,44,"* Instantiates ContextedRuntimeException with message, but without cause."
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,45,* <p>DefaultExceptionContext used to store and format context information.</p>
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,46,* @param message The exception message
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,47,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,49,public ContextedRuntimeException(String message) {
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,50,super(message);
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,54,"* Instantiates ContextedRuntimeException with cause, but without message."
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,55,* <p>DefaultExceptionContext used to store and format context information.</p>
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,56,* @param cause Exception creating need for ContextedRuntimeException
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,57,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,59,public ContextedRuntimeException(Throwable cause) {
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,60,super(cause);
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,64,* Instantiates ContextedRuntimeException with cause and message.
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,65,* <p>DefaultExceptionContext used to store and format context information.</p>
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,66,* @param message The exception message
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,67,* @param cause Exception creating need for ContextedException
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,68,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,70,"public ContextedRuntimeException(String message, Throwable cause) {"
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,71,"this(message, cause, cause instanceof ExceptionContext ? (ExceptionContext)cause : null);"
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,75,"* Instantiates ContextedRuntimeException with cause, message, and ExceptionContext."
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,76,* @param message The exception message
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,77,* @param cause Exception creating need for ContextedRuntimeException
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,78,* @param context Context used to store additional information
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,79,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,81,"public ContextedRuntimeException(String message, Throwable cause, ExceptionContext context) {"
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,82,"super(message, cause);"
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,83,if (context != null) {
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,84,this.exceptionContext = context;
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,89,* Adds information helpful to a developer in diagnosing and correcting
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,90,* the problem.
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,91,"* @see ContextedException#addLabeledValue(String, Serializable)"
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,92,* @param label  a textual label associated with information
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,93,* @param value  information needed to understand exception.  May be <code>null</code>.
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,94,* @return this
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,95,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,97,"public ContextedRuntimeException addLabeledValue(String label, Serializable value) {"
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,98,"this.exceptionContext.addLabeledValue(label, value);"
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,99,return this;
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,103,* Convenience method to retrieve a value from the underlying ExceptionContext.
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,104,* @param label  a textual label associated with information
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,105,* @return value  information needed to understand exception.  May be <code>null</code>.
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,106,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,108,public Serializable getLabeledValue(String label) {
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,109,return  this.exceptionContext.getLabeledValue(label);
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,113,* Convenience method to retrieve  currently defined labels from the underlying ExceptionContext.
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,114,* @return labelSet
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,115,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,117,public Set<String> getLabelSet() {
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,118,return this.exceptionContext.getLabelSet();
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,122,* Provides message pertaining to exception.
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,123,* @see java.lang.Throwable#getMessage()
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,124,* @return message
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,125,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,127,@Override
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,128,public String getMessage(){
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,129,return getFormattedExceptionMessage(super.getMessage());
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,133,* {@inheritDoc}
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,135,public String getFormattedExceptionMessage(String baseMessage) {
True,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,src/java/org/apache/commons/lang/exception/ContextedRuntimeException.java,136,return this.exceptionContext.getFormattedExceptionMessage(baseMessage);
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,17,package org.apache.commons.lang.exception;
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,19,import java.io.Serializable;
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,20,import java.util.ArrayList;
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,21,import java.util.HashMap;
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,22,import java.util.List;
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,23,import java.util.Map;
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,24,import java.util.Set;
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,26,import org.apache.commons.lang.SystemUtils;
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,29,* Provides context feature for exceptions.  Used by both checked and unchecked version of the contexted exceptions.
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,30,* @see ContextedRuntimeException
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,31,* @author D. Ashmore
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,32,* @since 3.0
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,34,public class DefaultExceptionContext implements ExceptionContext {
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,36,private static final long serialVersionUID = 293747957535772807L;
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,39,"* This value list could really be obtained from the Map, however, some"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,40,* callers want to control the order of the list as it appears in the
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,41,* Message.  The list allows that.  name/value pairs will appear in
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,42,* the order that they're provided.   D. Ashmore
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,44,private List<String> contextKeyList = new ArrayList<String>();
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,45,"private Map<String, Serializable> contextValueMap = new HashMap<String, Serializable>();"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,48,* Adds information helpful to a developer in diagnosing and correcting
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,49,* the problem.
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,50,"* @see ContextedException#addLabeledValue(String, Serializable)"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,51,* @param label  a textual label associated with information
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,52,* @param value  information needed to understand exception.  May be null.
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,53,* @return this
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,54,* @since 3.0
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,56,"public ExceptionContext addLabeledValue(String label, Serializable value) {"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,57,this.contextKeyList.add(label);
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,58,"this.contextValueMap.put(label, value);"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,60,return this;
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,64,* Retrieves the value for a given label.
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,65,* @param label  a textual label associated with information
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,66,* @return value  information needed to understand exception.  May be null.
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,67,* @since 3.0
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,69,public Serializable getLabeledValue(String label) {
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,70,return this.contextValueMap.get(label);
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,74,* Retrieves currently defined labels.
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,75,* @return labelSet
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,76,* @since 3.0
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,78,public Set<String> getLabelSet() {
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,79,return this.contextValueMap.keySet();
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,83,* Centralized message logic for both checked and unchecked version of
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,84,* context exceptions
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,85,* @param baseMessage message retained by super class
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,86,* @return message -- exception message
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,87,* @since 3.0
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,89,public String getFormattedExceptionMessage(String baseMessage){
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,90,StringBuffer buffer = new StringBuffer(256);
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,91,if (baseMessage != null) {
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,92,buffer.append(baseMessage);
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,95,if (contextKeyList.size() > 0) {
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,96,buffer.append(SystemUtils.LINE_SEPARATOR);
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,97,"buffer.append(""Exception Context:"");"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,98,buffer.append(SystemUtils.LINE_SEPARATOR);
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,99,"buffer.append(""\t"");"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,101,Object value;
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,102,String valueStr;
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,103,for (String label: this.contextKeyList) {
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,104,"buffer.append(""["");"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,105,buffer.append(label);
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,106,"buffer.append(""="");"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,107,value = this.contextValueMap.get(label);
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,108,if (value == null) {
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,109,"buffer.append(""null"");"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,111,else {
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,112,try {valueStr = value.toString();}
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,113,catch (Throwable t) {
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,114,"valueStr = ""Excepted on toString(): "" +"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,115,ExceptionUtils.getStackTrace(t);
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,117,buffer.append(valueStr);
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,119,"buffer.append(""]"");"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,120,buffer.append(SystemUtils.LINE_SEPARATOR);
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,121,"buffer.append(""\t"");"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,123,buffer.append(SystemUtils.LINE_SEPARATOR);
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,124,"buffer.append(""\t---------------------------------"");"
True,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java,126,return buffer.toString();
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,15,* limitations under the License.
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,17,package org.apache.commons.lang.exception;
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,19,import java.io.Serializable;
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,20,import java.util.Collections;
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,21,import java.util.Set;
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,25,* Provides context information for exceptions. It is available as separate interface to allow
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,26,* it usage independently from the {@link ContextedException} and
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,27,* {@link ContextedRuntimeException}.
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,29,* @see ContextedException
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,30,* @see ContextedRuntimeException
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,31,* @author D. Ashmore
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,32,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,34,public interface ExceptionContext extends Serializable {
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,37,* Adds a context item along with a label.
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,38,* @param label label of item
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,39,* @param value value of item
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,40,* @return context itself to allow method chaining
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,41,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,43,"public ExceptionContext addLabeledValue(String label, Serializable value);"
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,46,* Provides context information associated with the given label.
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,47,* @param label label of item
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,48,* @return value value associated with label
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,49,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,51,public Serializable getLabeledValue(String label);
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,54,* Provides a set of labels that are currently in the context.
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,55,* @return labelSet labels currently used by the context
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,56,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,58,public Set<String> getLabelSet();
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,61,* Implementors provide the given base message with context label/value item
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,62,* information appended.
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,63,* @param baseMessage exception message <b>without</b> context information appended
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,64,* @return formattedMessage exception message <b>with</b> context information appended
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,65,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ExceptionContext.java,src/java/org/apache/commons/lang/exception/ExceptionContext.java,67,public String getFormattedExceptionMessage(String baseMessage);
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,21,import java.io.Serializable;
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,29,import java.util.Collections;
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,31,import java.util.Set;
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,98,* An empty {@link ExceptionContext}.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,99,* @since 3.0
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,101,public static final ExceptionContext EMPTY_CONTEXT = new ExceptionContext() {
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,103,private static final long serialVersionUID = 1L;
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,105,"public ExceptionContext addLabeledValue(String label, Serializable value) {"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,106,throw new UnsupportedOperationException();
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,109,public Serializable getLabeledValue(String label) {
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,110,return null;
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,113,public Set<String> getLabelSet() {
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,114,return Collections.<String>emptySet();
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,117,public String getFormattedExceptionMessage(String baseMessage) {
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,118,return baseMessage;
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,17,package org.apache.commons.lang.exception;
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,19,import java.io.Serializable;
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,20,import java.util.Date;
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,22,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,24,import org.apache.commons.lang.StringUtils;
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,27,* JUnit tests for ContextedException.
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,28,* @author D. Ashmore
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,31,public class ContextedExceptionTest extends TestCase {
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,33,"private static final String TEST_MESSAGE_2 = ""This is monotonous"";"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,34,"private static final String TEST_MESSAGE = ""Test Message"";"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,35,private ContextedException contextedException;
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,37,public ContextedExceptionTest(String name) {
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,38,super(name);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,41,public void testContextedException() {
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,42,contextedException = new ContextedException();
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,43,String message = contextedException.getMessage();
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,44,String trace = ExceptionUtils.getStackTrace(contextedException);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,45,"assertTrue(trace.indexOf(""ContextedException"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,46,assertTrue(StringUtils.isEmpty(message));
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,49,public void testContextedExceptionString() {
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,50,contextedException = new ContextedException(TEST_MESSAGE);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,51,"assertEquals(TEST_MESSAGE, contextedException.getMessage());"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,53,String trace = ExceptionUtils.getStackTrace(contextedException);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,54,assertTrue(trace.indexOf(TEST_MESSAGE)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,57,public void testContextedExceptionThrowable() {
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,58,contextedException = new ContextedException(new Exception(TEST_MESSAGE));
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,59,String message = contextedException.getMessage();
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,60,String trace = ExceptionUtils.getStackTrace(contextedException);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,61,"assertTrue(trace.indexOf(""ContextedException"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,62,assertTrue(trace.indexOf(TEST_MESSAGE)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,63,assertTrue(message.indexOf(TEST_MESSAGE)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,66,public void testContextedExceptionStringThrowable() {
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,67,"contextedException = new ContextedException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE));"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,68,String message = contextedException.getMessage();
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,69,String trace = ExceptionUtils.getStackTrace(contextedException);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,70,"assertTrue(trace.indexOf(""ContextedException"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,71,assertTrue(trace.indexOf(TEST_MESSAGE)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,72,assertTrue(trace.indexOf(TEST_MESSAGE_2)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,73,assertTrue(message.indexOf(TEST_MESSAGE_2)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,76,public void testContextedExceptionStringThrowableContext() {
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,77,"contextedException = new ContextedException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), new DefaultExceptionContext());"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,78,String message = contextedException.getMessage();
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,79,String trace = ExceptionUtils.getStackTrace(contextedException);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,80,"assertTrue(trace.indexOf(""ContextedException"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,81,assertTrue(trace.indexOf(TEST_MESSAGE)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,82,assertTrue(trace.indexOf(TEST_MESSAGE_2)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,83,assertTrue(message.indexOf(TEST_MESSAGE_2)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,86,public void testAddLabeledValue() {
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,87,contextedException = new ContextedException(new Exception(TEST_MESSAGE))
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,88,".addLabeledValue(""test1"", null)"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,89,".addLabeledValue(""test2"", ""some value"")"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,90,".addLabeledValue(""test Date"", new Date())"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,91,".addLabeledValue(""test Nbr"", new Integer(5))"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,92,".addLabeledValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,94,String message = contextedException.getMessage();
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,95,assertTrue(message.indexOf(TEST_MESSAGE)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,96,"assertTrue(message.indexOf(""test1"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,97,"assertTrue(message.indexOf(""test2"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,98,"assertTrue(message.indexOf(""test Date"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,99,"assertTrue(message.indexOf(""test Nbr"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,100,"assertTrue(message.indexOf(""test Poorly written obj"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,101,"assertTrue(message.indexOf(""some value"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,102,"assertTrue(message.indexOf(""5"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,103,"assertTrue(message.indexOf(""Crap"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,105,"String contextMessage = contextedException.getFormattedExceptionMessage("""");"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,106,assertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,107,assertTrue(message.contains(contextMessage));
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,109,"assertTrue(contextedException.getLabeledValue(""test1"") == null);"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,110,"assertTrue(contextedException.getLabeledValue(""test2"").equals(""some value""));"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,111,"assertTrue(contextedException.getLabeledValue(""crap"") == null);"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,112,"assertTrue(contextedException.getLabeledValue(""test Poorly written obj"") instanceof ObjectWithFaultyToString);"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,114,assertTrue(contextedException.getLabelSet().size() == 5);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,115,"assertTrue(contextedException.getLabelSet().contains(""test1""));"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,116,"assertTrue(contextedException.getLabelSet().contains(""test2""));"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,117,"assertTrue(contextedException.getLabelSet().contains(""test Date""));"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,118,"assertTrue(contextedException.getLabelSet().contains(""test Nbr""));"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,119,"assertTrue(contextedException.getLabelSet().contains(""test Poorly written obj""));"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,121,"assertTrue(!contextedException.getLabelSet().contains(""crap""));"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,124,public void testNullExceptionPassing() {
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,125,"contextedException = new ContextedException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), null)"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,126,".addLabeledValue(""test1"", null)"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,127,".addLabeledValue(""test2"", ""some value"")"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,128,".addLabeledValue(""test Date"", new Date())"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,129,".addLabeledValue(""test Nbr"", new Integer(5))"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,130,".addLabeledValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,132,String message = contextedException.getMessage();
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,133,assertTrue(message != null);
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,136,public void testGetMessage() {
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,137,testAddLabeledValue();
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,140,static class ObjectWithFaultyToString implements Serializable {
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,142,private static final long serialVersionUID = 3495843995332310458L;
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,144,@Override
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,145,public String toString() {
True,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedExceptionTest.java,146,"throw new RuntimeException(""Crap"");"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,17,package org.apache.commons.lang.exception;
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,19,import java.util.Date;
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,21,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,23,import org.apache.commons.lang.StringUtils;
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,24,import org.apache.commons.lang.exception.ContextedExceptionTest.ObjectWithFaultyToString;
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,27,* JUnit tests for ContextedRuntimeException.
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,28,* @author D. Ashmore
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,31,public class ContextedRuntimeExceptionTest extends TestCase {
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,33,"private static final String TEST_MESSAGE_2 = ""This is monotonous"";"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,34,"private static final String TEST_MESSAGE = ""Test Message"";"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,35,private ContextedRuntimeException contextedRuntimeException;
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,37,public ContextedRuntimeExceptionTest(String name) {
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,38,super(name);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,41,public void testContextedException() {
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,42,contextedRuntimeException = new ContextedRuntimeException();
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,43,String message = contextedRuntimeException.getMessage();
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,44,String trace = ExceptionUtils.getStackTrace(contextedRuntimeException);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,45,"assertTrue(trace.indexOf(""ContextedException"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,46,assertTrue(StringUtils.isEmpty(message));
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,49,public void testContextedExceptionString() {
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,50,contextedRuntimeException = new ContextedRuntimeException(TEST_MESSAGE);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,51,"assertEquals(TEST_MESSAGE, contextedRuntimeException.getMessage());"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,53,String trace = ExceptionUtils.getStackTrace(contextedRuntimeException);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,54,assertTrue(trace.indexOf(TEST_MESSAGE)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,57,public void testContextedExceptionThrowable() {
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,58,contextedRuntimeException = new ContextedRuntimeException(new Exception(TEST_MESSAGE));
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,59,String message = contextedRuntimeException.getMessage();
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,60,String trace = ExceptionUtils.getStackTrace(contextedRuntimeException);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,61,"assertTrue(trace.indexOf(""ContextedException"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,62,assertTrue(trace.indexOf(TEST_MESSAGE)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,63,assertTrue(message.indexOf(TEST_MESSAGE)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,66,public void testContextedExceptionStringThrowable() {
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,67,"contextedRuntimeException = new ContextedRuntimeException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE));"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,68,String message = contextedRuntimeException.getMessage();
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,69,String trace = ExceptionUtils.getStackTrace(contextedRuntimeException);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,70,"assertTrue(trace.indexOf(""ContextedException"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,71,assertTrue(trace.indexOf(TEST_MESSAGE)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,72,assertTrue(trace.indexOf(TEST_MESSAGE_2)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,73,assertTrue(message.indexOf(TEST_MESSAGE_2)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,76,public void testContextedExceptionStringThrowableContext() {
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,77,"contextedRuntimeException = new ContextedRuntimeException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), new DefaultExceptionContext());"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,78,String message = contextedRuntimeException.getMessage();
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,79,String trace = ExceptionUtils.getStackTrace(contextedRuntimeException);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,80,"assertTrue(trace.indexOf(""ContextedException"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,81,assertTrue(trace.indexOf(TEST_MESSAGE)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,82,assertTrue(trace.indexOf(TEST_MESSAGE_2)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,83,assertTrue(message.indexOf(TEST_MESSAGE_2)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,86,public void testAddLabeledValue() {
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,87,contextedRuntimeException = new ContextedRuntimeException(new Exception(TEST_MESSAGE))
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,88,".addLabeledValue(""test1"", null)"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,89,".addLabeledValue(""test2"", ""some value"")"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,90,".addLabeledValue(""test Date"", new Date())"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,91,".addLabeledValue(""test Nbr"", new Integer(5))"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,92,".addLabeledValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,94,String message = contextedRuntimeException.getMessage();
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,95,assertTrue(message.indexOf(TEST_MESSAGE)>=0);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,96,"assertTrue(message.indexOf(""test1"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,97,"assertTrue(message.indexOf(""test2"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,98,"assertTrue(message.indexOf(""test Date"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,99,"assertTrue(message.indexOf(""test Nbr"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,100,"assertTrue(message.indexOf(""test Poorly written obj"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,101,"assertTrue(message.indexOf(""some value"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,102,"assertTrue(message.indexOf(""5"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,103,"assertTrue(message.indexOf(""Crap"")>=0);"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,105,"String contextMessage = contextedRuntimeException.getFormattedExceptionMessage("""");"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,106,assertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,107,assertTrue(message.contains(contextMessage));
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,109,"assertTrue(contextedRuntimeException.getLabeledValue(""test1"") == null);"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,110,"assertTrue(contextedRuntimeException.getLabeledValue(""test2"").equals(""some value""));"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,111,"assertTrue(contextedRuntimeException.getLabeledValue(""crap"") == null);"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,112,"assertTrue(contextedRuntimeException.getLabeledValue(""test Poorly written obj"") instanceof ObjectWithFaultyToString);"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,114,assertTrue(contextedRuntimeException.getLabelSet().size() == 5);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,115,"assertTrue(contextedRuntimeException.getLabelSet().contains(""test1""));"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,116,"assertTrue(contextedRuntimeException.getLabelSet().contains(""test2""));"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,117,"assertTrue(contextedRuntimeException.getLabelSet().contains(""test Date""));"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,118,"assertTrue(contextedRuntimeException.getLabelSet().contains(""test Nbr""));"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,119,"assertTrue(contextedRuntimeException.getLabelSet().contains(""test Poorly written obj""));"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,121,"assertTrue(!contextedRuntimeException.getLabelSet().contains(""crap""));"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,124,public void testNullExceptionPassing() {
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,125,"contextedRuntimeException = new ContextedRuntimeException(TEST_MESSAGE_2, new Exception(TEST_MESSAGE), null)"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,126,".addLabeledValue(""test1"", null)"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,127,".addLabeledValue(""test2"", ""some value"")"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,128,".addLabeledValue(""test Date"", new Date())"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,129,".addLabeledValue(""test Nbr"", new Integer(5))"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,130,".addLabeledValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,132,String message = contextedRuntimeException.getMessage();
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,133,assertTrue(message != null);
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,136,public void testGetMessage() {
True,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,src/test/org/apache/commons/lang/exception/ContextedRuntimeExceptionTest.java,137,testAddLabeledValue();
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,17,package org.apache.commons.lang.exception;
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,19,import java.util.Date;
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,21,import org.apache.commons.lang.exception.ContextedExceptionTest.ObjectWithFaultyToString;
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,23,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,26,* JUnit tests for DefaultExceptionContext
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,27,* @author D. Ashmore
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,30,public class DefaultExceptionContextTest extends TestCase {
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,32,private ExceptionContext defaultExceptionContext;
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,34,public DefaultExceptionContextTest(String name) {
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,35,super(name);
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,38,public void setUp() {
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,39,defaultExceptionContext = new DefaultExceptionContext()
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,40,".addLabeledValue(""test1"", null)"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,41,".addLabeledValue(""test2"", ""some value"")"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,42,".addLabeledValue(""test Date"", new Date())"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,43,".addLabeledValue(""test Nbr"", new Integer(5))"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,44,".addLabeledValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,47,public void testAddLabeledValue() {
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,49,"String message = defaultExceptionContext.getFormattedExceptionMessage(""This is an error"");"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,50,"assertTrue(message.indexOf(""This is an error"")>=0);"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,51,"assertTrue(message.indexOf(""test1"")>=0);"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,52,"assertTrue(message.indexOf(""test2"")>=0);"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,53,"assertTrue(message.indexOf(""test Date"")>=0);"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,54,"assertTrue(message.indexOf(""test Nbr"")>=0);"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,55,"assertTrue(message.indexOf(""test Poorly written obj"")>=0);"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,56,"assertTrue(message.indexOf(""some value"")>=0);"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,57,"assertTrue(message.indexOf(""5"")>=0);"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,58,"assertTrue(message.indexOf(""Crap"")>=0);"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,60,//contextedException.printStackTrace();
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,63,public void testFormattedExceptionMessageNull() {
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,64,defaultExceptionContext = new DefaultExceptionContext();
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,65,defaultExceptionContext.getFormattedExceptionMessage(null);
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,68,public void testGetLabeledValue() {
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,69,"assertTrue(defaultExceptionContext.getLabeledValue(""test1"") == null);"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,70,"assertTrue(defaultExceptionContext.getLabeledValue(""test2"").equals(""some value""));"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,71,"assertTrue(defaultExceptionContext.getLabeledValue(""crap"") == null);"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,72,"assertTrue(defaultExceptionContext.getLabeledValue(""test Poorly written obj"") instanceof ObjectWithFaultyToString);"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,75,public void testGetLabelSet() {
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,76,assertTrue(defaultExceptionContext.getLabelSet().size() == 5);
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,77,"assertTrue(defaultExceptionContext.getLabelSet().contains(""test1""));"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,78,"assertTrue(defaultExceptionContext.getLabelSet().contains(""test2""));"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,79,"assertTrue(defaultExceptionContext.getLabelSet().contains(""test Date""));"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,80,"assertTrue(defaultExceptionContext.getLabelSet().contains(""test Nbr""));"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,81,"assertTrue(defaultExceptionContext.getLabelSet().contains(""test Poorly written obj""));"
True,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java,83,"assertTrue(!defaultExceptionContext.getLabelSet().contains(""crap""));"
