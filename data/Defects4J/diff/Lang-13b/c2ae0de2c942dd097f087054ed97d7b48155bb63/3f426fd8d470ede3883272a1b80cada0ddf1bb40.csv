is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,69,"ew LookupTranslator(EntityArrays.APOS_ESCAPE()),"
False,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,70,umericEntityEscaper.above(0x7f)
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,69,new LookupTranslator(EntityArrays.APOS_ESCAPE())
False,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,80,"ew LookupTranslator(EntityArrays.ISO8859_1_ESCAPE()),"
False,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,81,umericEntityEscaper.above(0x7f)
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,79,new LookupTranslator(EntityArrays.ISO8859_1_ESCAPE())
False,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,92,"ew LookupTranslator(EntityArrays.HTML40_EXTENDED_ESCAPE()),"
False,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,93,umericEntityEscaper.above(0x7f)
True,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,src/java/org/apache/commons/lang/text/translate/EscapeUtils.java,90,new LookupTranslator(EntityArrays.HTML40_EXTENDED_ESCAPE())
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,221,"""languages"", ""English,Fran&ccedil;ais,&#26085;&#26412;&#35486; (nihongo)"", ""English,Fran\u00E7ais,\u65E5\u672C\u8A9E (nihongo)""},"
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,222,"""8-bit ascii doesn't number-escape"", ""~\u007F"", ""\u007E\u007F""},"
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,223,"""8-bit ascii does number-escape"", ""&#128;&#159;"", ""\u0080\u009F""},"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,221,"{""languages"", ""English,Fran&ccedil;ais,\u65E5\u672C\u8A9E (nihongo)"", ""English,Fran\u00E7ais,\u65E5\u672C\u8A9E (nihongo)""},"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,222,"{""8-bit ascii shouldn't number-escape"", ""\u0080\u009F"", ""\u0080\u009F""},"
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,301,"ssertEquals(""XML should use numbers, not names for HTML entities"","
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,302,"&#161;"", StringEscapeUtils.escapeXml(""\u00A1""));"
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,303,"ssertEquals(""XML should use numbers, not names for HTML entities"","
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,300,"assertEquals(""XML should not escape >0x7f values"","
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,301,"""\u00A1"", StringEscapeUtils.escapeXml(""\u00A1""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,302,"assertEquals(""XML should be able to unescape >0x7f values"","
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,416,"tring escaped = StringEscapeUtils.escapeHtml( new String(data, ""UTF8"") );"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,415,"String original = new String(data, ""UTF8"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,417,String escaped = StringEscapeUtils.escapeHtml( original );
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,418,"assertEquals( ""High unicode should not have been escaped"", original, escaped);"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,421,"assertEquals( ""High unicode should have been unchanged"", original, unescaped);"
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,419,"ssertEquals( ""High unicode was not escaped correctly"", ""&#119650;"", escaped);"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,423,"// TODO: I think this should hold, needs further investigation"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,424,"//        String unescapedFromEntity = StringEscapeUtils.unescapeHtml( ""&#119650;"" );"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,425,"//        assertEquals( ""High unicode should have been unescaped"", original, unescapedFromEntity);"
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,425,"tring escaped = StringEscapeUtils.escapeHtml( ""\u304B\u304C\u3068"" );"
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,426,"ssertEquals( ""Hiragana character unicode behaviour has changed from their being escaped"","
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,427,"&#12363;&#12364;&#12392;"", escaped);"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,431,"String original = ""\u304B\u304C\u3068"";"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,432,String escaped = StringEscapeUtils.escapeHtml(original);
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,433,"assertEquals( ""Hiragana character unicode behaviour should not be being escaped by escapeHtml"","
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,434,"original, escaped);"
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,431,"ssertEquals( ""Hiragana character unicode behaviour has changed - expected no unescaping"", escaped, escaped);"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,438,"assertEquals( ""Hiragana character unicode behaviour has changed - expected no unescaping"", escaped, unescaped);"
