is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,19,import java.lang.reflect.InvocationTargetException;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,20,import java.lang.reflect.Method;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,623, <p>Removes the accents from a string. </p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,624," <p>NOTE: This is a JDK 1.6 method, it will fail on JDK 1.5. </p>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,625,* <p>Removes diacritics (~= accents) from a string. The case will not be altered.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,626,"* <p>For instance, '&agrave;' will be replaced by 'a'.</p>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,627,* <p>Note that ligatures will be left as is.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,629,* <p>This method will use the first available implementation of:
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,630,"* Java 6's {@link java.text.Normalizer}, Java 1.3&ndash;1.5's {@code sun.text.Normalizer}</p>"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,634, @return String without accents on the text
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,640,* @return input text with diacritics removed
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,638,ublic static String stripAccents(String input) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,644,// See also Lucene's ASCIIFoldingFilter (Lucene 2.9) that replaces accented characters by their unaccented equivalent (and uncommited bug fix: https://issues.apache.org/jira/browse/LUCENE-1343?focusedCommentId=12858907&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12858907).
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,645,public static String stripAccents(CharSequence input) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,642,f(SystemUtils.isJavaVersionAtLeast(1.6f)) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,644,"/ String decomposed = Normalizer.normalize(input, Normalizer.Form.NFD);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,646,/ START of 1.5 reflection - in 1.6 use the line commented out above
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,647,ry {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,648,/ get java.text.Normalizer.Form class
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,649,"lass<?> normalizerFormClass = ClassUtils.getClass(""java.text.Normalizer$Form"", false);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,651,/ get Normlizer class
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,652,"lass<?> normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,654,/ get static method on Normalizer
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,655,"ava.lang.reflect.Method method = normalizerClass.getMethod(""normalize"", CharSequence.class, normalizerFormClass );"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,657,/ get Normalizer.NFD field
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,658,"ava.lang.reflect.Field nfd = normalizerFormClass.getField(""NFD"");"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,660,/ invoke method
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,661,"tring decomposed = (String) method.invoke( null, input, nfd.get(null) );"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,662,/ END of 1.5 reflection
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,664,"ava.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,665,"eturn accentPattern.matcher(decomposed).replaceAll("""");"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,666, catch(ClassNotFoundException cnfe) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,667,"hrow new RuntimeException(""ClassNotFoundException occurred during 1.6 backcompat code"", cnfe);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,668, catch(NoSuchMethodException nsme) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,669,"hrow new RuntimeException(""NoSuchMethodException occurred during 1.6 backcompat code"", nsme);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,670, catch(NoSuchFieldException nsfe) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,671,"hrow new RuntimeException(""NoSuchFieldException occurred during 1.6 backcompat code"", nsfe);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,672, catch(IllegalAccessException iae) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,673,"hrow new RuntimeException(""IllegalAccessException occurred during 1.6 backcompat code"", iae);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,674, catch(IllegalArgumentException iae) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,675,"hrow new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,676, catch(java.lang.reflect.InvocationTargetException ite) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,677,"hrow new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,678, catch(SecurityException se) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,679,"hrow new RuntimeException(""SecurityException occurred during 1.6 backcompat code"", se);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,649,try {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,650,String result = null;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,651,if (java6Available) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,652,result = removeAccentsJava6(input);
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,653,} else if (sunAvailable) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,654,result = removeAccentsSUN(input);
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,655,} else {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,656,"throw new UnsupportedOperationException(""The stripAccents(CharSequence) method requires at least Java 1.6 or a SUN JVM"");"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,681, else {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,682,"hrow new UnsupportedOperationException(""The stripAccents(String) method is not supported until Java 1.6"");"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,658,// Note that none of the above methods correctly remove ligatures...
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,659,return result;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,660,} catch(IllegalArgumentException iae) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,661,"throw new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,662,} catch(IllegalAccessException iae) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,663,"throw new RuntimeException(""IllegalAccessException occurred during 1.6 backcompat code"", iae);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,664,} catch(InvocationTargetException ite) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,665,"throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,666,} catch(SecurityException se) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,667,"throw new RuntimeException(""SecurityException occurred during 1.6 backcompat code"", se);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,672,"* Use {@code java.text.Normalizer#normalize(CharSequence, Normalizer.Form)}"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,673,"* (but be careful, this classe exists in Java 1.3, with an entirely different meaning!)"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,674,* @param text
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,676,"private static String removeAccentsJava6(CharSequence text) throws IllegalArgumentException, IllegalAccessException, InvocationTargetException {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,678,"String decomposed = java.text.Normalizer.normalize(CharSequence, Normalizer.Form.NFD);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,679,"return java6Pattern.matcher(decomposed).replaceAll("""");//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,681,if (!java6Available || java6NormalizerFormNFD == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,682,"throw new IllegalStateException(""java.text.Normalizer is not available"");"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,684,String result;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,685,"result = (String) java6NormalizeMethod.invoke(null, new Object[] {text, java6NormalizerFormNFD});"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,686,"result = java6Pattern.matcher(result).replaceAll("""");//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,687,return result;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,691,"* Use {@code sun.text.Normalizer#decompose(String, boolean, int)}"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,693,"private static String removeAccentsSUN(CharSequence text) throws IllegalArgumentException, IllegalAccessException, InvocationTargetException {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,695,"String decomposed = sun.text.Normalizer.decompose(text, false, 0);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,696,"return sunPattern.matcher(decomposed).replaceAll("""");//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,698,if (! sunAvailable) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,699,"throw new IllegalStateException(""sun.text.Normalizer is not available"");"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,701,String result;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,702,"result = (String) sunDecomposeMethod.invoke(null, new Object[] {text, Boolean.FALSE, Integer.valueOf(0)});"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,703,"result = sunPattern.matcher(result).replaceAll("""");//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,704,return result;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,707,"// SUN internal, Java 1.3 -> Java 5"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,708,private static boolean sunAvailable = false;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,709,private static Method  sunDecomposeMethod = null;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,710,"private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,711,// Java 6+
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,712,private static boolean java6Available = false;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,713,private static Method  java6NormalizeMethod = null;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,714,private static Object  java6NormalizerFormNFD = null;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,715,private static final Pattern java6Pattern = sunPattern;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,717,static {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,718,try {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,719,"// java.text.Normalizer.normalize(CharSequence, Normalizer.Form.NFD);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,720,// Be careful not to get Java 1.3 java.text.Normalizer!
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,721,"Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader().loadClass(""java.text.Normalizer$Form"");//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,722,"java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,723,"Class<?> normalizerClass = Thread.currentThread().getContextClassLoader().loadClass(""java.text.Normalizer"");//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,724,"java6NormalizeMethod = normalizerClass.getMethod(""normalize"", new Class[] {CharSequence.class, normalizerFormClass});//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,725,java6Available = true;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,726,} catch (Exception e) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,727,java6Available = false;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,730,try {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,731,"// sun.text.Normalizer.decompose(text, false, 0);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,732,"Class<?> normalizerClass = Thread.currentThread().getContextClassLoader().loadClass(""sun.text.Normalizer"");//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,733,"sunDecomposeMethod = normalizerClass.getMethod(""decompose"", new Class[] {String.class, Boolean.TYPE, Integer.TYPE});//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,734,sunAvailable = true;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,735,} catch (Exception e) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,736,sunAvailable = false;
