is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1051, Creates a new instance of this Tokenizer.
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1052, The new instance is reset so that it will be at the start of the token list.
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1051,* Creates a new instance of this Tokenizer. The new instance is reset so that it will be at the start of the token
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1052,"* list. If a {@link CloneNotSupportedException} is caught, return <code>null</code>."
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1057,trTokenizer cloned = (StrTokenizer) super.clone();
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1058,f (cloned.chars != null) {
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1059,loned.chars = (char[]) cloned.chars.clone();
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1061,loned.reset();
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1062,eturn cloned;
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1058,return cloneReset();
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1065,* Creates a new instance of this Tokenizer. The new instance is reset so that it will be at the start of the token
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1066,* list.
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1068,* @return a new instance of this Tokenizer which has been reset.
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1070,protected Object cloneReset() throws CloneNotSupportedException {
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1071,StrTokenizer cloned = (StrTokenizer) super.clone();
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1072,if (cloned.chars != null) {
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1073,cloned.chars = (char[]) cloned.chars.clone();
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1075,cloned.reset();
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1076,return cloned;
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,546,* Tests that the {@link StrTokenizer#clone()} clone method catches {@link CloneNotSupportedException} and returns
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,547,* <code>null</code>.
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,549,public void testCloneNotSupportedException() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,550,Object notCloned = (new StrTokenizer() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,551,public Object cloneReset() throws CloneNotSupportedException {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,552,"throw new CloneNotSupportedException(""test"");"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,554,}).clone();
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,555,assertNull(notCloned);
