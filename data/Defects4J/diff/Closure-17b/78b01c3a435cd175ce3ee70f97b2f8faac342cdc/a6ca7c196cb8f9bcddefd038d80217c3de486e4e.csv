is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,293,or(Node sibling = n.getNext(); sibling != null;
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,294,ibling = sibling.getNext()) {
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,295,f (!ControlFlowGraph.isEnteringNewCfgNode(sibling)) {
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,296,"ariableLiveness state = isVariableReadBeforeKill(sibling, variable);"
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,298,/ If we see a READ or KILL there is no need to continue.
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,299,f (state == VariableLiveness.READ) {
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,300,eturn true;
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,301, else if (state == VariableLiveness.KILL) {
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,302,eturn false;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,293,VariableLiveness state = VariableLiveness.MAYBE_LIVE;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,294,switch (n.getParent().getType()) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,295,case Token.OR:
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,296,case Token.AND:
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,297,// If the currently node is the first child of
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,298,"// AND/OR, be conservative only consider the READs"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,299,// of the second operand.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,300,if (n.getNext() != null) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,301,state = isVariableReadBeforeKill(
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,302,"n.getNext(), variable);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,303,if (state == VariableLiveness.KILL) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,304,state = VariableLiveness.MAYBE_LIVE;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,307,break;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,309,case Token.HOOK:
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,310,"// If current node is the condition, check each following"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,311,"// branch, otherwise it is a conditional branch and the"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,312,// other branch can be ignored.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,313,if (n.getNext() != null && n.getNext().getNext() != null) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,314,state = checkHookBranchReadBeforeKill(
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,315,"n.getNext(), n.getNext().getNext(), variable);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,317,break;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,319,default:
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,320,for(Node sibling = n.getNext(); sibling != null;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,321,sibling = sibling.getNext()) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,322,"state = isVariableReadBeforeKill(sibling, variable);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,323,if (state != VariableLiveness.MAYBE_LIVE) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,324,break;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,329,// If we see a READ or KILL there is no need to continue.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,330,if (state == VariableLiveness.READ) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,331,return true;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,332,} else if (state == VariableLiveness.KILL) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,333,return false;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,354,if (ControlFlowGraph.isEnteringNewCfgNode(n)) { // Not a FUNCTION
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,355,return VariableLiveness.MAYBE_LIVE;
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,342,"/ Expressions are evaluated left-right, depth first."
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,343,or (Node child = n.getFirstChild();
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,344,hild != null; child = child.getNext()) {
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,345,f (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,346,"ariableLiveness state = isVariableReadBeforeKill(child, variable);"
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,347,f (state != VariableLiveness.MAYBE_LIVE) {
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,348,eturn state;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,375,switch (n.getType()) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,376,// Conditionals
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,377,case Token.OR:
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,378,case Token.AND:
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,379,VariableLiveness v1 = isVariableReadBeforeKill(
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,380,"n.getFirstChild(), variable);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,381,VariableLiveness v2 = isVariableReadBeforeKill(
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,382,"n.getLastChild(), variable);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,383,"// With a AND/OR the first branch always runs, but the second is"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,384,// may not.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,385,if (v1 != VariableLiveness.MAYBE_LIVE) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,386,return v1;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,387,} else if (v2 == VariableLiveness.READ) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,388,return VariableLiveness.READ;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,389,} else {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,390,return VariableLiveness.MAYBE_LIVE;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,392,case Token.HOOK:
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,393,VariableLiveness first = isVariableReadBeforeKill(
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,394,"n.getFirstChild(), variable);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,395,if (first != VariableLiveness.MAYBE_LIVE) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,396,return first;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,398,return checkHookBranchReadBeforeKill(
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,399,"n.getFirstChild().getNext(), n.getLastChild(), variable);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,401,default:
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,402,"// Expressions are evaluated left-right, depth first."
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,403,for (Node child = n.getFirstChild();
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,404,child != null; child = child.getNext()) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,405,"VariableLiveness state = isVariableReadBeforeKill(child, variable);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,406,if (state != VariableLiveness.MAYBE_LIVE) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,407,return state;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,415,private VariableLiveness checkHookBranchReadBeforeKill(
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,416,"Node trueCase, Node falseCase, String variable) {"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,417,VariableLiveness v1 = isVariableReadBeforeKill(
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,418,"trueCase, variable);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,419,VariableLiveness v2 = isVariableReadBeforeKill(
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,420,"falseCase, variable);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,421,"// With a hook it is unknown which branch will run, so"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,422,"// we must be conservative.  A read by either is a READ, and"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,423,// a KILL is only considered if both KILL.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,424,if (v1 == VariableLiveness.READ || v2 == VariableLiveness.READ) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,425,return VariableLiveness.READ;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,426,} else if (v1 == VariableLiveness.KILL && v2 == VariableLiveness.KILL) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,427,return VariableLiveness.KILL;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,428,} else {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,429,return VariableLiveness.MAYBE_LIVE;
False,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,448,ublic void testInExpression() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,448,public void testInExpression1() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,456,public void testInExpression2() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,457,"// This can be improved.  ""a = 1"" is dead but ""a"" is read in the following"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,458,// expression.
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,459,inFunction(
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,460,"""var a; a = 1; if ((a = 2) || (a = 3) || (a)) {}"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,461,"""var a; a = 1; if ((    2) || (a = 3) || (a)) {}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,463,inFunction(
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,464,"""var a; (a = 1) || (a = 2)"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,465,"""var a; 1 || 2"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,467,"inFunction(""var a; (a = 1) || (a = 2); return a"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,469,inFunction(
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,470,"""var a; a = 1; a ? a = 2 : a;"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,471,"""var a; a = 1; a ?     2 : a;"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,473,"inFunction(""var a; a = 1; a ? a = 2 : a; return a"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,475,inFunction(
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,476,"""var a; a = 1; a ? a : a = 2;"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,477,"""var a; a = 1; a ? a : 2;"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,479,"inFunction(""var a; a = 1; a ? a : a =2; return a"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,481,inFunction(
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,482,"""var a; (a = 1) ? a = 2 : a = 3;"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,483,"""var a;      1  ?     2 :     3;"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,485,"// This can be improved.  ""a = 1"" is dead but ""a"" is read in the following"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,486,// expression.
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,487,"inFunction(""var a; (a = 1) ? a = 2 : a = 3; return a"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,490,public void testIssue384a() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,491,inFunction(
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,492,""" var a, b;\n"" +"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,493,""" if (f(b = true) || f(b = false))\n"" +"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,494,"""   a = b;\n"" +"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,495,""" else\n"" +"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,496,"""   a = null;\n"" +"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,497,""" return a;"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,500,public void testIssue384b() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,501,inFunction(
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,502,""" var a, b;\n"" +"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,503,""" (f(b = true) || f(b = false)) ? (a = b) : (a = null);\n"" +"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,504,""" return a;"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,507,public void testIssue384c() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,508,inFunction(
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,509,""" var a, b;\n"" +"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,510,""" (a ? f(b = true) : f(b = false)) && (a = b);\n"" +"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,511,""" return a;"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,514,public void testIssue384d() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,515,inFunction(
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,516,""" var a, b;\n"" +"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,517,""" (f(b = true) || f(b = false)) && (a = b);\n"" +"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,518,""" return a;"");"
