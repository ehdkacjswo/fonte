is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,2, Copyright 2010 The Closure Compiler Authors.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,5, you may not use this file except in compliance with the License.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,6, You may obtain a copy of the License at
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,13, See the License for the specific language governing permissions and
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,14, limitations under the License.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,17,ackage com.google.javascript.jscomp;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,19,mport com.google.common.base.Preconditions;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,20,mport com.google.common.collect.HashMultimap;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,21,mport com.google.common.collect.Lists;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,22,mport com.google.common.collect.Multimap;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,23,mport com.google.common.collect.Sets;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,24,mport com.google.javascript.jscomp.Scope.Var;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,25,mport com.google.javascript.rhino.Node;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,26,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,28,mport java.util.Collection;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,29,mport java.util.List;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,30,mport java.util.Set;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,33, Keeps track of a function's known side effects by type and the
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,34, list of calls that appear in a function's body.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,37,lass FunctionSideEffectData {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,38,rivate final boolean extern;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,39,rivate final List<Node> callsInFunctionBody = Lists.newArrayList();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,40,rivate final Scope localScope;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,41,rivate Set<ValueEntry> nonLocalValues = Sets.newHashSet();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,42,rivate Set<ValueEntry> modifiedLocals = Sets.newHashSet();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,43,"rivate Multimap<ValueEntry, ValueEntry> valueInfluenceMap ="
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,44,ashMultimap.create();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,45,rivate boolean pureFunction = false;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,46,rivate boolean functionThrows = false;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,47,rivate boolean taintsGlobalState = false;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,48,rivate boolean taintsThis = false;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,49,rivate boolean taintsArguments = false;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,50,rivate boolean taintsUnknown = false;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,51,rivate boolean taintsReturn = false;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,54, Represents a value in the value locality and modification structures:
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,55," #nonLocalValues, #modifiedLocals, #valueInfluenceMap"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,57,nterface ValueEntry {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,61, A representation of the values associated with these the: this and return
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,62, keywords and the arguments pseudo-keyword.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,64,tatic class KeywordValueEntry implements ValueEntry {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,65,/ These special token objects are used to track values that we care about
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,66,/ that are not represented by Vars.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,67,inal static ValueEntry THIS = new KeywordValueEntry();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,68,inal static ValueEntry RETURN = new KeywordValueEntry();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,69,inal static ValueEntry ARGUMENTS = new KeywordValueEntry();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,71,eywordValueEntry() {}
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,75," A named value (vars, functions) entry."
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,77,tatic class NameValueEntry implements ValueEntry {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,78,rivate final String name;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,80,ameValueEntry(Node node) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,81,reconditions.checkState(node.getType() == Token.NAME);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,82,his.name = node.getString();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,85,ameValueEntry(Var var) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,86,his.name = var.name;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,89,Override
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,90,ublic int hashCode() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,91,eturn name.hashCode();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,94,Override
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,95,ublic boolean equals(Object o) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,96,eturn o != null
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,97,& o instanceof NameValueEntry
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,98,& name.equals(((NameValueEntry)o).name);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,101,Override
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,102,ublic String toString() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,103,eturn name;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,108, An entry representing a NEW or CALL.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,110,tatic class CallValueEntry implements ValueEntry {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,111,rivate final Node node;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,113,allValueEntry(Node node) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,114,reconditions.checkState(
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,115,ode.getType() == Token.CALL || node.getType() == Token.NEW);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,116,his.node = node;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,119,Override
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,120,ublic int hashCode() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,121,eturn node.hashCode();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,124,Override
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,125,ublic boolean equals(Object o) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,126,eturn o != null
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,127,& o instanceof CallValueEntry
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,128,& node.equals(((CallValueEntry)o).node);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,131,Override
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,132,ublic String toString() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,133,eturn node.toString();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,137,"unctionSideEffectData(boolean extern, Scope scope) {"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,138,his.extern = extern;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,139,his.localScope = scope;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,140,heckInvariant();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,143,cope getScope() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,144,eturn localScope;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,147,"rivate Multimap<ValueEntry, ValueEntry> getValueInfluenceMap() {"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,148,eturn valueInfluenceMap;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,151,/ TODO(johnlenz): The use of isInformationStable and clearLocalityState
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,152,/ is fragile.  Consider using a singleton instance of FunctionSideEffectData
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,153,/ that represents this state (everything is mutating).
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,155,oolean isInformationStable() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,156,/ Once we know there are global changes and the result is non-local
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,157,/ there is no point in looking for additional information.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,158,eturn (mutatesGlobalState() && taintsReturn);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,162, Free up the data structure that are used to calculate value locality.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,164,oid clearLocalityState() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,165,onLocalValues = null;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,166,odifiedLocals = null;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,167,alueInfluenceMap = null;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,171, @param var
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,173,oid addModified(Var var) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,174,reconditions.checkState(var.scope == localScope);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,175,odifiedLocals.add(new NameValueEntry(var));
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,179, @param var
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,181,oid addNonLocalValue(Var var) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,182,reconditions.checkState(var.scope == localScope);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,183,onLocalValues.add(new NameValueEntry(var));
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,187, Add a value dependency from the source ValueEntry to the sink
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,188, ValueEntry.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,189, @param source
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,190, @param sink
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,192,"oid addInfluence(ValueEntry source, ValueEntry sink) {"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,193,"alueInfluenceMap.put(source, sink);"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,197, For use with NodeUtil#evaluatesToLocalValue
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,198, @return Whether the node represents a value that is currently considered
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,199,     a known-local-unescaped value.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,201,oolean isLocalValue(Node value) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,202,witch (value.getType()) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,203,ase Token.NAME:
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,204,tring name = value.getString();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,205,"eturn getScope().isDeclared(name, false)"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,206,& !nonLocalValues.contains(new NameValueEntry(value));
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,207,ase Token.CALL:
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,208,eturn !nonLocalValues.contains(new CallValueEntry(value));
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,210,eturn false;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,214, @returns false if function known to have side effects.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,216,oolean mayBePure() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,217,eturn !(functionThrows ||
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,218,aintsGlobalState ||
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,219,aintsThis ||
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,220,aintsArguments ||
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,221,aintsUnknown);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,225, @returns false if function known to be pure.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,227,oolean mayHaveSideEffects() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,228,eturn !pureFunction;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,232, Mark the function as being pure.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,234,oid setIsPure() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,235,ureFunction = true;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,236,heckInvariant();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,240," Marks the function as having ""modifies globals"" side effects."
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,242,oid setTaintsGlobalState() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,243,aintsGlobalState = true;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,244,heckInvariant();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,248," Marks the function as having ""modifies this"" side effects."
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,250,oid setTaintsThis() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,251,aintsThis = true;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,252,heckInvariant();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,256," Marks the function as having ""modifies arguments"" side effects."
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,258,oid setTaintsArguments() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,259,aintsArguments = true;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,260,heckInvariant();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,264," Marks the function as having ""throw"" side effects."
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,266,oid setFunctionThrows() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,267,unctionThrows = true;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,268,heckInvariant();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,272," Marks the function as having ""complex"" side effects that are"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,273, not otherwise explicitly tracked.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,275,oid setTaintsUnknown() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,276,aintsUnknown = true;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,277,heckInvariant();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,281, Marks the function as having non-local return result.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,283,oid setTaintsReturn() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,284,aintsReturn = true;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,285,heckInvariant();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,289, @return Whether the function has a non-local return value.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,291,oolean hasNonLocalReturnValue() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,292,eturn taintsReturn;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,296, Returns true if function mutates global state.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,298,oolean mutatesGlobalState() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,299,/ TODO(johnlenz): track arguments separately.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,300,eturn taintsGlobalState || taintsArguments || taintsUnknown;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,304," Returns true if function mutates ""this""."
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,306,oolean mutatesThis() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,307,eturn taintsThis;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,311," Returns true if function has an explicit ""throw""."
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,313,oolean functionThrows() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,314,eturn functionThrows;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,318, Verify internal consistency.  Should be called at the end of
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,319, every method that mutates internal state.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,321,rivate void checkInvariant() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,322,oolean invariant = mayBePure() || mayHaveSideEffects();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,323,f (!invariant) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,324,"hrow new IllegalStateException(""Invariant failed.  "" + toString());"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,329, Add a CALL or NEW node to the list of calls this function makes.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,331,oid appendCall(Node callNode) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,332,allsInFunctionBody.add(callNode);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,336, Gets the list of CALL and NEW nodes.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,338,ist<Node> getCallsInFunctionBody() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,339,eturn callsInFunctionBody;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,342,Override
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,343,ublic String toString() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,344,ist<String> status = Lists.newArrayList();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,345,f (extern) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,346,"tatus.add(""extern"");"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,349,f (pureFunction) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,350,"tatus.add(""pure"");"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,353,f (taintsThis) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,354,"tatus.add(""this"");"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,357,f (taintsGlobalState) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,358,"tatus.add(""global"");"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,361,f (functionThrows) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,362,"tatus.add(""throw"");"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,365,f (taintsUnknown) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,366,"tatus.add(""complex"");"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,369,"eturn ""Side effects: "" + status.toString();"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,373, Normalize the ValueEntry maps relation using the value dependencies
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,374, so that any non-local-value that may have been modified has been
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,375, accounted for.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,377,oid normalizeValueMaps() {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,379,/ Normalize the value influence map.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,381,f (!mutatesGlobalState() || !taintsReturn) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,382,/ propagate non-local objects values
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,383,/ Note: propagateNonLocal adds entries so grap a snapshot
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,384,/ as an array to interate over.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,385,or (ValueEntry entry : nonLocalValues.toArray(new ValueEntry[0])) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,386,ropagateNonLocal(entry);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,390,f (!mutatesGlobalState()) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,391,/ propagate object modification
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,392,/ Note: propagateNonLocal adds entries so grap a snapshot
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,393,/ as an array to interate over.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,394,or (ValueEntry entry : modifiedLocals.toArray(new ValueEntry[0])) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,395,ropagateModified(entry);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,399,/ Don't retain information that won't be used.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,400,f (isInformationStable()){
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,401,/ a global state change maybe a inner function modifying these local
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,402,"/ names, or a call to eval,  so there are locals that are known to be"
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,403,/ unmodified.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,404,learLocalityState();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,409, @param value A Var or token representing the value.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,410, @return Whether the FunctionInformation was updated.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,412,oolean maybePropagateNonLocal(ValueEntry value) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,413,f (!nonLocalValues.contains(value)) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,414,onLocalValues.add(value);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,415,eturn propagateNonLocal(value);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,417,eturn false;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,421, @param value The ValueEntry of interest.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,422, @return Whether the FunctionInformation was updated.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,424,oolean propagateNonLocal(ValueEntry value) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,425,reconditions.checkState(nonLocalValues != null);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,426,reconditions.checkState(modifiedLocals != null);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,428,oolean changed = false;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,429,f (modifiedLocals.contains(value)) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,430,f (!mutatesGlobalState()) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,431,etTaintsGlobalState();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,432,hanged = true;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,436,f (value == KeywordValueEntry.RETURN) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,437,f (!taintsReturn) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,438,etTaintsReturn();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,439,hanged = true;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,443,/ Add the value now to prevent recursion
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,444,ollection<ValueEntry> dependents = getValueInfluenceMap().get(value);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,445,f (dependents != null) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,446,or (ValueEntry dependent : dependents) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,447,f (!nonLocalValues.contains(dependent)) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,448,onLocalValues.add(dependent);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,449,hanged = propagateNonLocal(dependent) || changed;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,454,eturn changed;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,458, @param value A Var or token representing the value.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,459, @return Whether the FunctionInformation was updated.
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,461,rivate boolean propagateModified(ValueEntry value) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,462,reconditions.checkState(nonLocalValues != null);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,463,reconditions.checkState(modifiedLocals != null);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,465,oolean changed = false;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,466,f (nonLocalValues != null
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,467,& nonLocalValues.contains(value)) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,468,f (!mutatesGlobalState()) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,469,etTaintsUnknown();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,470,hanged = true;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,472, else if (value == KeywordValueEntry.THIS) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,473,f (!taintsThis) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,474,etTaintsThis();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,475,hanged = true;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,477, else if (value == KeywordValueEntry.ARGUMENTS) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,478,f (!taintsArguments) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,479,etTaintsArguments();
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,480,hanged = true;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,483,/ Add the value now to prevent recursion
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,484,ollection<ValueEntry> dependents = getValueInfluenceMap().get(value);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,485,f (dependents != null) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,486,or (ValueEntry dependent : dependents) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,487,f (!modifiedLocals.contains(dependent)) {
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,488,odifiedLocals.add(dependent);
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,489,hanged = propagateModified(dependent) || changed;
False,src/com/google/javascript/jscomp/FunctionSideEffectData.java,src/com/google/javascript/jscomp/FunctionSideEffectData.java,493,eturn changed;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,27,mport com.google.javascript.jscomp.FunctionSideEffectData.CallValueEntry;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,28,mport com.google.javascript.jscomp.FunctionSideEffectData.KeywordValueEntry;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,29,mport com.google.javascript.jscomp.FunctionSideEffectData.ValueEntry;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,30,mport com.google.javascript.jscomp.FunctionSideEffectData.NameValueEntry;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,43,import java.util.Collections;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,82,"rivate final Map<Node, FunctionSideEffectData> functionSideEffectMap;"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,79,"private final Map<Node, FunctionInformation> functionSideEffectMap;"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,138,"or (Map.Entry<Node, FunctionSideEffectData> entry :"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,135,"for (Map.Entry<Node, FunctionInformation> entry :"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,141,unctionSideEffectData functionInfo = entry.getValue();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,138,FunctionInformation functionInfo = entry.getValue();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,151,"or (Map.Entry<Node, FunctionSideEffectData> entry :"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,148,"for (Map.Entry<Node, FunctionInformation> entry :"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,154,unctionSideEffectData functionInfo = entry.getValue();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,151,FunctionInformation functionInfo = entry.getValue();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,257,"iGraph<FunctionSideEffectData, Node> sideEffectGraph ="
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,258,"ew LinkedDirectedGraph<FunctionSideEffectData, Node>();"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,254,"DiGraph<FunctionInformation, Node> sideEffectGraph ="
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,255,"new LinkedDirectedGraph<FunctionInformation, Node>();"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,261,or (FunctionSideEffectData functionInfo : functionSideEffectMap.values()) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,258,for (FunctionInformation functionInfo : functionSideEffectMap.values()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,266,or (FunctionSideEffectData functionInfo : functionSideEffectMap.values()) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,263,for (FunctionInformation functionInfo : functionSideEffectMap.values()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,288,unctionSideEffectData dep = functionSideEffectMap.get(defValue);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,285,FunctionInformation dep = functionSideEffectMap.get(defValue);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,300,or (FunctionSideEffectData functionInfo : functionSideEffectMap.values()) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,297,for (FunctionInformation functionInfo : functionSideEffectMap.values()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,324,unctionSideEffectData functionInfo =
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,321,FunctionInformation functionInfo =
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,333,f (functionInfo.functionThrows()) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,330,if (functionInfo.functionThrows) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,338,f (functionInfo.mutatesThis()) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,335,if (functionInfo.taintsThis) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,343,f (functionInfo.hasNonLocalReturnValue()) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,340,if (functionInfo.taintsReturn) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,384,// Functions need to be processed as part of pre-traversal so an
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,385,// entry for the enclosing function exists in the
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,386,// FunctionInformation map when processing assignments and calls
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,387,// inside visit.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,388,if (NodeUtil.isFunction(node)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,389,Node gramp = parent.getParent();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,390,"visitFunction(traversal, node, parent, gramp);"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,410,unctionSideEffectData sideEffectInfo =
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,414,FunctionInformation sideEffectInfo =
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,441,f (value != null && !analyzeSet(
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,442,"ew NameValueEntry(node), value, sideEffectInfo)) {"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,445,if (value != null && !NodeUtil.evaluatesToLocalValue(value)) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,445,ideEffectInfo.addNonLocalValue(var);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,448,sideEffectInfo.blacklistLocal(var);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,452,f (node.hasChildren() && !analyzeSet(
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,453,"eywordValueEntry.RETURN, node.getFirstChild(),"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,454,ideEffectInfo)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,455,if (node.hasChildren()
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,456,&& !NodeUtil.evaluatesToLocalValue(node.getFirstChild())) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,468,ublic void enterScope(NodeTraversal traversal) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,469,ode enclosingFunction = traversal.getEnclosingFunction();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,470,f (enclosingFunction != null) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,471,/ Functions need to be processed as part of pre-traversal so an
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,472,/ entry for the enclosing function exists in the
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,473,/ FunctionInformation map when processing assignments and calls
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,474,/ inside visit.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,475,"isitFunction(traversal, enclosingFunction);"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,470,public void enterScope(NodeTraversal t) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,471,// Nothing to do.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,481,f (t.inGlobalScope() || inExterns) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,476,if (t.inGlobalScope()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,485,unctionSideEffectData sideEffectInfo =
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,486,unctionSideEffectMap.get(t.getScopeRoot());
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,480,// Handle deferred local variable modifications:
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,482,FunctionInformation sideEffectInfo =
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,483,functionSideEffectMap.get(t.getScopeRoot());
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,484,if (sideEffectInfo.mutatesGlobalState()){
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,485,sideEffectInfo.resetLocalVars();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,486,return;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,488,ideEffectInfo.normalizeValueMaps();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,489,for (Iterator<Var> i = t.getScope().getVars(); i.hasNext();) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,490,Var v = i.next();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,491,boolean localVar = false;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,492,// Parameters and catch values come can from other scopes.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,493,if (v.getParentNode().getType() == Token.VAR) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,494,// TODO(johnlenz): create a useful parameter list
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,495,sideEffectInfo.knownLocals.add(v.getName());
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,496,localVar = true;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,499,// Take care of locals that might have been tainted.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,500,if (!localVar || sideEffectInfo.blacklisted.contains(v)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,501,if (sideEffectInfo.taintedLocals.contains(v)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,502,// If the function has global side-effects
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,503,// don't bother with the local side-effects.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,504,sideEffectInfo.setTaintsUnknown();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,505,sideEffectInfo.resetLocalVars();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,506,break;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,511,sideEffectInfo.taintedLocals = null;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,512,sideEffectInfo.blacklisted = null;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,493, assignment or mutating unary operator.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,518,* assigment or mutating unary operator.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,502,"unctionSideEffectData sideEffectInfo,"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,527,"FunctionInformation sideEffectInfo,"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,520,& !analyzeSet(
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,521,"ew NameValueEntry(lhs), rhs, sideEffectInfo)) {"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,522,ideEffectInfo.addNonLocalValue(var);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,545,&& !NodeUtil.evaluatesToLocalValue(rhs)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,546,sideEffectInfo.blacklistLocal(var);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,540,ideEffectInfo.addModified(var);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,564,sideEffectInfo.addTaintedLocalObject(var);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,558,"rivate void visitCall(FunctionSideEffectData sideEffectInfo, Node node) {"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,582,"private void visitCall(FunctionInformation sideEffectInfo, Node node) {"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,577,"rivate void visitFunction(NodeTraversal traversal, Node node) {"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,601,"private void visitFunction(NodeTraversal traversal,"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,602,"Node node,"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,603,"Node parent,"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,604,Node gramp) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,580,unctionSideEffectData sideEffectInfo = new FunctionSideEffectData(
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,581,"nExterns, traversal.getScope());"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,607,FunctionInformation sideEffectInfo = new FunctionInformation(inExterns);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,584,f (!inExterns) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,585,cope localScope = traversal.getScope();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,587,/ Only vars and function declarations maybe known to be local.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,588,/ Parameters and catch exception definitions are are not tracked
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,589,/ so mark them non-local immediately.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,590,terator<Var> i = localScope.getVars();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,591,hile (i.hasNext()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,592,ar v = i.next();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,593,ode parent = v.getParentNode();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,594,f (parent.getType() == Token.LP
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,595,| parent.getType() == Token.CATCH) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,596,/ TODO(johnlenz): Allow function parameters
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,597,ideEffectInfo.addNonLocalValue(v);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,602,"rocessFunctionAnnotations(sideEffectInfo, traversal, node);"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,606, Update the function side effect info for any user provided annotations.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,607, Reports discovered invalid usages of these annotations.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,609,rivate void processFunctionAnnotations(
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,610,"unctionSideEffectData sideEffectInfo,"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,611,"odeTraversal traversal, Node function) {"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,612,/ Infer the locality of the return type
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,614,SType jstype = function.getJSType();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,611,JSType jstype = node.getJSType();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,628,SDocInfo info = getJSDocInfoForFunction(function);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,625,"JSDocInfo info = getJSDocInfoForFunction(node, parent, gramp);"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,636,"raversal.report(function, INVALID_MODIFIES_ANNOTATION);"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,633,"traversal.report(node, INVALID_MODIFIES_ANNOTATION);"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,645,"raversal.report(function, INVALID_MODIFIES_ANNOTATION);"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,642,"traversal.report(node, INVALID_MODIFIES_ANNOTATION);"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,654,"raversal.report(function, INVALID_NO_SIDE_EFFECT_ANNOTATION);"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,651,"traversal.report(node, INVALID_NO_SIDE_EFFECT_ANNOTATION);"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,682,rivate void visitThrow(FunctionSideEffectData sideEffectInfo) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,679,private void visitThrow(FunctionInformation sideEffectInfo) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,689,rivate JSDocInfo getJSDocInfoForFunction(Node node) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,690,ode parent = node.getParent();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,686,private JSDocInfo getJSDocInfoForFunction(
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,687,"Node node, Node parent, Node gramp) {"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,695,ode gramp = parent.getParent();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,742, Check local values and updates the value influence map.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,743, @param lValue A var name or token value used in the value influence map.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,745, @return Whether the node is maybe to be a value that has not escaped
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,746,     the local scope.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,738,* @return Whether the node is known to be a value that is not a reference
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,739,*     outside the local scope.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,748,rivate static boolean analyzeSet(
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,749,"inal ValueEntry lValue,"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,750,"ode rValue,"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,751,inal FunctionSideEffectData info) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,753,inal boolean isReturnResult = lValue.equals(KeywordValueEntry.RETURN);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,755,/ Create a predicate for NodeUtil#evaluatesToLocalValue.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,756,inal Predicate<Node> taintingPredicate = new Predicate<Node>() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,741,private static boolean isKnownLocalValue(final Node value) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,742,Predicate<Node> taintingPredicate = new Predicate<Node>() {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,761,"/ Check the LHS of the assignment, the RHS will be evaluated"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,762,/ separately.  If the LHS is a local NAME add that dependency on
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,763,/ that value as it is a alias of the RHS value.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,765,"/ Aliases of immutable RHS values don't matter, but should already"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,766,/ be filtered out.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,767,reconditions.checkState(
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,768,NodeUtil.isImmutableValue(value.getLastChild()));
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,769,ode lhs = value.getFirstChild();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,770,f (NodeUtil.isName(lhs)
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,771,"& info.getScope().isDeclared(lhs.getString(), false)) {"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,772,ddValue(lhs);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,773,eturn true;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,775,/ Don't attempt to track an aliasing property assignment.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,747,"// The assignment might cause an alias, look at the lhs."
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,778,"/ changes to ""this"" now change ""key"", changes to ""key"" will"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,779,"/ also infer a change to ""this""."
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,780,ddValue(KeywordValueEntry.THIS);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,781,eturn true;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,750,// TODO(johnlenz): maybe redirect this to be a tainting list for 'this'.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,751,return false;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,783,"/ add to local tainting list, if the NAME"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,753,"// TODO(johnlenz): add to local tainting list, if the NAME"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,785,"f (info.getScope().isDeclared(value.getString(), false)) {"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,786,ddValue(value);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,787,eturn true;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,790,ase Token.CALL:
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,791,/ For calls the taint is the actual call node.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,792,ddCall(value);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,793,eturn true;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,798,efault:
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,799,"hrow new IllegalStateException(""unexpected"");"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,803,rivate void addCall(Node callNode) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,804,reconditions.checkState(callNode.getType() == Token.CALL);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,805,"nfo.addInfluence(new CallValueEntry(callNode), lValue);"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,808,rivate void addValue(Node name) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,809,alueEntry value = new NameValueEntry(name);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,810,ddValue(value);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,813,rivate void addValue(ValueEntry value) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,814,/ The value and keys maybe aliases
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,815,"nfo.addInfluence(value, lValue);"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,816,f (!isReturnResult) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,817,"nfo.addInfluence(lValue, value);"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,760,case Token.CALL:
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,761,"// TODO(johnlenz): add to local tainting list, if the call result"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,762,// is not known to be a local result.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,763,return false;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,765,return false;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,822,/ Walk the expression with the provided predicate.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,823,"eturn NodeUtil.evaluatesToLocalValue(rValue, taintingPredicate);"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,826,rivate static Predicate<Node> getLocalPredicate(
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,827,inal FunctionSideEffectData caller) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,828,eturn new Predicate<Node>() {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,829,Override
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,830,ublic boolean apply(Node value) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,831,eturn caller.isLocalValue(value);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,769,"return NodeUtil.evaluatesToLocalValue(value, taintingPredicate);"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,840,"mplements EdgeCallback<FunctionSideEffectData, Node> {"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,841,"ublic boolean traverseEdge(final FunctionSideEffectData callee,"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,842,"inal Node callSite,"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,843,inal FunctionSideEffectData caller) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,776,"implements EdgeCallback<FunctionInformation, Node> {"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,777,"public boolean traverseEdge(FunctionInformation callee,"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,778,"Node callSite,"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,779,FunctionInformation caller) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,848,f (caller.isInformationStable()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,849,/ There is no more useful information to be gathered.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,850,eturn false;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,863,redicate<Node> locals = getLocalPredicate(caller);
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,864,f (callee.hasNonLocalReturnValue()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,865,f (caller.maybePropagateNonLocal(new CallValueEntry(callSite))) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,866,hanged = true;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,875,f (objectNode != null && NodeUtil.isThis(objectNode)) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,876,f (!caller.mutatesThis()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,877,aller.setTaintsThis();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,878,hanged = true;
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,880, else if (objectNode != null && !isCallOrApply(callSite)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,799,if (objectNode != null && NodeUtil.isName(objectNode)
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,800,&& !isCallOrApply(callSite)) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,885,/ TODO(johnlenz): We can improve this by including literal values
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,886,/ that we know for sure are not null.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,805,String name = objectNode.getString();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,888,/ Modifying 'this' on a known local object doesn't change any
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,889,/ significant state.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,890,"f (!NodeUtil.evaluatesToLocalValue(objectNode, locals)) {"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,807,// TODO(nicksantos): Turn this back on when locals-tracking
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,808,// is fixed. See testLocalizedSideEffects11.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,809,//if (!caller.knownLocals.contains(name)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,815,} else if (objectNode != null && NodeUtil.isThis(objectNode)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,816,if (!caller.mutatesThis()) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,817,caller.setTaintsThis();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,818,changed = true;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,820,} else if (objectNode != null
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,821,&& NodeUtil.evaluatesToLocalValue(objectNode)
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,822,&& !isCallOrApply(callSite)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,823,// Modifying 'this' on a known local object doesn't change any
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,824,// significant state.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,825,// TODO(johnlenz): We can improve this by including literal values
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,826,// that we know for sure are not null.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,903,f (caller.isInformationStable()) {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,904,"/ Once the caller has reach a stable state, clear the local state"
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,905,/ to avoid memory being a memory hog.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,906,aller.clearLocalityState();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,875,* Keeps track of a function's known side effects by type and the
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,876,* list of calls that appear in a function's body.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,878,private static class FunctionInformation {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,879,private final boolean extern;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,880,private final List<Node> callsInFunctionBody = Lists.newArrayList();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,881,private Set<Var> blacklisted = Sets.newHashSet();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,882,private Set<Var> taintedLocals = Sets.newHashSet();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,883,private Set<String> knownLocals = Sets.newHashSet();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,884,private boolean pureFunction = false;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,885,private boolean functionThrows = false;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,886,private boolean taintsGlobalState = false;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,887,private boolean taintsThis = false;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,888,private boolean taintsArguments = false;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,889,private boolean taintsUnknown = false;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,890,private boolean taintsReturn = false;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,892,FunctionInformation(boolean extern) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,893,this.extern = extern;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,894,checkInvariant();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,898,* @param var
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,900,void addTaintedLocalObject(Var var) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,901,taintedLocals.add(var);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,904,void resetLocalVars() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,905,blacklisted = null;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,906,taintedLocals = null;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,907,knownLocals = Collections.emptySet();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,911,* @param var
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,913,public void blacklistLocal(Var var) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,914,blacklisted.add(var);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,918,* @returns false if function known to have side effects.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,920,boolean mayBePure() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,921,return !(functionThrows ||
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,922,taintsGlobalState ||
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,923,taintsThis ||
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,924,taintsArguments ||
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,925,taintsUnknown);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,929,* @returns false if function known to be pure.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,931,boolean mayHaveSideEffects() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,932,return !pureFunction;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,936,* Mark the function as being pure.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,938,void setIsPure() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,939,pureFunction = true;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,940,checkInvariant();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,944,"* Marks the function as having ""modifies globals"" side effects."
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,946,void setTaintsGlobalState() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,947,taintsGlobalState = true;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,948,checkInvariant();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,952,"* Marks the function as having ""modifies this"" side effects."
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,954,void setTaintsThis() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,955,taintsThis = true;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,956,checkInvariant();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,960,"* Marks the function as having ""modifies arguments"" side effects."
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,962,void setTaintsArguments() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,963,taintsArguments = true;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,964,checkInvariant();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,968,"* Marks the function as having ""throw"" side effects."
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,970,void setFunctionThrows() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,971,functionThrows = true;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,972,checkInvariant();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,976,"* Marks the function as having ""complex"" side effects that are"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,977,* not otherwise explicitly tracked.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,979,void setTaintsUnknown() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,980,taintsUnknown = true;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,981,checkInvariant();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,985,* Marks the function as having non-local return result.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,987,void setTaintsReturn() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,988,taintsReturn = true;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,989,checkInvariant();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,994,* Returns true if function mutates global state.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,996,boolean mutatesGlobalState() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,997,// TODO(johnlenz): track arguments separately.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,998,return taintsGlobalState || taintsArguments || taintsUnknown;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1002,"* Returns true if function mutates ""this""."
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1004,boolean mutatesThis() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1005,return taintsThis;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1009,"* Returns true if function has an explicit ""throw""."
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1011,boolean functionThrows() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1012,return functionThrows;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1016,* Verify internal consistency.  Should be called at the end of
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1017,* every method that mutates internal state.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1019,private void checkInvariant() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1020,boolean invariant = mayBePure() || mayHaveSideEffects();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1021,if (!invariant) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1022,"throw new IllegalStateException(""Invariant failed.  "" + toString());"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1027,* Add a CALL or NEW node to the list of calls this function makes.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1029,void appendCall(Node callNode) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1030,callsInFunctionBody.add(callNode);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1034,* Gets the list of CALL and NEW nodes.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1036,List<Node> getCallsInFunctionBody() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1037,return callsInFunctionBody;
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1040,@Override
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1041,public String toString() {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1042,List<String> status = Lists.newArrayList();
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1043,if (extern) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1044,"status.add(""extern"");"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1047,if (pureFunction) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1048,"status.add(""pure"");"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1051,if (taintsThis) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1052,"status.add(""this"");"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1055,if (taintsGlobalState) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1056,"status.add(""global"");"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1059,if (functionThrows) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1060,"status.add(""throw"");"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1063,if (taintsUnknown) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1064,"status.add(""complex"");"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,1067,"return ""Side effects: "" + status.toString();"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,240,"mmutableList.<String>of(""externObjSEThis"", ""f""));"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,240,"ImmutableList.<String>of(""externObjSEThis""));"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,536,ublic void testResultLocalitySimpleSample() throws Exception {
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,537,"tring prefix = ""var g; function f(){"";"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,538,"tring suffix = ""} f()"";"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,539,"ist<String> expected = ImmutableList.of(""f"");"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,540,ist<String> notExpected = ImmutableList.of();
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,542,/ global result
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,543,heckLocalityOfMarkedCalls(
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,544,"refix + ""var a = (g = []); return a"" + suffix, notExpected);"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,573,/ local var.
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,562,"// local var, not yet."
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,575,"refix + ""var a = 1; return a"" + suffix, expected);"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,564,"prefix + ""var a = 1; return a"" + suffix, notExpected);"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,577,/ mutate local var.
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,566,"// mutate local var, not yet."
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,579,"refix + ""var a = 1; a = 2; return a"" + suffix, expected);"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,568,"prefix + ""var a = 1; a = 2; return a"" + suffix, notExpected);"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,583,/ Global aliases of immutables is ok.
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,584,heckLocalityOfMarkedCalls(
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,585,"refix + ""var a = (g = 2); return a"" + suffix, expected);"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,587,heckLocalityOfMarkedCalls(
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,588,"refix + ""var a = (g = []); return a"" + suffix, notExpected);"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,777,"mmutableList.<String>of(""A"", ""f""));"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,758,"ImmutableList.<String>of(""A""));"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,797,ublic void testLocalizedSideEffects12() throws Exception {
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,798,/ A expression containing an assignment is an alias of the value
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,799,"heckMarkedCalls(""var g = 1;"" +"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,800,"function f() {"" +"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,801,"  var a = (g = new Foo); return a;"" +"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,803,"f()"","
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,804,mmutableList.<String>of());
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,807,ublic void testLocalizedSideEffects13() throws Exception {
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,808,"/ A expression containing an assignment is an alias of the value, but"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,809,"/ aliasing an immutable value doesn't matter, but the global side-effect"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,810,/ does.
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,811,"heckMarkedCalls(""var g = 1;"" +"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,812,"function f() {"" +"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,813,"  var a = (g = 2); return a;"" +"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,815,"f()"","
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,816,mmutableList.<String>of());
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,1073,"heckMarkedCalls(source, ImmutableList.<String>of(""A"", ""A"", ""f"", ""g""));"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,1032,"checkMarkedCalls(source, ImmutableList.<String>of(""A"", ""A"", ""f""));"
