is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,524,| (objType.isNamedType() && objType.isUnknownType())
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,524,|| objType.isUnknownType() /* unresolved types */
False,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,38,"tatic final String GET_UNIQUE_ID_FUNCTION = ""goog.events.getUniqueId"";"
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,38,"static final String GET_UNIQUE_ID_FUNCTION = "".getUniqueId"";"
False,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,90, Returns whether the node is an argument of a goog.events.getUniqueId
False,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,91, call.
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,90,* Returns whether the node is an argument of a function that returns
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,91,* a unique id (the last part of the qualified name matches
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,92,* GET_UNIQUE_ID_FUNCTION).
False,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,94,eturn parent.getType() == Token.CALL &&
False,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,95,ET_UNIQUE_ID_FUNCTION.equals(
False,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,96,arent.getFirstChild().getQualifiedName());
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,95,String name = parent.getType() == Token.CALL ?
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,96,parent.getFirstChild().getQualifiedName() : null;
True,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,src/com/google/javascript/jscomp/CheckMissingGetCssName.java,98,return name != null && name.endsWith(GET_UNIQUE_ID_FUNCTION);
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,479,rivate List<JSSourceFile> getDefaultExterns() throws IOException {
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,479,public static List<JSSourceFile> getDefaultExterns() throws IOException {
False,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,105,ptions.extractPrototypeMemberDeclarations = true;
False,src/com/google/javascript/jscomp/ConcreteType.java,src/com/google/javascript/jscomp/ConcreteType.java,22,mport com.google.javascript.jscomp.DataFlowAnalysis.LatticeElement;
False,src/com/google/javascript/jscomp/DataFlowAnalysis.java,src/com/google/javascript/jscomp/DataFlowAnalysis.java,73," {@link #flowThrough(Object, DataFlowAnalysis.LatticeElement)}."
True,src/com/google/javascript/jscomp/DataFlowAnalysis.java,src/com/google/javascript/jscomp/DataFlowAnalysis.java,73,"* {@link #flowThrough(Object, LatticeElement)}."
False,src/com/google/javascript/jscomp/DataFlowAnalysis.java,src/com/google/javascript/jscomp/DataFlowAnalysis.java,88,"bstract class DataFlowAnalysis<N, L extends DataFlowAnalysis.LatticeElement> {"
False,src/com/google/javascript/jscomp/DataFlowAnalysis.java,src/com/google/javascript/jscomp/DataFlowAnalysis.java,91, A lattice element in the data flow analysis.
False,src/com/google/javascript/jscomp/DataFlowAnalysis.java,src/com/google/javascript/jscomp/DataFlowAnalysis.java,93,tatic interface LatticeElement {
True,src/com/google/javascript/jscomp/DataFlowAnalysis.java,src/com/google/javascript/jscomp/DataFlowAnalysis.java,88,"abstract class DataFlowAnalysis<N, L extends LatticeElement> {"
False,src/com/google/javascript/jscomp/DisambiguateProperties.java,src/com/google/javascript/jscomp/DisambiguateProperties.java,672,type.isNamedType() && type.isUnknownType())) {
True,src/com/google/javascript/jscomp/DisambiguateProperties.java,src/com/google/javascript/jscomp/DisambiguateProperties.java,672,type.isUnknownType() /* unresolved types */) {
False,src/com/google/javascript/jscomp/FlowScope.java,src/com/google/javascript/jscomp/FlowScope.java,19,mport com.google.javascript.jscomp.DataFlowAnalysis.LatticeElement;
True,src/com/google/javascript/jscomp/LatticeElement.java,src/com/google/javascript/jscomp/LatticeElement.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/LatticeElement.java,src/com/google/javascript/jscomp/LatticeElement.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/LatticeElement.java,src/com/google/javascript/jscomp/LatticeElement.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/LatticeElement.java,src/com/google/javascript/jscomp/LatticeElement.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/LatticeElement.java,src/com/google/javascript/jscomp/LatticeElement.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/LatticeElement.java,src/com/google/javascript/jscomp/LatticeElement.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/LatticeElement.java,src/com/google/javascript/jscomp/LatticeElement.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/LatticeElement.java,src/com/google/javascript/jscomp/LatticeElement.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/LatticeElement.java,src/com/google/javascript/jscomp/LatticeElement.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/LatticeElement.java,src/com/google/javascript/jscomp/LatticeElement.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/LatticeElement.java,src/com/google/javascript/jscomp/LatticeElement.java,17,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/LatticeElement.java,src/com/google/javascript/jscomp/LatticeElement.java,20,* A lattice element.
True,src/com/google/javascript/jscomp/LatticeElement.java,src/com/google/javascript/jscomp/LatticeElement.java,24,interface LatticeElement {
False,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,70,tatic class LiveVariableLattice implements DataFlowAnalysis.LatticeElement {
True,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,src/com/google/javascript/jscomp/LiveVariablesAnalysis.java,70,static class LiveVariableLattice implements LatticeElement {
False,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,84,tatic final class ReachingUses implements DataFlowAnalysis.LatticeElement {
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,84,static final class ReachingUses implements LatticeElement {
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,19,mport javax.annotation.Nullable;
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,33,import javax.annotation.Nullable;
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,102,tatic final class MustDef implements DataFlowAnalysis.LatticeElement {
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,103,static final class MustDef implements LatticeElement {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,42,mport com.google.javascript.rhino.jstype.NamedType;
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,45,mport com.google.javascript.rhino.jstype.UnionType;
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,792,tring unresolvedReference = getUnresolvedReference(type);
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,793,f (unresolvedReference != null) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,794,ompiler.report(
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,795,".makeError(n, reportUnknownTypes,"
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,796,"NRESOLVED_TYPE, unresolvedReference));"
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,797, else {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,798,ompiler.report(
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,799,".makeError(n, reportUnknownTypes, UNKNOWN_EXPR_TYPE));"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,790,compiler.report(
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,791,"t.makeError(n, reportUnknownTypes, UNKNOWN_EXPR_TYPE));"
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,809, Looks through the type to see if it contains an unresolved reference.  This
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,810," is often the reason that a type is unresolved, and it can occur because of"
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,811, a simple misspelling of a type name.
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,813,rivate String getUnresolvedReference(JSType type) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,814,f (type.isNamedType()) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,815,amedType namedType = (NamedType) type;
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,816,f (!namedType.isResolved()) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,817,eturn namedType.getReferenceName();
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,819, else if (type.isUnionType()) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,820,or (JSType alt : ((UnionType) type).getAlternates()) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,821,f (alt.isUnknownType()) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,822,tring unresolvedReference = getUnresolvedReference(alt);
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,823,f (unresolvedReference != null) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,824,eturn unresolvedReference;
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,829,eturn null;
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,19,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,20,import com.google.common.collect.Sets;
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,21,mport com.google.javascript.rhino.jstype.FunctionPrototypeType;
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,28,import java.util.Set;
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,49,ode rhs = n.getFirstChild().getFirstChild();
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,51,Node rhs = n.getFirstChild().getLastChild();
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,77,rivate String getFunctionAnnotation(Node node) {
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,79,private String getFunctionAnnotation(Node fnNode) {
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,80,Preconditions.checkState(fnNode.getType() == Token.FUNCTION);
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,80,SType type = node.getJSType();
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,83,JSType type = fnNode.getJSType();
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,86,unctionType funType = (FunctionType) node.getJSType();
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,89,FunctionType funType = (FunctionType) fnNode.getJSType();
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,95,ode fnNode = funType.getSource();
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,133,"// Avoid duplicates, add implemented type to a set first"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,134,Set<String> interfaces = Sets.newTreeSet();
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,136,interfaces.add(interfaze.toString());
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,138,for (String interfaze : interfaces) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,240,ublic boolean isNamedType() {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,240,boolean isNamedType() {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,42,import static com.google.javascript.rhino.jstype.JSTypeNative.ALL_TYPE;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,43,import static com.google.javascript.rhino.jstype.JSTypeNative.ARRAY_TYPE;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,44,import static com.google.javascript.rhino.jstype.JSTypeNative.NO_TYPE;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,45,import static com.google.javascript.rhino.jstype.JSTypeNative.UNKNOWN_TYPE;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,46,import static com.google.javascript.rhino.jstype.JSTypeNative.VOID_TYPE;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,48,import com.google.common.annotations.VisibleForTesting;
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,51,mport static com.google.javascript.rhino.jstype.JSTypeNative.ALL_TYPE;
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,52,mport static com.google.javascript.rhino.jstype.JSTypeNative.ARRAY_TYPE;
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,53,mport static com.google.javascript.rhino.jstype.JSTypeNative.NO_TYPE;
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,54,mport static com.google.javascript.rhino.jstype.JSTypeNative.UNKNOWN_TYPE;
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,55,mport static com.google.javascript.rhino.jstype.JSTypeNative.VOID_TYPE;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1188,* Creates a named type.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1190,@VisibleForTesting
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1191,"public JSType createNamedType(String reference,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1192,"String sourceName, int lineno, int charno) {"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1193,"return new NamedType(this, reference, sourceName, lineno, charno);"
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,79,ublic class NamedType extends ProxyObjectType {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,79,class NamedType extends ProxyObjectType {
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,102,"ublic NamedType(JSTypeRegistry registry, String reference,"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,102,"NamedType(JSTypeRegistry registry, String reference,"
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,139,ublic boolean isNamedType() {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,139,boolean isNamedType() {
True,test/com/google/javascript/jscomp/CheckMissingGetCssNameTest.java,test/com/google/javascript/jscomp/CheckMissingGetCssNameTest.java,43,"testNotMissing(""var s = joe.random.getUniqueId('joe-is-a-goob')"");"
False,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,26,mport com.google.javascript.jscomp.DataFlowAnalysis.LatticeElement;
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,31,mport com.google.javascript.rhino.jstype.NamedType;
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,588,ssertTypeEquals(createNullableType(new NamedType(
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,589,"egistry, ""foo.Hello.World"", null, -1, -1)),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,587,assertTypeEquals(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,588,createNullableType(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,589,registry.createNamedType(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,590,"""foo.Hello.World"", null, -1, -1)),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,654,"ew NamedType(registry, ""goog.foo.Bar"", null, -1, -1),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,655,"registry.createNamedType(""goog.foo.Bar"", null, -1, -1),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,662,"ew NamedType(registry, ""goog.foo.Bar"", null, -1, -1),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,663,"registry.createNamedType(""goog.foo.Bar"", null, -1, -1),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,968,"ew NamedType(registry, ""com.google.Foo.Bar.Hello.World"", null, -1, -1),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,969,registry.createNamedType(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,970,"""com.google.Foo.Bar.Hello.World"", null, -1, -1),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,976,"ew NamedType(registry, ""com.google.Foo.Bar.Hello.World"", null, -1, -1),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,978,registry.createNamedType(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,979,"""com.google.Foo.Bar.Hello.World"", null, -1, -1),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,986,"ssertTypeEquals(new NamedType(registry, ""SomeInterface"", null, -1, -1),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,989,"assertTypeEquals(registry.createNamedType(""SomeInterface"", null, -1, -1),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1012,"ew NamedType(registry, ""some_++#%$%_UglyString"", null, -1, -1),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1015,"registry.createNamedType(""some_++#%$%_UglyString"", null, -1, -1),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1440,"ssertTypeEquals(new NamedType(registry, ""FooBar"", null, 0, 0),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1443,"assertTypeEquals(registry.createNamedType(""FooBar"", null, 0, 0),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1583,"ssertTypeEquals(new NamedType(registry, ""SomeInterface"", null, -1, -1),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1586,"assertTypeEquals(registry.createNamedType(""SomeInterface"", null, -1, -1),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1595,"ssertTypeEquals(new NamedType(registry, ""SomeInterface1"", null, -1, -1),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1598,"assertTypeEquals(registry.createNamedType(""SomeInterface1"", null, -1, -1),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1597,"ssertTypeEquals(new NamedType(registry, ""SomeInterface2"", null, -1, -1),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1600,"assertTypeEquals(registry.createNamedType(""SomeInterface2"", null, -1, -1),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1632,"ssertTypeEquals(new NamedType(registry, ""Extended"", null, -1, -1),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1635,"assertTypeEquals(registry.createNamedType(""Extended"", null, -1, -1),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1647,"ssertTypeEquals(new NamedType(registry, ""Disposable"", null, -1, -1),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1650,"assertTypeEquals(registry.createNamedType(""Disposable"", null, -1, -1),"
