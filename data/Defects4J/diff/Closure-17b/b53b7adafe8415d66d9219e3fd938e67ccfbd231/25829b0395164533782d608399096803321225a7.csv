is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,22,import com.google.javascript.jscomp.AbstractCompiler.LifeCycleStage;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,24,import com.google.javascript.jscomp.Scope.Var;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,50,/ TODO(johnlenz): Remove this.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,51,"ptimizeParameters(AbstractCompiler compiler, NameReferenceGraph unused) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,52,his(compiler);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,55,Preconditions.checkState(
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,56,compiler.getLifeCycleStage() == LifeCycleStage.NORMALIZED);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,185,boolean continueLooking = false;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,194,"uildParameterList(parameters, cur);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,194,"continueLooking = buildParameterList(parameters, cur, site.scope);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,197,"indConstantParameters(parameters, cur);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,197,"continueLooking= findFixedParameters(parameters, cur);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,199,if (!continueLooking) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,200,return;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,204,continueLooking = adjustForSideEffects(parameters);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,205,if (!continueLooking) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,206,return;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,206,"ptimizeCallSite(parameters, call);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,214,"optimizeCallSite(defFinder, parameters, call);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,217,"rivate void findConstantParameters(List<Parameter> parameters, Node cur) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,226,* Adjust the parameters to move based on the side-effects seen.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,227,* @return Whether there are any movable parameters.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,229,private boolean adjustForSideEffects(List<Parameter> parameters) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,230,"// If a parameter is moved, that has side-effect no parameters that"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,231,// can be effected by side-effects can be left.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,233,"// A parameter can be moved if it can't be side-effected (immutable),"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,234,"// or there are no following side-effects, that aren't moved."
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,236,boolean anyMovable = false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,237,boolean seenUnmovableSideEffects = false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,238,boolean seenUnmoveableSideEfffected = false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,239,for (int i = parameters.size() - 1; i >= 0; i--) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,240,Parameter current = parameters.get(i);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,242,"// Preserve side-effect ordering, don't move this parameter if:"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,243,// * the current parameter has side-effects and a following
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,244,// parameters that will not be move can be effected.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,245,// * the current parameter can be effected and a following
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,246,// parameter that will not be moved has side-effects
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,248,if (current.shouldRemove
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,249,&& ((seenUnmovableSideEffects && current.canBeSideEffected())
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,250,|| (seenUnmoveableSideEfffected && current.hasSideEffects()))) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,251,current.shouldRemove = false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,254,if (current.shouldRemove) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,255,anyMovable = true;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,256,} else {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,257,if (current.canBeSideEffected) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,258,seenUnmoveableSideEfffected = true;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,261,if (current.hasSideEffects) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,262,seenUnmovableSideEffects = true;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,266,return anyMovable;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,270,* Detemine which parameter use the same expression.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,271,* @return Whether any parameter was found that can be updated.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,273,"private boolean findFixedParameters(List<Parameter> parameters, Node cur) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,274,boolean anyMovable = false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,277,Parameter p;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,221,"arameters.add(new Parameter(cur, false));"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,222, else if (parameters.get(index).shouldRemove()) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,223,ode value = parameters.get(index).getArg();
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,224,"f (!nodesAreEqual(cur, value)) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,225,arameters.get(index).setShouldRemove(false);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,279,"p = new Parameter(cur, false);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,280,parameters.add(p);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,281,} else {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,282,p = parameters.get(index);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,283,if (p.shouldRemove()) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,284,Node value = p.getArg();
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,285,if (!cur.isEquivalentTo(value)) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,286,p.setShouldRemove(false);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,287,} else {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,288,anyMovable = true;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,293,"setParameterSideEffectInfo(p, cur);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,301,return anyMovable;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,236,"rivate void buildParameterList(List<Parameter> parameters, Node cur) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,305,* @return Whether any parameter was movable.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,307,private boolean buildParameterList(
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,308,"List<Parameter> parameters, Node cur, Scope s) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,309,boolean anyMovable = false;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,238,"arameters.add(new Parameter(cur, NodeUtil.isLiteralValue(cur, false)));"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,311,"boolean movable = isMovableValue(cur, s);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,312,"Parameter p = new Parameter(cur, movable);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,313,"setParameterSideEffectInfo(p, cur);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,314,parameters.add(p);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,315,if (movable) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,316,anyMovable = true;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,319,return anyMovable;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,322,"private void setParameterSideEffectInfo(Parameter p, Node value) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,323,if (!p.hasSideEffects()) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,324,"p.setHasSideEffects(NodeUtil.mayHaveSideEffects(value, compiler));"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,327,if (!p.canBeSideEffected()) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,328,p.setCanBeSideEffected(NodeUtil.canBeSideEffected(value));
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,334,* @return Whether the expression can be safely moved to another function
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,335,*   in another scope.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,337,"private boolean isMovableValue(Node n, Scope s) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,338,"// Things that can change value or are inaccessible can't be moved, these"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,339,"// are ""this"", ""arguments"", local names, and functions that capture local"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,340,// values.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,341,switch (n.getType()) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,342,case Token.THIS:
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,343,return false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,344,case Token.FUNCTION:
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,345,// Don't move function closures.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,346,// TODO(johnlenz): Closure that only contain global reference can be
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,347,// moved.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,348,return false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,349,case Token.NAME:
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,350,"if (n.getString().equals(""arguments"")) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,351,return false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,352,} else {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,353,Var v = s.getVar(n.getString());
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,354,if (v != null && v.isLocal()) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,355,return false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,358,break;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,361,for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,362,"if (!isMovableValue(c, s)) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,363,return false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,366,return true;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,255,"rivate void optimizeCallSite(List<Parameter> parameters, Node call) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,382,private void optimizeCallSite(
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,383,"SimpleDefinitionFinder defFinder, List<Parameter> parameters, Node call) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,257,f (parameters.get(index).shouldRemove()) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,258,"liminateCallParamAt(call, index);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,385,Parameter p = parameters.get(index);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,386,if (p.shouldRemove()) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,387,"eliminateCallParamAt(defFinder, p, call, index);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,264, Node equality as intended by the this pass.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,265, @param n1 A node
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,266, @param n2 A node
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,267, @return true if both node are considered equal for the purposes of this
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,268," class, false otherwise."
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,270,"rivate boolean nodesAreEqual(Node n1, Node n2) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,271,eturn NodeUtil.isImmutableValue(n1) && NodeUtil.isImmutableValue(n2) &&
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,272,1.isEquivalentTo(n2);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,399,private boolean hasSideEffects;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,400,private boolean canBeSideEffected;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,419,public void setHasSideEffects(boolean hasSideEffects) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,420,this.hasSideEffects = hasSideEffects;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,423,public boolean hasSideEffects() {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,424,return hasSideEffects;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,427,public void setCanBeSideEffected(boolean canBeSideEffected) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,428,this.canBeSideEffected = canBeSideEffected;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,431,public boolean canBeSideEffected() {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,432,return canBeSideEffected;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,315,"ode newVar = NodeUtil.newVarNode(varName.getQualifiedName(),"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,316,alue.cloneTree());
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,450,Preconditions.checkState(value.getParent() == null);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,451,"Node newVar = NodeUtil.newVarNode(varName.getString(), value);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,506,* @param defFinder
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,507,* @param p
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,375,"rivate Node eliminateCallParamAt(Node call, int argIndex) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,512,private Node eliminateCallParamAt(
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,513,"SimpleDefinitionFinder defFinder, Parameter p, Node call, int argIndex) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,522,// The value in the parameter object is the one that is being moved into
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,523,"// function definition leave that one's references.  For everthing else,"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,524,// remove any references.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,525,if (p.getArg() != formalArgPtr) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,526,defFinder.removeReferences(formalArgPtr);
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,288,"ew UseSite(node, traversal.getModule()));"
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,288,"new UseSite(node, traversal.getScope(), traversal.getModule()));"
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,425,"his.nameUseSiteMultimap.remove(name, new UseSite(useSite, null));"
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,425,"this.nameUseSiteMultimap.remove(name, new UseSite(useSite, null, null));"
True,src/com/google/javascript/jscomp/UseSite.java,src/com/google/javascript/jscomp/UseSite.java,30,final Scope scope;
False,src/com/google/javascript/jscomp/UseSite.java,src/com/google/javascript/jscomp/UseSite.java,32,"seSite(Node node, JSModule module) {"
True,src/com/google/javascript/jscomp/UseSite.java,src/com/google/javascript/jscomp/UseSite.java,33,"UseSite(Node node, Scope scope, JSModule module) {"
True,src/com/google/javascript/jscomp/UseSite.java,src/com/google/javascript/jscomp/UseSite.java,35,this.scope = scope;
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,32,super.enableNormalize();
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,247,"tring src = ""function foo(bar) {};"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,248,"baz = function(a) {};"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,249,"baz(1);"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,250,"foo(baz);""; // Baz should be aliased."
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,251,estSame(src);
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,248,// Don't change the call to baz as it has been aliased.
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,250,test(
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,251,"""function foo(bar) {};"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,252,"""baz = function(a) {};"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,253,"""baz(1);"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,254,"""foo(baz);"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,255,"""function foo() {var bar = baz};"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,256,"""baz = function(a) {};"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,257,"""baz(1);"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,258,"""foo();"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,481,public void testMutableValues1() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,482,"test(""function foo(p1) {} foo()"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,483,"""function foo() {var p1} foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,484,"test(""function foo(p1) {} foo(1)"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,485,"""function foo() {var p1=1} foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,486,"test(""function foo(p1) {} foo([])"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,487,"""function foo() {var p1=[]} foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,488,"test(""function foo(p1) {} foo({})"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,489,"""function foo() {var p1={}} foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,490,"test(""var x;function foo(p1) {} foo(x)"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,491,"""var x;function foo() {var p1=x} foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,492,"test(""var x;function foo(p1) {} foo(x())"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,493,"""var x;function foo() {var p1=x()} foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,494,"test(""var x;function foo(p1) {} foo(new x())"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,495,"""var x;function foo() {var p1=new x()} foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,496,"test(""var x;function foo(p1) {} foo('' + x)"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,497,"""var x;function foo() {var p1='' + x} foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,499,"testSame(""function foo(p1) {} foo(this)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,500,"testSame(""function foo(p1) {} foo(arguments)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,501,"testSame(""function foo(p1) {} foo(function(){})"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,502,"testSame(""function foo(p1) {} (function () {var x;foo(x)})()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,505,public void testMutableValues2() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,506,"test(""function foo(p1, p2) {} foo(1, 2)"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,507,"""function foo() {var p1=1; var p2 = 2} foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,508,"test(""var x; var y; function foo(p1, p2) {} foo(x(), y())"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,509,"""var x; var y; function foo() {var p1=x(); var p2 = y()} foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,512,public void testMutableValues3() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,513,test(
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,514,"""var x; var y; var z;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,515,"""function foo(p1, p2) {}"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,516,"""foo(x(), y()); foo(x(),y())"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,517,"""var x; var y; var z;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,518,"""function foo() {var p1=x(); var p2=y()}"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,519,"""foo(); foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,522,public void testMutableValues4() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,523,// Preserve the ordering of side-effects.
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,524,"// If z(), can't be moved into the function then z() may change the value"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,525,// of x and y.
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,526,testSame(
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,527,"""var x; var y; var z;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,528,"""function foo(p1, p2, p3) {}"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,529,"""foo(x(), y(), z()); foo(x(),y(),3)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,531,"// If z(), can't be moved into the function then z() may change the value"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,532,// of x and y.
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,533,testSame(
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,534,"""var x; var y; var z;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,535,"""function foo(p1, p2, p3) {}"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,536,"""foo(x, y(), z()); foo(x,y(),3)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,538,"// Mutable object that can not be effect by side-effects are movable,"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,539,// however.
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,540,test(
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,541,"""var x; var y; var z;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,542,"""function foo(p1, p2, p3) {}"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,543,"""foo([], y(), z()); foo([],y(),3)"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,544,"""var x; var y; var z;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,545,"""function foo(p2, p3) {var p1=[]}"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,546,"""foo(y(), z()); foo(y(),3)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,549,public void testMutableValues5() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,550,test(
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,551,"""var x; var y; var z;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,552,"""function foo(p1, p2) {}"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,553,"""new foo(new x(), y()); new foo(new x(),y())"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,554,"""var x; var y; var z;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,555,"""function foo() {var p1=new x(); var p2=y()}"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,556,"""new foo(); new foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,558,test(
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,559,"""var x; var y; var z;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,560,"""function foo(p1, p2) {}"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,561,"""new foo(x(), y()); new foo(x(),y())"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,562,"""var x; var y; var z;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,563,"""function foo() {var p1=x(); var p2=y()}"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,564,"""new foo(); new foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,566,testSame(
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,567,"""var x; var y; var z;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,568,"""function foo(p1, p2, p3) {}"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,569,"""new foo(x(), y(), z()); new foo(x(),y(),3)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,571,testSame(
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,572,"""var x; var y; var z;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,573,"""function foo(p1, p2, p3) {}"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,574,"""new foo(x, y(), z()); new foo(x,y(),3)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,576,test(
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,577,"""var x; var y; var z;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,578,"""function foo(p1, p2, p3) {}"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,579,"""new foo([], y(), z()); new foo([],y(),3)"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,580,"""var x; var y; var z;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,581,"""function foo(p2, p3) {var p1=[]}"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,582,"""new foo(y(), z()); new foo(y(),3)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,585,public void testShadows() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,586,"testSame(""function foo(a) {}"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,587,"""var x;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,588,"""function f() {"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,589,"""  var x;"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,590,"""  function g() {"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,591,"""    foo(x());"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,594,"""foo(x())"");"
