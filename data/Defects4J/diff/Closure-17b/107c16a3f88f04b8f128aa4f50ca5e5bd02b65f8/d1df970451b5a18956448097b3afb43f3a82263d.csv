is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,179,"// If we have an identity assignment such as a=a, always remove it"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,180,// regardless of what the liveness results because it
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,181,// does not change the result afterward.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,182,if (rhs != null &&
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,183,NodeUtil.isName(rhs) &&
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,184,rhs.getString().equals(var.name) &&
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,185,NodeUtil.isAssign(n)) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,186,n.removeChild(rhs);
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,187,"n.getParent().replaceChild(n, rhs);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,188,compiler.reportCodeChange();
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,189,return;
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,26,import java.util.Collections;
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,27,import java.util.Comparator;
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,173,// Sort the files list for deterministic consistency.
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,174,Collections.sort(files);
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,450,"Collections.sort(lineMapping.characterMappings,"
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,451,new Comparator<LineCharMapping>() {
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,452,@Override
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,453,"public int compare(LineCharMapping first, LineCharMapping second) {"
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,454,Mapping firstBasis = first.basisMapping;
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,455,Mapping secondBasis = second.basisMapping;
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,457,String firstName = firstBasis.originalName;
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,458,String secondName = secondBasis.originalName;
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,460,"firstName = firstName == null ? """" : firstName;"
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,461,"secondName = secondName == null ? """" : secondName;"
True,src/com/google/javascript/jscomp/SourceMap.java,src/com/google/javascript/jscomp/SourceMap.java,463,return firstName.compareTo(secondName);
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,322,public void testIdentityAssignments() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,323,"inFunction(""var x; x=x"", ""var x; x"");"
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,139,public void testBasicDeterminism() throws Exception {
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,140,"RunResult result1 = compile(""file1"", ""foo;"", ""file2"", ""bar;"");"
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,141,"RunResult result2 = compile(""file2"", ""foo;"", ""file1"", ""bar;"");"
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,143,String map1 = getSourceMap(result1);
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,144,String map2 = getSourceMap(result2);
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,146,// Assert that the files section of the maps are the same. The actual
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,147,"// entries will differ, so we cannot do a simple full comparison."
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,149,// Line 5 has the file information.
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,150,"String files1 = map1.split(""\n"")[4];"
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,151,"String files2 = map2.split(""\n"")[4];"
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,153,"assertEquals(files1, files2);"
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,165,private String getSourceMap(RunResult result) throws IOException {
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,166,StringBuilder sb = new StringBuilder();
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,167,"result.sourceMap.appendTo(sb, ""testMap"");"
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,168,return sb.toString();
False,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,151,tringBuilder sb = new StringBuilder();
False,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,152,"esult.sourceMap.appendTo(sb, ""testMap"");"
False,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,153,"ssertEquals(expectedMap, sb.toString());"
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,174,"assertEquals(expectedMap, getSourceMap(result));"
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,288,"return compile(js, fileName, null, null);"
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,291,"private RunResult compile(String js1, String fileName1, String js2,"
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,292,String fileName2) {
False,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,274,"SSourceFile[] inputs = { JSSourceFile.fromCode(fileName, js) };"
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,300,"JSSourceFile[] inputs = { JSSourceFile.fromCode(fileName1, js1) };"
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,302,if (js2 != null && fileName2 != null) {
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,303,"JSSourceFile[] multiple =  { JSSourceFile.fromCode(fileName1, js1),"
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,304,"JSSourceFile.fromCode(fileName2, js2) };"
True,test/com/google/javascript/jscomp/SourceMapTest.java,test/com/google/javascript/jscomp/SourceMapTest.java,305,inputs = multiple;
