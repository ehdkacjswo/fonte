is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,25, Provides a default <code>evaluate()</code> implementation.
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,25,* Provides default <code>evaluate()</code> and <code>incrementAll(double[])<code>
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,26,* implementations.
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,27,* <p>
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,28,* <strong>Note that these implementations are not synchronized.</strong>
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,27, @version $Revision: 1.17 $ $Date: 2004/06/23 16:26:16 $
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,30,* @version $Revision: 1.18 $ $Date: 2004/07/04 22:03:03 $
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,37, This default implementation just calls {@link #increment} in a loop over the input array and
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,38, then {@link #getResult} to compute the return value.
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,40,"* This default implementation calls {@link #clear}, then invokes"
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,41,"* {@link #increment} in a loop over the the input array, and then uses"
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,42,* {@link #getResult} to compute the return value.
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,43,* <p>
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,44,* Note that this implementation changes the internal state of the
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,45,* statistic.  Its side effects are the same as invoking {@link #clear} and
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,46,* then {@link #incrementAll(double[])}.
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,40, Most implementations will override this method with a more efficient implementation that works
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,41, directly with the input array.
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,48,* Implementations may override this method with a more efficient
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,49,* implementation that works directly with the input array.
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,50,* <p>
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,51,"* If the array is null, an IllegalArgumentException is thrown."
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,53,* @see org.apache.commons.math.stat.univariate.UnivariateStatistic#evaluate(double[])
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,55,public double evaluate(final double[] values) {
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,56,if (values == null) {
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,57,"throw new IllegalArgumentException(""input value array is null"");"
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,59,"return evaluate(values, 0, values.length);"
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,63,"* This default implementation calls {@link #clear}, then invokes"
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,64,* {@link #increment} in a loop over the specified portion of the input
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,65,"* array, and then uses {@link #getResult} to compute the return value."
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,66,* <p>
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,67,* Note that this implementation changes the internal state of the
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,68,* statistic.  Its side effects are the same as invoking {@link #clear} and
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,69,"* then {@link #incrementAll(double[], int, int)}."
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,70,* <p>
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,71,* Implementations may override this method with a more efficient
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,72,* implementation that works directly with the input array.
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,73,* <p>
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,74,"* If the array is null or the index parameters are not valid, an"
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,75,* IllegalArgumentException is thrown.
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,46,"f (this.test(values, begin, length)) {"
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,47,his.clear();
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,48,nt l = begin + length;
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,49,or (int i = begin; i < l; i++) {
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,50,ncrement(values[i]);
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,80,"if (test(values, begin, length)) {"
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,81,clear();
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,82,"incrementAll(values, begin, length);"
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,103,* This default implementation just calls {@link #increment} in a loop over
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,104,* the input array.
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,105,* <p>
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,106,* Throws IllegalArgumentException if the input values array is null.
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,108,* @param values values to add
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,109,* @throws IllegalArgumentException if values is null
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,110,* @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#incrementAll(double[])
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,112,public void incrementAll(double[] values) {
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,113,if (values == null) {
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,114,"throw new IllegalArgumentException(""input values array is null"");"
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,116,"incrementAll(values, 0, values.length);"
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,120,* This default implementation just calls {@link #increment} in a loop over
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,121,* the specified portion of the input array.
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,122,* <p>
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,123,* Throws IllegalArgumentException if the input values array is null.
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,125,* @param values  array holding values to add
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,126,* @param begin   index of the first array element to add
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,127,* @param length  number of array elements to add
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,128,* @throws IllegalArgumentException if values is null
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,129,"* @see org.apache.commons.math.stat.univariate.StorelessUnivariateStatistic#incrementAll(double[], int, int)"
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,131,"public void incrementAll(double[] values, int begin, int length) {"
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,132,"if (test(values, begin, length)) {"
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,133,int k = begin + length;
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,134,for (int i = begin; i < k; i++) {
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,135,increment(values[i]);
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,19, Extends the definition of {@link UnivariateStatistic} with an {@link #increment}
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,20, method for adding values and updating internal state incrementally.
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,19,* Extends the definition of {@link UnivariateStatistic} with
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,20,* {@link #increment} and {@link #incrementAll(double[])} methods for adding
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,21,* values and updating internal state.
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,25, @version $Revision: 1.16 $ $Date: 2004/06/23 16:26:16 $
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,26,* @version $Revision: 1.17 $ $Date: 2004/07/04 22:03:03 $
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,37,* Updates the internal state of the statistic to reflect addition of
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,38,* all values in the values array.  Does not clear the statistic first --
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,39,"* i.e., the values are added <strong>incrementally</stong> to the dataset."
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,41,* @param values  array holding the new values to add
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,42,* @throws IllegalArgumentException if the array is null
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,44,void incrementAll(double[] values);
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,47,* Updates the internal state of the statistic to reflect addition of
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,48,* the values in the designated portion of the values array.  Does not
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,49,"* clear the statistic first -- i.e., the values are added"
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,50,* <strong>incrementally</stong> to the dataset.
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,52,* @param values  array holding the new values to add
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,53,* @param start  the array index of the first value to add
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,54,* @param length  the number of elements to add
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,55,* @throws IllegalArgumentException if the array is null or the index
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,57,"void incrementAll(double[] values, int start, int length);"
