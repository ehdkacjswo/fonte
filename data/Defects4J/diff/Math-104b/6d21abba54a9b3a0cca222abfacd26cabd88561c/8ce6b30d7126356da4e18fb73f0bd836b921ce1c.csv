is_addition,old_file_path,new_file_path,line_num,content
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimatedParameter.java,src/java/org/apache/commons/math/estimation/EstimatedParameter.java,18,ackage org.spaceroots.mantissa.estimation;
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimatedParameter.java,src/java/org/apache/commons/math/estimation/EstimatedParameter.java,18,package org.apache.commons.math.estimation;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,18,ackage org.spaceroots.mantissa.estimation;
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,18,package org.apache.commons.math.estimation;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,20,mport org.spaceroots.mantissa.MantissaException;
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,20,import org.apache.commons.math.MathException;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,30,xtends MantissaException {
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,32,** Simple constructor.
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,33, Build an exception by translating the specified message
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,34, @param message message to translate
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,36,ublic EstimationException(String message) {
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,37,uper(message);
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,40,** Simple constructor.
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,41, Build an exception by translating and formating a message
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,42, @param specifier format specifier (to be translated)
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,43, @param parts to insert in the format (no translation)
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,45,"ublic EstimationException(String specifier, String[] parts) {"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,46,"uper(specifier, parts);"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,49,** Simple constructor.
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,50, Build an exception from a cause
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,51, @param cause cause of this exception
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,53,ublic EstimationException(Throwable cause) {
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,54,uper(cause);
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,57,rivate static final long serialVersionUID = 1613719630569355278L;
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,30,extends MathException {
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,32,/** Serializable version identifier. */
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,33,private static final long serialVersionUID = -7414806622114810487L;
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,35,/** Simple constructor.
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,36,* Build an exception by translating and formating a message
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,37,* @param specifier format specifier (to be translated)
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,38,* @param parts to insert in the format (no translation)
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,40,"public EstimationException(String specifier, String[] parts) {"
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,41,"super(specifier, parts);"
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,44,/** Simple constructor.
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,45,* Build an exception from a cause
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,46,* @param cause cause of this exception
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,48,public EstimationException(Throwable cause) {
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationException.java,src/java/org/apache/commons/math/estimation/EstimationException.java,49,super(cause);
False,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationProblem.java,src/java/org/apache/commons/math/estimation/EstimationProblem.java,18,ackage org.spaceroots.mantissa.estimation;
True,src/mantissa/src/org/spaceroots/mantissa/estimation/EstimationProblem.java,src/java/org/apache/commons/math/estimation/EstimationProblem.java,18,package org.apache.commons.math.estimation;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/Estimator.java,src/java/org/apache/commons/math/estimation/Estimator.java,18,ackage org.spaceroots.mantissa.estimation;
True,src/mantissa/src/org/spaceroots/mantissa/estimation/Estimator.java,src/java/org/apache/commons/math/estimation/Estimator.java,18,package org.apache.commons.math.estimation;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,18,ackage org.spaceroots.mantissa.estimation;
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,18,package org.apache.commons.math.estimation;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,22,mport org.spaceroots.mantissa.linalg.Matrix;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,23,mport org.spaceroots.mantissa.linalg.GeneralMatrix;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,24,mport org.spaceroots.mantissa.linalg.SymetricalMatrix;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,25,mport org.spaceroots.mantissa.linalg.SingularMatrixException;
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,22,import org.apache.commons.math.linear.InvalidMatrixException;
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,23,import org.apache.commons.math.linear.RealMatrix;
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,24,import org.apache.commons.math.linear.RealMatrixImpl;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,70, @param epsilon threshold under which the matrix of the linearized
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,71, problem is considered singular (see {@link
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,72," org.spaceroots.mantissa.linalg.SquareMatrix#solve(Matrix,double)"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,73, SquareMatrix.solve}).  */
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,76,"ouble steadyStateThreshold,"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,77,ouble epsilon) {
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,72,double steadyStateThreshold) {
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,81,his.epsilon              = epsilon;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,156,"eneralMatrix    b = new GeneralMatrix(parameters.length, 1);"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,157,ymetricalMatrix a = new SymetricalMatrix(parameters.length);
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,150,"RealMatrix b              = new RealMatrixImpl(parameters.length, 1);"
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,151,"RealMatrix a              = new RealMatrixImpl(parameters.length, parameters.length);"
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,152,double[] grad             = new double[parameters.length];
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,153,"RealMatrixImpl bDecrement = new RealMatrixImpl(parameters.length, 1);"
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,154,double[][] bDecrementData = bDecrement.getDataRef();
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,155,"RealMatrixImpl wGradGradT = new RealMatrixImpl(parameters.length, parameters.length);"
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,156,double[][] wggData        = wGradGradT.getDataRef();
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,159,f (! measurements [i].isIgnored()) {
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,160,ouble weight   = measurements[i].getWeight();
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,161,ouble residual = measurements[i].getResidual();
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,163,/ compute the normal equation
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,164,ouble[] grad     = new double[parameters.length];
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,165,"atrix bDecrement = new GeneralMatrix(parameters.length, 1);"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,166,or (int j = 0; j < parameters.length; ++j) {
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,167,rad[j] = measurements[i].getPartial(parameters[j]);
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,168,"Decrement.setElement(j, 0, weight * residual * grad[j]);"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,171,/ update the matrices
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,172,".selfAddWAAt(weight, grad);"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,173,.selfAdd(bDecrement);
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,158,if (! measurements [i].isIgnored()) {
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,160,double weight   = measurements[i].getWeight();
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,161,double residual = measurements[i].getResidual();
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,163,// compute the normal equation
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,164,for (int j = 0; j < parameters.length; ++j) {
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,165,grad[j] = measurements[i].getPartial(parameters[j]);
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,166,bDecrementData[j][0] = weight * residual * grad[j];
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,169,// build the contribution matrix for measurement i
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,170,for (int k = 0; k < parameters.length; ++k) {
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,171,double[] wggRow = wggData[k];
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,172,double gk = grad[k];
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,173,for (int l = 0; l < parameters.length; ++l) {
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,174,wggRow[l] =  weight * gk * grad[l];
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,178,// update the matrices
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,179,a = a.add(wGradGradT);
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,180,b = b.add(bDecrement);
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,181,"atrix dX = a.solve(b, epsilon);"
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,188,RealMatrix dX = a.solve(b);
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,185,arameters[i].setEstimate(parameters[i].getEstimate()
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,186," dX.getElement(i, 0));"
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,192,"parameters[i].setEstimate(parameters[i].getEstimate() + dX.getEntry(i, 0));"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,189, catch(SingularMatrixException e) {
True,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,195,} catch(InvalidMatrixException e) {
False,src/mantissa/src/org/spaceroots/mantissa/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,226,rivate double epsilon;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java,src/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,17,ackage org.spaceroots.mantissa.estimation;
True,src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java,src/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,17,package org.apache.commons.math.estimation;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/WeightedMeasurement.java,src/java/org/apache/commons/math/estimation/WeightedMeasurement.java,18,ackage org.spaceroots.mantissa.estimation;
True,src/mantissa/src/org/spaceroots/mantissa/estimation/WeightedMeasurement.java,src/java/org/apache/commons/math/estimation/WeightedMeasurement.java,18,package org.apache.commons.math.estimation;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,1,/ Licensed to the Apache Software Foundation (ASF) under one
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,2,/ or more contributor license agreements.  See the NOTICE file
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,3,/ distributed with this work for additional information
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,4,/ regarding copyright ownership.  The ASF licenses this file
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,5,"/ to you under the Apache License, Version 2.0 (the"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,6,"/ ""License""); you may not use this file except in compliance"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,7,/ with the License.  You may obtain a copy of the License at
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,9,/   http://www.apache.org/licenses/LICENSE-2.0
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,11,"/ Unless required by applicable law or agreed to in writing,"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,12,/ software distributed under the License is distributed on an
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,13,"/ ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,14,"/ KIND, either express or implied.  See the License for the"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,15,/ specific language governing permissions and limitations
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,16,/ under the License.
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,18,ackage org.spaceroots.mantissa.estimation;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,20,mport java.io.Serializable;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,22,** This class implements a solver for estimation problems.
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,23, @deprecated this class has been replaced by the {@link
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,24, org.spaceroots.mantissa.estimation.GaussNewtonEstimator GaussNewtonEstimator}
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,25, class. It is now a simple wrapper delegating everything to {@link
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,26, org.spaceroots.mantissa.estimation.GaussNewtonEstimator GaussNewtonEstimator}
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,27, @version $Id: LeastSquaresEstimator.java 1705 2006-09-17 19:57:39Z luc $
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,28, @author L. Maisonobe
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,30,"ublic class LeastSquaresEstimator implements Estimator, Serializable {"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,32,** Simple constructor.
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,33," @see org.spaceroots.mantissa.estimation.GaussNewtonEstimator#GaussNewtonEstimator(int,"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,34," double, double, double)"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,36,"ublic LeastSquaresEstimator(int maxIterations,"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,37,"ouble convergence,"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,38,"ouble steadyStateThreshold,"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,39,ouble epsilon) {
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,40,"stimator = new GaussNewtonEstimator(maxIterations,"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,41,"onvergence,"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,42,"teadyStateThreshold,"
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,43,psilon);
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,46,** Solve an estimation problem using a least squares criterion.
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,47, @see org.spaceroots.mantissa.estimation.GaussNewtonEstimator#estimate
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,49,ublic void estimate(EstimationProblem problem)
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,50,hrows EstimationException {
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,51,stimator.estimate(problem);
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,54,** Estimate the solution of a linear least square problem.
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,55, @see org.spaceroots.mantissa.estimation.GaussNewtonEstimator#linearEstimate
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,57,ublic void linearEstimate(EstimationProblem problem)
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,58,hrows EstimationException {
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,59,stimator.linearEstimate(problem);
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,62,** Get the Root Mean Square value.
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,63, @see org.spaceroots.mantissa.estimation.GaussNewtonEstimator#getRMS
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,65,ublic double getRMS(EstimationProblem problem) {
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,66,eturn estimator.getRMS(problem);
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,69,rivate GaussNewtonEstimator estimator;
False,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,src/mantissa/src/org/spaceroots/mantissa/estimation/LeastSquaresEstimator.java,71,rivate static final long serialVersionUID = -7542643494637247770L;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,1,/ Licensed to the Apache Software Foundation (ASF) under one
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,2,/ or more contributor license agreements.  See the NOTICE file
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,3,/ distributed with this work for additional information
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,4,/ regarding copyright ownership.  The ASF licenses this file
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,5,"/ to you under the Apache License, Version 2.0 (the"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,6,"/ ""License""); you may not use this file except in compliance"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,7,/ with the License.  You may obtain a copy of the License at
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,9,/   http://www.apache.org/licenses/LICENSE-2.0
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,11,"/ Unless required by applicable law or agreed to in writing,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,12,/ software distributed under the License is distributed on an
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,13,"/ ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,14,"/ KIND, either express or implied.  See the License for the"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,15,/ specific language governing permissions and limitations
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,16,/ under the License.
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,18,ackage org.spaceroots.mantissa.estimation;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,20,mport junit.framework.Test;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,21,mport junit.framework.TestSuite;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,23,ublic class AllTests {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,25,ublic static Test suite() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,27,"estSuite suite = new TestSuite(""org.spaceroots.mantissa.estimation"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,29,uite.addTest(EstimatedParameterTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,30,uite.addTest(WeightedMeasurementTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,31,uite.addTest(GaussNewtonEstimatorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,32,uite.addTest(LevenbergMarquardtEstimatorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,33,uite.addTest(MinpackTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/AllTests.java,35,eturn suite;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,1,/ Licensed to the Apache Software Foundation (ASF) under one
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,2,/ or more contributor license agreements.  See the NOTICE file
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,3,/ distributed with this work for additional information
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,4,/ regarding copyright ownership.  The ASF licenses this file
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,5,"/ to you under the Apache License, Version 2.0 (the"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,6,"/ ""License""); you may not use this file except in compliance"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,7,/ with the License.  You may obtain a copy of the License at
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,9,/   http://www.apache.org/licenses/LICENSE-2.0
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,11,"/ Unless required by applicable law or agreed to in writing,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,12,/ software distributed under the License is distributed on an
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,13,"/ ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,14,"/ KIND, either express or implied.  See the License for the"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,15,/ specific language governing permissions and limitations
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,16,/ under the License.
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,18,ackage org.spaceroots.mantissa.estimation;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,20,mport java.util.Random;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,21,mport junit.framework.*;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,23,ublic class GaussNewtonEstimatorTest
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,24,xtends TestCase
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,25,mplements EstimationProblem {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,27,ublic GaussNewtonEstimatorTest(String name) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,28,uper(name);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,31,ublic void testNoMeasurementError()
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,32,hrows EstimationException {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,33,nitRandomizedGrid(2.3);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,34,nitProblem(0.0);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,35,aussNewtonEstimator estimator =
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,36,"ew GaussNewtonEstimator(100, 1.0e-7, 1.0e-10, 1.0e-10);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,37,stimator.estimate(this);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,38,heckGrid(0.01);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,41,ublic void testSmallMeasurementError()
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,42,hrows EstimationException {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,43,nitRandomizedGrid(2.3);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,44,nitProblem(0.02);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,45,aussNewtonEstimator estimator =
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,46,"ew GaussNewtonEstimator(100, 1.0e-7, 1.0e-10, 1.0e-10);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,47,stimator.estimate(this);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,48,heckGrid(0.1);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,51,ublic void testNoError()
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,52,hrows EstimationException {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,53,nitRandomizedGrid(0.0);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,54,nitProblem(0.0);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,55,aussNewtonEstimator estimator =
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,56,"ew GaussNewtonEstimator(100, 1.0e-7, 1.0e-10, 1.0e-10);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,57,stimator.estimate(this);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,58,heckGrid(1.0e-10);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,61,ublic void testUnsolvableProblem() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,63,nitRandomizedGrid(2.3);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,64,nitProblem(0.0);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,66,/ reduce the number of measurements below the limit threshold
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,67,nt unknowns = unboundPars.length;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,68,eightedMeasurement[] reducedSet = new WeightedMeasurement[unknowns - 1];
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,69,or (int i = 0; i < reducedSet.length; ++i) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,70,educedSet[i] = measurements[i];
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,72,easurements = reducedSet;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,74,oolean gotIt = false;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,75,ry {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,76,aussNewtonEstimator estimator =
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,77,"ew GaussNewtonEstimator(100, 1.0e-7, 1.0e-10, 1.0e-10);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,78,stimator.estimate(this);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,79, catch(EstimationException e) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,80,otIt = true;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,83,ssertTrue(gotIt);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,87,ublic static Test suite() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,88,eturn new TestSuite(GaussNewtonEstimatorTest.class);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,91,ublic void setUp() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,92,nitPerfectGrid(5);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,95,ublic void tearDown() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,96,erfectPars    = null;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,97,andomizedPars = null;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,98,nboundPars    = null;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,99,easurements   = null;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,102,rivate void initPerfectGrid(int gridSize) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,103,erfectPars = new EstimatedParameter[gridSize * gridSize * 2];
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,105,nt k = 0;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,106,or (int i = 0; i < gridSize; ++i) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,107,or (int j = 0; j < gridSize; ++j) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,109,tring name            = Integer.toString(k);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,110,"erfectPars[2 * k]     = new EstimatedParameter(""x"" + name, i);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,111,"erfectPars[2 * k + 1] = new EstimatedParameter(""y"" + name, j);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,112,+k;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,118,rivate void initRandomizedGrid(double initialGuessError) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,119,andom randomizer = new Random(2353995334l);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,120,andomizedPars    = new EstimatedParameter[perfectPars.length];
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,122,/ add an error to every point coordinate
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,123,or (int k = 0; k < randomizedPars.length; ++k) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,124,tring name  = perfectPars[k].getName();
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,125,ouble value = perfectPars[k].getEstimate();
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,126,ouble error = randomizer.nextGaussian() * initialGuessError;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,127,"andomizedPars[k] = new EstimatedParameter(name, value + error);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,132,rivate void initProblem(double measurementError) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,134,nt pointsNumber       = randomizedPars.length / 2;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,135,nt measurementsNumber = pointsNumber * (pointsNumber - 1) / 2;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,136,easurements           = new WeightedMeasurement[measurementsNumber];
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,138,andom randomizer = new Random(5785631926l);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,140,"/ for the test, we consider that the perfect grid is the reality"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,141,/ and that the randomized grid is the first (wrong) estimate.
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,142,nt i = 0;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,143,or (int l = 0; l < (pointsNumber - 1); ++l) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,144,or (int m = l + 1; m < pointsNumber; ++m) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,145,/ perfect measurements on the real data
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,146,ouble dx = perfectPars[2 * l].getEstimate()
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,147, perfectPars[2 * m].getEstimate();
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,148,ouble dy = perfectPars[2 * l + 1].getEstimate()
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,149, perfectPars[2 * m + 1].getEstimate();
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,150,ouble d = Math.sqrt(dx * dx + dy * dy);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,152,/ adding a noise to the measurements
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,153, += randomizer.nextGaussian() * measurementError;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,155,/ add the measurement to the current problem
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,156,"easurements[i++] = new Distance(1.0, d,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,157,"andomizedPars[2 * l],"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,158,"andomizedPars[2 * l + 1],"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,159,"andomizedPars[2 * m],"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,160,andomizedPars[2 * m + 1]);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,165,/ fix three values in the randomized grid and bind them (there
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,166,"/ are two abscissas and one ordinate, so if there were no error"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,167,"/ at all, the estimated grid should be correctly centered on the"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,168,/ perfect grid)
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,169,nt oddNumber = 2 * (randomizedPars.length / 4) - 1;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,170,or (int k = 0; k < 2 * oddNumber + 1; k += oddNumber) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,171,andomizedPars[k].setEstimate(perfectPars[k].getEstimate());
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,172,andomizedPars[k].setBound(true);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,175,/ store the unbound parameters in a specific table
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,176,nboundPars = new EstimatedParameter[randomizedPars.length - 3];
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,177,"or (int src = 0, dst = 0; src < randomizedPars.length; ++src) {"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,178,f (! randomizedPars[src].isBound()) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,179,nboundPars[dst++] = randomizedPars[src];
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,185,rivate void checkGrid(double threshold) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,187,ouble rms = 0;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,188,or (int i = 0; i < perfectPars.length; ++i) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,189,ms += perfectPars[i].getEstimate() - randomizedPars[i].getEstimate();
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,191,ms = Math.sqrt(rms / perfectPars.length);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,193,ssertTrue(rms <= threshold);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,197,rivate static class Distance extends WeightedMeasurement {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,199,"ublic Distance(double weight, double measuredValue,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,200,"stimatedParameter x1, EstimatedParameter y1,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,201,"stimatedParameter x2, EstimatedParameter y2) {"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,202,"uper(weight, measuredValue);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,203,his.x1 = x1;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,204,his.y1 = y1;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,205,his.x2 = x2;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,206,his.y2 = y2;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,209,ublic double getTheoreticalValue() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,210,ouble dx = x2.getEstimate() - x1.getEstimate();
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,211,ouble dy = y2.getEstimate() - y1.getEstimate();
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,212,eturn Math.sqrt(dx * dx + dy * dy);
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,215,ublic double getPartial(EstimatedParameter p) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,217,/ first quick answer for most parameters
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,218,f ((p != x1) && (p != y1) && (p != x2) && (p != y2)) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,219,eturn 0.0;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,222,/ compute the value now as we know we depend on the specified parameter
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,223,ouble distance = getTheoreticalValue();
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,225,f (p == x1) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,226,eturn (x1.getEstimate() - x2.getEstimate()) / distance;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,227, else if (p == x2) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,228,eturn (x2.getEstimate() - x1.getEstimate()) / distance;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,229, else if (p == y1) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,230,eturn (y1.getEstimate() - y2.getEstimate()) / distance;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,231, else {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,232,eturn (y2.getEstimate() - y1.getEstimate()) / distance;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,237,rivate EstimatedParameter x1;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,238,rivate EstimatedParameter y1;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,239,rivate EstimatedParameter x2;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,240,rivate EstimatedParameter y2;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,241,rivate static final long serialVersionUID = 4090004243280980746L;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,245,ublic WeightedMeasurement[] getMeasurements() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,246,eturn (WeightedMeasurement[]) measurements.clone();
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,249,ublic EstimatedParameter[] getUnboundParameters() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,250,eturn (EstimatedParameter[]) unboundPars.clone();
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,253,ublic EstimatedParameter[] getAllParameters() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,254,eturn (EstimatedParameter[]) randomizedPars.clone();
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,257,rivate EstimatedParameter[]  perfectPars;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,258,rivate EstimatedParameter[]  randomizedPars;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,259,rivate EstimatedParameter[]  unboundPars;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/GaussNewtonEstimatorTest.java,260,rivate WeightedMeasurement[] measurements;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/EstimatedParameterTest.java,src/test/org/apache/commons/math/estimation/EstimatedParameterTest.java,18,ackage org.spaceroots.mantissa.estimation;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/EstimatedParameterTest.java,src/test/org/apache/commons/math/estimation/EstimatedParameterTest.java,18,package org.apache.commons.math.estimation;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/EstimatedParameterTest.java,src/test/org/apache/commons/math/estimation/EstimatedParameterTest.java,20,import org.apache.commons.math.estimation.EstimatedParameter;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,18,ackage org.spaceroots.mantissa.estimation;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,18,package org.apache.commons.math.estimation;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,21,mport java.util.IdentityHashMap;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,21,import java.util.HashMap;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,25,import org.apache.commons.math.estimation.EstimatedParameter;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,26,import org.apache.commons.math.estimation.EstimationException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,27,import org.apache.commons.math.estimation.EstimationProblem;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,28,import org.apache.commons.math.estimation.LevenbergMarquardtEstimator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,29,import org.apache.commons.math.estimation.WeightedMeasurement;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,522,dentityHashMap map = new IdentityHashMap();
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimatorTest.java,src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java,528,HashMap map = new HashMap();
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/MinpackTest.java,src/test/org/apache/commons/math/estimation/MinpackTest.java,1,ackage org.spaceroots.mantissa.estimation;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/MinpackTest.java,src/test/org/apache/commons/math/estimation/MinpackTest.java,1,package org.apache.commons.math.estimation;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/MinpackTest.java,src/test/org/apache/commons/math/estimation/MinpackTest.java,5,import org.apache.commons.math.estimation.EstimatedParameter;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/MinpackTest.java,src/test/org/apache/commons/math/estimation/MinpackTest.java,6,import org.apache.commons.math.estimation.EstimationException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/MinpackTest.java,src/test/org/apache/commons/math/estimation/MinpackTest.java,7,import org.apache.commons.math.estimation.EstimationProblem;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/MinpackTest.java,src/test/org/apache/commons/math/estimation/MinpackTest.java,8,import org.apache.commons.math.estimation.LevenbergMarquardtEstimator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/MinpackTest.java,src/test/org/apache/commons/math/estimation/MinpackTest.java,9,import org.apache.commons.math.estimation.WeightedMeasurement;
False,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/WeightedMeasurementTest.java,src/test/org/apache/commons/math/estimation/WeightedMeasurementTest.java,18,ackage org.spaceroots.mantissa.estimation;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/WeightedMeasurementTest.java,src/test/org/apache/commons/math/estimation/WeightedMeasurementTest.java,18,package org.apache.commons.math.estimation;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/WeightedMeasurementTest.java,src/test/org/apache/commons/math/estimation/WeightedMeasurementTest.java,20,import org.apache.commons.math.estimation.EstimatedParameter;
True,src/mantissa/tests-src/org/spaceroots/mantissa/estimation/WeightedMeasurementTest.java,src/test/org/apache/commons/math/estimation/WeightedMeasurementTest.java,21,import org.apache.commons.math.estimation.WeightedMeasurement;
