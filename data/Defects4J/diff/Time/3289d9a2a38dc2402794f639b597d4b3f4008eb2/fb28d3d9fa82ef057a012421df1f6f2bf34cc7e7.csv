is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,20,import java.util.SimpleTimeZone;
False,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,155,ateTime date = new DateTime(
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,156,if (TimeZone.getDefault() instanceof SimpleTimeZone) {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,157,"// skip test, as it needs historical time zone info"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,158,} else {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,159,DateTime date = new DateTime(
False,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,157,"ssertEquals(date, f.withLocale(FRANCE).parseDateTime(expect));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,161,"assertEquals(date, f.withLocale(FRANCE).parseDateTime(expect));"
False,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,173,"ateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, FRANCE).parse(expect));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,178,"DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, FRANCE).parse(expect));"
