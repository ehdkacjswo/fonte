is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,24,import org.joda.time.DateTimeFieldType;
True,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,683,* This parse method ignores the {@link #getDefaultYear() default year} and
True,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,684,* parses using the year from the supplied instant as the default.
True,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,685,* <p>
False,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,705,"nstantLocal, chrono, iLocale, iPivotYear, iDefaultYear);"
True,src/main/java/org/joda/time/format/DateTimeFormatter.java,src/main/java/org/joda/time/format/DateTimeFormatter.java,709,"instantLocal, chrono, iLocale, iPivotYear, chrono.year().get(instantLocal));"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,866,public void testParseInto_monthOnly() {
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,867,"DateTimeFormatter f = DateTimeFormat.forPattern(""M"").withLocale(Locale.UK);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,868,"MutableDateTime result = new MutableDateTime(2004, 1, 9, 12, 20, 30, 0, LONDON);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,869,"assertEquals(1, f.parseInto(result, ""5"", 0));"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,870,"assertEquals(new MutableDateTime(2004, 5, 9, 12, 20, 30, 0, LONDON), result);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,873,public void testParseInto_monthOnly_baseStartYear() {
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,874,"DateTimeFormatter f = DateTimeFormat.forPattern(""M"").withLocale(Locale.UK);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,875,"MutableDateTime result = new MutableDateTime(2004, 1, 1, 12, 20, 30, 0, TOKYO);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,876,"assertEquals(1, f.parseInto(result, ""5"", 0));"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,877,"assertEquals(new MutableDateTime(2004, 5, 1, 12, 20, 30, 0, TOKYO), result);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,880,public void testParseInto_monthOnly_parseStartYear() {
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,881,"DateTimeFormatter f = DateTimeFormat.forPattern(""M"").withLocale(Locale.UK);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,882,"MutableDateTime result = new MutableDateTime(2004, 2, 1, 12, 20, 30, 0, TOKYO);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,883,"assertEquals(1, f.parseInto(result, ""1"", 0));"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,884,"assertEquals(new MutableDateTime(2004, 1, 1, 12, 20, 30, 0, TOKYO), result);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,887,public void testParseInto_monthOnly_baseEndYear() {
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,888,"DateTimeFormatter f = DateTimeFormat.forPattern(""M"").withLocale(Locale.UK);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,889,"MutableDateTime result = new MutableDateTime(2004, 12, 31, 12, 20, 30, 0, TOKYO);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,890,"assertEquals(1, f.parseInto(result, ""5"", 0));"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,891,"assertEquals(new MutableDateTime(2004, 5, 31, 12, 20, 30, 0, TOKYO), result);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,894,public void testParseInto_monthOnly_parseEndYear() {
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,895,"DateTimeFormatter f = DateTimeFormat.forPattern(""M"").withLocale(Locale.UK);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,896,"MutableDateTime result = new MutableDateTime(2004, 1, 31, 12, 20, 30, 0,TOKYO);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,897,"assertEquals(2, f.parseInto(result, ""12"", 0));"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,898,"assertEquals(new MutableDateTime(2004, 12, 31, 12, 20, 30, 0, TOKYO), result);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,901,public void testParseInto_monthDay_feb29() {
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,902,"DateTimeFormatter f = DateTimeFormat.forPattern(""M d"").withLocale(Locale.UK);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,903,"MutableDateTime result = new MutableDateTime(2004, 1, 9, 12, 20, 30, 0, LONDON);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,904,"assertEquals(4, f.parseInto(result, ""2 29"", 0));"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,905,"assertEquals(new MutableDateTime(2004, 2, 29, 12, 20, 30, 0, LONDON), result);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,908,public void testParseInto_monthDay_withDefaultYear_feb29() {
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,909,"DateTimeFormatter f = DateTimeFormat.forPattern(""M d"").withDefaultYear(2012);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,910,"MutableDateTime result = new MutableDateTime(2004, 1, 9, 12, 20, 30, 0, LONDON);"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,911,"assertEquals(4, f.parseInto(result, ""2 29"", 0));"
True,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,src/test/java/org/joda/time/format/TestDateTimeFormatter.java,912,"assertEquals(new MutableDateTime(2004, 2, 29, 12, 20, 30, 0, LONDON), result);"
