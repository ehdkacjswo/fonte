is_addition,old_file_path,new_file_path,line_num,content
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,2,*  Copyright 2001-2005 Stephen Colebourne
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,4,"*  Licensed under the Apache License, Version 2.0 (the ""License"");"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,5,*  you may not use this file except in compliance with the License.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,6,*  You may obtain a copy of the License at
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,10,"*  Unless required by applicable law or agreed to in writing, software"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,11,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,12,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,13,*  See the License for the specific language governing permissions and
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,14,*  limitations under the License.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,16,package org.joda.time.contrib.holiday;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,18,import java.util.ArrayList;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,19,import java.util.List;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,20,import java.util.Locale;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,21,import java.util.Map;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,23,import org.joda.time.DateTimeZone;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,24,import org.joda.time.MutableDateTime;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,25,import org.joda.time.YearMonthDay;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,28,* Holiday defines a specially named day and the rules for creating it.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,29,"* The named day may be a holiday, anniversary or other day with"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,30,* particular meaning.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,32,* @author Al Major
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,33,* @author Stephen Colebourne
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,34,* @version $Id$
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,36,public class Holiday {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,38,/** The id of the holiday. */
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,39,private String iId;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,40,/** The name of the holiday. */
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,41,private Map iNames;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,42,/** The list of HolidayRule objects. */
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,43,private List iHolidayRules = new ArrayList();
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,46,* Constructor.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,48,Holiday() {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,49,super();
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,54,* Gets the ID of the holiday.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,56,* @return the id of the holiday
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,58,public String getID() {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,59,return iId;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,64,* Gets the name of the holiday.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,65,* This method supports intelligent name lookup by locale.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,67,* @param locale  the locale to get the name in
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,68,* @return the name of the holiday
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,70,public String getName(Locale locale) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,71,String localeStr = locale.toString();
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,72,String name = (String) iNames.get(localeStr);
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,73,if (name == null && locale.getVariant().length() > 0) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,74,"name = (String) iNames.get(localeStr.substring(0, 5));"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,76,if (name == null && locale.getCountry().length() > 0) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,77,"name = (String) iNames.get(localeStr.substring(0, 2));"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,79,if (name == null) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,80,"name = (String) iNames.get(""en"");"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,82,if (name == null && iNames.size() > 0) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,83,name = (String) iNames.values().iterator().next();
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,85,return name;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,90,* Gets the YearMonthDay object for the specified year.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,92,* @param year  the year
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,93,"* @return the YearMonthDay, null if day does not exist for this year"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,95,public YearMonthDay yearMonthDayForYear(int year) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,96,"MutableDateTime mdt = new MutableDateTime(0L, DateTimeZone.UTC);"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,97,for (int i = 0; i < iHolidayRules.size(); i++) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,98,HolidayRule rule = (HolidayRule) iHolidayRules.get(i);
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,99,"if (rule.appliesForYear(mdt, year)) {"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,100,"return new YearMonthDay(rule.applyForYear(mdt, year));"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java,103,return null;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,2,*  Copyright 2001-2005 Stephen Colebourne
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,4,"*  Licensed under the Apache License, Version 2.0 (the ""License"");"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,5,*  you may not use this file except in compliance with the License.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,6,*  You may obtain a copy of the License at
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,10,"*  Unless required by applicable law or agreed to in writing, software"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,11,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,12,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,13,*  See the License for the specific language governing permissions and
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,14,*  limitations under the License.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,16,package org.joda.time.contrib.holiday;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,18,import org.joda.time.DateTimeConstants;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,19,import org.joda.time.MutableDateTime;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,22,* HolidayRule defines the rules to create a specially named day.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,23,"* The named day may be a holiday, anniversary or other day with"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,24,* particular meaning.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,26,* @author Al Major
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,27,* @author Stephen Colebourne
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,28,* @version $Id$
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,30,public class HolidayRule {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,32,"/** The from year, when the rule begins, inclusive. */"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,33,private int iFromYear;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,34,"/** The to year, when the rule ends, inclusive. */"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,35,private int iToYear;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,36,/** The month. */
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,37,private int iMonthOfYear;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,38,/** The day of month. */
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,39,private int iDayOfMonth;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,40,/** The day of week. */
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,41,private int iDayOfWeek;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,42,/** The field week of month. */
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,43,private int iWeekOfMonth;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,44,/** The relative days. */
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,45,private int iRelativeDays;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,46,/** The weekend adjust. */
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,47,private int iWeekendAdjust;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,49,"/** The weekend adjust value, to move to the next weekday. */"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,50,private static final int WEEKEND_ADJUST_NEXT_WEEKDAY = 0;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,51,"/** The weekend adjust value, to move to the next weekday. */"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,52,private static final int WEEKEND_ADJUST_PREVIOUS_WEEKDAY = 1;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,53,"/** The weekend adjust value, to move to the next weekday. */"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,54,private static final int WEEKEND_ADJUST_NEAREST_WEEKDAY = 2;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,57,* Constructor.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,59,HolidayRule() {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,60,super();
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,65,* Gets the year that the rule commences (inclusive).
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,67,"* @return the from year, Integer.MIN_VALUE if not used"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,69,public int getFromYear() {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,70,return iFromYear;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,74,* Sets the year that the rule commences (inclusive).
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,76,"* @param year  the from year, Integer.MIN_VALUE if not used"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,78,void setFromYear(int year) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,79,iFromYear = year;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,84,* Gets the year that the rule ends (inclusive).
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,86,"* @return the to year, Integer.MAX_VALUE if not used"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,88,public int getToYear() {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,89,return iToYear;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,93,* Sets the year that the rule ends (inclusive).
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,95,"* @param year  the to year, Integer.MIN_VALUE if not used"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,97,void setToYear(int year) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,98,iToYear = year;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,103,* Gets the month of the year of the rule.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,105,"* @return the month of year, Integer.MIN_VALUE if not used"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,107,public int getMonthOfYear() {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,108,return iMonthOfYear;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,113,* Gets the day of the month of the rule.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,115,"* @return the day of month, Integer.MIN_VALUE if not used"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,117,public int getDayOfMonth() {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,118,return iDayOfMonth;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,123,* Gets the day of the week of the rule.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,125,"* @return the day of week, Integer.MIN_VALUE if not used"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,127,public int getDayOfWeek() {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,128,return iDayOfWeek;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,133,* Gets the week of the month of the rule.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,134,* -1 indicates the last.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,136,"* @return the week of month, Integer.MIN_VALUE if not used"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,138,public int getWeekOfMonth() {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,139,return iWeekOfMonth;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,144,* Gets the relative days of the rule.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,146,"* @return the relative days, Integer.MIN_VALUE if not used"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,148,public int getRelativeDays() {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,149,return iRelativeDays;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,154,* Gets the day of the month of the rule.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,156,"* @return the weekend adjustment rule, Integer.MIN_VALUE if not used"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,158,public int getWeekendAdjust() {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,159,return iWeekendAdjust;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,164,* Does this rule apply for the specified year.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,166,"* @param mdt  working copy MutableDateTime, may be altered, not null"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,167,* @param year  the year
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,168,* @return true if this rule applies for the specified year
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,170,"boolean appliesForYear(MutableDateTime mdt, int year) {"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,171,return (iFromYear <= year && iToYear >= year);
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,176,* Applies the rules for the specified year.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,178,"* @param mdt  working copy MutableDateTime, may be altered, not null"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,179,* @param year  the year
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,180,* @return the MutableDateTime
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,182,"MutableDateTime applyForYear(MutableDateTime mdt, int year) {"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,183,"mdt.setDate(year, 1, 1);"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,184,if (iMonthOfYear != Integer.MIN_VALUE) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,185,mdt.setMonthOfYear(iMonthOfYear);
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,187,if (iDayOfMonth != Integer.MIN_VALUE) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,188,mdt.setDayOfMonth(iDayOfMonth);
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,190,if (iDayOfWeek != Integer.MIN_VALUE) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,191,mdt.setDayOfWeek(iDayOfWeek);
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,193,if (iWeekOfMonth != Integer.MIN_VALUE) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,194,"calculateWeekOfMonth(mdt, iMonthOfYear, iWeekOfMonth);"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,196,if (iRelativeDays != Integer.MIN_VALUE) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,197,mdt.addDays(iRelativeDays);
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,199,if (iWeekendAdjust != Integer.MIN_VALUE) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,200,"calculateWeekendAdjust(mdt, iWeekendAdjust);"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,202,return mdt;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,207,* Perform the weekk of month calculation.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,208,"* TODO, move this to a DateTimeField."
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,210,* @param mdt  the datetime to update
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,211,* @param month  the month it should be
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,212,* @param week  the week of month
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,214,"private void calculateWeekOfMonth(MutableDateTime mdt, int month, int week) {"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,215,if (week > 0) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,216,while (mdt.getMonthOfYear() >= month) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,217,mdt.addWeeks(-1);
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,219,mdt.addWeeks(week);
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,220,} else {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,221,while (mdt.getMonthOfYear() <= month) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,222,mdt.addWeeks(1);
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,224,mdt.addWeeks(-week);
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,229,* Calculates the weekend adjust field.
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,231,* @param mdt  the datetime to update
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,232,* @param adjust  the adjust value
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,234,"private void calculateWeekendAdjust(MutableDateTime mdt, int adjust) {"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,235,"// TODO, use proper weekend calculation, not hard coded SatSun"
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,236,if (mdt.getDayOfWeek() == DateTimeConstants.SATURDAY) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,237,switch (adjust) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,238,case WEEKEND_ADJUST_NEXT_WEEKDAY:
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,239,mdt.addDays(2);
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,240,break;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,241,case WEEKEND_ADJUST_PREVIOUS_WEEKDAY:
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,242,case WEEKEND_ADJUST_NEAREST_WEEKDAY:
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,243,mdt.addDays(-1);
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,244,break;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,246,} else if (mdt.getDayOfWeek() == DateTimeConstants.SUNDAY) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,247,switch (adjust) {
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,248,case WEEKEND_ADJUST_NEXT_WEEKDAY:
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,249,case WEEKEND_ADJUST_NEAREST_WEEKDAY:
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,250,mdt.addDays(1);
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,251,break;
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,252,case WEEKEND_ADJUST_PREVIOUS_WEEKDAY:
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,253,mdt.addDays(-2);
True,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java,254,break;
