is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/joda/time/DateTimeUtils.java,src/main/java/org/joda/time/DateTimeUtils.java,364,ry {
False,src/main/java/org/joda/time/DateTimeUtils.java,src/main/java/org/joda/time/DateTimeUtils.java,365,"ethod method = DateFormatSymbols.class.getMethod(""getInstance"", new Class[] {Locale.class});"
False,src/main/java/org/joda/time/DateTimeUtils.java,src/main/java/org/joda/time/DateTimeUtils.java,366,"eturn (DateFormatSymbols) method.invoke(null, new Object[] {locale});"
True,src/main/java/org/joda/time/DateTimeUtils.java,src/main/java/org/joda/time/DateTimeUtils.java,364,try {
True,src/main/java/org/joda/time/DateTimeUtils.java,src/main/java/org/joda/time/DateTimeUtils.java,365,"Method method = DateFormatSymbols.class.getMethod(""getInstance"", new Class[] {Locale.class});"
True,src/main/java/org/joda/time/DateTimeUtils.java,src/main/java/org/joda/time/DateTimeUtils.java,366,"return (DateFormatSymbols) method.invoke(null, new Object[] {locale});"
False,src/main/java/org/joda/time/DateTimeUtils.java,src/main/java/org/joda/time/DateTimeUtils.java,368,eturn new DateFormatSymbols(locale);
True,src/main/java/org/joda/time/DateTimeUtils.java,src/main/java/org/joda/time/DateTimeUtils.java,368,return new DateFormatSymbols(locale);
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,549,"or (int i = 0, isize = period.size(); i < isize; i++) {"
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,550,urationFieldType type = period.getFieldType(i);
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,551,nt value = period.getValue(i);
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,552,"heckAndUpdate(type, values, value);"
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,554,eturn values;
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,549,"for (int i = 0, isize = period.size(); i < isize; i++) {"
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,550,DurationFieldType type = period.getFieldType(i);
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,551,int value = period.getValue(i);
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,552,"checkAndUpdate(type, values, value);"
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,554,return values;
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,578,"or (int i = 0, isize = period.size(); i < isize; i++) {"
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,579,urationFieldType type = period.getFieldType(i);
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,580,nt value = period.getValue(i);
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,581,f (value != 0) {
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,582,nt index = indexOf(type);
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,583,f (index == -1) {
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,584,hrow new IllegalArgumentException(
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,585,"Period does not support field '"" + type.getName() + ""'"");"
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,586, else {
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,587,"alues[index] = FieldUtils.safeAdd(getValue(index), value);"
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,591,eturn values;
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,578,"for (int i = 0, isize = period.size(); i < isize; i++) {"
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,579,DurationFieldType type = period.getFieldType(i);
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,580,int value = period.getValue(i);
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,581,if (value != 0) {
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,582,int index = indexOf(type);
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,583,if (index == -1) {
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,584,throw new IllegalArgumentException(
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,585,"""Period does not support field '"" + type.getName() + ""'"");"
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,586,} else {
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,587,"values[index] = FieldUtils.safeAdd(getValue(index), value);"
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,591,return values;
False,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,2545,f (best == null || id.length() > best.length()) {
False,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,2546,est = id;
True,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,2545,if (best == null || id.length() > best.length()) {
True,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,2546,best = id;
False,src/main/java/org/joda/time/tz/FixedDateTimeZone.java,src/main/java/org/joda/time/tz/FixedDateTimeZone.java,92,ixedDateTimeZone other = (FixedDateTimeZone)obj;
True,src/main/java/org/joda/time/tz/FixedDateTimeZone.java,src/main/java/org/joda/time/tz/FixedDateTimeZone.java,92,FixedDateTimeZone other = (FixedDateTimeZone) obj;
False,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,230, catch (IOException e) {
False,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,231,ncaughtException(e);
True,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,230,} catch (IOException ex) {
True,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,231,uncaughtException(ex);
False,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,239, catch (IOException e) {
True,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,239,} catch (IOException ex) {
False,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,259, catch (IOException e) {
True,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,259,} catch (IOException ex) {
False,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,285, catch (ArrayIndexOutOfBoundsException e) {
True,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,285,} catch (ArrayIndexOutOfBoundsException ex) {
