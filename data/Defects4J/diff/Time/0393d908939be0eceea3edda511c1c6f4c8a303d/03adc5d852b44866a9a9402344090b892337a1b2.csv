is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,83,private static final DateTimeZone SIX = DateTimeZone.getInstance(6);
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,84,private static final DateTimeZone SEVEN = DateTimeZone.getInstance(7);
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,520,"ssertEquals(new DateTime(2004, 6, 9, 0, 0, 0, 0, DateTimeZone.getInstance(6)), m.getStart());"
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,521,"ssertEquals(new DateTime(2005, 8, 9, 0, 0, 0, 0, DateTimeZone.getInstance(6)), m.getEnd());"
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,522,"ssertEquals(Chronology.getISO(DateTimeZone.getInstance(6)), m.getChronology());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,522,"assertEquals(new DateTime(2004, 6, 9, 0, 0, 0, 0, SIX).withChronology(null), m.getStart());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,523,"assertEquals(new DateTime(2005, 8, 9, 0, 0, 0, 0, SIX).withChronology(null), m.getEnd());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,524,"assertEquals(Chronology.getISO(), m.getChronology());"
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,528,"ssertEquals(new DateTime(2003, 4, 9, 0, 0, 0, 0, DateTimeZone.getInstance(6)), m.getStart());"
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,529,"ssertEquals(new DateTime(2004, 6, 9, 0, 0, 0, 0, DateTimeZone.getInstance(6)), m.getEnd());"
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,530,"ssertEquals(Chronology.getISO(DateTimeZone.getInstance(6)), m.getChronology());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,530,"assertEquals(new DateTime(2003, 4, 9, 0, 0, 0, 0, SIX).withChronology(null), m.getStart());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,531,"assertEquals(new DateTime(2004, 6, 9, 0, 0, 0, 0, SIX).withChronology(null), m.getEnd());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,532,"assertEquals(Chronology.getISO(), m.getChronology());"
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,536,"ssertEquals(new DateTime(2003, 8, 9, 0, 0, 0, 0, DateTimeZone.getInstance(6)), m.getStart());"
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,537,"ssertEquals(new DateTime(2004, 6, 9, 0, 0, 0, 0, DateTimeZone.getInstance(6)), m.getEnd());"
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,538,"ssertEquals(Chronology.getISO(DateTimeZone.getInstance(6)), m.getChronology());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,538,"assertEquals(new DateTime(2003, 8, 9, 0, 0, 0, 0, SIX).withChronology(null), m.getStart());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,539,"assertEquals(new DateTime(2004, 6, 9, 0, 0, 0, 0, SEVEN).withChronology(null), m.getEnd());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,540,"assertEquals(Chronology.getISO(), m.getChronology());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,543,public void testSetIntoInterval_Object_Chronology7() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,544,"MutableInterval m = new MutableInterval(-1000L, 1000L);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,545,"StringConverter.INSTANCE.setInto(m, ""2003-08-09/2004-06-09"", Chronology.getBuddhist());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,546,"assertEquals(new DateTime(2003, 8, 9, 0, 0, 0, 0, Chronology.getBuddhist()), m.getStart());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,547,"assertEquals(new DateTime(2004, 6, 9, 0, 0, 0, 0, Chronology.getBuddhist()), m.getEnd());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,548,"assertEquals(Chronology.getBuddhist(), m.getChronology());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,551,public void testSetIntoInterval_Object_Chronology8() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,552,"MutableInterval m = new MutableInterval(-1000L, 1000L);"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,553,"StringConverter.INSTANCE.setInto(m, ""2003-08-09T+06:00/2004-06-09T+07:00"", Chronology.getBuddhist(EIGHT));"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,554,"assertEquals(new DateTime(2003, 8, 9, 0, 0, 0, 0, Chronology.getBuddhist(SIX)).withZone(EIGHT), m.getStart());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,555,"assertEquals(new DateTime(2004, 6, 9, 0, 0, 0, 0, Chronology.getBuddhist(SEVEN)).withZone(EIGHT), m.getEnd());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,556,"assertEquals(Chronology.getBuddhist(EIGHT), m.getChronology());"
