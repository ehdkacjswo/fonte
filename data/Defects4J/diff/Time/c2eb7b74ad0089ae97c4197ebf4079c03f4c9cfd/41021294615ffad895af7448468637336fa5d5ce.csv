is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,158,f (size >= 2 && formatters.get(1) instanceof Separator) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,159,eriodFormatter before = (PeriodFormatter) formatters.get(0);
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,160,f (size == 2) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,161,/ Separator at the end would never format anything.
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,162,eturn before;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,164,eturn ((Separator) formatters.get(1)).finish
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,165,"before, toFormatter(formatters.subList(2, size)));"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,158,if (size >= 1 && formatters.get(0) instanceof Separator) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,159,Separator sep = (Separator) formatters.get(0);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,160,"return sep.finish(toFormatter(formatters.subList(1, size)));"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,210," Instructs the printer to emit specific text, and the parser to expect"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,211, it. The parser is case-insensitive.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,205,"* Instructs the printer to emit specific text, and the parser to expect it."
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,206,* The parser is case-insensitive.
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,528," During printing, separators are only printed if fields are printed"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,529, following the latest one.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,523,"* Append a separator, which is output if fields are printed both before"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,524,* and after the separator.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,525,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,526,"* For example, <code>builder.appendDays().appendSeparator("","").appendHours()</code>"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,527,* will only output the comma if both the days and hours fields are output.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,528,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,529,* The text will be parsed case-insensitively.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,534,* @param text  the text to use as a separator
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,536,* @throws IllegalStateException if this separator follows a previous one
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,537,"eturn appendSeparator(text, text);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,539,"return appendSeparator(text, text, true, true);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,543,"* Append a separator, which is output only if fields are printed after the separator."
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,544,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,545,"* For example, <code>builder.appendDays().appendSeparator("","").appendHours()</code>"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,546,* will only output the comma if the hours fields is output.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,547,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,548,* The text will be parsed case-insensitively.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,549,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,550,* Note: appending a separator discontinues any further work on the latest
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,551,* appended field.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,553,* @param text  the text to use as a separator
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,554,* @return this PeriodFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,555,* @throws IllegalStateException if this separator follows a previous one
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,557,public PeriodFormatterBuilder appendSeparatorIfFieldsAfter(String text) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,558,"return appendSeparator(text, text, false, true);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,541," During printing, separators are only printed if fields are printed"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,542, following the latest one.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,562,"* Append a separator, which is output only if fields are printed after the separator."
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,563,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,564,"* For example, <code>builder.appendDays().appendSeparator("","").appendHours()</code>"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,565,* will only output the comma if the days fields is output.
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,544," During parsing, either text parameter is accepted, and is"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,545, case-insensitive.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,567,* The text will be parsed case-insensitively.
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,550, @param finalText alternate used if this is the final separator
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,551, printed
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,572,* @param text  the text to use as a separator
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,574,* @throws IllegalStateException if this separator follows a previous one
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,554,"ublic PeriodFormatterBuilder appendSeparator(String text,"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,555,tring finalText) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,576,public PeriodFormatterBuilder appendSeparatorIfFieldsBefore(String text) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,577,"return appendSeparator(text, text, true, false);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,581,"* Append a separator, which is output if fields are printed both before"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,582,* and after the separator.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,583,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,584,* This method changes the separator depending on whether it is the last separator
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,585,* to be output.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,586,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,587,"* For example, <code>builder.appendDays().appendSeparator("","", ""&"").appendHours().appendSeparator("","", ""&"").appendMinutes()</code>"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,588,"* will output '1,2&3' if all three fields are output, '1&2' if two fields are output"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,589,* and '1' if just one field is output.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,590,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,591,* The text will be parsed case-insensitively.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,592,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,593,* Note: appending a separator discontinues any further work on the latest
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,594,* appended field.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,596,* @param text  the text to use as a separator
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,597,* @param finalText  the text used used if this is the final separator to be printed
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,598,* @return this PeriodFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,599,* @throws IllegalStateException if this separator follows a previous one
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,601,"public PeriodFormatterBuilder appendSeparator(String text, String finalText) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,602,"return appendSeparator(text, finalText, true, true);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,605,"private PeriodFormatterBuilder appendSeparator(String text, String finalText, boolean useBefore, boolean useAfter) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,612,// optimise zero formatter case
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,565,/ Separator at the beginning would never print anything.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,615,if (useAfter && useBefore == false) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,616,"formatters.add(new Separator(text, finalText, Literal.EMPTY, useBefore, useAfter));"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,569,/ Create a composite over all the fields between separators.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,621,// find the last separator added
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,632,// merge formatters
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,581,/ Merge two adjacent separators together.
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,582,"Formatters.set(i, lastSeparator.merge(text, finalText));"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,634,"throw new IllegalStateException(""Cannot have two adjacent separators"");"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,586,ormatters.add(composite);
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,588,/ The separator will be finished later.
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,589,"ormatters.add(new Separator(text, finalText));"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,638,"formatters.add(new Separator(text, finalText, composite, useBefore, useAfter));"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,639,f (formatters.size() == 1) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,640,eturn (PeriodFormatter)formatters.get(0);
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,641, else {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,642,eturn new Composite(formatters);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,688,switch (formatters.size()) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,689,case 0:
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,690,return Literal.EMPTY;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,691,case 1:
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,692,return (PeriodFormatter) formatters.get(0);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,693,default:
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,694,return new Composite(formatters);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1284,"static final Literal EMPTY = new Literal("""");"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1274,rivate final PeriodFormatter iBefore;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1275,rivate final PeriodFormatter iAfter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1327,private final boolean iUseBefore;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1328,private final boolean iUseAfter;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1277,"eparator(String text, String finalText) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1278,"his(text, finalText, null, null);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1330,private PeriodFormatter iBefore;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1331,private PeriodFormatter iAfter;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1281,"eparator(String text, String finalText,"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1282,"eriodFormatter before, PeriodFormatter after) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1333,"Separator(String text, String finalText, PeriodFormatter before, boolean useBefore, boolean useAfter) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1286,After = after;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1337,iUseBefore = useBefore;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1338,iUseAfter = useAfter;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1298,nt sum = iBefore.calculatePrintedLength(period)
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1299, iAfter.calculatePrintedLength(period);
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1301,"f (iBefore.countFieldsToPrint(period, 1) > 0) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1302,"nt afterCount = iAfter.countFieldsToPrint(period, 2);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1303,f (afterCount > 0) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1304,um += (afterCount > 1 ? iText : iFinalText).length();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1350,PeriodPrinter before = iBefore;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1351,PeriodPrinter after = iAfter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1353,int sum = before.calculatePrintedLength(period)
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1354,+ after.calculatePrintedLength(period);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1356,if (iUseBefore) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1357,"if (before.countFieldsToPrint(period, 1) > 0) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1358,if (iUseAfter) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1359,"int afterCount = after.countFieldsToPrint(period, 2);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1360,if (afterCount > 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1361,sum += (afterCount > 1 ? iText : iFinalText).length();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1363,} else {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1364,sum += iText.length();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1367,"} else if (iUseAfter && after.countFieldsToPrint(period, 1) > 0) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1368,sum += iText.length();
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1317,"f (before.countFieldsToPrint(period, 1) > 0) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1318,"nt afterCount = after.countFieldsToPrint(period, 2);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1319,f (afterCount > 0) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1320,uf.append(afterCount > 1 ? iText : iFinalText);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1379,if (iUseBefore) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1380,"if (before.countFieldsToPrint(period, 1) > 0) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1381,if (iUseAfter) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1382,"int afterCount = after.countFieldsToPrint(period, 2);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1383,if (afterCount > 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1384,buf.append(afterCount > 1 ? iText : iFinalText);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1386,} else {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1387,buf.append(iText);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1390,"} else if (iUseAfter && after.countFieldsToPrint(period, 1) > 0) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1391,buf.append(iText);
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1333,"f (before.countFieldsToPrint(period, 1) > 0) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1334,"nt afterCount = after.countFieldsToPrint(period, 2);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1335,f (afterCount > 0) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1336,ut.write(afterCount > 1 ? iText : iFinalText);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1401,if (iUseBefore) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1402,"if (before.countFieldsToPrint(period, 1) > 0) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1403,if (iUseAfter) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1404,"int afterCount = after.countFieldsToPrint(period, 2);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1405,if (afterCount > 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1406,out.write(afterCount > 1 ? iText : iFinalText);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1408,} else {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1409,out.write(iText);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1412,"} else if (iUseAfter && after.countFieldsToPrint(period, 1) > 0) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1413,out.write(iText);
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1364,"eturn iAfter.parseInto(period, periodStr, position);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1367,"eparator merge(String text, String finalText) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1368,"eturn new Separator(iText + text, iFinalText + finalText, iBefore, iAfter);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1436,"position = iAfter.parseInto(period, periodStr, position);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1437,return position;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1371,"eparator finish(PeriodFormatter before, PeriodFormatter after) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1372,"eturn new Separator(iText, iFinalText, before, after);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1440,Separator finish(PeriodFormatter after) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1441,iAfter = after;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1442,return this;
