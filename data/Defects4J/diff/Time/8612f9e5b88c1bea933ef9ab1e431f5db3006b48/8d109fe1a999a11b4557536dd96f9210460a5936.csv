is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/joda/time/Partial.java,src/main/java/org/joda/time/Partial.java,218,f (compare < 0 || (compare != 0 && loopUnitField.isSupported() == false)) {
True,src/main/java/org/joda/time/Partial.java,src/main/java/org/joda/time/Partial.java,218,if (compare < 0) {
False,src/main/java/org/joda/time/Partial.java,src/main/java/org/joda/time/Partial.java,224,"hrow new IllegalArgumentException(""Types array must not contain duplicate: "" + loopType.getName());"
True,src/main/java/org/joda/time/Partial.java,src/main/java/org/joda/time/Partial.java,224,"throw new IllegalArgumentException(""Types array must not contain duplicate: "" +"
True,src/main/java/org/joda/time/Partial.java,src/main/java/org/joda/time/Partial.java,225,"types[i - 1].getName() + "" and "" + loopType.getName());"
False,src/main/java/org/joda/time/Partial.java,src/main/java/org/joda/time/Partial.java,238,"hrow new IllegalArgumentException(""Types array must not contain duplicate: "" + loopType.getName());"
True,src/main/java/org/joda/time/Partial.java,src/main/java/org/joda/time/Partial.java,239,"throw new IllegalArgumentException(""Types array must not contain duplicate: "" +"
True,src/main/java/org/joda/time/Partial.java,src/main/java/org/joda/time/Partial.java,240,"types[i - 1].getName() + "" and "" + loopType.getName());"
True,src/main/java/org/joda/time/Partial.java,src/main/java/org/joda/time/Partial.java,449,if (fieldType.getRangeDurationType() == null) {
True,src/main/java/org/joda/time/Partial.java,src/main/java/org/joda/time/Partial.java,450,break;
True,src/main/java/org/joda/time/field/UnsupportedDurationField.java,src/main/java/org/joda/time/field/UnsupportedDurationField.java,227,if (durationField.isSupported()) {
True,src/main/java/org/joda/time/field/UnsupportedDurationField.java,src/main/java/org/joda/time/field/UnsupportedDurationField.java,228,return 1;
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,451,public void testWith_baseHasNoRange() {
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,452,"Partial test = new Partial(DateTimeFieldType.year(), 1);"
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,453,"Partial result = test.with(DateTimeFieldType.hourOfDay(), 10);"
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,454,"assertEquals(2, result.size());"
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,455,"assertEquals(0, result.indexOf(DateTimeFieldType.year()));"
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,456,"assertEquals(1, result.indexOf(DateTimeFieldType.hourOfDay()));"
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,459,public void testWith_argHasNoRange() {
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,460,"Partial test = new Partial(DateTimeFieldType.hourOfDay(), 1);"
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,461,"Partial result = test.with(DateTimeFieldType.year(), 10);"
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,462,"assertEquals(2, result.size());"
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,463,"assertEquals(0, result.indexOf(DateTimeFieldType.year()));"
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,464,"assertEquals(1, result.indexOf(DateTimeFieldType.hourOfDay()));"
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,467,public void testWith_baseAndArgHaveNoRange() {
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,468,"Partial test = new Partial(DateTimeFieldType.year(), 1);"
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,469,"Partial result = test.with(DateTimeFieldType.era(), 1);"
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,470,"assertEquals(2, result.size());"
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,471,"assertEquals(0, result.indexOf(DateTimeFieldType.era()));"
True,src/test/java/org/joda/time/TestPartial_Basics.java,src/test/java/org/joda/time/TestPartial_Basics.java,472,"assertEquals(1, result.indexOf(DateTimeFieldType.year()));"
