is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/time/format/TestAll.java,JodaTime/src/test/org/joda/time/format/TestAll.java,79,suite.addTest(TestISOPeriodFormatParsing.suite());
True,JodaTime/src/test/org/joda/time/format/TestAll.java,JodaTime/src/test/org/joda/time/format/TestAll.java,80,suite.addTest(TestPeriodFormatParsing.suite());
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,10,* are met:
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,54,package org.joda.time.format;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,56,import java.util.Locale;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,57,import java.util.TimeZone;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,59,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,60,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,62,import org.joda.time.DateTimeConstants;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,63,import org.joda.time.DateTimeUtils;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,64,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,65,import org.joda.time.Period;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,66,import org.joda.time.PeriodType;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,69,* This class is a Junit unit test for ISOPeriodFormat.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,71,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,73,public class TestISOPeriodFormatParsing extends TestCase {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,75,"private static final Period PERIOD = new Period(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,76,"private static final Period EMPTY_PERIOD = new Period(0, 0, 0, 0, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,77,"private static final Period YEAR_DAY_PERIOD = new Period(1, 0, 0, 4, 5, 6, 7, 8, PeriodType.yearDayTime());"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,78,"private static final Period EMPTY_YEAR_DAY_PERIOD = new Period(0, 0, 0, 0, 0, 0, 0, 0, PeriodType.yearDayTime());"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,79,"private static final Period TIME_PERIOD = new Period(0, 0, 0, 0, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,80,"private static final Period DATE_PERIOD = new Period(1, 2, 3, 4, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,82,"private static final DateTimeZone PARIS = DateTimeZone.getInstance(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,83,"private static final DateTimeZone LONDON = DateTimeZone.getInstance(""Europe/London"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,84,"private static final DateTimeZone TOKYO = DateTimeZone.getInstance(""Asia/Tokyo"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,86,long y2002days = 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,87,366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,88,365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,89,366 + 365;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,90,// 2002-06-09
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,91,private long TEST_TIME_NOW = (y2002days + 31L + 28L + 31L + 30L + 31L + 9L - 1L) * DateTimeConstants.MILLIS_PER_DAY;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,93,private DateTimeZone originalDateTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,94,private TimeZone originalTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,95,private Locale originalLocale = null;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,97,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,98,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,101,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,102,return new TestSuite(TestISOPeriodFormatParsing.class);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,105,public TestISOPeriodFormatParsing(String name) {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,106,super(name);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,109,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,110,DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,111,originalDateTimeZone = DateTimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,112,originalTimeZone = TimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,113,originalLocale = Locale.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,114,DateTimeZone.setDefault(LONDON);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,115,"TimeZone.setDefault(TimeZone.getTimeZone(""Europe/London""));"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,116,Locale.setDefault(Locale.UK);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,119,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,120,DateTimeUtils.setCurrentMillisSystem();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,121,DateTimeZone.setDefault(originalDateTimeZone);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,122,TimeZone.setDefault(originalTimeZone);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,123,Locale.setDefault(originalLocale);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,124,originalDateTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,125,originalTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,126,originalLocale = null;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,130,public void testParseStandard1() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,131,PeriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,132,"Period p = parser.parsePeriod(PeriodType.standard(), ""P1Y2M3W4DT5H6M7.008S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,133,"assertEquals(new Period(1, 2, 3, 4, 5, 6, 7, 8), p);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,137,public void testParseStandard2() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,138,PeriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,139,"Period p = parser.parsePeriod(PeriodType.standard(), ""P0Y0M0W0DT5H6M7.008S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,140,"assertEquals(new Period(0, 0, 0, 0, 5, 6, 7, 8), p);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,144,public void testParseStandard3() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,145,PeriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,146,"Period p = parser.parsePeriod(PeriodType.standard(), ""P0DT5H6M7.008S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,147,"assertEquals(new Period(0, 0, 0, 0, 5, 6, 7, 8), p);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,151,public void testParseStandard4() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,152,PeriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,153,"Period p = parser.parsePeriod(PeriodType.standard(), ""P2Y3DT5H6M7.008S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,154,"assertEquals(new Period(2, 0, 0, 3, 5, 6, 7, 8), p);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,158,public void testParseStandard5() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,159,PeriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,160,"Period p = parser.parsePeriod(PeriodType.standard(), ""P2YT5H6M7.008S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,161,"assertEquals(new Period(2, 0, 0, 0, 5, 6, 7, 8), p);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,165,public void testParseStandard6() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,166,PeriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,167,"Period p = parser.parsePeriod(PeriodType.standard(), ""PT5H6M7.008S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,168,"assertEquals(new Period(0, 0, 0, 0, 5, 6, 7, 8), p);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,172,public void testParseStandard7() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,173,PeriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,174,"Period p = parser.parsePeriod(PeriodType.standard(), ""P1Y2M3W4D"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,175,"assertEquals(new Period(1, 2, 3, 4, 0, 0, 0, 0), p);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,179,public void testParseStandard8() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,180,PeriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,181,"Period p = parser.parsePeriod(PeriodType.standard(), ""PT5H6M7S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,182,"assertEquals(new Period(0, 0, 0, 0, 5, 6, 7, 0), p);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,186,public void testParseStandard9() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,187,PeriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,188,"Period p = parser.parsePeriod(PeriodType.standard(), ""PT0S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,189,"assertEquals(new Period(0, 0, 0, 0, 0, 0, 0, 0), p);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,193,public void testParseStandard10() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,194,PeriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,195,"Period p = parser.parsePeriod(PeriodType.standard(), ""P0D"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,196,"assertEquals(new Period(0, 0, 0, 0, 0, 0, 0, 0), p);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,200,public void testParseStandard11() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,201,PeriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,202,"Period p = parser.parsePeriod(PeriodType.standard(), ""P0Y"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,203,"assertEquals(new Period(0, 0, 0, 0, 0, 0, 0, 0), p);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,207,public void testParseStandardFail1() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,208,PeriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,209,try {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,210,"parser.parsePeriod(PeriodType.standard(), ""P1Y2S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,211,fail();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,212,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,216,public void testParseStandardFail2() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,217,PeriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,218,try {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,219,"parser.parsePeriod(PeriodType.standard(), ""PS"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,220,fail();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,221,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,225,public void testParseStandardFail3() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,226,PeriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,227,try {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,228,"parser.parsePeriod(PeriodType.standard(), ""PTS"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,229,fail();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,230,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,234,public void testParseStandardFail4() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,235,PeriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,236,try {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,237,"parser.parsePeriod(PeriodType.standard(), ""PXS"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,238,fail();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,239,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,10,* are met:
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,54,package org.joda.time.format;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,56,import java.util.Locale;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,57,import java.util.TimeZone;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,59,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,60,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,62,import org.joda.time.DateTimeConstants;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,63,import org.joda.time.DateTimeUtils;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,64,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,65,import org.joda.time.Period;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,66,import org.joda.time.PeriodType;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,69,* This class is a Junit unit test for PeriodFormat.
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,71,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,73,public class TestPeriodFormatParsing extends TestCase {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,75,"private static final Period PERIOD = new Period(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,76,"private static final Period EMPTY_PERIOD = new Period(0, 0, 0, 0, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,77,"private static final Period YEAR_DAY_PERIOD = new Period(1, 0, 0, 4, 5, 6, 7, 8, PeriodType.yearDayTime());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,78,"private static final Period EMPTY_YEAR_DAY_PERIOD = new Period(0, 0, 0, 0, 0, 0, 0, 0, PeriodType.yearDayTime());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,79,"private static final Period TIME_PERIOD = new Period(0, 0, 0, 0, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,80,"private static final Period DATE_PERIOD = new Period(1, 2, 3, 4, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,82,"private static final DateTimeZone PARIS = DateTimeZone.getInstance(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,83,"private static final DateTimeZone LONDON = DateTimeZone.getInstance(""Europe/London"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,84,"private static final DateTimeZone TOKYO = DateTimeZone.getInstance(""Asia/Tokyo"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,86,long y2002days = 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,87,366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,88,365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,89,366 + 365;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,90,// 2002-06-09
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,91,private long TEST_TIME_NOW = (y2002days + 31L + 28L + 31L + 30L + 31L + 9L - 1L) * DateTimeConstants.MILLIS_PER_DAY;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,93,private DateTimeZone originalDateTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,94,private TimeZone originalTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,95,private Locale originalLocale = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,97,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,98,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,101,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,102,return new TestSuite(TestPeriodFormatParsing.class);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,105,public TestPeriodFormatParsing(String name) {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,106,super(name);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,109,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,110,DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,111,originalDateTimeZone = DateTimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,112,originalTimeZone = TimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,113,originalLocale = Locale.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,114,DateTimeZone.setDefault(LONDON);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,115,"TimeZone.setDefault(TimeZone.getTimeZone(""Europe/London""));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,116,Locale.setDefault(Locale.UK);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,119,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,120,DateTimeUtils.setCurrentMillisSystem();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,121,DateTimeZone.setDefault(originalDateTimeZone);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,122,TimeZone.setDefault(originalTimeZone);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,123,Locale.setDefault(originalLocale);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,124,originalDateTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,125,originalTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,126,originalLocale = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,130,public void testParseStandard1() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,131,PeriodParser parser = PeriodFormat.getInstance().getDefault();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,132,"Period p = parser.parsePeriod(PeriodType.standard(), ""6 years, 3 months and 2 days"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,133,"assertEquals(new Period(6, 3, 0, 2, 0, 0, 0, 0), p);"
