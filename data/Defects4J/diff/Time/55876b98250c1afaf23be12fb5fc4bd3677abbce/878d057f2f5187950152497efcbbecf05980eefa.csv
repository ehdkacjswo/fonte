is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/joda/time/DateTimeZone.java,src/main/java/org/joda/time/DateTimeZone.java,474,tring providerClass =
False,src/main/java/org/joda/time/DateTimeZone.java,src/main/java/org/joda/time/DateTimeZone.java,475,"ystem.getProperty(""org.joda.time.DateTimeZone.Provider"");"
True,src/main/java/org/joda/time/DateTimeZone.java,src/main/java/org/joda/time/DateTimeZone.java,474,"String providerClass = System.getProperty(""org.joda.time.DateTimeZone.Provider"");"
False,src/main/java/org/joda/time/DateTimeZone.java,src/main/java/org/joda/time/DateTimeZone.java,480,hread thread = Thread.currentThread();
False,src/main/java/org/joda/time/DateTimeZone.java,src/main/java/org/joda/time/DateTimeZone.java,481,"hread.getThreadGroup().uncaughtException(thread, ex);"
True,src/main/java/org/joda/time/DateTimeZone.java,src/main/java/org/joda/time/DateTimeZone.java,479,throw new RuntimeException(ex);
False,src/main/java/org/joda/time/DateTimeZone.java,src/main/java/org/joda/time/DateTimeZone.java,492,hread thread = Thread.currentThread();
False,src/main/java/org/joda/time/DateTimeZone.java,src/main/java/org/joda/time/DateTimeZone.java,493,"hread.getThreadGroup().uncaughtException(thread, ex);"
True,src/main/java/org/joda/time/DateTimeZone.java,src/main/java/org/joda/time/DateTimeZone.java,490,ex.printStackTrace();
False,src/main/java/org/joda/time/DateTimeZone.java,src/main/java/org/joda/time/DateTimeZone.java,564,hread thread = Thread.currentThread();
False,src/main/java/org/joda/time/DateTimeZone.java,src/main/java/org/joda/time/DateTimeZone.java,565,"hread.getThreadGroup().uncaughtException(thread, ex);"
True,src/main/java/org/joda/time/DateTimeZone.java,src/main/java/org/joda/time/DateTimeZone.java,561,throw new RuntimeException(ex);
False,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,128," If an error is thrown while loading zone data, uncaughtException is"
False,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,129, called to log the error and null is returned for this and all future
False,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,130, requests.
True,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,128,"* If an error is thrown while loading zone data, the exception is logged"
True,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,129,* to system error and null is returned for this and all future requests.
False,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,183,hread t = Thread.currentThread();
False,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,184,".getThreadGroup().uncaughtException(t, ex);"
True,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,src/main/java/org/joda/time/tz/ZoneInfoProvider.java,182,ex.printStackTrace();
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,462,rintStream syserr = System.err;
True,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,463,public void testProvider_badClassName() {
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,465,yteArrayOutputStream baos = new ByteArrayOutputStream();
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,466,ystem.setErr(new PrintStream(baos));
True,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,468,} catch (RuntimeException ex) {
True,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,469,// expected
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,471,tring str = new String(baos.toByteArray());
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,472,"ssertTrue(str.indexOf(""java.lang.ClassNotFoundException"") >= 0);"
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,474,ystem.setErr(syserr);
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,477,"ssertEquals(ZoneInfoProvider.class, DateTimeZone.getProvider().getClass());"
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,576,rintStream syserr = System.err;
True,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,573,public void testNameProvider_badClassName() {
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,579,yteArrayOutputStream baos = new ByteArrayOutputStream();
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,580,ystem.setErr(new PrintStream(baos));
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,582,ateTimeZone.setNameProvider(null);
True,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,576,DateTimeZone.setProvider(null);
True,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,578,} catch (RuntimeException ex) {
True,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,579,// expected
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,585,tring str = new String(baos.toByteArray());
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,586,"ssertTrue(str.indexOf(""java.lang.ClassNotFoundException"") >= 0);"
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,588,ystem.setErr(syserr);
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,590,ateTimeZone.setNameProvider(null);
False,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,591,"ssertEquals(DefaultNameProvider.class, DateTimeZone.getNameProvider().getClass());"
True,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,583,DateTimeZone.setProvider(null);
