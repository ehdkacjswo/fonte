is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/joda/time/base/AbstractPeriod.java,src/main/java/org/joda/time/base/AbstractPeriod.java,50,* Gets the number of fields that this period supports.
True,src/main/java/org/joda/time/base/AbstractPeriod.java,src/main/java/org/joda/time/base/AbstractPeriod.java,52,* @return the number of fields supported
True,src/main/java/org/joda/time/base/AbstractPeriod.java,src/main/java/org/joda/time/base/AbstractPeriod.java,53,* @since 2.0 (previously on BasePeriod)
True,src/main/java/org/joda/time/base/AbstractPeriod.java,src/main/java/org/joda/time/base/AbstractPeriod.java,55,public int size() {
True,src/main/java/org/joda/time/base/AbstractPeriod.java,src/main/java/org/joda/time/base/AbstractPeriod.java,56,return getPeriodType().size();
True,src/main/java/org/joda/time/base/AbstractPeriod.java,src/main/java/org/joda/time/base/AbstractPeriod.java,60,* Gets the field type at the specified index.
True,src/main/java/org/joda/time/base/AbstractPeriod.java,src/main/java/org/joda/time/base/AbstractPeriod.java,62,* @param index  the index to retrieve
True,src/main/java/org/joda/time/base/AbstractPeriod.java,src/main/java/org/joda/time/base/AbstractPeriod.java,63,* @return the field at the specified index
True,src/main/java/org/joda/time/base/AbstractPeriod.java,src/main/java/org/joda/time/base/AbstractPeriod.java,64,* @throws IndexOutOfBoundsException if the index is invalid
True,src/main/java/org/joda/time/base/AbstractPeriod.java,src/main/java/org/joda/time/base/AbstractPeriod.java,65,* @since 2.0 (previously on BasePeriod)
True,src/main/java/org/joda/time/base/AbstractPeriod.java,src/main/java/org/joda/time/base/AbstractPeriod.java,67,public DurationFieldType getFieldType(int index) {
True,src/main/java/org/joda/time/base/AbstractPeriod.java,src/main/java/org/joda/time/base/AbstractPeriod.java,68,return getPeriodType().getFieldType(index);
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,2,  Copyright 2001-2005 Stephen Colebourne
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,2,*  Copyright 2001-2011 Stephen Colebourne
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,51,rivate long iMillis;
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,51,private final long iMillis;
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,53,rivate Chronology iChronology;
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,53,private final Chronology iChronology;
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,313,* <p>
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,314,"* In version 2.0 and later, this method uses reflection. This is because the"
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,315,* instance variable has been changed to be final to satisfy the Java Memory Model.
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,316,* This only impacts subclasses that are mutable.
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,317,"Millis = checkInstant(instant, iChronology);"
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,321,"instant = checkInstant(instant, iChronology);"
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,322,"MutableHelper.setDateTimeMillis(this, instant);"
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,330,* <p>
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,331,"* In version 2.0 and later, this method uses reflection. This is because the"
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,332,* instance variable has been changed to be final to satisfy the Java Memory Model.
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,333,* This only impacts subclasses that are mutable.
False,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,329,Chronology = checkChronology(chronology);
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,338,chronology = checkChronology(chronology);
True,src/main/java/org/joda/time/base/BaseDateTime.java,src/main/java/org/joda/time/base/BaseDateTime.java,339,"MutableHelper.setDateTimeChrono(this, chronology);"
False,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,2,  Copyright 2001-2005 Stephen Colebourne
True,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,2,*  Copyright 2001-2011 Stephen Colebourne
False,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,53,rivate long iMillis;
True,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,53,private final long iMillis;
True,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,121,* <p>
True,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,122,"* In version 2.0 and later, this method uses reflection. This is because the"
True,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,123,* instance variable has been changed to be final to satisfy the Java Memory Model.
True,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,124,* This only impacts subclasses that are mutable.
False,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,125,Millis = duration;
True,src/main/java/org/joda/time/base/BaseDuration.java,src/main/java/org/joda/time/base/BaseDuration.java,129,"MutableHelper.setDurationMillis(this, duration);"
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,2,  Copyright 2001-2005 Stephen Colebourne
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,2,*  Copyright 2001-2011 Stephen Colebourne
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,23,mport org.joda.time.ReadWritableInterval;
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,56,rivate Chronology iChronology;
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,55,private final Chronology iChronology;
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,58,rivate long iStartMillis;
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,57,private final long iStartMillis;
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,60,rivate long iEndMillis;
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,59,private final long iEndMillis;
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,196, else if (this instanceof ReadWritableInterval) {
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,197,"onverter.setInto((ReadWritableInterval) this, interval, chrono);"
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,238,* <p>
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,239,"* In version 2.0 and later, this method uses reflection. This is because the"
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,240,* instance variable has been changed to be final to satisfy the Java Memory Model.
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,241,* This only impacts subclasses that are mutable.
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,249,StartMillis = startInstant;
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,250,EndMillis = endInstant;
False,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,251,Chronology = DateTimeUtils.getChronology(chrono);
True,src/main/java/org/joda/time/base/BaseInterval.java,src/main/java/org/joda/time/base/BaseInterval.java,250,"MutableHelper.setInterval(this, startInstant, endInstant, DateTimeUtils.getChronology(chrono));"
False,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,2,  Copyright 2001-2005 Stephen Colebourne
True,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,2,*  Copyright 2001-2011 Stephen Colebourne
False,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,51,rivate Chronology iChronology;
True,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,51,private final Chronology iChronology;
False,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,53,rivate int[] iValues;
True,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,53,private final int[] iValues;
False,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,254, Sets the value of the field at the specifed index.
True,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,254,* Sets the value of the field at the specified index.
True,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,255,* <p>
True,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,256,"* In version 2.0 and later, this method copies the array into the original."
True,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,257,* This is because the instance variable has been changed to be final to satisfy the Java Memory Model.
True,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,258,* This only impacts subclasses that are mutable.
False,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,262,"Values = field.set(this, index, iValues, value);"
True,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,266,"int[] values = field.set(this, index, iValues, value);"
True,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,267,"System.arraycopy(values, 0, iValues, 0, iValues.length);"
True,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,272,* <p>
True,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,273,"* In version 2.0 and later, this method copies the array into the original."
True,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,274,* This is because the instance variable has been changed to be final to satisfy the Java Memory Model.
True,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,275,* This only impacts subclasses that are mutable.
False,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,272,Values = values;
True,src/main/java/org/joda/time/base/BasePartial.java,src/main/java/org/joda/time/base/BasePartial.java,281,"System.arraycopy(values, 0, iValues, 0, iValues.length);"
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,2,  Copyright 2001-2007 Stephen Colebourne
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,2,*  Copyright 2001-2011 Stephen Colebourne
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,56,/** Serialization version */
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,57,private static final ReadablePeriod DUMMY_PERIOD = new AbstractPeriod() {
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,58,@Override
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,59,public int getValue(int index) {
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,60,return 0;
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,62,@Override
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,63,public PeriodType getPeriodType() {
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,64,return PeriodType.time();
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,58,rivate PeriodType iType;
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,69,private final PeriodType iType;
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,60,rivate int[] iValues;
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,71,private final int[] iValues;
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,84,"etPeriodInternal(years, months, weeks, days, hours, minutes, seconds, millis); // internal method"
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,95,"iValues = setPeriodInternal(years, months, weeks, days, hours, minutes, seconds, millis); // internal method"
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,224,Type = PeriodType.time();
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,225,"nt[] values = ISOChronology.getInstanceUTC().get(this, duration);"
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,235,// calculation uses period type from a period object (bad design)
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,236,// thus we use a dummy period object with the time type
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,238,"int[] values = ISOChronology.getInstanceUTC().get(DUMMY_PERIOD, duration);"
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,313, Gets the number of fields that this period supports.
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,315, @return the number of fields supported
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,317,ublic int size() {
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,318,eturn iType.size();
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,322, Gets the field type at the specified index.
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,324, @param index  the index to retrieve
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,325, @return the field at the specified index
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,326, @throws IndexOutOfBoundsException if the index is invalid
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,328,ublic DurationFieldType getFieldType(int index) {
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,329,eturn iType.getFieldType(index);
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,394, to the relevent index in the specified array.
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,385,* to the relevant index in the specified array.
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,437,Values = newValues;
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,428,setValues(newValues);
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,455,"etPeriodInternal(years, months, weeks, days, hours, minutes, seconds, millis);"
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,446,"int[] newValues = setPeriodInternal(years, months, weeks, days, hours, minutes, seconds, millis);"
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,447,setValues(newValues);
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,461,"rivate void setPeriodInternal(int years, int months, int weeks, int days,"
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,453,"private int[] setPeriodInternal(int years, int months, int weeks, int days,"
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,472,Values = newValues;
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,464,return newValues;
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,546,"Values = mergePeriodInto(getValues(), period);"
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,538,"setValues(mergePeriodInto(getValues(), period));"
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,575,"Values = addPeriodInto(getValues(), period);"
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,567,"setValues(addPeriodInto(getValues(), period));"
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,606, Sets the value of the field at the specifed index.
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,598,* Sets the value of the field at the specified index.
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,610,* <p>
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,611,"* In version 2.0 and later, this method copies the array into the original."
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,612,* This is because the instance variable has been changed to be final to satisfy the Java Memory Model.
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,613,* This only impacts subclasses that are mutable.
False,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,622,Values = values;
True,src/main/java/org/joda/time/base/BasePeriod.java,src/main/java/org/joda/time/base/BasePeriod.java,618,"System.arraycopy(values, 0, iValues, 0, iValues.length);"
False,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,2,  Copyright 2001-2009 Stephen Colebourne
True,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,2,*  Copyright 2001-2011 Stephen Colebourne
False,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,53,rivate int iPeriod;
True,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,53,private final int iPeriod;
True,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,172,* <p>
True,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,173,"* In version 2.0 and later, this method uses reflection. This is because the"
True,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,174,* instance variable has been changed to be final to satisfy the Java Memory Model.
True,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,175,* This only impacts subclasses that are mutable.
False,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,176,Period = value;
True,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java,180,"MutableHelper.setSingleFieldPeriodValue(this, value);"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,2,*  Copyright 2001-2011 Stephen Colebourne
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,4,"*  Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,5,*  you may not use this file except in compliance with the License.
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,6,*  You may obtain a copy of the License at
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,10,"*  Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,11,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,12,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,13,*  See the License for the specific language governing permissions and
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,14,*  limitations under the License.
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,16,package org.joda.time.base;
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,18,import java.lang.reflect.Field;
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,20,import org.joda.time.Chronology;
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,23,* Helper to handle mutable classes that are hard to deal with now there is
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,24,* the Java Memory Model.
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,26,* @author Stephen Colebourne
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,27,* @since 2.0
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,29,final class MutableHelper {
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,31,private static final Field DATE_TIME_MILLIS;
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,32,private static final Field DATE_TIME_CHRONO;
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,33,private static final Field DURATION_MILLIS;
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,34,private static final Field SINGLE_FIELD_PERIOD;
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,35,private static final Field INTERVAL_START;
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,36,private static final Field INTERVAL_END;
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,37,private static final Field INTERVAL_CHRONO;
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,38,static {
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,39,try {
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,40,"DATE_TIME_MILLIS = BaseDateTime.class.getDeclaredField(""iMillis"");"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,41,DATE_TIME_MILLIS.setAccessible(true);
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,42,"DATE_TIME_CHRONO = BaseDateTime.class.getDeclaredField(""iChronology"");"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,43,DATE_TIME_CHRONO.setAccessible(true);
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,44,"DURATION_MILLIS = BaseDuration.class.getDeclaredField(""iMillis"");"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,45,DURATION_MILLIS.setAccessible(true);
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,46,"SINGLE_FIELD_PERIOD = BaseSingleFieldPeriod.class.getDeclaredField(""iPeriod"");"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,47,SINGLE_FIELD_PERIOD.setAccessible(true);
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,48,"INTERVAL_START = BaseInterval.class.getDeclaredField(""iStartMillis"");"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,49,INTERVAL_START.setAccessible(true);
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,50,"INTERVAL_END = BaseInterval.class.getDeclaredField(""iEndMillis"");"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,51,INTERVAL_END.setAccessible(true);
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,52,"INTERVAL_CHRONO = BaseInterval.class.getDeclaredField(""iChronology"");"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,53,INTERVAL_CHRONO.setAccessible(true);
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,55,} catch (Exception ex) {
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,56,"throw new RuntimeException(""Joda-Time mutable classes require reflection"", ex);"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,60,private MutableHelper() {
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,63,"static void setDateTimeMillis(BaseDateTime target, long instant) {"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,64,try {
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,65,"DATE_TIME_MILLIS.set(target, instant);"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,66,} catch (Exception ex) {
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,67,"throw new RuntimeException(""Joda-Time mutable classes require reflection"", ex);"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,71,"static void setDateTimeChrono(BaseDateTime target, Chronology chrono) {"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,72,try {
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,73,"DATE_TIME_CHRONO.set(target, chrono);"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,74,} catch (Exception ex) {
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,75,"throw new RuntimeException(""Joda-Time mutable classes require reflection"", ex);"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,79,"static void setDurationMillis(BaseDuration target, long duration) {"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,80,try {
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,81,"DURATION_MILLIS.set(target, duration);"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,82,} catch (Exception ex) {
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,83,"throw new RuntimeException(""Joda-Time mutable classes require reflection"", ex);"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,87,"static void setSingleFieldPeriodValue(BaseSingleFieldPeriod target, int value) {"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,88,try {
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,89,"SINGLE_FIELD_PERIOD.set(target, value);"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,90,} catch (Exception ex) {
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,91,"throw new RuntimeException(""Joda-Time mutable classes require reflection"", ex);"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,95,"static void setInterval(BaseInterval target, long startMillis, long endMillis, Chronology chrono) {"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,96,try {
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,97,"INTERVAL_START.set(target, startMillis);"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,98,"INTERVAL_END.set(target, endMillis);"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,99,"INTERVAL_CHRONO.set(target, chrono);"
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,100,} catch (Exception ex) {
True,src/main/java/org/joda/time/base/MutableHelper.java,src/main/java/org/joda/time/base/MutableHelper.java,101,"throw new RuntimeException(""Joda-Time mutable classes require reflection"", ex);"
