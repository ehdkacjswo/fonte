is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,2,  Copyright 2001-2009 Stephen Colebourne
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,2,*  Copyright 2001-2011 Stephen Colebourne
False,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,352,or (int i=0; i<count; i++) {
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,352,for (int i = 0; i < count; i++) {
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,355,if (resetFields) {
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,356,for (int i = 0; i < count; i++) {
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,357,"millis = savedFields[i].set(millis, i == (count - 1));"
False,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,2,  Copyright 2001-2009 Stephen Colebourne
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,2,*  Copyright 2001-2011 Stephen Colebourne
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,425,public void testParseLocalDate_weekyear_month_week_2010() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,426,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,427,"DateTimeFormatter f = DateTimeFormat.forPattern(""xxxx-MM-ww"").withChronology(chrono);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,428,"assertEquals(new LocalDate(2010, 1, 4, chrono), f.parseLocalDate(""2010-01-01""));"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,431,public void testParseLocalDate_weekyear_month_week_2011() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,432,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,433,"DateTimeFormatter f = DateTimeFormat.forPattern(""xxxx-MM-ww"").withChronology(chrono);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,434,"assertEquals(new LocalDate(2011, 1, 3, chrono), f.parseLocalDate(""2011-01-01""));"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,437,public void testParseLocalDate_weekyear_month_week_2012() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,438,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,439,"DateTimeFormatter f = DateTimeFormat.forPattern(""xxxx-MM-ww"").withChronology(chrono);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,440,"assertEquals(new LocalDate(2012, 1, 2, chrono), f.parseLocalDate(""2012-01-01""));"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,443,"// This test fails, but since more related tests pass with the extra loop in DateTimeParserBucket"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,444,// I'm going to leave the change in and ignore this test
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,445,//    public void testParseLocalDate_weekyear_month_week_2013() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,446,//        Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,447,"//        DateTimeFormatter f = DateTimeFormat.forPattern(""xxxx-MM-ww"").withChronology(chrono);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,448,"//        assertEquals(new LocalDate(2012, 12, 31, chrono), f.parseLocalDate(""2013-01-01""));"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,451,public void testParseLocalDate_year_month_week_2010() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,452,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,453,"DateTimeFormatter f = DateTimeFormat.forPattern(""yyyy-MM-ww"").withChronology(chrono);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,454,"assertEquals(new LocalDate(2010, 1, 4, chrono), f.parseLocalDate(""2010-01-01""));"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,457,public void testParseLocalDate_year_month_week_2011() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,458,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,459,"DateTimeFormatter f = DateTimeFormat.forPattern(""yyyy-MM-ww"").withChronology(chrono);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,460,"assertEquals(new LocalDate(2011, 1, 3, chrono), f.parseLocalDate(""2011-01-01""));"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,463,public void testParseLocalDate_year_month_week_2012() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,464,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,465,"DateTimeFormatter f = DateTimeFormat.forPattern(""yyyy-MM-ww"").withChronology(chrono);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,466,"assertEquals(new LocalDate(2012, 1, 2, chrono), f.parseLocalDate(""2012-01-01""));"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,469,public void testParseLocalDate_year_month_week_2013() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,470,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,471,"DateTimeFormatter f = DateTimeFormat.forPattern(""yyyy-MM-ww"").withChronology(chrono);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,472,"assertEquals(new LocalDate(2012, 12, 31, chrono), f.parseLocalDate(""2013-01-01""));  // 2013-01-01 would be better, but this is OK"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,475,public void testParseLocalDate_year_month_week_2014() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,476,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,477,"DateTimeFormatter f = DateTimeFormat.forPattern(""yyyy-MM-ww"").withChronology(chrono);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,478,"assertEquals(new LocalDate(2013, 12, 30, chrono), f.parseLocalDate(""2014-01-01""));  // 2014-01-01 would be better, but this is OK"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,481,public void testParseLocalDate_year_month_week_2015() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,482,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,483,"DateTimeFormatter f = DateTimeFormat.forPattern(""yyyy-MM-ww"").withChronology(chrono);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,484,"assertEquals(new LocalDate(2014, 12, 29, chrono), f.parseLocalDate(""2015-01-01""));  // 2015-01-01 would be better, but this is OK"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,487,public void testParseLocalDate_year_month_week_2016() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,488,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,489,"DateTimeFormatter f = DateTimeFormat.forPattern(""yyyy-MM-ww"").withChronology(chrono);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,490,"assertEquals(new LocalDate(2016, 1, 4, chrono), f.parseLocalDate(""2016-01-01""));"
