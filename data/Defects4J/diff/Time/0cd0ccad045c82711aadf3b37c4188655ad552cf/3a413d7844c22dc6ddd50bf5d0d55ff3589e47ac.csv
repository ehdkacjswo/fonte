is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,494, Creates a period from the given interval endpoints using the standard
False,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,495, set of fields.
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,494,* Creates a period between the given instants using the standard set of fields.
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,495,* <p>
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,496,* Most calculations performed by this method have obvious results.
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,497,"* The special case is where the calculation is from a ""long"" month to a ""short"" month."
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,498,"* Here, the result favours increasing the months field rather than the days."
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,499,"* For example, 2013-01-31 to 2013-02-28 is treated as one whole month."
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,500,"* By contrast, 2013-01-31 to 2013-03-30 is treated as one month and 30 days"
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,501,* (exposed as 4 weeks and 2 days).
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,502,* The results are explained by considering that the start date plus the
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,503,* calculated period result in the end date.
False,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,505, Creates a period from the given interval endpoints.
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,513,* Creates a period between the given instants.
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,514,* <p>
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,515,* Most calculations performed by this method have obvious results.
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,516,"* The special case is where the calculation is from a ""long"" month to a ""short"" month."
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,517,"* Here, the result favours increasing the months field rather than the days."
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,518,"* For example, 2013-01-31 to 2013-02-28 is treated as one whole month."
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,519,"* By contrast, 2013-01-31 to 2013-03-30 is treated as one month and 30 days."
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,520,* The results are explained by considering that the start date plus the
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,521,* calculated period result in the end date.
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,543,* Most calculations performed by this method have obvious results.
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,544,"* The special case is where the calculation is from a ""long"" month to a ""short"" month."
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,545,"* Here, the result favours increasing the months field rather than the days."
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,546,"* For example, 2013-01-31 to 2013-02-28 is treated as one whole month."
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,547,"* By contrast, 2013-01-31 to 2013-03-30 is treated as one month and 30 days"
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,548,* (exposed as 4 weeks and 2 days).
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,549,* The results are explained by considering that the start date plus the
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,550,* calculated period result in the end date.
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,551,* <p>
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,577,* Most calculations performed by this method have obvious results.
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,578,"* The special case is where the calculation is from a ""long"" month to a ""short"" month."
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,579,"* Here, the result favours increasing the months field rather than the days."
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,580,"* For example, 2013-01-31 to 2013-02-28 is treated as one whole month."
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,581,"* By contrast, 2013-01-31 to 2013-03-30 is treated as one month and 30 days."
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,582,* The results are explained by considering that the start date plus the
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,583,* calculated period result in the end date.
True,src/main/java/org/joda/time/Period.java,src/main/java/org/joda/time/Period.java,584,* <p>
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1314,public void testConstructor_trickyDifferences_RI_RI_toFeb_standardYear() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1315,"DateTime dt1 = new DateTime(2011, 1, 1, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1316,"DateTime dt2 = new DateTime(2011, 2, 28, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1317,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1318,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1319,"assertEquals(new Period(0, 1, 3, 6, 0, 0, 0, 0), test);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1322,public void testConstructor_trickyDifferences_RI_RI_toFeb_leapYear() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1323,"DateTime dt1 = new DateTime(2012, 1, 1, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1324,"DateTime dt2 = new DateTime(2012, 2, 29, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1325,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1326,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1327,"assertEquals(new Period(0, 1, 4, 0, 0, 0, 0, 0), test);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1330,public void testConstructor_trickyDifferences_RI_RI_toFeb_exactMonths() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1331,"DateTime dt1 = new DateTime(2004, 12, 28, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1332,"DateTime dt2 = new DateTime(2005, 2, 28, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1333,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1334,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1335,"assertEquals(new Period(0, 2, 0, 0, 0, 0, 0, 0), test);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1338,public void testConstructor_trickyDifferences_RI_RI_toFeb_endOfMonth1() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1339,"DateTime dt1 = new DateTime(2004, 12, 29, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1340,"DateTime dt2 = new DateTime(2005, 2, 28, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1341,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1342,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1343,"assertEquals(new Period(0, 2, 0, 0, 0, 0, 0, 0), test);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1346,public void testConstructor_trickyDifferences_RI_RI_toFeb_endOfMonth2() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1347,"DateTime dt1 = new DateTime(2004, 12, 30, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1348,"DateTime dt2 = new DateTime(2005, 2, 28, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1349,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1350,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1351,"assertEquals(new Period(0, 2, 0, 0, 0, 0, 0, 0), test);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1354,public void testConstructor_trickyDifferences_RI_RI_toFeb_endOfMonth3() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1355,"DateTime dt1 = new DateTime(2004, 12, 31, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1356,"DateTime dt2 = new DateTime(2005, 2, 28, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1357,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1358,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1359,"assertEquals(new Period(0, 2, 0, 0, 0, 0, 0, 0), test);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1362,public void testConstructor_trickyDifferences_RI_RI_toMar_endOfMonth1() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1363,"DateTime dt1 = new DateTime(2013, 1, 31, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1364,"DateTime dt2 = new DateTime(2013, 3, 30, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1365,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1366,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1367,"assertEquals(new Period(0, 1, 4, 2, 0, 0, 0, 0), test);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1370,public void testConstructor_trickyDifferences_RI_RI_toMar_endOfMonth2() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1371,"DateTime dt1 = new DateTime(2013, 1, 31, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1372,"DateTime dt2 = new DateTime(2013, 3, 31, 0, 0);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1373,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1374,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1375,"assertEquals(new Period(0, 2, 0, 0, 0, 0, 0, 0), test);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1379,public void testConstructor_trickyDifferences_LD_LD_toFeb_standardYear() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1380,"LocalDate dt1 = new LocalDate(2011, 1, 1);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1381,"LocalDate dt2 = new LocalDate(2011, 2, 28);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1382,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1383,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1384,"assertEquals(new Period(0, 1, 3, 6, 0, 0, 0, 0), test);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1387,public void testConstructor_trickyDifferences_LD_LD_toFeb_leapYear() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1388,"LocalDate dt1 = new LocalDate(2012, 1, 1);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1389,"LocalDate dt2 = new LocalDate(2012, 2, 29);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1390,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1391,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1392,"assertEquals(new Period(0, 1, 4, 0, 0, 0, 0, 0), test);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1395,public void testConstructor_trickyDifferences_LD_LD_toFeb_exactMonths() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1396,"LocalDate dt1 = new LocalDate(2004, 12, 28);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1397,"LocalDate dt2 = new LocalDate(2005, 2, 28);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1398,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1399,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1400,"assertEquals(new Period(0, 2, 0, 0, 0, 0, 0, 0), test);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1403,public void testConstructor_trickyDifferences_LD_LD_toFeb_endOfMonth1() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1404,"LocalDate dt1 = new LocalDate(2004, 12, 29);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1405,"LocalDate dt2 = new LocalDate(2005, 2, 28);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1406,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1407,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1408,"assertEquals(new Period(0, 2, 0, 0, 0, 0, 0, 0), test);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1411,public void testConstructor_trickyDifferences_LD_LD_toFeb_endOfMonth2() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1412,"LocalDate dt1 = new LocalDate(2004, 12, 30);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1413,"LocalDate dt2 = new LocalDate(2005, 2, 28);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1414,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1415,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1416,"assertEquals(new Period(0, 2, 0, 0, 0, 0, 0, 0), test);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1419,public void testConstructor_trickyDifferences_LD_LD_toFeb_endOfMonth3() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1420,"LocalDate dt1 = new LocalDate(2004, 12, 31);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1421,"LocalDate dt2 = new LocalDate(2005, 2, 28);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1422,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1423,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1424,"assertEquals(new Period(0, 2, 0, 0, 0, 0, 0, 0), test);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1427,public void testConstructor_trickyDifferences_LD_LD_toMar_endOfMonth1() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1428,"LocalDate dt1 = new LocalDate(2013, 1, 31);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1429,"LocalDate dt2 = new LocalDate(2013, 3, 30);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1430,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1431,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1432,"assertEquals(new Period(0, 1, 4, 2, 0, 0, 0, 0), test);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1435,public void testConstructor_trickyDifferences_LD_LD_toMar_endOfMonth2() throws Throwable {
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1436,"LocalDate dt1 = new LocalDate(2013, 1, 31);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1437,"LocalDate dt2 = new LocalDate(2013, 3, 31);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1438,"Period test = new Period(dt1, dt2);"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1439,"assertEquals(PeriodType.standard(), test.getPeriodType());"
True,src/test/java/org/joda/time/TestPeriod_Constructors.java,src/test/java/org/joda/time/TestPeriod_Constructors.java,1440,"assertEquals(new Period(0, 2, 0, 0, 0, 0, 0, 0), test);"
