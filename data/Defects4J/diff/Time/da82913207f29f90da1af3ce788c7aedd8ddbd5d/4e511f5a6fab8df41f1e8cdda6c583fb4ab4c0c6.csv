is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/joda/time/LocalDate.java,src/main/java/org/joda/time/LocalDate.java,2,  Copyright 2001-2011 Stephen Colebourne
True,src/main/java/org/joda/time/LocalDate.java,src/main/java/org/joda/time/LocalDate.java,2,*  Copyright 2001-2013 Stephen Colebourne
True,src/main/java/org/joda/time/LocalDate.java,src/main/java/org/joda/time/LocalDate.java,399,"* If the instant contains a chronology, it will be ignored."
True,src/main/java/org/joda/time/LocalDate.java,src/main/java/org/joda/time/LocalDate.java,400,"* For example, passing a {@code LocalDate} and a different chronology"
True,src/main/java/org/joda/time/LocalDate.java,src/main/java/org/joda/time/LocalDate.java,401,* will return a date with the year/month/day from the date applied
True,src/main/java/org/joda/time/LocalDate.java,src/main/java/org/joda/time/LocalDate.java,402,* unaltered to the specified chronology.
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,2,  Copyright 2001-2011 Stephen Colebourne
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,2,*  Copyright 2001-2013 Stephen Colebourne
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,394,"* If the instant contains a chronology, it will be ignored."
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,395,"* For example, passing a {@code LocalDate} and a different chronology"
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,396,* will return a date with the year/month/day from the date applied
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,397,* unaltered to the specified chronology.
False,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,2,  Copyright 2001-2006 Stephen Colebourne
True,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,2,*  Copyright 2001-2013 Stephen Colebourne
True,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,591,public void testConstructor_Object_Chronology_crossChronology() throws Throwable {
True,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,592,"LocalDateTime input = new LocalDateTime(1970, 4, 6, 12, 30, 0, 0, ISO_UTC);"
True,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,593,"LocalDateTime test = new LocalDateTime(input, BUDDHIST_UTC);"
True,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,594,"assertEquals(BUDDHIST_UTC, test.getChronology());"
True,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,595,"assertEquals(1970, test.getYear());"
True,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,596,"assertEquals(4, test.getMonthOfYear());"
True,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,597,"assertEquals(6, test.getDayOfMonth());"
True,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,598,"assertEquals(12, test.getHourOfDay());"
True,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,599,"assertEquals(30, test.getMinuteOfHour());"
True,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,600,"assertEquals(0, test.getSecondOfMinute());"
True,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,src/test/java/org/joda/time/TestLocalDateTime_Constructors.java,601,"assertEquals(0, test.getMillisOfSecond());"
False,src/test/java/org/joda/time/TestLocalDate_Constructors.java,src/test/java/org/joda/time/TestLocalDate_Constructors.java,2,  Copyright 2001-2006 Stephen Colebourne
True,src/test/java/org/joda/time/TestLocalDate_Constructors.java,src/test/java/org/joda/time/TestLocalDate_Constructors.java,2,*  Copyright 2001-2013 Stephen Colebourne
True,src/test/java/org/joda/time/TestLocalDate_Constructors.java,src/test/java/org/joda/time/TestLocalDate_Constructors.java,485,public void testConstructor_Object_Chronology_crossChronology() throws Throwable {
True,src/test/java/org/joda/time/TestLocalDate_Constructors.java,src/test/java/org/joda/time/TestLocalDate_Constructors.java,486,"LocalDate input = new LocalDate(1970, 4, 6, ISO_UTC);"
True,src/test/java/org/joda/time/TestLocalDate_Constructors.java,src/test/java/org/joda/time/TestLocalDate_Constructors.java,487,"LocalDate test = new LocalDate(input, BUDDHIST_UTC);"
True,src/test/java/org/joda/time/TestLocalDate_Constructors.java,src/test/java/org/joda/time/TestLocalDate_Constructors.java,488,"assertEquals(BUDDHIST_UTC, test.getChronology());"
True,src/test/java/org/joda/time/TestLocalDate_Constructors.java,src/test/java/org/joda/time/TestLocalDate_Constructors.java,489,"assertEquals(1970, test.getYear());"
True,src/test/java/org/joda/time/TestLocalDate_Constructors.java,src/test/java/org/joda/time/TestLocalDate_Constructors.java,490,"assertEquals(4, test.getMonthOfYear());"
True,src/test/java/org/joda/time/TestLocalDate_Constructors.java,src/test/java/org/joda/time/TestLocalDate_Constructors.java,491,"assertEquals(6, test.getDayOfMonth());"
