is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,29,import static com.google.javascript.rhino.jstype.JSTypeRegistry.OBJECT_ELEMENT_TEMPLATE;
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,30,import static com.google.javascript.rhino.jstype.JSTypeRegistry.OBJECT_INDEX_TEMPLATE;
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,49,mport com.google.javascript.rhino.jstype.TemplatizedType;
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,51,import com.google.javascript.rhino.jstype.TemplateTypeMap;
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,224,ull : objType.getIndexType();
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,226,null : objType.getTemplateTypeMap().getTemplateType(OBJECT_INDEX_TEMPLATE);
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1089,emplatizedType paramObjectType = paramType.toMaybeTemplatizedType();
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1090,SType typeParameter = paramObjectType.getTemplateType();
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1091,reconditions.checkNotNull(typeParameter);
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1092,f (typeParameter != null) {
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1093,/ @param {Array.<T>}
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1094,bjectType argObjectType = argType
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1095,restrictByNotNullOrUndefined()
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1096,collapseUnion()
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1097,toMaybeTemplatizedType();
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1098,f (argObjectType != null && argObjectType.isSubtype(paramType)) {
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1099,SType argTypeParameter = argObjectType.getTemplateType();
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1100,reconditions.checkNotNull(argTypeParameter);
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1091,// @param {Array.<T>}
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1092,ObjectType referencedParamType = paramType
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1093,.toMaybeTemplatizedType()
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1094,.getReferencedType();
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1095,JSType argObjectType = argType
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1096,.restrictByNotNullOrUndefined()
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1097,.collapseUnion();
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1099,if (argObjectType.isSubtype(referencedParamType)) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1100,"// If the argument type is a subtype of the parameter type, resolve any"
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1101,// template types amongst their templatized types.
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1102,TemplateTypeMap paramTypeMap = paramType.getTemplateTypeMap();
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1103,TemplateTypeMap argTypeMap = argObjectType.getTemplateTypeMap();
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1104,for (String key : paramTypeMap.getTemplateKeys()) {
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1102,"ypeParameter, argTypeParameter, resolvedTypes);"
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1106,"paramTypeMap.getTemplateType(key),"
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1107,"argTypeMap.getTemplateType(key),"
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1108,resolvedTypes);
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1243,bjectType objType = ObjectType.cast(
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1244,etJSType(n.getFirstChild()).restrictByNotNullOrUndefined());
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1245,f (objType != null) {
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1246,SType type = objType.getTemplateType();
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1247,f (type != null) {
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1248,.setJSType(type);
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1249,JSType type = getJSType(n.getFirstChild()).restrictByNotNullOrUndefined();
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1250,TemplateTypeMap typeMap = type.getTemplateTypeMap();
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1251,if (typeMap.hasTemplateType(OBJECT_ELEMENT_TEMPLATE)) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1252,n.setJSType(typeMap.getTemplateType(OBJECT_ELEMENT_TEMPLATE));
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,29,import static com.google.javascript.rhino.jstype.JSTypeRegistry.OBJECT_INDEX_TEMPLATE;
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,336,f (dereferenced != null && dereferenced.getIndexType() != null) {
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,337,"xpectCanAssignTo(t, indexNode, indexType, dereferenced.getIndexType(),"
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,337,if (dereferenced != null && dereferenced
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,338,.getTemplateTypeMap()
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,339,.hasTemplateKey(OBJECT_INDEX_TEMPLATE)) {
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,340,"expectCanAssignTo(t, indexNode, indexType, dereferenced"
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,341,".getTemplateTypeMap().getTemplateType(OBJECT_INDEX_TEMPLATE),"
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,3, ***** BEGIN LICENSE BLOCK *****
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,4, Version: MPL 1.1/GPL 2.0
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,6, The contents of this file are subject to the Mozilla Public License Version
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,7," 1.1 (the ""License""); you may not use this file except in compliance with"
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,8, the License. You may obtain a copy of the License at
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,9, http://www.mozilla.org/MPL/
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,11," Software distributed under the License is distributed on an ""AS IS"" basis,"
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,12," WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,13, for the specific language governing rights and limitations under the
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,14, License.
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,16," The Original Code is Rhino code, released"
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,17," May 6, 1999."
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,19, The Initial Developer of the Original Code is
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,20, Netscape Communications Corporation.
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,21, Portions created by the Initial Developer are Copyright (C) 1997-1999
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,22, the Initial Developer. All Rights Reserved.
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,24, Contributor(s):
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,25,   Bob Jervis
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,26,   Google Inc.
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,28," Alternatively, the contents of this file may be used under the terms of"
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,29," the GNU General Public License Version 2 or later (the ""GPL""), in which"
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,30, case the provisions of the GPL are applicable instead of those above. If
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,31, you wish to allow use of your version of this file only under the terms of
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,32, the GPL and not to allow others to use your version of this file under the
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,33," MPL, indicate your decision by deleting the provisions above and replacing"
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,34, them with the notice and other provisions required by the GPL. If you do
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,35," not delete the provisions above, a recipient may use your version of this"
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,36, file under either the MPL or the GPL.
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,38, ***** END LICENSE BLOCK ***** */
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,40,ackage com.google.javascript.rhino.jstype;
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,43, An object type with a declared default index type.
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,45," For example, <code>Object.<number, string></code> can take only numbers as"
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,46, keys.
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,49,inal class IndexedType extends ProxyObjectType {
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,50,rivate static final long serialVersionUID = 1L;
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,52,inal JSType indexType;
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,54,ndexedType(
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,55,"STypeRegistry registry, ObjectType objectType, JSType indexType) {"
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,56,"uper(registry, objectType);"
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,57,his.indexType = indexType;
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,60,Override
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,61,ublic JSType getIndexType() {
False,src/com/google/javascript/rhino/jstype/IndexedType.java,src/com/google/javascript/rhino/jstype/IndexedType.java,62,eturn indexType;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,554," @see <a href=""http://www.youtube.com/watch?v=_RpSv3HjpEw"">Unknown"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,555,     unknowns</a>
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,554,"* @see <a href=""http://www.youtube.com/watch?v=_RpSv3HjpEw"">Unknown unknowns</a>"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,604,emplatizedType thisParamType = toMaybeTemplatizedType();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,605,emplatizedType thatParamType = that.toMaybeTemplatizedType();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,606,f (thisParamType != null || thatParamType != null) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,607,"/ Check if one type is templatized, but the other is not."
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,608,oolean paramsMatch = false;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,609,f (thisParamType != null && thatParamType != null) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,610,aramsMatch = thisParamType.getTemplateType().checkEquivalenceHelper(
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,611,"hatParamType.getTemplateType(), eqMethod);"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,612, else if (eqMethod == EquivalenceMethod.IDENTITY) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,613,aramsMatch = false;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,614, else {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,615,"/ If one of the type parameters is unknown, but the other is not,"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,616,/ then we consider these the same for the purposes of data flow
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,617,/ and invariance.
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,618,aramsMatch = true;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,621,SType thisRootType = thisParamType == null ?
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,622,his : thisParamType.getReferencedTypeInternal();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,623,SType thatRootType = thatParamType == null ?
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,624,hat : thatParamType.getReferencedTypeInternal();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,625,eturn paramsMatch &&
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,626,"hisRootType.checkEquivalenceHelper(thatRootType, eqMethod);"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,603,if (!getTemplateTypeMap().checkEquivalenceHelper(
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,604,"that.getTemplateTypeMap(), eqMethod)) {"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,605,return false;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1276,eturn thisType.toMaybeTemplatizedType().isTemplatizedSubtypeOf(
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1277,hatType);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1255,"return !areIncompatibleArrays(thisType, thatType) &&"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1256,thisType.toMaybeTemplatizedType().getReferencedType().isSubtype(
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1257,thatType);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1259,if (thatType.isTemplatizedType()) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1260,if (!isExemptFromTemplateTypeInvariance(thatType) &&
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1261,!thisType.getTemplateTypeMap().checkEquivalenceHelper(
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1262,"thatType.getTemplateTypeMap(), EquivalenceMethod.IDENTITY)) {"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1263,return false;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1276,"* Determines if two types are incompatible Arrays, meaning that their element"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1277,* template types are not subtypes of one another.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1279,"private static boolean areIncompatibleArrays(JSType type1, JSType type2) {"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1280,ObjectType type1Obj = type1.toObjectType();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1281,ObjectType type2Obj = type2.toObjectType();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1282,if (type1Obj == null || type2Obj == null) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1283,return false;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1286,"if (!""Array"".equals(type1Obj.getReferenceName()) ||"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1287,"!""Array"".equals(type2Obj.getReferenceName())) {"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1288,return false;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1291,String templateKey = JSTypeRegistry.OBJECT_ELEMENT_TEMPLATE;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1292,JSType elemType1 = type1.getTemplateTypeMap().getTemplateType(templateKey);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1293,JSType elemType2 = type2.getTemplateTypeMap().getTemplateType(templateKey);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1294,return !elemType1.isSubtype(elemType2) && !elemType2.isSubtype(elemType1);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1298,* Determines if the specified type is exempt from standard invariant
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1299,* templatized typing rules.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1301,static boolean isExemptFromTemplateTypeInvariance(JSType type) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1302,ObjectType objType = type.toObjectType();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1303,return objType == null ||
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1304,"""Array"".equals(objType.getReferenceName()) ||"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1305,"""Object"".equals(objType.getReferenceName());"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,81,* The template variable corresponding to the property key type of the built-
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,82,* in Javascript object.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,84,"public static final String OBJECT_INDEX_TEMPLATE = ""Object#Key"";"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,87,* The template variable corresponding to the property value type for
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,88,* Javascript Objects and Arrays.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,90,"public static final String OBJECT_ELEMENT_TEMPLATE = ""Object#Element"";"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,288,"ull, null, true, true);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,300,"null,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,301,createTemplateTypeMap(ImmutableList.of(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,302,"OBJECT_INDEX_TEMPLATE, OBJECT_ELEMENT_TEMPLATE), null),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,303,"true, true);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,325,"ull, null, true, true);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,340,"null,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,341,createTemplateTypeMap(ImmutableList.of(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,342,"OBJECT_ELEMENT_TEMPLATE), null),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,343,"true, true);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1463, Creates a templatized type.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1481,* Creates a templatized instance of the specified type.  Only ObjectTypes
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1482,* can currently be templatized; extend the logic in this function when
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1483,* more types can be templatized.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1484,* @param baseType the type to be templatized.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1485,* @param templatizedTypes a list of the template JSTypes. Will be matched by
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1486,*     list order to the template keys on the base type.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1488,public TemplatizedType createTemplatizedType(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1489,"ObjectType baseType, ImmutableList<JSType> templatizedTypes) {"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1490,// Only ObjectTypes can currently be templatized; extend this logic when
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1491,// more types can be templatized.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1492,"return new TemplatizedType(this, baseType, templatizedTypes);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1496,* Creates a templatized instance of the specified type.  Only ObjectTypes
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1497,* can currently be templatized; extend the logic in this function when
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1498,* more types can be templatized.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1499,* @param baseType the type to be templatized.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1500,* @param templatizedTypes a list of the template JSTypes. Will be matched by
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1501,*     list order to the template keys on the base type.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1466,"bjectType objectType, JSType parameterType) {"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1467,"eturn new TemplatizedType(this, objectType, parameterType);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1504,"ObjectType baseType, JSType... templatizedTypes) {"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1505,return createTemplatizedType(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1506,"baseType, ImmutableList.copyOf(templatizedTypes));"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1584,f (typeList != null &&
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1585,"""Array"".equals(n.getString()) ||"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1586,"Object"".equals(n.getString()))) {"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1587,SType templateType =
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1588,reateFromTypeNodesInternal(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1589,"ypeList.getLastChild(), sourceName, scope);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1590,amedType = new TemplatizedType(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1591,"his, (ObjectType) namedType, templateType);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1592,f (typeList.hasMoreThanOneChild()) {
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1593,SType indexType =
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1594,reateFromTypeNodesInternal(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1595,"ypeList.getFirstChild(), sourceName, scope);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1596,amedType = new IndexedType(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1597,"his, (ObjectType) namedType, indexType);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1623,int nAllowedTypes =
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1624,namedType.getTemplateTypeMap().numUnfilledTemplateKeys();
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1625,if (typeList != null && nAllowedTypes > 0) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1626,// Templatized types.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1627,ImmutableList.Builder<JSType> templateTypes =
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1628,ImmutableList.builder();
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1630,"// Special case for Object, where Object.<X> implies Object.<?,X>."
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1631,"if (n.getString().equals(""Object"") &&"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1632,typeList.getFirstChild() == typeList.getLastChild()) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1633,templateTypes.add(getNativeType(UNKNOWN_TYPE));
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1636,int templateNodeIndex = 0;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1637,for (Node templateNode : typeList.getFirstChild().siblings()) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1638,// Don't parse more templatized type nodes than the type can
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1639,// accommodate. This is because some existing clients have
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1640,"// template annotations on non-templatized classes, for instance:"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1641,//   goog.structs.Set.<SomeType>
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1642,// The problem in these cases is that the previously-unparsed
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1643,// SomeType is not actually a valid type. To prevent these clients
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1644,"// from seeing unknown type errors, we explicitly don't parse"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1645,// these types.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1646,// TODO(user): Address this issue by removing bad template
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1647,// annotations on non-templatized classes.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1648,if (++templateNodeIndex > nAllowedTypes) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1649,break;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1651,templateTypes.add(createFromTypeNodesInternal(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1652,"templateNode, sourceName, scope));"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1654,namedType = createTemplatizedType(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1655,"(ObjectType) namedType, templateTypes.build());"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1656,Preconditions.checkNotNull(namedType);
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,43,import com.google.common.collect.ImmutableList;
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,151,bjectType genericType = ObjectType.cast(
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,152,ype.getReferencedTypeInternal().visit(this));
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,153,SType paramType = type.getTemplateType().visit(this);
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,154,f (type.getReferencedTypeInternal() != genericType
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,155,| type.getTemplateType() != paramType) {
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,156,"ype = registry.createTemplatizedType(genericType, paramType);"
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,152,boolean changed = false;
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,153,ObjectType beforeBaseType = type.getReferencedType();
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,154,ObjectType afterBaseType = ObjectType.cast(beforeBaseType.visit(this));
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,155,if (beforeBaseType != afterBaseType) {
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,156,changed = true;
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,159,ImmutableList.Builder<JSType> builder = ImmutableList.builder();
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,160,for (JSType beforeTemplateType : type.getTemplateTypes()) {
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,161,JSType afterTemplateType = beforeTemplateType.visit(this);
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,162,if (beforeTemplateType != afterTemplateType) {
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,163,changed = true;
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,165,builder.add(afterTemplateType);
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,168,if (changed) {
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,169,"type = registry.createTemplatizedType(afterBaseType, builder.build());"
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,45,import com.google.common.collect.ImmutableList;
False,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,132,ublic JSType getTemplateType() {
False,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,133,eturn null;
False,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,137, Gets the declared default index type.
False,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,138, @see IndexedType
False,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,140,ublic JSType getIndexType() {
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,133,public ImmutableList<JSType> getTemplateTypes() {
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,42,import com.google.common.collect.ImmutableList;
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,310,ublic JSType getTemplateType() {
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,311,public ImmutableList<JSType> getTemplateTypes() {
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,312,eferencedObjType.getTemplateType();
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,315,Override
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,316,ublic JSType getIndexType() {
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,317,eturn referencedObjType == null ? null :
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,318,eferencedObjType.getIndexType();
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,313,referencedObjType.getTemplateTypes();
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,42,import com.google.common.base.Joiner;
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,44,import com.google.common.collect.ImmutableList;
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,45," An object type with a declared default element type, such as"
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,47,"* An object type with declared template types, such as"
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,48," // TODO(user): Define the subtyping relation for templatized types. Also,"
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,49, take templatized type into account for equality.
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,55,inal JSType templateType;
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,54,final ImmutableList<JSType> templateTypes;
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,58,"STypeRegistry registry, ObjectType objectType, JSType templateType) {"
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,59,"uper(registry, objectType);"
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,60,his.templateType = templateType;
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,63,Override
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,64,ublic JSType getTemplateType() {
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,65,eturn templateType;
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,57,"JSTypeRegistry registry, ObjectType objectType,"
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,58,ImmutableList<JSType> templateTypes) {
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,59,"super(registry, objectType, objectType.getTemplateTypeMap().extendValues("
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,60,templateTypes));
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,62,"// Cache which template keys were filled, and what JSTypes they were filled"
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,63,// with.
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,64,ImmutableList<String> filledTemplateKeys =
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,65,objectType.getTemplateTypeMap().getUnfilledTemplateKeys();
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,66,ImmutableList.Builder<JSType> builder = ImmutableList.builder();
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,67,for (String filledTemplateKey : filledTemplateKeys) {
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,68,builder.add(getTemplateTypeMap().getTemplateType(filledTemplateKey));
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,70,this.templateTypes = builder.build();
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,70,tring result = super.toStringHelper(forAnnotations);
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,71,"eturn result + "".<"" + templateType.toStringHelper(forAnnotations) + "">"";"
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,75,String typeString = super.toStringHelper(forAnnotations);
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,77,if (!templateTypes.isEmpty()) {
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,78,"typeString += "".<"" + Joiner.on("","").join(templateTypes) + "">"";"
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,81,return typeString;
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,89,ublic boolean hasAnyTemplateTypesInternal() {
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,90,eturn super.hasAnyTemplateTypes() || templateType.hasAnyTemplateTypes();
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,99,public ImmutableList<JSType> getTemplateTypes() {
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,100,return templateTypes;
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,93,Override
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,103,//@Override
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,98,oolean isTemplatizedSubtypeOf(JSType thatType) {
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,99,f (thatType.isTemplatizedType()) {
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,100,SType thisParameter = this.templateType;
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,101,SType thatParameter = thatType.toMaybeTemplatizedType().templateType;
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,102,"/ Currently, there is no way to declare a templatized type so we have"
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,103,/ no way to determine if the type parameters are in anyway related.
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,105,/ Right now we fallback to the raw type relationship if the raw types
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,106,"/ are different. This is not great, and we'll figure out a better"
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,107,/ solution later.
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,108,f (this.wrapsSameRawType(thatType)) {
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,109,eturn (thisParameter.isSubtype(thatParameter)
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,110,| thatParameter.isSubtype(thisParameter));
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,114,eturn this.getReferencedTypeInternal().isSubtype(thatType);
False,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,151,f (this.templateType.isEquivalentTo(that.templateType)) {
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,142,if (getTemplateTypeMap().checkEquivalenceHelper(
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,143,"that.getTemplateTypeMap(), EquivalenceMethod.INVARIANT)) {"
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,153,@Override
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,154,public TemplateTypeMap getTemplateTypeMap() {
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,155,return templateTypeMap;
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,158,@Override
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,159,public boolean hasAnyTemplateTypesInternal() {
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,160,return templateTypeMap.hasAnyTemplateTypesInternal();
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,164,* @return The referenced ObjectType wrapped by this TemplatizedType.
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,166,public ObjectType getReferencedType() {
True,src/com/google/javascript/rhino/jstype/TemplatizedType.java,src/com/google/javascript/rhino/jstype/TemplatizedType.java,167,return getReferencedObjTypeInternal();
False,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,228,SType currentTypeParameter = templatizedCurrent.getTemplateType();
False,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,229,f (currentTypeParameter.isEquivalentTo(templatizedCurrent)) {
True,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,228,if (alternate.getTemplateTypeMap().checkEquivalenceHelper(
True,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,229,"current.getTemplateTypeMap(),"
True,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,230,EquivalenceMethod.IDENTITY)) {
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,42,import com.google.common.collect.ImmutableList;
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,50,mport com.google.javascript.rhino.jstype.TemplatizedType;
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,52,import com.google.javascript.rhino.jstype.TemplatizedType;
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,411,rotected JSType createTemplatizedType(
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,412,"bjectType type, JSType typeParameter) {"
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,413,"eturn registry.createTemplatizedType(type, typeParameter);"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,412,protected TemplatizedType createTemplatizedType(
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,413,"ObjectType baseType, ImmutableList<JSType> templatizedTypes) {"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,414,"return registry.createTemplatizedType(baseType, templatizedTypes);"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,417,protected TemplatizedType createTemplatizedType(
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,418,"ObjectType baseType, JSType... templatizedType) {"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,419,return createTemplatizedType(
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,420,"baseType, ImmutableList.copyOf(templatizedType));"
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,604,"rotected final TemplatizedType templatize(ObjectType objType, JSType t) {"
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,605,"eturn registry.createTemplatizedType(objType, t);"
False,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,602,"etNativeObjectType(ARRAY_TYPE), getNativeType(NUMBER_TYPE)));"
True,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,602,"getNativeObjectType(ARRAY_TYPE),"
True,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,603,ImmutableList.of(getNativeType(NUMBER_TYPE))));
False,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,1084,"rivate JSType templatize(ObjectType objType, JSType t) {"
True,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,1085,"private JSType templatize(ObjectType objType, ImmutableList<JSType> t) {"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,19,import com.google.common.collect.ImmutableList;
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,35,import com.google.javascript.rhino.jstype.JSTypeRegistry;
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,248,"ssertTypeEquals(templatize(ARRAY_TYPE, NUMBER_TYPE), info.getType());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,250,assertTypeEquals(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,251,"createTemplatizedType(ARRAY_TYPE, NUMBER_TYPE), info.getType());"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,253,"ssertTypeEquals(templatize(ARRAY_TYPE, NUMBER_TYPE), info.getType());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,256,assertTypeEquals(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,257,"createTemplatizedType(ARRAY_TYPE, NUMBER_TYPE), info.getType());"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,259,"emplatize(ARRAY_TYPE, createUnionType(NUMBER_TYPE, NULL_TYPE)),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,263,"createTemplatizedType(ARRAY_TYPE,"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,264,"createUnionType(NUMBER_TYPE, NULL_TYPE)),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,266,"emplatize(ARRAY_TYPE, createUnionType(NUMBER_TYPE, NULL_TYPE)),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,271,"createTemplatizedType(ARRAY_TYPE,"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,272,"createUnionType(NUMBER_TYPE, NULL_TYPE)),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,273,"emplatize(ARRAY_TYPE,"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,279,"createTemplatizedType(ARRAY_TYPE,"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,275,"emplatize(ARRAY_TYPE,"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,281,"createTemplatizedType(ARRAY_TYPE,"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,283,"emplatize(ARRAY_TYPE,"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,284,"emplatize(ARRAY_TYPE,"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,289,"createTemplatizedType(ARRAY_TYPE,"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,290,"createTemplatizedType(ARRAY_TYPE,"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,292,"emplatize(ARRAY_TYPE,"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,298,"createTemplatizedType(ARRAY_TYPE,"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,301,"emplatize(ARRAY_TYPE,"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,307,"createTemplatizedType(ARRAY_TYPE,"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,309,"emplatize(ARRAY_TYPE,"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,315,"createTemplatizedType(ARRAY_TYPE,"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,317,"emplatize(ARRAY_TYPE,"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,323,"createTemplatizedType(ARRAY_TYPE,"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,325,"emplatize(OBJECT_TYPE, NUMBER_TYPE),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,331,createTemplatizedType(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,332,"OBJECT_TYPE, ImmutableList.of(UNKNOWN_TYPE, NUMBER_TYPE)),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,327,"ssertParameterTypeEquals(NUMBER_TYPE, info.getType());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,334,assertTemplatizedTypeEquals(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,335,"JSTypeRegistry.OBJECT_ELEMENT_TEMPLATE, NUMBER_TYPE, info.getType());"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,333,"emplatize(OBJECT_TYPE, NUMBER_TYPE), info.getType());"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,334,"ssertParameterTypeEquals(NUMBER_TYPE, info.getType());"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,335,"ssertIndexTypeEquals(STRING_TYPE, info.getType());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,341,createTemplatizedType(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,342,"OBJECT_TYPE, ImmutableList.of(STRING_TYPE, NUMBER_TYPE)),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,343,info.getType());
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,344,assertTemplatizedTypeEquals(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,345,"JSTypeRegistry.OBJECT_ELEMENT_TEMPLATE, NUMBER_TYPE, info.getType());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,346,assertTemplatizedTypeEquals(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,347,"JSTypeRegistry.OBJECT_INDEX_TEMPLATE, STRING_TYPE, info.getType());"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,340,"ssertTypeEquals(templatize(ARRAY_TYPE, UNKNOWN_TYPE), info.getType());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,352,assertTypeEquals(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,353,"createTemplatizedType(ARRAY_TYPE, UNKNOWN_TYPE), info.getType());"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,361,"emplatize(ARRAY_TYPE, BOOLEAN_TYPE), NULL_TYPE), info.getType());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,374,createTemplatizedType(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,375,"ARRAY_TYPE, BOOLEAN_TYPE), NULL_TYPE), info.getType());"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,367,"emplatize(ARRAY_TYPE, BOOLEAN_TYPE), NULL_TYPE), info.getType());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,381,createTemplatizedType(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,382,"ARRAY_TYPE, BOOLEAN_TYPE), NULL_TYPE), info.getType());"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,373,"emplatize(ARRAY_TYPE, BOOLEAN_TYPE), NULL_TYPE), info.getType());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,388,createTemplatizedType(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,389,"ARRAY_TYPE, BOOLEAN_TYPE), NULL_TYPE), info.getType());"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,379,"emplatize(ARRAY_TYPE, BOOLEAN_TYPE), NULL_TYPE), info.getType());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,395,createTemplatizedType(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,396,"ARRAY_TYPE, BOOLEAN_TYPE), NULL_TYPE), info.getType());"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,385,"emplatize(ARRAY_TYPE, BOOLEAN_TYPE), NULL_TYPE), info.getType());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,402,createTemplatizedType(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,403,"ARRAY_TYPE, BOOLEAN_TYPE), NULL_TYPE), info.getType());"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,391,"emplatize(ARRAY_TYPE, BOOLEAN_TYPE), NULL_TYPE), info.getType());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,409,createTemplatizedType(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,410,"ARRAY_TYPE, BOOLEAN_TYPE), NULL_TYPE), info.getType());"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,690,"emplatize(ARRAY_TYPE, createUnionType(STRING_TYPE, NULL_TYPE)),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,709,createTemplatizedType(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,710,"ARRAY_TYPE, createUnionType(STRING_TYPE, NULL_TYPE)),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,697,"reateNullableType(templatize(ARRAY_TYPE, BOOLEAN_TYPE)),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,717,"createNullableType(createTemplatizedType(ARRAY_TYPE, BOOLEAN_TYPE)),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,760,"ssertTypeEquals(templatize(ARRAY_TYPE, NUMBER_TYPE), info.getType());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,780,assertTypeEquals(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,781,"createTemplatizedType(ARRAY_TYPE, NUMBER_TYPE), info.getType());"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,766,"emplatize(ARRAY_TYPE, createUnionType(NUMBER_TYPE, NULL_TYPE)),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,787,createTemplatizedType(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,788,"ARRAY_TYPE, createUnionType(NUMBER_TYPE, NULL_TYPE)),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,773,"emplatize(ARRAY_TYPE, createUnionType(NUMBER_TYPE, NULL_TYPE)),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,795,createTemplatizedType(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,796,"ARRAY_TYPE, createUnionType(NUMBER_TYPE, NULL_TYPE)),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,780,"emplatize(ARRAY_TYPE,"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,803,"createTemplatizedType(ARRAY_TYPE,"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,790,"reateUnionType(templatize(ARRAY_TYPE, BOOLEAN_TYPE),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,813,"createUnionType(createTemplatizedType(ARRAY_TYPE, BOOLEAN_TYPE),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,799,"reateUnionType(templatize(ARRAY_TYPE, BOOLEAN_TYPE),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,822,"createUnionType(createTemplatizedType(ARRAY_TYPE, BOOLEAN_TYPE),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,808,"reateUnionType(templatize(ARRAY_TYPE, BOOLEAN_TYPE),"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,831,"createUnionType(createTemplatizedType(ARRAY_TYPE, BOOLEAN_TYPE),"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1151,/ we ignore things inside <> for now
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1174,"// For types that are not templatized, <> annotations are ignored."
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2958,"rivate void assertParameterTypeEquals(JSType expected, JSTypeExpression te) {"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2959,"ssertEquals(expected, ((ObjectType) resolve(te)).getTemplateType());"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2962,"rivate void assertIndexTypeEquals(JSType expected, JSTypeExpression te) {"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2963,"ssertEquals(expected, ((ObjectType) resolve(te)).getIndexType());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2981,"private void assertTemplatizedTypeEquals(String key, JSType expected,"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2982,JSTypeExpression te) {
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2983,assertEquals(
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2984,"expected, resolve(te).getTemplateTypeMap().getTemplateType(key));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5328,"(Array|Object.<string>)"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5328,"""(Array|Object.<string,?>)"","
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5331,"(Array|Object.<string>)"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5331,"""(Array|Object.<string,?>)"","
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5345,"(Array.<string>|Object.<string>)"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5345,"""(Array.<string>|Object.<string,?>)"","
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5348,"(Array.<string>|Object.<string>)"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5348,"""(Array.<string>|Object.<string,?>)"","
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6068,ssertFalse(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6069,RRAY_TYPE
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6070,hasAnyTemplateTypes());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6068,assertFalse(ARRAY_TYPE.hasAnyTemplateTypes());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6073,egistry.createTemplatizedType(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6074,"RRAY_TYPE, new TemplateType(registry, ""T""))"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6071,"createTemplatizedType(ARRAY_TYPE, new TemplateType(registry, ""T""))"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6077,egistry.createTemplatizedType(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6078,"RRAY_TYPE, STRING_TYPE)"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6079,hasAnyTemplateTypes());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6074,"createTemplatizedType(ARRAY_TYPE, STRING_TYPE).hasAnyTemplateTypes());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6102,public void testTemplatizedType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6103,FunctionType templatizedCtor = registry.createConstructorType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6104,"""TestingType"", null, null, UNKNOWN_TYPE, ImmutableList.of(""A"", ""B""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6105,JSType templatizedInstance = registry.createTemplatizedType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6106,"templatizedCtor.getInstanceType(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6107,"ImmutableList.of(NUMBER_TYPE, STRING_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6109,TemplateTypeMap templateTypeMap = templatizedInstance.getTemplateTypeMap();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6110,"assertTrue(templateTypeMap.hasTemplateKey(""A""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6111,"assertTrue(templateTypeMap.hasTemplateKey(""B""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6112,"assertFalse(templateTypeMap.hasTemplateKey(""C""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6114,"assertEquals(NUMBER_TYPE, templateTypeMap.getTemplateType(""A""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6115,"assertEquals(STRING_TYPE, templateTypeMap.getTemplateType(""B""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6116,"assertEquals(UNKNOWN_TYPE, templateTypeMap.getTemplateType(""C""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6118,"assertEquals(""TestingType.<number,string>"", templatizedInstance.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6121,public void testPartiallyTemplatizedType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6122,FunctionType templatizedCtor = registry.createConstructorType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6123,"""TestingType"", null, null, UNKNOWN_TYPE, ImmutableList.of(""A"", ""B""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6124,JSType templatizedInstance = registry.createTemplatizedType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6125,"templatizedCtor.getInstanceType(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6126,ImmutableList.of(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6128,TemplateTypeMap templateTypeMap = templatizedInstance.getTemplateTypeMap();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6129,"assertTrue(templateTypeMap.hasTemplateKey(""A""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6130,"assertTrue(templateTypeMap.hasTemplateKey(""B""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6131,"assertFalse(templateTypeMap.hasTemplateKey(""C""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6133,"assertEquals(NUMBER_TYPE, templateTypeMap.getTemplateType(""A""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6134,"assertEquals(UNKNOWN_TYPE, templateTypeMap.getTemplateType(""B""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6135,"assertEquals(UNKNOWN_TYPE, templateTypeMap.getTemplateType(""C""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6137,"assertEquals(""TestingType.<number,?>"", templatizedInstance.toString());"
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,41,import com.google.common.collect.ImmutableList;
False,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,50,Override
False,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,51,rotected TemplatizedType createTemplatizedType(
False,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,52,"bjectType objectType, JSType templateType) {"
False,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,53,"eturn registry.createTemplatizedType(objectType, templateType);"
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,111,public void testCustomTemplatizedType() throws Exception {
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,112,FunctionType ctor = registry.createConstructorType(
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,113,"""Foo"", null, null, null, ImmutableList.of(""T"", ""U""));"
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,114,ObjectType baseType = ctor.getInstanceType();
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,116,JSType templatizedType1 = registry.createTemplatizedType(
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,117,"baseType, ImmutableList.of(STRING_TYPE, NUMBER_TYPE));"
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,118,JSType templatizedType2 = registry.createTemplatizedType(
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,119,"baseType, ImmutableList.of(STRING_TYPE, ALL_TYPE));"
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,120,JSType templatizedType3 = registry.createTemplatizedType(
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,121,"baseType, ImmutableList.of(STRING_TYPE, UNKNOWN_TYPE));"
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,122,JSType templatizedType4 = registry.createTemplatizedType(
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,123,"baseType, ImmutableList.<JSType>of(UNKNOWN_TYPE, UNKNOWN_TYPE));"
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,125,assertTrue(templatizedType1.isSubtype(baseType));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,126,assertTrue(templatizedType2.isSubtype(baseType));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,127,assertTrue(templatizedType3.isSubtype(baseType));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,128,assertTrue(templatizedType4.isSubtype(baseType));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,130,assertFalse(templatizedType1.isEquivalentTo(baseType));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,131,assertFalse(templatizedType2.isEquivalentTo(baseType));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,132,assertFalse(templatizedType3.isEquivalentTo(baseType));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,133,assertTrue(templatizedType4.isEquivalentTo(baseType));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,135,assertFalse(baseType.isSubtype(templatizedType1));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,136,assertFalse(baseType.isSubtype(templatizedType2));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,137,assertFalse(baseType.isSubtype(templatizedType3));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,138,assertTrue(baseType.isSubtype(templatizedType4));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,140,assertFalse(templatizedType1.isSubtype(templatizedType2));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,141,assertFalse(templatizedType2.isSubtype(templatizedType1));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,143,assertFalse(templatizedType2.isSubtype(templatizedType3));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,144,assertFalse(templatizedType3.isSubtype(templatizedType2));
