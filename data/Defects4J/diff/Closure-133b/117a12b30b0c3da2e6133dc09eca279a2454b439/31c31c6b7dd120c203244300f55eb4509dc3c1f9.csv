is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,2,* Copyright 2006 The Closure Compiler Authors.
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,17,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,19,import com.google.javascript.jscomp.CheckLevel;
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,20,import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,21,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,22,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,25,"* Checks for misplaced semicolons, such as"
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,26,* <pre>
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,27,* if (foo()); act_now();
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,28,* </pre>
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,29,* and generates warnings.
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,32,final class CheckAccidentalSemicolon extends AbstractPostOrderCallback {
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,34,static final DiagnosticType SUSPICIOUS_SEMICOLON = DiagnosticType.warning(
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,35,"""JSC_SUSPICIOUS_SEMICOLON"","
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,36,"""If this if/for/while really shouldn't have a body, use {}"");"
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,38,private final CheckLevel level;
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,40,CheckAccidentalSemicolon(CheckLevel level) {
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,41,this.level = level;
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,44,@Override
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,45,"public void visit(NodeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,46,Node child;
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,47,switch (n.getType()) {
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,48,case Token.IF:
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,49,child = n.getFirstChild().getNext();  // skip the condition child
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,50,break;
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,52,case Token.WHILE:
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,53,case Token.FOR:
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,54,child = NodeUtil.getLoopCodeBlock(n);
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,55,break;
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,57,default:
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,58,return;  // don't check other types
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,61,// semicolons cause VOID children. Empty blocks are allowed because
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,62,"// that's usually intentional, especially with loops."
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,63,for (; child != null; child = child.getNext()) {
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,64,if ((child.isBlock()) && (!child.hasChildren())) {
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,65,// Only warn on empty blocks that replaced EMPTY nodes.  BLOCKs with no
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,66,// children are considered OK.
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,67,if (child.wasEmptyNode()) {
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,68,t.getCompiler().report(
True,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,src/com/google/javascript/jscomp/CheckAccidentalSemicolon.java,69,"t.makeError(n, level, SUSPICIOUS_SEMICOLON));"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,2, Copyright 2012 The Closure Compiler Authors.
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,5, you may not use this file except in compliance with the License.
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,6, You may obtain a copy of the License at
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,13, See the License for the specific language governing permissions and
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,14, limitations under the License.
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,17,ackage com.google.javascript.jscomp;
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,19,mport com.google.common.base.Preconditions;
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,20,mport com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,21,mport com.google.javascript.rhino.Node;
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,22,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,25," Checks for common errors, such as misplaced semicolons:"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,26, <pre>
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,27, if (x); act_now();
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,28, </pre>
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,29,  or comparison against NaN:
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,30, <pre>
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,31, if (x === NaN) act();
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,32, </pre>
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,33, and generates warnings.
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,35, @author johnlenz@google.com (John Lenz)
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,37,inal class CheckSuspiciousCode extends AbstractPostOrderCallback {
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,39,tatic final DiagnosticType SUSPICIOUS_SEMICOLON = DiagnosticType.warning(
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,40,"JSC_SUSPICIOUS_SEMICOLON"","
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,41,"If this if/for/while really shouldn't have a body, use {}"");"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,43,tatic final DiagnosticType SUSPICIOUS_COMPARISON_WITH_NAN =
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,44,iagnosticType.warning(
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,45,"JSC_SUSPICIOUS_NAN"","
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,46,"Comparison again NaN is always false. Did you mean isNaN()?"");"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,48,heckSuspiciousCode() {
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,51,Override
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,52,"ublic void visit(NodeTraversal t, Node n, Node parent) {"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,53,"heckMissingSemicolon(t, n);"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,54,"heckNaN(t, n);"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,57,"rivate void checkMissingSemicolon(NodeTraversal t, Node n) {"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,58,witch (n.getType()) {
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,59,ase Token.IF:
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,60,ode trueCase = n.getFirstChild().getNext();
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,61,"eportIfWasEmpty(t, trueCase);"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,62,ode elseCase = trueCase.getNext();
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,63,f (elseCase != null) {
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,64,"eportIfWasEmpty(t, elseCase);"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,66,reak;
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,68,ase Token.WHILE:
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,69,ase Token.FOR:
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,70,"eportIfWasEmpty(t, NodeUtil.getLoopCodeBlock(n));"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,71,reak;
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,75,"rivate void reportIfWasEmpty(NodeTraversal t, Node block) {"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,76,reconditions.checkState(block.isBlock());
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,78,/ A semicolon is distinguished from a block without children by
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,79,/ annotating it with EMPTY_BLOCK.  Blocks without children are
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,80,"/ usually intentional, especially with loops."
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,81,f (!block.hasChildren() && block.wasEmptyNode()) {
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,82,.getCompiler().report(
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,83,".makeError(block, SUSPICIOUS_SEMICOLON));"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,87,"rivate void checkNaN(NodeTraversal t, Node n) {"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,88,witch (n.getType()) {
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,89,ase Token.EQ:
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,90,ase Token.GE:
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,91,ase Token.GT:
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,92,ase Token.LE:
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,93,ase Token.LT:
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,94,ase Token.NE:
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,95,ase Token.SHEQ:
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,96,ase Token.SHNE:
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,97,"eportIfNaN(t, n.getFirstChild());"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,98,"eportIfNaN(t, n.getLastChild());"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,102,"rivate void reportIfNaN(NodeTraversal t, Node n) {"
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,103,f (NodeUtil.isNaN(n)) {
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,104,.getCompiler().report(
False,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,src/com/google/javascript/jscomp/CheckSuspiciousCode.java,105,".makeError(n.getParent(), SUSPICIOUS_COMPARISON_WITH_NAN));"
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,797,haredCallbacks.add(new CheckSuspiciousCode());
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,797,sharedCallbacks.add(new CheckAccidentalSemicolon(CheckLevel.WARNING));
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,85,"nonStandardJsDocs, suspiciousCode, strictModuleDepCheck, "" +"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,86,"typeInvalidation, "" +"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,85,"""nonStandardJsDocs, strictModuleDepCheck, typeInvalidation, "" +"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,120,ublic static final DiagnosticGroup ACCESS_CONTROLS =
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,119,public static DiagnosticGroup ACCESS_CONTROLS =
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,140,ublic static final DiagnosticGroup EXTERNS_VALIDATION =
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,139,public static DiagnosticGroup EXTERNS_VALIDATION =
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,162,// TODO: add more IE specific checks here.
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,241,ublic static final DiagnosticGroup SUSPICIOUS_CODE =
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,242,"iagnosticGroups.registerGroup(""suspiciousCode"","
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,243,"heckSuspiciousCode.SUSPICIOUS_SEMICOLON,"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,244,heckSuspiciousCode.SUSPICIOUS_COMPARISON_WITH_NAN);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,121, getImpureBooleanValue if you don't care about side-effects.
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,121,* getExpressionBooleanValue if you don't care about side-effects.
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3240,tatic boolean isNaN(Node n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3241,"f ((n.isName() && n.getString().equals(""NaN"")) ||"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3242,n.getType() == Token.DIV &&
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3243,.getFirstChild().isNumber() && n.getFirstChild().getDouble() == 0 &&
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3244,.getLastChild().isNumber() && n.getLastChild().getDouble() == 0)) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3245,eturn true;
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3247,eturn false;
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,2,* Copyright 2006 The Closure Compiler Authors.
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,6,* You may obtain a copy of the License at
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,13,* See the License for the specific language governing permissions and
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,14,* limitations under the License.
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,17,package com.google.javascript.jscomp;
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,19,import com.google.javascript.jscomp.CheckLevel;
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,21,public class CheckAccidentalSemicolonTest extends CompilerTestCase {
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,22,public CheckAccidentalSemicolonTest() {
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,23,this.parseTypeInfo = true;
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,26,@Override
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,27,protected CompilerPass getProcessor(Compiler compiler) {
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,28,"return new CombinedCompilerPass(compiler,"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,29,new CheckAccidentalSemicolon(CheckLevel.ERROR));
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,32,"public void test(String js, DiagnosticType error) {"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,33,"test(js, error == null ? js : null, error);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,36,public void testSuspiciousSemi() {
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,37,final DiagnosticType e = CheckAccidentalSemicolon.SUSPICIOUS_SEMICOLON;
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,38,"final DiagnosticType ok = null;  //  code is 'ok', verify no warning"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,40,"test(""if(x()) x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,41,"test(""if(x()); x = y;"", e);  // I've had this bug, damned ;"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,42,"test(""if(x()){} x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,44,"test(""if(x()) x = y; else y=z;"", ok);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,45,"test(""if(x()); else y=z;"", e);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,46,"test(""if(x()){} else y=z;"", ok);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,47,"test(""if(x()) x = y; else;"", e);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,48,"test(""if(x()) x = y; else {}"", ok);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,50,"test(""while(x()) x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,51,"test(""while(x()); x = y;"", e);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,52,"test(""while(x()){} x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,53,"test(""while(x()); {x = y}"", e);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,54,"test(""while(x()){} {x = y}"", ok);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,56,"test(""for(;;) x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,57,"test(""for(;;); x = y;"", e);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,58,"test(""for(;;){} x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,59,"test(""for(x in y) x = y;"", ok);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,60,"test(""for(x in y); x = y;"", e);"
True,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,test/com/google/javascript/jscomp/CheckAccidentalSemicolonTest.java,61,"test(""for(x in y){} x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,2, Copyright 2012 The Closure Compiler Authors.
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,5, you may not use this file except in compliance with the License.
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,6, You may obtain a copy of the License at
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,13, See the License for the specific language governing permissions and
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,14, limitations under the License.
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,17,ackage com.google.javascript.jscomp;
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,20, Tests for CheckSuspiciousCode
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,22,ublic class CheckSuspiciousCodeTest extends CompilerTestCase {
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,23,ublic CheckSuspiciousCodeTest() {
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,24,his.parseTypeInfo = true;
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,27,Override
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,28,rotected CompilerPass getProcessor(Compiler compiler) {
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,29,"eturn new CombinedCompilerPass(compiler,"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,30,ew CheckSuspiciousCode());
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,33,Override
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,34,rotected int getNumRepetitions() {
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,35,eturn 1;
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,38,"ublic void test(String js, DiagnosticType error) {"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,39,"est(js, js, null, error);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,42,ublic void testSuspiciousSemi() {
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,43,inal DiagnosticType e = CheckSuspiciousCode.SUSPICIOUS_SEMICOLON;
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,44,"inal DiagnosticType ok = null;  //  code is 'ok', verify no warning"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,46,"est(""if(x()) x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,47,"est(""if(x()); x = y;"", e);  // I've had this bug, damned ;"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,48,"est(""if(x()){} x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,50,"est(""if(x()) x = y; else y=z;"", ok);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,51,"est(""if(x()); else y=z;"", e);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,52,"est(""if(x()){} else y=z;"", ok);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,53,"est(""if(x()) x = y; else;"", e);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,54,"est(""if(x()) x = y; else {}"", ok);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,56,"est(""while(x()) x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,57,"est(""while(x()); x = y;"", e);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,58,"est(""while(x()){} x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,59,"est(""while(x()); {x = y}"", e);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,60,"est(""while(x()){} {x = y}"", ok);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,62,"est(""for(;;) x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,63,"est(""for(;;); x = y;"", e);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,64,"est(""for(;;){} x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,65,"est(""for(x in y) x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,66,"est(""for(x in y); x = y;"", e);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,67,"est(""for(x in y){} x = y;"", ok);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,70,rivate void testReportNaN(String js) {
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,71,"estSame(js, CheckSuspiciousCode.SUSPICIOUS_COMPARISON_WITH_NAN);"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,74,ublic void testComparison1() {
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,75,"estReportNaN(""x == NaN"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,76,"estReportNaN(""x != NaN"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,77,"estReportNaN(""x === NaN"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,78,"estReportNaN(""x !== NaN"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,79,"estReportNaN(""x < NaN"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,80,"estReportNaN(""x <= NaN"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,81,"estReportNaN(""x > NaN"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,82,"estReportNaN(""x >= NaN"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,85,ublic void testComparison2() {
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,86,"estReportNaN(""NaN == x"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,87,"estReportNaN(""NaN != x"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,88,"estReportNaN(""NaN === x"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,89,"estReportNaN(""NaN !== x"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,90,"estReportNaN(""NaN < x"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,91,"estReportNaN(""NaN <= x"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,92,"estReportNaN(""NaN > x"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,93,"estReportNaN(""NaN >= x"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,96,ublic void testComparison3() {
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,97,"estReportNaN(""x == 0/0"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,98,"estReportNaN(""x != 0/0"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,99,"estReportNaN(""x === 0/0"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,100,"estReportNaN(""x !== 0/0"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,101,"estReportNaN(""x < 0/0"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,102,"estReportNaN(""x <= 0/0"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,103,"estReportNaN(""x > 0/0"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,104,"estReportNaN(""x >= 0/0"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,107,ublic void testComparison4() {
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,108,"estReportNaN(""0/0 == x"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,109,"estReportNaN(""0/0 != x"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,110,"estReportNaN(""0/0 === x"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,111,"estReportNaN(""0/0 !== x"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,112,"estReportNaN(""0/0 < x"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,113,"estReportNaN(""0/0 <= x"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,114,"estReportNaN(""0/0 > x"");"
False,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,test/com/google/javascript/jscomp/CheckSuspiciousCodeTest.java,115,"estReportNaN(""0/0 >= x"");"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,24,mport com.google.javascript.rhino.IR;
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,35, Tests for NodeUtil
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,334,"rivate void assertSideEffect(boolean se, String js, boolean globalRegExp) {"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,330,"private void assertSideEffect(boolean se, String js, boolean GlobalRegExp) {"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,337,ompiler.setHasRegExpGlobalReferences(globalRegExp);
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,333,compiler.setHasRegExpGlobalReferences(GlobalRegExp);
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,683,"ssertNodeNames(Sets.newHashSet(""foo"", ""goo""),"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,679,"assertNodeNames(Sets.newHashSet(""foo"",""goo""),"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1272,"ode script = parse(""var test = "" + js + "";"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1268,"Node script = parse(""var test = "" + js +"";"");"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1602,ublic void testIsNaN() {
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1603,"ssertEquals(true, NodeUtil.isNaN(getNode(""NaN"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1604,"ssertEquals(false, NodeUtil.isNaN(getNode(""Infinity"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1605,"ssertEquals(false, NodeUtil.isNaN(getNode(""x"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1606,"ssertEquals(true, NodeUtil.isNaN(getNode(""0/0"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1607,"ssertEquals(false, NodeUtil.isNaN(getNode(""1/0"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1608,"ssertEquals(false, NodeUtil.isNaN(getNode(""0/1"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1609,"ssertEquals(false, NodeUtil.isNaN(IR.number(0.0)));"
