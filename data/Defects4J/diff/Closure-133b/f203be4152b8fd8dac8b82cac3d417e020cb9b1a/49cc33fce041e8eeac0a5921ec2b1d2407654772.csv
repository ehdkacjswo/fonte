is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,19,import com.google.javascript.rhino.InputId;
True,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,87,validateHasInputId(n);
True,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,305,private void validateHasInputId(Node n) {
True,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,306,InputId inputId = n.getInputId();
True,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,307,if (inputId == null) {
True,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,308,"violation(""Missing 'input id' annotation."", n);"
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,25,import com.google.javascript.rhino.InputId;
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,49,final private InputId id;
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,76,this.id = ast.getInputId();
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,94,/** Returns a id for this input. Must be unique across all inputs. */
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,95,@Override
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,96,public InputId getInputId() {
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,97,return id;
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,106,eturn ast.getAstRoot(compiler);
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,115,Node root = ast.getAstRoot(compiler);
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,116,// The root maybe null if the AST can not be created.
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,117,if (root != null) {
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,118,Preconditions.checkState(root.getType() == Token.SCRIPT);
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,119,Preconditions.checkNotNull(root.getInputId());
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,121,return root;
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,23,import com.google.javascript.rhino.InputId;
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,39,private transient InputId inputId;
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,45,this.inputId = new InputId(sourceFile.getName());
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,54,root.setInputId(inputId);
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,68,@Override
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,69,public InputId getInputId() {
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,70,return inputId;
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,89,oot = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,98,root = new Node(Token.SCRIPT);
True,src/com/google/javascript/jscomp/SourceAst.java,src/com/google/javascript/jscomp/SourceAst.java,19,import com.google.javascript.rhino.InputId;
True,src/com/google/javascript/jscomp/SourceAst.java,src/com/google/javascript/jscomp/SourceAst.java,42,/** @return The input id associated with this AST */
True,src/com/google/javascript/jscomp/SourceAst.java,src/com/google/javascript/jscomp/SourceAst.java,43,public InputId getInputId();
True,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,19,import com.google.javascript.rhino.InputId;
True,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,32,private final InputId inputId;
True,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,38,this.inputId = new InputId(sourceName);
True,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,51,root.setInputId(inputId);
True,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,56,@Override
True,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,57,public InputId getInputId() {
True,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,58,return inputId;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,24,import com.google.javascript.rhino.InputId;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,56,private final InputId inputId;
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,60,this.inputId = new InputId(getSourceName());
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,106,root.setInputId(inputId);
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,178,@Override
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,179,public InputId getInputId() {
True,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,src/com/google/javascript/jscomp/jsonml/JsonMLAst.java,180,return inputId;
True,test/com/google/javascript/jscomp/AstValidatorTest.java,test/com/google/javascript/jscomp/AstValidatorTest.java,20,import com.google.javascript.rhino.InputId;
True,test/com/google/javascript/jscomp/AstValidatorTest.java,test/com/google/javascript/jscomp/AstValidatorTest.java,77,"n.setInputId(new InputId(""something_input""));"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,20,import com.google.javascript.rhino.InputId;
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,43,"externs.setInputId(new InputId(""externs""));"
True,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,26,import com.google.javascript.rhino.InputId;
False,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,42,"ew CompilerInput(null, ""input1"", false);"
True,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,43,"new CompilerInput(JSSourceFile.fromCode(""input1"", """"), false);"
False,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,44,"ew CompilerInput(null, ""input2"", false);"
True,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,45,"new CompilerInput(JSSourceFile.fromCode(""input2"", """"), false);"
False,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,46,"ew CompilerInput(null, ""input3"", false);"
True,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,47,"new CompilerInput(JSSourceFile.fromCode(""input3"", """"), false);"
False,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,48,"ew CompilerInput(null, ""extern1"", true);"
True,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,49,"new CompilerInput(JSSourceFile.fromCode(""externs1"", """"), true);"
False,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,55,ode scriptRoot = new Node(Token.SCRIPT);
True,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,56,private Node scriptRoot = new Node(Token.SCRIPT);
True,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,98,scriptRoot.setInputId(new InputId(INPUT2.getName()));
True,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,21,import com.google.javascript.rhino.InputId;
True,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,353,"script.setInputId(new InputId(""test""));"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,23,import com.google.javascript.rhino.InputId;
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4708,"parent.setInputId(new InputId(""code""));"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4710,Node externs = new Node(Token.SCRIPT);
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4711,"externs.setInputId(new InputId(""externs""));"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,4708,ode externs = new Node(Token.BLOCK);
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,22,import com.google.javascript.rhino.InputId;
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,5788,"parent.setInputId(new InputId(""code""));"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,5790,Node externs = new Node(Token.SCRIPT);
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,5791,"externs.setInputId(new InputId(""externs""));"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,5788,ode externs = new Node(Token.BLOCK);
