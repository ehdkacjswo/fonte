is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,351,eturn compiler.getCodingConvention().isExported(var.name)
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,351,return var.isExtern()
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,352,|| compiler.getCodingConvention().isExported(var.name)
False,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,106,"odeTraversal.traverse(compiler, root, this);"
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,106,NodeTraversal.traverseRoots(
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,107,"compiler, Lists.newArrayList(externs, root), this);"
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,198,oolean allowDupe = false;
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,199,SDocInfo info = n.getJSDocInfo();
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,200,f (info == null) {
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,201,nfo = parent.getJSDocInfo();
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,203,llowDupe =
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,204,"nfo != null && info.getSuppressions().contains(""duplicate"");"
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,206,nfo = origVar.nameNode.getJSDocInfo();
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,207,f (info == null) {
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,208,nfo = origParent.getJSDocInfo();
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,211,llowDupe |=
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,212,"nfo != null && info.getSuppressions().contains(""duplicate"");"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,198,"boolean allowDupe = hasDuplicateDeclarationSuppression(n, origVar);"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,240,* @param n The name node to check.
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,241,* @param origVar The associated Var.
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,242,* @return Whether duplicated declarations warnings should be suppressed
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,243,*     for the given node.
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,245,"static boolean hasDuplicateDeclarationSuppression(Node n, Scope.Var origVar) {"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,246,Preconditions.checkState(n.getType() == Token.NAME);
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,247,Node parent = n.getParent();
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,248,Node origParent = origVar.getParentNode();
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,250,JSDocInfo info = n.getJSDocInfo();
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,251,if (info == null) {
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,252,info = parent.getJSDocInfo();
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,254,"if (info != null && info.getSuppressions().contains(""duplicate"")) {"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,255,return true;
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,258,info = origVar.nameNode.getJSDocInfo();
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,259,if (info == null) {
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,260,info = origParent.getJSDocInfo();
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,262,"return (info != null && info.getSuppressions().contains(""duplicate""));"
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,20,mport com.google.javascript.jscomp.CheckLevel;
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,134,f (isDeclaration) {
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,133,boolean allowDupe =
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,134,SyntacticScopeCreator.hasDuplicateDeclarationSuppression(
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,135,"reference.getNode(), v);"
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,136,if (isDeclaration && !allowDupe) {
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,164,/ Special case to deal with var goog = goog || {}
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,165,ode grandparent = reference.getGrandparent();
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,166,f (grandparent.getType() == Token.NAME
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,167,& grandparent.getString() == v.name) {
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,168,ontinue;
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,166,// Don't check the order of refer in externs files.
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,167,if (!reference.getSourceFile().isExtern()) {
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,168,// Special case to deal with var goog = goog || {}
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,169,Node grandparent = reference.getGrandparent();
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,170,if (grandparent.getType() == Token.NAME
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,171,&& grandparent.getString() == v.name) {
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,172,continue;
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,171,/ Only generate warnings if the scopes do not match in order
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,172,/ to deal with possible forward declarations and recursion
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,173,f (reference.getScope() == v.scope) {
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,174,ompiler.report(
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,175,"SError.make(reference.getSourceFile().getName(),"
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,176,"eference.getNode(),"
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,177,"heckLevel,"
False,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,178,"NDECLARED_REFERENCE, v.name));"
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,175,// Only generate warnings if the scopes do not match in order
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,176,// to deal with possible forward declarations and recursion
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,177,if (reference.getScope() == v.scope) {
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,178,compiler.report(
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,179,"JSError.make(reference.getSourceFile().getName(),"
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,180,"reference.getNode(),"
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,181,"checkLevel,"
True,src/com/google/javascript/jscomp/VariableReferenceCheck.java,src/com/google/javascript/jscomp/VariableReferenceCheck.java,182,"UNDECLARED_REFERENCE, v.name));"
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,1055,public void testNoInlineRedeclaredExterns() {
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,1056,"String externs = ""var test = 1;"";"
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,1057,"String code = ""/** @suppress {duplicate} */ var test = 2;alert(test);"";"
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,1058,"test(externs, code, code, null, null);"
False,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,19,mport com.google.javascript.jscomp.CheckLevel;
True,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,171,public void testNoWarnInExterns1() {
True,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,172,// Verify duplicate suppressions are properly recognized.
True,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,173,String externs =
True,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,174,"""var google;"" +"
True,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,175,"""/** @suppress {duplicate} */ var google"";"
True,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,176,"String code = """";"
True,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,177,"test(externs, code, code, null, null);"
True,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,180,public void testNoWarnInExterns2() {
True,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,181,// Verify we don't complain about early references in externs
True,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,182,String externs =
True,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,183,"""window;"" +"
True,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,184,"""var window;"";"
True,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,185,"String code = """";"
True,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,test/com/google/javascript/jscomp/VariableReferenceCheckTest.java,186,"test(externs, code, code, null, null);"
