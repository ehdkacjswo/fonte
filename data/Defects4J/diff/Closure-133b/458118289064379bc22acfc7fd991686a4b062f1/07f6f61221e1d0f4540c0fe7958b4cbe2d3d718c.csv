is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,24,import com.google.javascript.jscomp.deps.DependencyInfo;
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,29,import java.util.Collection;
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,40,ublic class CompilerInput implements SourceAst {
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,40,"public class CompilerInput implements SourceAst, DependencyInfo {"
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,80,@Override
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,85,"/** Gets the path relative to closure-base, if one is available. */"
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,86,@Override
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,87,public String getPathRelativeToClosureBase() {
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,88,// TODO(nicksantos): Implement me.
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,89,throw new UnsupportedOperationException();
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,110,ublic Set<String> getRequires(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,118,public Collection<String> getRequires(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,129,/** Gets a list of types depended on by this input. */
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,130,@Override
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,131,public Collection<String> getRequires() {
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,132,// TODO(nicksantos): Implement me.
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,133,throw new UnsupportedOperationException();
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,122,ublic Set<String> getProvides(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,137,public Collection<String> getProvides(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,148,/** Gets a list of types provided by this input. */
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,149,@Override
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,150,public Collection<String> getProvides() {
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,151,// TODO(nicksantos): Implement me.
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,152,throw new UnsupportedOperationException();
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,57,ormalizeNodeTypes(root);
True,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,57,if (assertOnChange) {
True,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,58,normalizeNodeTypes(root);
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,105,ode newBlock = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,107,"Node newBlock = new Node(Token.BLOCK, n.getLineno(), n.getCharno());"
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,127,rivate final AbstractCompiler compiler;
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,131,his.compiler = compiler;
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,2,* Copyright 2009 Google Inc.
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,17,package com.google.javascript.jscomp.deps;
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,19,import java.util.Collection;
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,20,import java.util.Collections;
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,21,import java.util.List;
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,24,* A data structure for JS dependency information for a single .js file.
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,28,public interface DependencyInfo {
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,30,/** Gets the unique name / path of this file. */
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,31,public String getName();
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,33,/** Gets the path of this file relative to Closure's base.js file. */
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,34,public String getPathRelativeToClosureBase();
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,36,/** Gets the symbols provided by this file. */
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,37,public Collection<String> getProvides();
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,39,/** Gets the symbols required by this file. */
True,src/com/google/javascript/jscomp/deps/DependencyInfo.java,src/com/google/javascript/jscomp/deps/DependencyInfo.java,40,public Collection<String> getRequires();
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,2,* Copyright 2009 Google Inc.
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,17,package com.google.javascript.jscomp.deps;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,19,import com.google.common.base.Objects;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,20,import com.google.common.collect.ImmutableList;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,21,import com.google.common.collect.Lists;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,23,import java.util.Collection;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,24,import java.util.Collections;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,25,import java.util.List;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,28,* A class to hold JS dependency information for a single .js file.
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,32,public class SimpleDependencyInfo implements DependencyInfo {
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,34,/** A list of provided symbols. */
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,35,private final List<String> provides;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,37,/** A list of required symbols. */
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,38,private final List<String> requires;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,40,/** The path of the file relative to closure. */
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,41,private final String srcPathRelativeToClosure;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,43,/** The path to the file from which we extracted the dependency information.*/
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,44,private final String pathOfDefiningFile;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,47,* Constructs a DependencyInfo object with the given list of provides &
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,48,"* requires. This does *not* copy the given lists, but uses them directly."
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,50,* @param srcPathRelativeToClosure The closure-relative path of the file
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,51,*     associated with this DependencyInfo.
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,52,* @param pathOfDefiningFile The path to the file from which this dependency
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,53,*     information was extracted.
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,54,* @param provides List of provided symbols.
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,55,* @param requires List of required symbols.
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,57,public SimpleDependencyInfo(
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,58,"String srcPathRelativeToClosure, String pathOfDefiningFile,"
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,59,"List<String> provides, List<String> requires) {"
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,60,this.srcPathRelativeToClosure = srcPathRelativeToClosure;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,61,this.pathOfDefiningFile = pathOfDefiningFile;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,62,this.provides = provides;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,63,this.requires = requires;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,66,@Override
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,67,public String getName() {
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,68,return pathOfDefiningFile;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,71,@Override
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,72,public String getPathRelativeToClosureBase() {
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,73,return srcPathRelativeToClosure;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,76,@Override
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,77,public Collection<String> getProvides() {
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,78,return Collections.<String>unmodifiableList(provides);
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,81,@Override
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,82,public Collection<String> getRequires() {
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,83,return Collections.<String>unmodifiableList(requires);
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,86,@Override
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,87,public boolean equals(Object obj) {
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,88,if (!(obj instanceof SimpleDependencyInfo)) {
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,89,return false;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,91,SimpleDependencyInfo other = (SimpleDependencyInfo)obj;
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,92,"return Objects.equal(other.srcPathRelativeToClosure,"
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,93,srcPathRelativeToClosure) &&
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,94,"Objects.equal(other.pathOfDefiningFile, pathOfDefiningFile) &&"
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,95,"Objects.equal(other.requires, this.requires) &&"
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,96,"Objects.equal(other.provides, this.provides);"
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,99,@Override
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,100,public String toString() {
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,101,"return String.format(""DependencyInfo(relativePath='%1$s', path='%2$s', """
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,102,"+ ""provides=%3$s, requires=%4$s)"", srcPathRelativeToClosure,"
True,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,src/com/google/javascript/jscomp/deps/SimpleDependencyInfo.java,103,"pathOfDefiningFile, provides, requires);"
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,21,mport com.google.common.base.Preconditions;
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,22,mport com.google.common.collect.HashMultimap;
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,24,mport com.google.common.collect.Lists;
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,79,mport java.util.List;
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,173,private Node transformBlock(AstNode node) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,174,Node irNode = transform(node);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,175,if (irNode.getType() != Token.BLOCK) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,176,if (irNode.getType() == Token.EMPTY) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,177,irNode.setType(Token.BLOCK);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,178,irNode.setWasEmptyNode(true);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,179,} else {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,180,"Node newBlock = new Node(Token.BLOCK, irNode,"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,181,"irNode.getLineno(), irNode.getCharno());"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,182,irNode = newBlock;
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,185,return irNode;
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,425,ode.addChildToBack(transform(clauseNode.getBody()));
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,436,node.addChildToBack(transformBlock(clauseNode.getBody()));
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,451,"ransform(loopNode.getBody()),"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,462,"transformBlock(loopNode.getBody()),"
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,482,ransform(loopNode.getBody()));
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,493,transformBlock(loopNode.getBody()));
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,492,ode.addChildToBack(transform(loopNode.getBody()));
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,503,node.addChildToBack(transformBlock(loopNode.getBody()));
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,568,ode.addChildToBack(transform(statementNode.getThenPart()));
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,579,node.addChildToBack(transformBlock(statementNode.getThenPart()));
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,570,ode.addChildToBack(transform(statementNode.getElsePart()));
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,581,node.addChildToBack(transformBlock(statementNode.getElsePart()));
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,751,"ode node = new Node(Token.TRY, transform(statementNode.getTryBlock()));"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,762,"Node node = new Node(Token.TRY,"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,763,transformBlock(statementNode.getTryBlock()));
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,768,ode.addChildToBack(transform(finallyBlock));
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,780,node.addChildToBack(transformBlock(finallyBlock));
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,815,ransform(loopNode.getBody()));
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,827,transformBlock(loopNode.getBody()));
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,823,ransform(statementNode.getStatement()));
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,835,transformBlock(statementNode.getStatement()));
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,1108,eturn Token.EXPR_VOID;
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,307,"arse(""l: while (f()) { if (g()) continue l;}"");"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,307,"parse(""l: while (f()) { if (g()) { continue l; } }"");"
