is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1089,externsRoot = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1090,externsRoot.setIsSyntheticBlock(true);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1092,"externAndJsRoot = new Node(Token.BLOCK, externsRoot, jsRoot);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1093,externAndJsRoot.setIsSyntheticBlock(true);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1099,xternsRoot = new Node(Token.BLOCK);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1100,xternsRoot.setIsSyntheticBlock(true);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1203,"xternAndJsRoot = new Node(Token.BLOCK, externsRoot, jsRoot);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1204,xternAndJsRoot.setIsSyntheticBlock(true);
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,68,public void testCyclicalDependencyInInputs() {
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,69,JSSourceFile[] inputs = {
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,70,JSSourceFile.fromCode(
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,71,"""gin"", ""goog.provide('gin'); goog.require('tonic'); var gin = {};""),"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,72,"JSSourceFile.fromCode(""tonic"","
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,73,"""goog.provide('tonic'); goog.require('gin'); var tonic = {};""),"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,74,JSSourceFile.fromCode(
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,75,"""mix"", ""goog.require('gin'); goog.require('tonic');"")};"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,76,CompilerOptions options = new CompilerOptions();
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,77,options.ideMode = true;
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,78,options.manageClosureDependencies = true;
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,79,Compiler compiler = new Compiler();
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,80,"compiler.init(new JSSourceFile[0], inputs, options);"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,81,compiler.parseInputs();
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,82,"assertEquals(compiler.externAndJsRoot, compiler.jsRoot.getParent());"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,83,"assertEquals(compiler.externAndJsRoot, compiler.externsRoot.getParent());"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,84,assertNotNull(compiler.externAndJsRoot);
