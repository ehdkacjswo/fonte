is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,329,f (numJsFiles < 1) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,330,// We will allow modules of zero input.
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,331,if (numJsFiles < 0) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,63,ompilerOptions options_ = null;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,63,CompilerOptions options = null;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,68,rivate CompilerInput[] externs_;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,68,private CompilerInput[] externs;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,71,rivate JSModule[] modules_;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,71,private JSModule[] modules;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,74,rivate JSModuleGraph moduleGraph_;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,74,private JSModuleGraph moduleGraph;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,77,rivate CompilerInput[] inputs_;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,77,private CompilerInput[] inputs;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,90,"rivate Map<String, CompilerInput> inputsByName_;"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,90,"private Map<String, CompilerInput> inputsByName;"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,93,rivate SourceMap sourceMap_;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,93,private SourceMap sourceMap;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,96,rivate String externExports_ = null;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,96,private String externExports = null;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,114,rivate FunctionInformationMap functionInformationMap_;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,114,private FunctionInformationMap functionInformationMap;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,117,rivate final StringBuilder debugLog_ = new StringBuilder();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,117,private final StringBuilder debugLog = new StringBuilder();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,154,rivate static final Logger logger_ =
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,154,private static final Logger logger =
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,212,oolean colorize = options_.shouldColorizeErrorOutput();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,213,"eturn options_.errorFormat.toFormatter(this, colorize);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,212,boolean colorize = options.shouldColorizeErrorOutput();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,213,"return options.errorFormat.toFormatter(this, colorize);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,221,ptions_ = options;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,221,this.options = options;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,225,"ew LoggerErrorManager(createMessageFormatter(), logger_));"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,225,"new LoggerErrorManager(createMessageFormatter(), logger));"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,229,rinter.setSummaryDetailLevel(options_.summaryDetailLevel);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,229,printer.setSummaryDetailLevel(options.summaryDetailLevel);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,242,"xterns_ = makeCompilerInput(externs, true);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,243,odules_ = null;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,244,oduleGraph_ = null;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,245,"nputs_ = makeCompilerInput(inputs, false);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,242,"this.externs = makeCompilerInput(externs, true);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,243,this.modules = null;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,244,this.moduleGraph = null;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,245,"this.inputs = makeCompilerInput(inputs, false);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,264,fillEmptyModules(modules);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,265,"xterns_ = makeCompilerInput(externs, true);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,266,odules_ = modules;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,266,"this.externs = makeCompilerInput(externs, true);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,267,this.modules = modules;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,270,oduleGraph_ = new JSModuleGraph(modules);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,271,this.moduleGraph = new JSModuleGraph(modules);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,278,nputs_ = getAllInputsFromModules();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,279,this.inputs = getAllInputsFromModules();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,289,f (options_.sourceMapOutputPath != null) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,290,ourceMap_ = new SourceMap();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,290,if (options.sourceMapOutputPath != null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,291,sourceMap = new SourceMap();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,326,* Fill any empty modules with a place holder file. It makes any cross module
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,327,* motion easier.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,329,private void fillEmptyModules(JSModule[] modules) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,330,for (int i = 1; i < modules.length; i ++) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,331,JSModule module = modules[i];
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,332,if (module.getInputs().isEmpty()) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,333,"module.add(JSSourceFile.fromCode(""["" + module.getName() + ""]"", """"));"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,335,nputs_ = getAllInputsFromModules();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,349,inputs = getAllInputsFromModules();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,346,or (JSModule module : modules_) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,360,for (JSModule module : modules) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,379,"nputsByName_ = new HashMap<String, CompilerInput>();"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,380,or (CompilerInput input : externs_) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,393,"inputsByName = new HashMap<String, CompilerInput>();"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,394,for (CompilerInput input : externs) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,382,f (!inputsByName_.containsKey(name)) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,383,"nputsByName_.put(name, input);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,396,if (!inputsByName.containsKey(name)) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,397,"inputsByName.put(name, input);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,388,or (CompilerInput input : inputs_) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,402,for (CompilerInput input : inputs) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,390,f (!inputsByName_.containsKey(name)) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,391,"nputsByName_.put(name, input);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,404,if (!inputsByName.containsKey(name)) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,405,"inputsByName.put(name, input);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,484,inal boolean dumpTraceReport = options_.tracer.isOn();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,498,final boolean dumpTraceReport = options.tracer.isOn();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,537,f (options_.nameAnonymousFunctionsOnly) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,551,if (options.nameAnonymousFunctionsOnly) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,543,f (!options_.skipAllPasses) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,557,if (!options.skipAllPasses) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,549,f (options_.externExportsPath != null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,563,if (options.externExportsPath != null) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,554,f (!options_.ideMode) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,568,if (!options.ideMode) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,559,f (options_.recordFunctionInformation) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,573,if (options.recordFunctionInformation) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,563,f (options_.devMode == DevMode.START_AND_END) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,577,if (options.devMode == DevMode.START_AND_END) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,584,eturn new DefaultPassConfig(options_);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,598,return new DefaultPassConfig(options);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,620,f (options_.devMode == DevMode.EVERY_PASS) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,634,if (options.devMode == DevMode.EVERY_PASS) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,630,f (options_.nameAnonymousFunctionsOnly) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,644,if (options.nameAnonymousFunctionsOnly) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,634,f (options_.removeTryCatchFinally) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,648,if (options.removeTryCatchFinally) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,638,f (!options_.stripTypes.isEmpty() ||
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,639,options_.stripNameSuffixes.isEmpty() ||
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,640,options_.stripTypePrefixes.isEmpty() ||
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,641,options_.stripNamePrefixes.isEmpty()) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,642,"tripCode(options_.stripTypes, options_.stripNameSuffixes,"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,643,"ptions_.stripTypePrefixes, options_.stripNamePrefixes);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,652,if (!options.stripTypes.isEmpty() ||
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,653,!options.stripNameSuffixes.isEmpty() ||
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,654,!options.stripTypePrefixes.isEmpty() ||
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,655,!options.stripNamePrefixes.isEmpty()) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,656,"stripCode(options.stripTypes, options.stripNameSuffixes,"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,657,"options.stripTypePrefixes, options.stripNamePrefixes);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,657,"ogger_.info(""Creating extern file for exports"");"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,671,"logger.info(""Creating extern file for exports"");"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,663,xternExports_ = pass.getGeneratedExterns();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,677,externExports = pass.getGeneratedExterns();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,681,f (options_.devMode == DevMode.EVERY_PASS) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,695,if (options.devMode == DevMode.EVERY_PASS) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,694,"ogger_.info(""Remove try/catch/finally"");"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,708,"logger.info(""Remove try/catch/finally"");"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,707,"ogger_.info(""Strip code"");"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,721,"logger.info(""Strip code"");"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,719,f (options_.customPasses != null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,733,if (options.customPasses != null) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,722,or (CompilerPass p : options_.customPasses.get(executionTime)) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,736,for (CompilerPass p : options.customPasses.get(executionTime)) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,763,f (options_.tracer.isOn()) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,777,if (options.tracer.isOn()) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,771,f (options_.tracer.isOn()) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,785,if (options.tracer.isOn()) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,781,"eturn new Result(getErrors(), getWarnings(), debugLog_.toString(),"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,795,"return new Result(getErrors(), getWarnings(), debugLog.toString(),"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,783,"tate.anonymousFunctionNameMap, functionInformationMap_,"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,784,"ourceMap_, externExports_, state.cssNames);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,797,"state.anonymousFunctionNameMap, functionInformationMap,"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,798,"sourceMap, externExports, state.cssNames);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,865,f (options_.ambiguateProperties ||
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,866,ptions_.disambiguateProperties) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,879,if (options.ambiguateProperties ||
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,880,options.disambiguateProperties) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,884,eturn inputsByName_.get(name);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,898,return inputsByName.get(name);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,889,f (inputsByName_.containsKey(name)) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,903,if (inputsByName.containsKey(name)) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,894,"nputsByName_.put(name, input);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,908,"inputsByName.put(name, input);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,905,"nputsByName_.put(sourceName, new CompilerInput(ast));"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,919,"inputsByName.put(sourceName, new CompilerInput(ast));"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,910,eturn moduleGraph_;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,924,return moduleGraph;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,937,f (options_.closurePass) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,951,if (options.closurePass) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,963,oolean devMode = options_.devMode != DevMode.OFF;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,977,boolean devMode = options.devMode != DevMode.OFF;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,978,f (options_.tracer.isOn()) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,992,if (options.tracer.isOn()) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,980,ptions_.tracer == TracerMode.ALL);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,994,options.tracer == TracerMode.ALL);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,990,or (CompilerInput input : externs_) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1004,for (CompilerInput input : externs) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,998,or (CompilerInput input : inputs_) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1012,for (CompilerInput input : inputs) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1016,f (options_.sourceMapOutputPath != null ||
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1017,ptions_.nameReferenceReportPath != null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1030,if (options.sourceMapOutputPath != null ||
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1031,options.nameReferenceReportPath != null) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1048,"nputsByName_.put(input.getName(), input);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1062,"inputsByName.put(input.getName(), input);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1053,f (options_ == null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1067,if (options == null) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1070,f (inputsByName_ == null) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1071,nputsByName_ = Maps.newHashMap();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1084,if (inputsByName == null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1085,inputsByName = Maps.newHashMap();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1073,"nputsByName_.put(input.getName(), input);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1087,"inputsByName.put(input.getName(), input);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1119,nt numInputs = inputs_.length;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1133,int numInputs = inputs.length;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1123,ode scriptNode = inputs_[i].getAstRoot(Compiler.this);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1137,Node scriptNode = inputs[i].getAstRoot(Compiler.this);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1204,f (options_.printInputDelimiter) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1218,if (options.printInputDelimiter) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1210,tring delimiter = options_.inputDelimiter;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1224,String delimiter = options.inputDelimiter;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1231,f (options_.sourceMapOutputPath != null) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1232,ourceMap_.setStartingPosition(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1245,if (options.sourceMapOutputPath != null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1246,sourceMap.setStartingPosition(
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1256,uilder.setPrettyPrint(options_.prettyPrint);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1257,uilder.setLineBreak(options_.lineBreak);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1258,uilder.setSourceMap(sourceMap_);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1259,uilder.setOutputCharset(options_.outputCharset);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1270,builder.setPrettyPrint(options.prettyPrint);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1271,builder.setLineBreak(options.lineBreak);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1272,builder.setSourceMap(sourceMap);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1273,builder.setOutputCharset(options.outputCharset);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1324,f (options_.devMode == DevMode.EVERY_PASS) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1338,if (options.devMode == DevMode.EVERY_PASS) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1336,ptions_.cssRenamingMap = map;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1350,options.cssRenamingMap = map;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1341,eturn options_.cssRenamingMap;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1355,return options.cssRenamingMap;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1352,new DefaultPassConfig(options_)).processDefines.create(this)
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1366,(new DefaultPassConfig(options)).processDefines.create(this)
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1357,eturn options_.propertyRenaming == PropertyRenamingPolicy.HEURISTIC ||
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1358,ptions_.propertyRenaming ==
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1371,return options.propertyRenaming == PropertyRenamingPolicy.HEURISTIC ||
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1372,options.propertyRenaming ==
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1364,"ogger_.info(""Computing Control Flow Graph"");"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1378,"logger.info(""Computing Control Flow Graph"");"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1373,"ogger_.info(""Normalizing"");"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1387,"logger.info(""Normalizing"");"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1389,"ogger_.info(""Recording function information"");"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1403,"logger.info(""Recording function information"");"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1395,unctionInformationMap_ = recordFunctionInfoPass.getMap();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1409,functionInformationMap = recordFunctionInfoPass.getMap();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1428,odingConvention convention = options_.getCodingConvention();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1442,CodingConvention convention = options.getCodingConvention();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1435,eturn options_.ideMode;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1449,return options.ideMode;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1449,eturn options_.checkTypes;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1463,return options.checkTypes;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1460,arningsGuard guard = options_.getWarningsGuard();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1474,WarningsGuard guard = options.getWarningsGuard();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1525,ebugLog_.append(str);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1526,ebugLog_.append('\n');
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1527,ogger_.fine(str);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1539,debugLog.append(str);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1540,debugLog.append('\n');
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1541,logger.fine(str);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1531,f (inputsByName_.containsKey(sourceName)) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1532,eturn inputsByName_.get(sourceName).getSourceFile();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1545,if (inputsByName.containsKey(sourceName)) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1546,return inputsByName.get(sourceName).getSourceFile();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1566,f (inputs_.length == 0) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1580,if (inputs.length == 0) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1570,eturn inputs_[0].getAstRoot(this);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1584,return inputs[0].getAstRoot(this);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1577,or (JSModule m : getModuleGraph().getTransitiveDepsDeepestFirst(module)) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1578,nputs = m.getInputs();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1579,f (inputs.size() > 0) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1580,eturn inputs.get(0).getAstRoot(this);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1587,eturn sourceMap_;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1595,return sourceMap;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1599,eturn options_;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1607,return options;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1603,eturn functionInformationMap_;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1611,return functionInformationMap;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1610,ogger_.setLevel(level);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1618,logger.setLevel(level);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1626,f (options_ == null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1634,if (options == null) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1665,tate.externs = externs_;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1666,tate.inputs = inputs_;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1667,tate.modules = modules_;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1673,state.externs = externs;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1674,state.inputs = inputs;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1675,state.modules = modules;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1682,xterns_ = state.externs;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1683,nputs_ = state.inputs;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1684,odules_ = state.modules;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1690,externs = state.externs;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1691,inputs = state.inputs;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1692,modules = state.modules;
False,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,55,ompiler.options_.setWarningLevel(
True,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,55,compiler.getOptions().setWarningLevel(
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,657,public void testEmptyModule() {
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,658,"// When the dest module is empty, it might try to move the code to the"
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,659,// one of the modules that the empty module depends on. In some cases
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,660,// this might ended up to be the same module as the definition of the code.
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,661,"// When that happens, CrossMooduleCodeMotion might report a code change"
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,662,// while nothing is moved. This should not be a problem if we know all
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,663,// modules are non-empty.
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,664,"JSModule m1 = new JSModule(""m1"");"
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,665,"m1.add(JSSourceFile.fromCode(""m1"", ""function x() {}""));"
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,667,"JSModule empty = new JSModule(""empty"");"
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,668,empty.addDependency(m1);
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,670,"JSModule m2 = new JSModule(""m2"");"
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,671,"m2.add(JSSourceFile.fromCode(""m2"", ""x()""));"
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,672,m2.addDependency(empty);
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,674,"JSModule m3 = new JSModule(""m3"");"
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,675,"m3.add(JSSourceFile.fromCode(""m3"", ""x()""));"
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,676,m3.addDependency(empty);
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,678,"test(new JSModule[] {m1,empty,m2,m3},"
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,679,new String[] {
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,681,"""function x() {}"","
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,682,"""x()"","
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,683,"""x()"""
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2731,ompiler.options_.setCodingConvention(new GoogleCodingConvention());
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2731,compiler.getOptions().setCodingConvention(new GoogleCodingConvention());
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2739,ompiler.options_.setCodingConvention(new GoogleCodingConvention());
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2739,compiler.getOptions().setCodingConvention(new GoogleCodingConvention());
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2750,ompiler.options_.setCodingConvention(new GoogleCodingConvention());
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2750,compiler.getOptions().setCodingConvention(new GoogleCodingConvention());
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2759,ompiler.options_.setCodingConvention(new GoogleCodingConvention());
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2759,compiler.getOptions().setCodingConvention(new GoogleCodingConvention());
