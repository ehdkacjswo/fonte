is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,21,import com.google.common.collect.Iterables;
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,314,} else if (p.isSimpleStubDeclaration()) {
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,315,"flattenSimpleStubDeclaration(p, propAlias);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,324,* Flattens a stub declaration.
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,325,* This is mostly a hack to support legacy users.
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,327,"private void flattenSimpleStubDeclaration(Name name, String alias) {"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,328,Ref ref = Iterables.getOnlyElement(name.getRefs());
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,329,Node nameNode = NodeUtil.newName(
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,330,"compiler.getCodingConvention(), alias, ref.node,"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,331,name.fullName());
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,332,"Node varNode = new Node(Token.VAR, nameNode).copyInformationFrom(nameNode);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,334,Preconditions.checkState(
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,335,ref.node.getParent().getType() == Token.EXPR_RESULT);
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,336,Node parent = ref.node.getParent();
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,337,Node gramps = parent.getParent();
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,338,"gramps.replaceChild(parent, varNode);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,339,compiler.reportCodeChange();
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,929,boolean isSimpleStubDeclaration() {
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,930,if (getRefs().size() == 1) {
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,931,Ref ref = refs.get(0);
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,932,JSDocInfo info = ref.node.getJSDocInfo();
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,933,if (ref.node.getParent() != null &&
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,934,ref.node.getParent().getType() == Token.EXPR_RESULT) {
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,935,return true;
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,938,return false;
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1345,public void testTypedef1() {
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1346,"test(""var foo = {};"" +"
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1347,"""/** @typedef {number} */ foo.Baz;"","
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1348,"""var foo = {}; var foo$Baz;"");"
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1351,public void testTypedef2() {
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1352,"test(""var foo = {};"" +"
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1353,"""/** @typedef {number} */ foo.Bar.Baz;"" +"
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1354,"""foo.Bar = function() {};"","
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1355,"""var foo$Bar$Baz; var foo$Bar = function(){};"");"
