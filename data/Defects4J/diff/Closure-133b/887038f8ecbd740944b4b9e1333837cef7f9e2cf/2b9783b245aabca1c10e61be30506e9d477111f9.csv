is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,117,rivate Supplier<List<JSSourceFile>> externsSupplierForTesting = null;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,118,rivate Supplier<List<JSSourceFile>> inputsSupplierForTesting = null;
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,117,private Supplier<List<SourceFile>> externsSupplierForTesting = null;
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,118,private Supplier<List<SourceFile>> inputsSupplierForTesting = null;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,154,"upplier<List<JSSourceFile>> externsSupplier,"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,155,"upplier<List<JSSourceFile>> inputsSupplier,"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,154,"Supplier<List<SourceFile>> externsSupplier,"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,155,"Supplier<List<SourceFile>> inputsSupplier,"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,394,"rotected List<JSSourceFile> createInputs(List<String> files,"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,394,"protected List<SourceFile> createInputs(List<String> files,"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,396,ist<JSSourceFile> inputs = new ArrayList<JSSourceFile>(files.size());
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,396,List<SourceFile> inputs = new ArrayList<SourceFile>(files.size());
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,400,"SSourceFile newFile = JSSourceFile.fromFile(filename, inputCharset);"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,400,"SourceFile newFile = SourceFile.fromFile(filename, inputCharset);"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,418,"nputs.add(JSSourceFile.fromInputStream(""stdin"", System.in));"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,418,"inputs.add(SourceFile.fromInputStream(""stdin"", System.in));"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,428,rivate List<JSSourceFile> createSourceInputs(List<String> files)
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,428,private List<SourceFile> createSourceInputs(List<String> files)
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,446,rivate List<JSSourceFile> createExternInputs(List<String> files)
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,446,private List<SourceFile> createExternInputs(List<String> files)
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,449,"eturn ImmutableList.of(JSSourceFile.fromCode(""/dev/null"", """"));"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,449,"return ImmutableList.of(SourceFile.fromCode(""/dev/null"", """"));"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,519,"or (JSSourceFile input : createInputs(moduleJsFiles, false)) {"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,519,"for (SourceFile input : createInputs(moduleJsFiles, false)) {"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,691,ist<JSSourceFile> externs = createExterns();
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,691,List<SourceFile> externs = createExterns();
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,718,ist<JSSourceFile> inputs = createSourceInputs(jsFiles);
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,718,List<SourceFile> inputs = createSourceInputs(jsFiles);
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,999,"rotected List<JSSourceFile> createExterns() throws FlagUsageException,"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,999,"protected List<SourceFile> createExterns() throws FlagUsageException,"
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,759,"rotected List<JSSourceFile> createExterns() throws FlagUsageException,"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,759,"protected List<SourceFile> createExterns() throws FlagUsageException,"
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,761,ist<JSSourceFile> externs = super.createExterns();
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,761,List<SourceFile> externs = super.createExterns();
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,765,ist<JSSourceFile> defaultExterns = getDefaultExterns();
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,765,List<SourceFile> defaultExterns = getDefaultExterns();
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,828,ublic static List<JSSourceFile> getDefaultExterns() throws IOException {
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,828,public static List<SourceFile> getDefaultExterns() throws IOException {
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,832,"ap<String, JSSourceFile> externsMap = Maps.newHashMap();"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,832,"Map<String, SourceFile> externsMap = Maps.newHashMap();"
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,837,SSourceFile.fromInputStream(
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,837,SourceFile.fromInputStream(
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,850,ist<JSSourceFile> externs = Lists.newArrayList();
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,850,List<SourceFile> externs = Lists.newArrayList();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,308,"ublic void init(List<JSSourceFile> externs, List<JSSourceFile> inputs,"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,308,"public <T1 extends SourceFile, T2 extends SourceFile> void init("
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,309,"List<T1> externs,"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,310,"List<T2> inputs,"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,311,or (JSSourceFile input : inputs) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,313,for (SourceFile input : inputs) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,324,"nitModules(Lists.<JSSourceFile>newArrayList(externs),"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,326,"initModules(Lists.<SourceFile>newArrayList(externs),"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,332,ublic void initModules(
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,333,"ist<JSSourceFile> externs, List<JSModule> modules,"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,334,ompilerOptions options) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,334,public <T extends SourceFile> void initModules(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,335,"List<T> externs, List<JSModule> modules, CompilerOptions options) {"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,376,rivate List<CompilerInput> makeCompilerInput(
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,377,"ist<JSSourceFile> files, boolean isExtern) {"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,377,private <T extends SourceFile> List<CompilerInput> makeCompilerInput(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,378,"List<T> files, boolean isExtern) {"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,379,or (JSSourceFile file : files) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,380,for (T file : files) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,422,odule.add(JSSourceFile.fromCode(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,423,module.add(SourceFile.fromCode(
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,489,"SSourceFile extern, JSSourceFile input, CompilerOptions options) {"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,490,"eturn compile(extern, new JSSourceFile[] { input }, options);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,490,"SourceFile extern, SourceFile input, CompilerOptions options) {"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,491,"return compile(Lists.newArrayList(extern), Lists.newArrayList(input), options);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,494,"SSourceFile extern, JSSourceFile[] input, CompilerOptions options) {"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,495,"eturn compile(new JSSourceFile[] { extern }, input, options);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,495,"SourceFile extern, JSSourceFile[] input, CompilerOptions options) {"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,496,"return compile(Lists.newArrayList(extern), Lists.newArrayList(input), options);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,500,"eturn compile(new JSSourceFile[] { extern }, modules, options);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,501,return compileModules(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,502,"Lists.newArrayList(extern), Lists.newArrayList(modules), options);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,509,"eturn compile(Lists.<JSSourceFile>newArrayList(externs),"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,510,"ists.<JSSourceFile>newArrayList(inputs),"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,511,"return compile(Lists.<SourceFile>newArrayList(externs),"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,512,"Lists.<SourceFile>newArrayList(inputs),"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,517,"ublic Result compile(List<JSSourceFile> externs,"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,518,"ist<JSSourceFile> inputs, CompilerOptions options) {"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,519,"public <T1 extends SourceFile, T2 extends SourceFile> Result compile("
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,520,"List<T1> externs, List<T2> inputs, CompilerOptions options) {"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,541,"eturn compileModules(Lists.<JSSourceFile>newArrayList(externs),"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,543,"return compileModules(Lists.<SourceFile>newArrayList(externs),"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,549,"ublic Result compileModules(List<JSSourceFile> externs,"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,551,"public <T extends SourceFile> Result compileModules(List<T> externs,"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1428,ublic Node parse(JSSourceFile file) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1430,public Node parse(SourceFile file) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1439,"SSourceFile.fromCode("" [synthetic:"" + (++syntheticCodeId) + ""] "", js));"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1441,"SourceFile.fromCode("" [synthetic:"" + (++syntheticCodeId) + ""] "", js));"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1462,"eturn parse(JSSourceFile.fromCode(fileName, js));"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1464,"return parse(SourceFile.fromCode(fileName, js));"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1469,"SSourceFile.fromCode("" [testcode] "", js));"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1471,"SourceFile.fromCode("" [testcode] "", js));"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,2161," particular, JSSourceFiles and CompilerOptions are not recorded. In"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,2163,"* particular, SourceFiles and CompilerOptions are not recorded. In"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,2307,"SSourceFile.fromCode(inputId.getIdName(), """"));"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,2309,"SourceFile.fromCode(inputId.getIdName(), """"));"
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,86,ublic CompilerInput(JSSourceFile file) {
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,86,public CompilerInput(SourceFile file) {
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,90,"ublic CompilerInput(JSSourceFile file, boolean isExtern) {"
True,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,90,"public CompilerInput(SourceFile file, boolean isExtern) {"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,93,ublic void add(JSSourceFile file) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,93,public void add(SourceFile file) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,98,ublic void addFirst(JSSourceFile file) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,98,public void addFirst(SourceFile file) {
True,src/com/google/javascript/jscomp/JSSourceFile.java,src/com/google/javascript/jscomp/JSSourceFile.java,36,// TODO(nicksantos): Delete this file.
False,src/com/google/javascript/jscomp/JsMessageExtractor.java,src/com/google/javascript/jscomp/JsMessageExtractor.java,20,mport com.google.common.collect.Iterables;
False,src/com/google/javascript/jscomp/JsMessageExtractor.java,src/com/google/javascript/jscomp/JsMessageExtractor.java,98,ublic Collection<JsMessage> extractMessages(JSSourceFile... inputs)
True,src/com/google/javascript/jscomp/JsMessageExtractor.java,src/com/google/javascript/jscomp/JsMessageExtractor.java,97,public Collection<JsMessage> extractMessages(SourceFile... inputs)
False,src/com/google/javascript/jscomp/JsMessageExtractor.java,src/com/google/javascript/jscomp/JsMessageExtractor.java,113,ublic Collection<JsMessage> extractMessages(
False,src/com/google/javascript/jscomp/JsMessageExtractor.java,src/com/google/javascript/jscomp/JsMessageExtractor.java,114,terable<JSSourceFile> inputs) throws IOException {
True,src/com/google/javascript/jscomp/JsMessageExtractor.java,src/com/google/javascript/jscomp/JsMessageExtractor.java,112,public <T extends SourceFile> Collection<JsMessage> extractMessages(
True,src/com/google/javascript/jscomp/JsMessageExtractor.java,src/com/google/javascript/jscomp/JsMessageExtractor.java,113,Iterable<T> inputs) throws IOException {
False,src/com/google/javascript/jscomp/JsMessageExtractor.java,src/com/google/javascript/jscomp/JsMessageExtractor.java,118,"ew JSSourceFile[] {},"
False,src/com/google/javascript/jscomp/JsMessageExtractor.java,src/com/google/javascript/jscomp/JsMessageExtractor.java,119,"terables.toArray(inputs, JSSourceFile.class),"
True,src/com/google/javascript/jscomp/JsMessageExtractor.java,src/com/google/javascript/jscomp/JsMessageExtractor.java,117,"ImmutableList.<SourceFile>of(),"
True,src/com/google/javascript/jscomp/JsMessageExtractor.java,src/com/google/javascript/jscomp/JsMessageExtractor.java,118,"Lists.newArrayList(inputs),"
False,src/com/google/javascript/jscomp/JsMessageExtractor.java,src/com/google/javascript/jscomp/JsMessageExtractor.java,124,or (JSSourceFile input : inputs) {
True,src/com/google/javascript/jscomp/JsMessageExtractor.java,src/com/google/javascript/jscomp/JsMessageExtractor.java,123,for (SourceFile input : inputs) {
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,27,mport com.google.javascript.jscomp.JSSourceFile;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,27,import com.google.javascript.jscomp.SourceFile;
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,258,SSourceFile[] externs = findExternFiles();
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,259,SSourceFile[] sources = findSourceFiles();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,258,List<SourceFile> externs = findExternFiles();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,259,List<SourceFile> sources = findSourceFiles();
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,262,"og(""Compiling "" + sources.length + "" file(s) with "" +"
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,263,"xterns.length + "" extern(s)"");"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,262,"log(""Compiling "" + sources.size() + "" file(s) with "" +"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,263,"externs.size() + "" extern(s)"");"
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,410,rivate JSSourceFile[] findExternFiles() {
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,411,ist<JSSourceFile> files = Lists.newLinkedList();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,410,private List<SourceFile> findExternFiles() {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,411,List<SourceFile> files = Lists.newLinkedList();
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,420,eturn files.toArray(new JSSourceFile[files.size()]);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,420,return files;
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,423,rivate JSSourceFile[] findSourceFiles() {
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,424,ist<JSSourceFile> files = Lists.newLinkedList();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,423,private List<SourceFile> findSourceFiles() {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,424,List<SourceFile> files = Lists.newLinkedList();
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,434,eturn files.toArray(new JSSourceFile[files.size()]);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,434,return files;
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,441,rivate List<JSSourceFile> findJavaScriptFiles(FileList fileList) {
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,442,ist<JSSourceFile> files = Lists.newLinkedList();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,441,private List<SourceFile> findJavaScriptFiles(FileList fileList) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,442,List<SourceFile> files = Lists.newLinkedList();
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,446,"iles.add(JSSourceFile.fromFile(new File(baseDir, included),"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,446,"files.add(SourceFile.fromFile(new File(baseDir, included),"
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,457,rivate List<JSSourceFile> findJavaScriptFiles(Path path) {
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,458,ist<JSSourceFile> files = Lists.newArrayList();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,457,private List<SourceFile> findJavaScriptFiles(Path path) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,458,List<SourceFile> files = Lists.newArrayList();
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,461,"iles.add(JSSourceFile.fromFile(new File(included),"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,461,"files.add(SourceFile.fromFile(new File(included),"
False,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,473,rivate List<JSSourceFile> getDefaultExterns() {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,473,private List<SourceFile> getDefaultExterns() {
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,71,rivate final List<JSSourceFile> DEFAULT_EXTERNS = ImmutableList.of(
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,72,"SSourceFile.fromCode(""externs"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,71,private final List<SourceFile> DEFAULT_EXTERNS = ImmutableList.of(
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,72,"SourceFile.fromCode(""externs"","
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,105,rivate List<JSSourceFile> externs;
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,105,private List<SourceFile> externs;
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,803,"SSourceFile.fromCode(""externs"", ""myVar.property;""));"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,803,"SourceFile.fromCode(""externs"", ""myVar.property;""));"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,1052,upplier<List<JSSourceFile>> inputsSupplier = null;
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,1052,Supplier<List<SourceFile>> inputsSupplier = null;
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,1056,ist<JSSourceFile> inputs = Lists.newArrayList();
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,1056,List<SourceFile> inputs = Lists.newArrayList();
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,1074,"uppliers.<List<JSSourceFile>>ofInstance(externs),"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,1074,"Suppliers.<List<SourceFile>>ofInstance(externs),"
