is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,657,* A previous map of ids (serialized to a string by a previous compile).
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,658,"* This will be used as a hint during the ReplaceIdGenerators pass, which"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,659,* will attempt to reuse the same ids.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,661,String idGeneratorsMapSerialized;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1191,* A previous map of ids (serialized to a string by a previous compile).
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1192,"* This will be used as a hint during the ReplaceIdGenerators pass, which"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1193,* will attempt to reuse the same ids.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1195,public void setIdGeneratorsMap(String previousMappings) {
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1196,this.idGeneratorsMapSerialized = previousMappings;
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1352,rotected HotSwapCompilerPass createInternal(final AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1352,protected HotSwapCompilerPass createInternal(
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1353,final AbstractCompiler compiler) {
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1415,"ompiler, options.idGenerators, options.generatePseudoNames);"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1416,"compiler, options.idGenerators, options.generatePseudoNames,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1417,options.idGeneratorsMapSerialized);
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1417,dGeneratorMap = pass.getIdGeneratorMap();
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1419,idGeneratorMap = pass.getSerializedIdMappings();
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,19,mport com.google.common.collect.Lists;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,19,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,20,import com.google.common.collect.BiMap;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,21,import com.google.common.collect.HashBiMap;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,22,import com.google.common.collect.ImmutableBiMap;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,29,import java.io.BufferedReader;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,30,import java.io.IOException;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,31,import java.io.StringReader;
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,26,mport java.util.List;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,58,static final DiagnosticType INVALID_GENERATOR_ID_MAPPING =
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,59,DiagnosticType.error(
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,60,"""JSC_INVALID_GENERATOR_ID_MAPPING"","
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,61,"""Invalid generator id mapping. {0}"");"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,57,"rivate final Map<String, List<Replacement>> idGeneratorMaps;"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,68,"private final Map<String, Map<String, String>> idGeneratorMaps;"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,69,"private final Map<String, BiMap<String, String>> previousMap;"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,63,oolean generatePseudoNames) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,75,"boolean generatePseudoNames,"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,76,String previousMapSerialized) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,84,"Map<String, BiMap<String, String>> previousMap;"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,85,previousMap = parsePreviousResults(previousMapSerialized);
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,86,this.previousMap = previousMap;
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,72,or(String gen : idGens) {
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,73,"ameGenerators.put(gen, createNameSupplier());"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,74,"dGeneratorMaps.put(gen, Lists.<Replacement>newLinkedList());"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,89,for (String gen : idGens) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,90,"nameGenerators.put(gen, createNameSupplier(previousMap.get(gen)));"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,91,"idGeneratorMaps.put(gen, Maps.<String, String>newLinkedHashMap());"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,80,tring getName(String name);
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,97,"String getName(String id, String name);"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,84,rivate final NameGenerator generator =
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,85,"ew NameGenerator(Collections.<String>emptySet(), """", null);"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,101,private final NameGenerator generator;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,102,"private final Map<String, String> previousMappings;"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,103,"public ObfuscatedNameSuppier(BiMap<String, String> previousMappings) {"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,104,this.previousMappings = previousMappings.inverse();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,105,this.generator =
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,106,"new NameGenerator(previousMappings.keySet(), """", null);"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,87,ublic String getName(String name) {
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,88,eturn generator.generateNextName();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,110,"public String getName(String id, String name) {"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,111,String newName = previousMappings.get(id);
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,112,if (newName == null) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,113,newName = generator.generateNextName();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,115,return newName;
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,95,ublic String getName(String name) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,122,"public String getName(String id, String name) {"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,100,rivate NameSupplier createNameSupplier() {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,127,private NameSupplier createNameSupplier(
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,128,"BiMap<String, String> previousMappings) {"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,129,previousMappings = previousMappings != null ?
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,130,previousMappings :
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,131,"ImmutableBiMap.<String, String>of();"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,104,eturn new ObfuscatedNameSuppier();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,135,return new ObfuscatedNameSuppier(previousMappings);
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,141,"onsistNameGenerators.put(name, createNameSupplier());"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,173,consistNameGenerators.put(
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,174,"name, createNameSupplier(previousMap.get(name)));"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,144,"ameGenerators.put(name, createNameSupplier());"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,177,"nameGenerators.put(name, createNameSupplier(previousMap.get(name)));"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,146,"dGeneratorMaps.put(name, Lists.<Replacement>newArrayList());"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,179,"idGeneratorMaps.put(name, Maps.<String, String>newLinkedHashMap());"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,199,ist<Replacement> idGeneratorMap = idGeneratorMaps.get(callName);
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,232,"Map<String, String> idGeneratorMap = idGeneratorMaps.get(callName);"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,235,String name = id.getString();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,236,"String instanceId = getIdForGeneratorNode(consistent, id);"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,204,ename = entry.get(id.getString());
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,239,rename = entry.get(instanceId);
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,206,ename = nameGenerator.getName(id.getString());
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,207,"ntry.put(id.getString(), rename);"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,241,"rename = nameGenerator.getName(instanceId, name);"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,242,"entry.put(instanceId, rename);"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,210,ename = nameGenerator.getName(id.getString());
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,245,"rename = nameGenerator.getName(instanceId, name);"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,214,dGeneratorMap.add(
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,215,"ew Replacement(rename, t.getSourceName(), t.getLineNumber()));"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,249,"idGeneratorMap.put(rename, instanceId);"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,222, @return the id generator map.
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,256,* @return The serialize map of generators and their ids and their
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,257,*     replacements.
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,224,ublic String getIdGeneratorMap() {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,259,public String getSerializedIdMappings() {
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,226,"or (Map.Entry<String, List<Replacement>> entry :"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,261,"for (Map.Entry<String, Map<String, String>> replacements :"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,228,"b.append(""["");"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,229,b.append(entry.getKey());
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,230,"b.append(""]\n\n"");"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,231,or (Replacement replacement : entry.getValue()) {
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,232,b.append(replacement.toString());
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,263,if (!replacements.getValue().isEmpty()) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,264,"sb.append(""["");"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,265,sb.append(replacements.getKey());
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,266,"sb.append(""]\n\n"");"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,267,"for (Map.Entry<String, String> replacement :"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,268,replacements.getValue().entrySet()) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,269,sb.append(replacement.getKey());
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,270,sb.append(':');
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,271,sb.append(replacement.getValue());
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,272,"sb.append(""\n"");"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,235,"b.append(""\n"");"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,240,rivate static class Replacement {
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,241,rivate final String name;
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,242,rivate final String sourceName;
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,243,rivate final int lineNumber;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,280,"private Map<String, BiMap<String, String>> parsePreviousResults("
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,281,String serializedMap) {
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,245,"rivate Replacement(String name, String sourceName, int lineNumber) {"
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,246,his.name = name;
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,247,his.sourceName = sourceName;
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,248,his.lineNumber = lineNumber;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,284,// The expected format looks like this:
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,286,// [generatorName]
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,287,// someId:someFile:theLine:theColumn
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,291,if (serializedMap == null || serializedMap.isEmpty()) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,292,return Collections.emptyMap();
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,251,Override
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,252,ublic String toString() {
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,253,"eturn name + "":"" + sourceName + "":"" + lineNumber;"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,295,"Map<String, BiMap<String, String>> resultMap = Maps.newHashMap();"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,296,BufferedReader reader = new BufferedReader(new StringReader(serializedMap));
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,297,"BiMap<String, String> currentSectionMap = null;"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,299,String line;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,300,int lineIndex = 0;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,301,try {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,302,while ((line = reader.readLine()) != null) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,303,lineIndex++;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,304,if (line.isEmpty()) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,305,continue;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,307,if (line.charAt(0) == '[') {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,308,"String currentSection = line.substring(1, line.length() - 1);"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,309,currentSectionMap = resultMap.get(currentSection);
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,310,if (currentSectionMap == null) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,311,currentSectionMap = HashBiMap.create();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,312,"resultMap.put(currentSection, currentSectionMap);"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,313,} else {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,314,"reportInvalidLine(line, lineIndex);"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,315,return Collections.emptyMap();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,317,} else {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,318,int split = line.indexOf(':');
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,319,if (split != -1) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,320,"String name = line.substring(0, split);"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,321,"String location = line.substring(split + 1, line.length());"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,322,"currentSectionMap.put(name, location);"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,323,} else {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,324,"reportInvalidLine(line, lineIndex);"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,325,return Collections.emptyMap();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,329,} catch (IOException e) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,330,"JSError.make(INVALID_GENERATOR_ID_MAPPING, e.getMessage());"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,332,return resultMap;
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,335,"private void reportInvalidLine(String line, int lineIndex) {"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,336,"JSError.make(INVALID_GENERATOR_ID_MAPPING,"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,337,"""line("" + line + ""): "" + lineIndex);"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,340,"String getIdForGeneratorNode(boolean consistent, Node n) {"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,341,Preconditions.checkState(n.isString());
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,342,if (consistent) {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,343,return n.getString();
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,344,} else {
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,345,"return n.getSourceFileName() + ':' + n.getLineno() + "":"" + n.getCharno();"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,30,private String previousMappings = null;
False,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,39,eneratePseudoNames);
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,40,"generatePseudoNames,"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,41,previousMappings);
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,49,previousMappings = null;
False,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,60,ublic void testSerialization() {
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,63,public void testSerialization1() {
False,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,69,"a:testcode:1\n"" +"
False,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,70,"b:testcode:2\n"" +"
False,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,71,"\n"" +"
False,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,72,"[goog.place.getUniqueId]\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,72,"""a:testcode:1:32\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,73,"""b:testcode:2:32\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,74,"""\n"");"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,77,public void testSerialization2() {
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,78,"testMap(""/** @consistentIdGenerator */ id = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,79,"""f1 = id('f1');"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,80,"""f1 = id('f1')"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,82,"""id = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,83,"""f1 = 'a';"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,84,"""f1 = 'a'"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,86,"""[id]\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,87,"""\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,88,"""a:f1\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,89,"""\n"");"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,92,public void testReusePreviousSerialization1() {
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,93,previousMappings =
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,94,"""[goog.events.getUniqueId]\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,95,"""\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,96,"""previous1:testcode:1:32\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,97,"""previous2:testcode:2:32\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,98,"""\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,99,"""[goog.place.getUniqueId]\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,100,"""\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,101,"""\n"";"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,102,"testMap(""var x = goog.events.getUniqueId('xxx');\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,103,"""var y = goog.events.getUniqueId('yyy');\n"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,105,"""var x = 'previous1';\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,106,"""var y = 'previous2';\n"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,108,"""[goog.events.getUniqueId]\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,110,"""previous1:testcode:1:32\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,111,"""previous2:testcode:2:32\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,115,public void testReusePreviousSerialization2() {
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,116,previousMappings =
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,117,"""[goog.events.getUniqueId]\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,118,"""\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,119,"""a:testcode:1:32\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,120,"""b:testcode:2:32\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,121,"""\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,122,"""[goog.place.getUniqueId]\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,123,"""\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,124,"""\n"";"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,125,testMap(
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,126,"""var x = goog.events.getUniqueId('xxx');\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,127,"""\n"" + // new line to change location"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,128,"""var y = goog.events.getUniqueId('yyy');\n"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,130,"""var x = 'a';\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,131,"""var y = 'c';\n"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,133,"""[goog.events.getUniqueId]\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,134,"""\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,135,"""a:testcode:1:32\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,136,"""c:testcode:3:32\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,137,"""\n"");"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,140,public void testReusePreviousSerializationConsistent1() {
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,141,previousMappings =
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,142,"""[id]\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,143,"""\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,144,"""a:f1\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,145,"""\n"";"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,146,testMap(
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,147,"""/** @consistentIdGenerator */ id = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,148,"""f1 = id('f1');"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,149,"""f1 = id('f1')"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,151,"""id = function() {};"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,152,"""f1 = 'a';"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,153,"""f1 = 'a'"","
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,155,"""[id]\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,156,"""\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,157,"""a:f1\n"" +"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,158,"""\n"");"
False,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,244,"ssertEquals(expectedMap, lastPass.getIdGeneratorMap());"
True,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,test/com/google/javascript/jscomp/ReplaceIdGeneratorsTest.java,328,"assertEquals(expectedMap, lastPass.getSerializedIdMappings());"
