is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,17,package org.apache.commons.math3.analysis.differentiation;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,19,import org.apache.commons.math3.analysis.MultivariateVectorFunction;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,21,/** Class representing the gradient of a multivariate function.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,22,* <p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,23,* The vectorial components of the function represent the derivatives
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,24,* with respect to each function parameters.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,25,* </p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,26,* @version $Id$
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,27,* @since 3.1
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,29,public class GradientFunction implements MultivariateVectorFunction {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,31,/** Underlying real-valued function. */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,32,private final MultivariateDifferentiableFunction f;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,34,/** Simple constructor.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,35,* @param f underlying real-valued function
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,37,public GradientFunction(final MultivariateDifferentiableFunction f) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,38,this.f = f;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,41,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,42,public double[] value(double[] point)
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,43,throws IllegalArgumentException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,45,// set up parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,46,final DerivativeStructure[] dsX = new DerivativeStructure[point.length];
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,47,for (int i = 0; i < point.length; ++i) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,48,"dsX[i] = new DerivativeStructure(point.length, 1, i, point[i]);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,51,// compute the derivatives
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,52,final DerivativeStructure dsY = f.value(dsX);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,54,// extract the gradient
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,55,final double[] y = new double[point.length];
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,56,final int[] orders = new int[point.length];
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,57,for (int i = 0; i < point.length; ++i) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,58,orders[i] = 1;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,59,y[i] = dsY.getPartialDerivative(orders);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,60,orders[i] = 0;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,63,return y;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,18,package org.apache.commons.math3.analysis.differentiation;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,20,import org.apache.commons.math3.TestUtils;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,21,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,22,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,23,import org.apache.commons.math3.util.FastMath;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,24,import org.junit.Test;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,28,* Test for class {@link GradientFunction}.
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,30,public class GradientFunctionTest {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,32,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,33,public void test2DDistance() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,34,EuclideanDistance f = new EuclideanDistance();
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,35,GradientFunction g = new GradientFunction(f);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,36,for (double x = -10; x < 10; x += 0.5) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,37,for (double y = -10; y < 10; y += 0.5) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,38,"double[] point = new double[] { x, y };"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,39,"TestUtils.assertEquals(f.gradient(point), g.value(point), 1.0e-15);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,44,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,45,public void test3DDistance() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,46,EuclideanDistance f = new EuclideanDistance();
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,47,GradientFunction g = new GradientFunction(f);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,48,for (double x = -10; x < 10; x += 0.5) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,49,for (double y = -10; y < 10; y += 0.5) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,50,for (double z = -10; z < 10; z += 0.5) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,51,"double[] point = new double[] { x, y, z };"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,52,"TestUtils.assertEquals(f.gradient(point), g.value(point), 1.0e-15);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,58,private static class EuclideanDistance implements MultivariateDifferentiableFunction {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,60,public double value(double[] point) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,61,double d2 = 0;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,62,for (double x : point) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,63,d2 += x * x;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,65,return FastMath.sqrt(d2);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,68,public DerivativeStructure value(DerivativeStructure[] point)
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,69,"throws DimensionMismatchException, MathIllegalArgumentException {"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,70,DerivativeStructure d2 = point[0].getField().getZero();
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,71,for (DerivativeStructure x : point) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,72,d2 = d2.add(x.multiply(x));
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,74,return d2.sqrt();
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,77,public double[] gradient(double[] point) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,78,double[] gradient = new double[point.length];
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,79,double d = value(point);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,80,for (int i = 0; i < point.length; ++i) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,81,gradient[i] = point[i] / d;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/GradientFunctionTest.java,83,return gradient;
