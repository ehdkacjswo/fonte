is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,50, Zero-length vectors may be used to initialized construction of vectors
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,50,* Zero-length vectors may be used to initialize construction of vectors
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,97,ublic ArrayFieldVector(T[] d) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,97,public ArrayFieldVector(T[] d)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,98,"throws NullArgumentException, ZeroException {"
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,117,"ublic ArrayFieldVector(Field<T> field, T[] d) {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,118,"public ArrayFieldVector(Field<T> field, T[] d)"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,119,throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,146,"ublic ArrayFieldVector(T[] d, boolean copyArray) {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,148,"public ArrayFieldVector(T[] d, boolean copyArray)"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,149,"throws NullArgumentException, ZeroException {"
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,154,ata = copyArray ? d.clone() :  d;
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,157,data = copyArray ? d.clone() : d;
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,172,"ublic ArrayFieldVector(Field<T> field, T[] d, boolean copyArray) {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,175,"public ArrayFieldVector(Field<T> field, T[] d, boolean copyArray)"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,176,throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,190,"ublic ArrayFieldVector(T[] d, int pos, int size) {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,194,"public ArrayFieldVector(T[] d, int pos, int size)"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,195,"throws NullArgumentException, NumberIsTooLargeException {"
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,213,"ublic ArrayFieldVector(Field<T> field, T[] d, int pos, int size) {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,218,"public ArrayFieldVector(Field<T> field, T[] d, int pos, int size)"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,219,"throws NullArgumentException, NumberIsTooLargeException {"
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,231,ublic ArrayFieldVector(FieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,237,public ArrayFieldVector(FieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,238,throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,248,ublic ArrayFieldVector(ArrayFieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,255,public ArrayFieldVector(ArrayFieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,256,throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,264,"ublic ArrayFieldVector(ArrayFieldVector<T> v, boolean deep) {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,272,"public ArrayFieldVector(ArrayFieldVector<T> v, boolean deep)"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,273,throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,280,"ublic ArrayFieldVector(ArrayFieldVector<T> v1, ArrayFieldVector<T> v2) {"
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,281,f (v1 == null ||
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,282,2 == null) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,289,"public ArrayFieldVector(ArrayFieldVector<T> v1, ArrayFieldVector<T> v2)"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,290,throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,291,if (v1 == null || v2 == null) {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,299,"ublic ArrayFieldVector(ArrayFieldVector<T> v1, T[] v2) {"
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,300,f (v1 == null ||
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,301,2 == null) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,308,"public ArrayFieldVector(ArrayFieldVector<T> v1, T[] v2)"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,309,throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,310,if (v1 == null || v2 == null) {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,318,"ublic ArrayFieldVector(T[] v1, ArrayFieldVector<T> v2) {"
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,319,f (v1 == null ||
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,320,2 == null) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,327,"public ArrayFieldVector(T[] v1, ArrayFieldVector<T> v2)"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,328,throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,329,if (v1 == null || v2 == null) {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,344,"ublic ArrayFieldVector(T[] v1, T[] v2) {"
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,345,f (v1 == null ||
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,346,2 == null) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,353,"public ArrayFieldVector(T[] v1, T[] v2)"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,354,"throws NullArgumentException, ZeroException {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,355,if (v1 == null || v2 == null) {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,369,"ublic ArrayFieldVector(Field<T> field, T[] v1, T[] v2) {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,378,"public ArrayFieldVector(Field<T> field, T[] v1, T[] v2)"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,379,"throws NullArgumentException, ZeroException {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,380,if (v1 == null || v2 == null) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,381,throw new NullArgumentException();
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,401,ublic FieldVector<T> add(FieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,414,public FieldVector<T> add(FieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,415,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,415, Compute the sum of this and v.
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,429,* Compute the sum of {@code this} and {@code v}.
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,417, @return this + v
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,418, @throws IllegalArgumentException if v is not the same size as this
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,431,* @return {@code this + v}
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,432,* @throws DimensionMismatchException if {@code v} is not the same size as
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,433,* {@code this}
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,420,ublic ArrayFieldVector<T> add(ArrayFieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,435,public ArrayFieldVector<T> add(ArrayFieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,436,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,430,ublic FieldVector<T> subtract(FieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,446,public FieldVector<T> subtract(FieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,447,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,444, Compute this minus v.
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,461,* Compute {@code this} minus {@code v}.
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,446, @return this + v
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,447, @throws IllegalArgumentException if v is not the same size as this
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,463,* @return {@code this - v}
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,464,* @throws DimensionMismatchException if {@code v} is not the same size as
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,465,* {@code this}
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,449,ublic ArrayFieldVector<T> subtract(ArrayFieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,467,public ArrayFieldVector<T> subtract(ArrayFieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,468,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,546,ublic FieldVector<T> ebeMultiply(FieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,565,public FieldVector<T> ebeMultiply(FieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,566,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,562, @return a vector containing this[i] * v[i] for all i
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,563, @exception IllegalArgumentException if v is not the same size as this
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,582,* @return a vector containing {@code this[i] * v[i]} for all {@code i}
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,583,* @throws DimensionMismatchException if {@code v} is not the same size as
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,584,* {@code this}
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,565,ublic ArrayFieldVector<T> ebeMultiply(ArrayFieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,586,public ArrayFieldVector<T> ebeMultiply(ArrayFieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,587,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,575,ublic FieldVector<T> ebeDivide(FieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,597,public FieldVector<T> ebeDivide(FieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,598,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,591, @return a vector containing this[i] / v[i] for all i
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,592, @throws IllegalArgumentException if v is not the same size as this
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,614,* @return a vector containing {@code this[i] / v[i]} for all {@code i}
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,615,* @throws DimensionMismatchException if {@code v} is not the same size as
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,616,* {@code this}
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,594,ublic ArrayFieldVector<T> ebeDivide(ArrayFieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,618,public ArrayFieldVector<T> ebeDivide(ArrayFieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,619,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,618,ublic T dotProduct(FieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,643,public T dotProduct(FieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,644,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,634, @return the scalar dot product between instance and v
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,635, @exception IllegalArgumentException if v is not the same size as this
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,660,* @return the scalar dot product of {@code this} and {@code v}
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,661,* @throws DimensionMismatchException if {@code v} is not the same size as
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,662,* {@code this}
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,637,ublic T dotProduct(ArrayFieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,664,public T dotProduct(ArrayFieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,665,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,647,ublic FieldVector<T> projection(FieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,675,public FieldVector<T> projection(FieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,676,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,651,** Find the orthogonal projection of this vector onto another vector.
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,652, @param v vector onto which instance must be projected
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,653, @return projection of the instance onto v
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,654, @throws IllegalArgumentException if v is not the same size as this
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,680,/** Find the orthogonal projection of this vector onto another vector.
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,681,* @param v vector onto which {@code this} must be projected
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,682,* @return projection of {@code this} onto {@code v}
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,683,* @throws DimensionMismatchException if {@code v} is not the same size as
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,684,* {@code this}
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,656,ublic ArrayFieldVector<T> projection(ArrayFieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,686,public ArrayFieldVector<T> projection(ArrayFieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,687,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,680, @return the square matrix outer product between instance and v
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,681, @exception IllegalArgumentException if v is not the same size as this
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,711,* @return the matrix outer product between instance and v
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,773, @throws OutOfRangeException if the index is
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,774, inconsistent with vector size
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,803,* @throws OutOfRangeException if the index is invalid.
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,776,"ublic void set(int index, ArrayFieldVector<T> v) {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,805,"public void set(int index, ArrayFieldVector<T> v) throws OutOfRangeException {"
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,798, @exception IllegalArgumentException if the vectors do not
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,799, have the same dimension
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,827,* @exception DimensionMismatchException if the vectors do not
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,828,* have the same dimensions
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,801,rotected void checkVectorDimensions(FieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,830,protected void checkVectorDimensions(FieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,831,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,809, @throws OutOfRangeException if the dimension is
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,810, inconsistent with this vector size.
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,839,* @throws DimensionMismatchException if the dimension is not equal to the
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,840,* size of {@code this} vector.
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,812,rotected void checkVectorDimensions(int n) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,842,protected void checkVectorDimensions(int n)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,843,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,873,rivate void checkIndex(final int index) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,904,private void checkIndex(final int index) throws OutOfRangeException {
