is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,55, M = C &middot; C<sup>T</sup>
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,55,* M = P<sup>T</sup> &middot; P
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,57," (A - shift &middot; I) in some sense, where systems of the form"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,58, M &middot; y = x
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,59, can be solved efficiently. Then SYMMLQ will implicitly solve the system of
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,60, equations
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,57,"* (A - shift &middot; I)<sup>-1</sup> in some sense, where matrix-vector"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,58,* products of the form M &middot; y = x can be computed efficiently. Then
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,59,* SYMMLQ will implicitly solve the system of equations
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,64," where P = C<sup>-1</sup>,"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,63,* where
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,76, this solver throws are such that
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,75,* this solver fires are such that
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,176,   beta[k+1] * (P' * v)[k+1] = M^(-1) * (A - shift * I) * (P' * v)[k]
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,175,*   beta[k+1] * (P' * v)[k+1] = M * (A - shift * I) * (P' * v)[k]
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,187," explicitly used, only matrix-vector products involving M^(-1) are"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,188, invoked.
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,186,"* explicitly used, only matrix-vector products involving are invoked."
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,305,"** Reference to the inverse of the preconditioner, M<sup>-1</sup>. */"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,306,rivate final RealLinearOperator minv;
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,303,"/** Reference to the preconditioner, M. */"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,304,private final RealLinearOperator m;
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,314,** The value of M^(-1) * b. */
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,315,rivate final RealVector minvb;
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,312,/** The value of M * b. */
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,313,private final RealVector mb;
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,320,** The value of beta[k] * M * P' * v[k]. */
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,318,/** The value of beta[k] * M^(-1) * P' * v[k]. */
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,323,** The value of beta[k+1] * M * P' * v[k+1]. */
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,321,/** The value of beta[k+1] * M^(-1) * P' * v[k+1]. */
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,376," @param minv the inverse of the preconditioner, M<sup>-1</sup>"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,377, (can be {@code null})
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,374,"* @param m the preconditioner, M (can be {@code null})"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,388,"inal RealLinearOperator minv,"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,385,"final RealLinearOperator m,"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,395,his.minv = minv;
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,392,this.m = m;
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,400,his.minvb = minv == null ? b : minv.operate(b);
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,397,this.mb = m == null ? b : m.operate(b);
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,514,inal double bi = minvb.getEntry(i);
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,511,final double bi = mb.getEntry(i);
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,535,inal double bi = minvb.getEntry(i);
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,532,final double bi = mb.getEntry(i);
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,554,his.y = this.minv == null ? this.b.copy() : this.minv.operate(this.r1);
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,555,f ((this.minv != null) && this.check) {
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,556,"heckSymmetry(this.minv, this.r1, this.y, this.minv.operate(this.y));"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,551,this.y = this.m == null ? this.b.copy() : this.m.operate(this.r1);
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,552,if ((this.m != null) && this.check) {
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,553,"checkSymmetry(this.m, this.r1, this.y, this.m.operate(this.y));"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,561,"hrowNPDLOException(this.minv, this.y);"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,558,"throwNPDLOException(this.m, this.y);"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,572,"   y = M^(-1) * b,"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,569,"*   y = M * b,"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,590,   y     = beta[2] * M * P' * v[2]
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,587,*   y     = beta[2] * M^(-1) * P' * v[2]
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,597,f (this.minv != null) {
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,598,his.y = this.minv.operate(this.r2);
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,594,if (this.m != null) {
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,595,this.y = this.m.operate(this.r2);
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,603,"hrowNPDLOException(this.minv, this.y);"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,600,"throwNPDLOException(this.m, this.y);"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,611,   r2 = beta[2] * M * P' * v[2]
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,608,*   r2 = beta[2] * M^(-1) * P' * v[2]
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,648,"   y     = (A - shift * I) * P' * v[k] - beta[k] * M * P' * v[k-1],"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,645,"*   y     = (A - shift * I) * P' * v[k] - beta[k] * M^(-1) * P' * v[k-1],"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,650,           - beta[k] * v[k]' * P * M * P' * v[k-1]
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,647,*           - beta[k] * v[k]' * P * M^(-1) * P' * v[k-1]
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,658,   y = (A - shift * I) * P' * v[k] - alpha[k] * M * P' * v[k]
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,659,       - beta[k] * M * P' * v[k-1]
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,660,     = M * P' * (P * (A - shift * I) * P' * v[k] -alpha[k] * v[k]
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,655,*   y = (A - shift * I) * P' * v[k] - alpha[k] * M^(-1) * P' * v[k]
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,656,*       - beta[k] * M^(-1) * P' * v[k-1]
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,657,*     = M^(-1) * P' * (P * (A - shift * I) * P' * v[k] -alpha[k] * v[k]
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,662,"     = beta[k+1] * M * P' * v[k+1],"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,659,"*     = beta[k+1] * M^(-1) * P' * v[k+1],"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,665, WATCH-IT: the two following line work only because y is no longer
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,662,* WATCH-IT: the two following lines work only because y is no longer
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,671,f (minv != null) {
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,672, = minv.operate(r2);
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,668,if (m != null) {
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,669,y = m.operate(r2);
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,677,"hrowNPDLOException(minv, y);"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,674,"throwNPDLOException(m, y);"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,682,"   r1 = beta[k] * M * P' * v[k],"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,683,"   r2 = beta[k+1] * M * P' * v[k+1],"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,679,"*   r1 = beta[k] * M^(-1) * P' * v[k],"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,680,"*   r2 = beta[k+1] * M^(-1) * P' * v[k+1],"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,912," {@code true}, and {@code a} or {@code minv} is not self-adjoint"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,913, @throws NonPositiveDefiniteOperatorException if {@code minv} is not
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,909,"* {@code true}, and {@code a} or {@code m} is not self-adjoint"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,910,* @throws NonPositiveDefiniteOperatorException if {@code m} is not
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,949," @param minv the inverse of the preconditioner, M<sup>-1</sup>"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,950, (can be {@code null})
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,946,"* @param m the preconditioner, M (can be {@code null})"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,957, @throws NonSquareOperatorException if {@code a} or {@code minv} is not
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,958, square
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,959, @throws DimensionMismatchException if {@code minv} or {@code b} have
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,960, dimensions inconsistent with {@code a}
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,953,* @throws NonSquareOperatorException if {@code a} or {@code m} is not square
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,954,* @throws DimensionMismatchException if {@code m} or {@code b} have dimensions
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,955,* inconsistent with {@code a}
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,966," {@code true}, and {@code a} or {@code minv} is not self-adjoint"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,967, @throws NonPositiveDefiniteOperatorException if {@code minv} is not
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,961,"* {@code true}, and {@code a} or {@code m} is not self-adjoint"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,962,* @throws NonPositiveDefiniteOperatorException if {@code m} is not
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,972,"inal RealLinearOperator minv, final RealVector b, final boolean goodb,"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,967,"final RealLinearOperator m, final RealVector b, final boolean goodb,"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,979,"eturn solveInPlace(a, minv, b, x, goodb, shift);"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,974,"return solveInPlace(a, m, b, x, goodb, shift);"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,988," {@code true}, and {@code a} or {@code minv} is not self-adjoint"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,989, @throws NonPositiveDefiniteOperatorException if {@code minv} is not
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,990, positive definite
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,983,"* {@code true}, and {@code a} or {@code m} is not self-adjoint"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,984,* @throws NonPositiveDefiniteOperatorException if {@code m} is not positive
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,985,* definite
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,995,"inal RealLinearOperator minv, final RealVector b, final RealVector x)"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,990,"final RealLinearOperator m, final RealVector b, final RealVector x)"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1001,"eturn solveInPlace(a, minv, b, x.copy(), false, 0.);"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,996,"return solveInPlace(a, m, b, x.copy(), false, 0.);"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1092," {@code true}, and {@code a} or {@code minv} is not self-adjoint"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1093, @throws NonPositiveDefiniteOperatorException if {@code minv} is not
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1087,"* {@code true}, and {@code a} or {@code m} is not self-adjoint"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1088,* @throws NonPositiveDefiniteOperatorException if {@code m} is not
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1099,"inal RealLinearOperator minv, final RealVector b, final RealVector x)"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1094,"final RealLinearOperator m, final RealVector b, final RealVector x)"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1104,"eturn solveInPlace(a, minv, b, x, false, 0.);"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1099,"return solveInPlace(a, m, b, x, false, 0.);"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1127," @param minv the inverse of the preconditioner, M<sup>-1</sup>"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1128, (can be {@code null})
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1122,"* @param m the preconditioner, M (can be {@code null})"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1137, @throws NonSquareOperatorException if {@code a} or {@code minv} is not
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1138, square
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1139," @throws DimensionMismatchException if {@code minv}, {@code b} or"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1140, {@code x} have dimensions inconsistent with {@code a}.
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1131,* @throws NonSquareOperatorException if {@code a} or {@code m} is not square
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1132,"* @throws DimensionMismatchException if {@code m}, {@code b} or {@code x}"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1133,* have dimensions inconsistent with {@code a}.
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1146," {@code true}, and {@code a} or {@code minv} is not self-adjoint"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1147, @throws NonPositiveDefiniteOperatorException if {@code minv} is not
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1148, positive definite
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1139,"* {@code true}, and {@code a} or {@code m} is not self-adjoint"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1140,* @throws NonPositiveDefiniteOperatorException if {@code m} is not positive
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1141,* definite
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1152,"inal RealLinearOperator minv, final RealVector b,"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1145,"final RealLinearOperator m, final RealVector b,"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1158,"heckParameters(a, minv, b, x);"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1151,"checkParameters(a, m, b, x);"
False,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1166,"tate = new State(a, minv, b, goodb, shift, delta, check);"
True,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,src/main/java/org/apache/commons/math3/linear/SymmLQ.java,1159,"state = new State(a, m, b, goodb, shift, delta, check);"
