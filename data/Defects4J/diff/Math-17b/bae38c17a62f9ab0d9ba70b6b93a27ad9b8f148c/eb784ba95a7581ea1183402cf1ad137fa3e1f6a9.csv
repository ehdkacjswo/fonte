is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/dfp/Dfp.java,src/main/java/org/apache/commons/math/dfp/Dfp.java,388,f (fpexp.charAt(i) >= '0' && fpexp.charAt(i) <= '9')
True,src/main/java/org/apache/commons/math/dfp/Dfp.java,src/main/java/org/apache/commons/math/dfp/Dfp.java,388,if (fpexp.charAt(i) >= '0' && fpexp.charAt(i) <= '9') {
False,src/main/java/org/apache/commons/math/dfp/DfpMath.java,src/main/java/org/apache/commons/math/dfp/DfpMath.java,687,f (y.equals(py))
True,src/main/java/org/apache/commons/math/dfp/DfpMath.java,src/main/java/org/apache/commons/math/dfp/DfpMath.java,687,if (y.equals(py)) {
False,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,157,f (x < 0) return 0;
True,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,157,if (x < 0) {
True,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,158,return 0;
False,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,159,astMath.exp(-x / beta) / FastMath.exp(Gamma.logGamma(alpha));
True,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,161,FastMath.exp(-x / beta) / FastMath.exp(Gamma.logGamma(alpha));
False,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,308,f (i - j + 1 < 0)
True,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,308,if (i - j + 1 < 0) {
False,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,310,lse
True,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,310,} else {
False,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,52,rotected void checkValidity(List<Integer> chromosomeRepresentation) throws InvalidRepresentationException {
True,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,52,protected void checkValidity(List<Integer> chromosomeRepresentation)
True,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,53,throws InvalidRepresentationException {
False,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,54,f (i < 0 || i >1)
False,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,55,hrow new InvalidRepresentationException(
False,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,56,"ocalizedFormats.INVALID_BINARY_DIGIT, i);"
True,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,55,if (i < 0 || i >1) {
True,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,56,"throw new InvalidRepresentationException(LocalizedFormats.INVALID_BINARY_DIGIT,"
True,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,57,i);
False,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,80,f (! (another instanceof BinaryChromosome))
True,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,82,if (! (another instanceof BinaryChromosome)) {
False,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,84,f (getLength() != anotherBc.getLength())
True,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,87,if (getLength() != anotherBc.getLength()) {
False,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,88,f (!(getRepresentation().get(i).equals(anotherBc.getRepresentation().get(i))))
True,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java,92,if (!(getRepresentation().get(i).equals(anotherBc.getRepresentation().get(i)))) {
False,src/main/java/org/apache/commons/math/genetics/Chromosome.java,src/main/java/org/apache/commons/math/genetics/Chromosome.java,91,f (this.isSame(anotherChr))
True,src/main/java/org/apache/commons/math/genetics/Chromosome.java,src/main/java/org/apache/commons/math/genetics/Chromosome.java,91,if (this.isSame(anotherChr)) {
False,src/main/java/org/apache/commons/math/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math/genetics/ElitisticListPopulation.java,97,f (elitismRate < 0 || elitismRate > 1)
True,src/main/java/org/apache/commons/math/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math/genetics/ElitisticListPopulation.java,97,if (elitismRate < 0 || elitismRate > 1) {
False,src/main/java/org/apache/commons/math/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math/genetics/FixedGenerationCount.java,42,f (maxGenerations <= 0)
True,src/main/java/org/apache/commons/math/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math/genetics/FixedGenerationCount.java,42,if (maxGenerations <= 0) {
False,src/main/java/org/apache/commons/math/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math/genetics/OnePointCrossover.java,87,f (length != second.getLength())
True,src/main/java/org/apache/commons/math/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math/genetics/OnePointCrossover.java,87,if (length != second.getLength()) {
False,src/main/java/org/apache/commons/math/genetics/RandomKey.java,src/main/java/org/apache/commons/math/genetics/RandomKey.java,152,f (! (another instanceof RandomKey<?>))
True,src/main/java/org/apache/commons/math/genetics/RandomKey.java,src/main/java/org/apache/commons/math/genetics/RandomKey.java,152,if (! (another instanceof RandomKey<?>)) {
False,src/main/java/org/apache/commons/math/genetics/RandomKey.java,src/main/java/org/apache/commons/math/genetics/RandomKey.java,156,f (getLength() != anotherRk.getLength())
True,src/main/java/org/apache/commons/math/genetics/RandomKey.java,src/main/java/org/apache/commons/math/genetics/RandomKey.java,157,if (getLength() != anotherRk.getLength()) {
False,src/main/java/org/apache/commons/math/genetics/RandomKey.java,src/main/java/org/apache/commons/math/genetics/RandomKey.java,165,f (thisPerm.get(i) != anotherPerm.get(i))
True,src/main/java/org/apache/commons/math/genetics/RandomKey.java,src/main/java/org/apache/commons/math/genetics/RandomKey.java,167,if (thisPerm.get(i) != anotherPerm.get(i)) {
False,src/main/java/org/apache/commons/math/genetics/TournamentSelection.java,src/main/java/org/apache/commons/math/genetics/TournamentSelection.java,73,f (population.getPopulationSize() < this.arity)
True,src/main/java/org/apache/commons/math/genetics/TournamentSelection.java,src/main/java/org/apache/commons/math/genetics/TournamentSelection.java,73,if (population.getPopulationSize() < this.arity) {
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,1021,f (FastMath.abs(fn1 - fn) <= threshold)
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,1022,eturn o;
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,1021,if (FastMath.abs(fn1 - fn) <= threshold) {
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,1022,return o;
False,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,559,f (t == 0.0 && i >= j)
True,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,559,if (t == 0.0 && i >= j) {
False,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,444,f(v instanceof SparseFieldVector<?>)
True,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,444,if (v instanceof SparseFieldVector<?>) {
False,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,446,lse
True,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,446,} else {
False,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,518,f(v instanceof SparseFieldVector<?>)
True,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,519,if (v instanceof SparseFieldVector<?>) {
False,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,520,lse
True,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,521,} else {
False,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,211,f (!forward) h = -h;
True,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,211,if (!forward) {
True,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,212,h = -h;
False,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,255,eturn forward ? nextTime <= interpolator.getCurrentTime()
False,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,256, nextTime >= interpolator.getCurrentTime();
True,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,257,return forward ?
True,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,258,nextTime <= interpolator.getCurrentTime() :
True,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,259,nextTime >= interpolator.getCurrentTime();
False,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,266,f (!bounds.firstIncluded() && firstTime == lastTime) return;
True,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,269,if (!bounds.firstIncluded() && firstTime == lastTime) {
True,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java,270,return;
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,375,f (diagonalOnly <= 0)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,375,if (diagonalOnly <= 0) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,378,lse
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,378,} else {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,381,f (i >= checkFeasableCount || fitfun.isFeasible(arxk.getColumn(0)))
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,382,if (i >= checkFeasableCount || fitfun.isFeasible(arxk.getColumn(0))) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,402,f (diagonalOnly <= 0)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,404,if (diagonalOnly <= 0) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,404,lse
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,406,} else {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,417,f (getConvergenceChecker().converged(
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,418,"terations, optimum, lastResult))"
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,420,"if (getConvergenceChecker().converged(iterations, optimum, lastResult)) {"
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,425,f (bestFitness < (isMinimize ? stopfitness : -stopfitness))
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,428,if (bestFitness < (isMinimize ? stopfitness : -stopfitness)) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,431,"f (sigma*(Math.max(Math.abs(pcCol[i]), sqrtDiagC[i])) > stopTolX)"
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,435,"if (sigma*(Math.max(Math.abs(pcCol[i]), sqrtDiagC[i])) > stopTolX) {"
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,433,f (i >= dimension-1)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,438,if (i >= dimension-1) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,436,or (int i = 0; i < dimension; i++)
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,437,f (sigma*sqrtDiagC[i] > stopTolUpX)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,442,for (int i = 0; i < dimension; i++) {
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,443,if (sigma*sqrtDiagC[i] > stopTolUpX) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,442,"ath.min(historyBest, bestFitness) < stopTolFun)"
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,450,"Math.min(historyBest, bestFitness) < stopTolFun) {"
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,445,istoryWorst-historyBest < stopTolHistFun)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,454,historyWorst-historyBest < stopTolHistFun) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,448,f (max(diagD)/min(diagD) > 1e7)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,458,if (max(diagD)/min(diagD) > 1e7) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,456,etConvergenceChecker().converged(
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,457,"terations, current, lastResult))"
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,467,"getConvergenceChecker().converged(iterations, current, lastResult)) {"
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,462,f (bestValue == fitness[arindex[(int)(0.1+lambda/4.)]])
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,473,if (bestValue == fitness[arindex[(int)(0.1+lambda/4.)]]) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,465,"ath.min(historyBest, bestFitness) == 0)"
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,477,"Math.min(historyBest, bestFitness) == 0) {"
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,486,f (boundaries.length != 2)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,499,if (boundaries.length != 2) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,490,f (boundaries[0] == null || boundaries[1] == null)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,504,if (boundaries[0] == null || boundaries[1] == null) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,492,f (boundaries[0].length != init.length)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,507,if (boundaries[0].length != init.length) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,496,f (boundaries[1].length != init.length)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,512,if (boundaries[1].length != init.length) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,501,f (boundaries[0][i] > init[i] || boundaries[1][i] < init[i])
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,518,if (boundaries[0][i] > init[i] || boundaries[1][i] < init[i]) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,507,f (inputSigma.length != init.length)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,525,if (inputSigma.length != init.length) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,512,f (inputSigma[i] < 0)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,531,if (inputSigma[i] < 0) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,515,f (inputSigma[i] > 1.0)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,535,if (inputSigma[i] > 1.0) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,530,f (lambda <= 0)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,551,if (lambda <= 0) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,534,or (int i = 0; i < guess.length; i++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,556,for (int i = 0; i < guess.length; i++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,590,or (int i = 0; i < historySize; i++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,613,for (int i = 0; i < historySize; i++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,613,f (hsig)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,637,if (hsig) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,702,f (negccov > negcovMax)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,727,if (negccov > negcovMax) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,751,or (int i = 0; i < dimension; i++)
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,752,"f (diagD.getEntry(i, 0) < 0)"
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,777,for (int i = 0; i < dimension; i++) {
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,778,"if (diagD.getEntry(i, 0) < 0) {"
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,778,or (int i = vals.length-1; i > 0; i--)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,806,for (int i = vals.length-1; i > 0; i--) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,792,or (int i = 0; i < doubles.length; i++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,821,for (int i = 0; i < doubles.length; i++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,796,or (int i = 0; i < doubles.length; i++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,826,for (int i = 0; i < doubles.length; i++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,857,f (boundaries == null)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,888,if (boundaries == null) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,873,f (boundaries == null)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,905,if (boundaries == null) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,895, else
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,928,} else {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,907,f (boundaries == null)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,941,if (boundaries == null) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,910,f (x[i] < 0)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,945,if (x[i] < 0) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,912,f (x[i] > 1.0)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,948,if (x[i] > 1.0) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,934,f (x[i] < 0)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,971,if (x[i] < 0) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,936,lse if (x[i] > 1.0)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,973,} else if (x[i] > 1.0) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,938,lse
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,975,} else {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,970,or (int r = 0; r < m.getRowDimension(); r++)
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,971,or (int c = 0; c < m.getColumnDimension(); c++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1008,for (int r = 0; r < m.getRowDimension(); r++) {
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1009,for (int c = 0; c < m.getColumnDimension(); c++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,983,or (int r = 0; r < m.getRowDimension(); r++)
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,984,or (int c = 0; c < m.getColumnDimension(); c++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1023,for (int r = 0; r < m.getRowDimension(); r++) {
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1024,for (int c = 0; c < m.getColumnDimension(); c++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,995,or (int r = 0; r < m.getRowDimension(); r++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1037,for (int r = 0; r < m.getRowDimension(); r++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1012,or (int r = 0; r < m.getRowDimension(); r++)
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1013,or (int c = 0; c < m.getColumnDimension(); c++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1055,for (int r = 0; r < m.getRowDimension(); r++) {
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1056,for (int c = 0; c < m.getColumnDimension(); c++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1027,or (int r = 0; r < m.getRowDimension(); r++)
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1028,or (int c = 0; c < m.getColumnDimension(); c++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1072,for (int r = 0; r < m.getRowDimension(); r++) {
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1073,for (int c = 0; c < m.getColumnDimension(); c++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1040,or (int r = 0; r < m.getRowDimension(); r++)
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1041,or (int c = 0; c < cols.length; c++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1087,for (int r = 0; r < m.getRowDimension(); r++) {
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1088,for (int c = 0; c < cols.length; c++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1053,or (int r = 0; r < m.getRowDimension(); r++)
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1054,or (int c = 0; c < m.getColumnDimension(); c++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1102,for (int r = 0; r < m.getRowDimension(); r++) {
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1103,for (int c = 0; c < m.getColumnDimension(); c++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1056,"eturn new Array2DRowRealMatrix(d, false);"
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1107,"return new Array2DRowRealMatrix(d, false);"
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1068,or (int r = 0; r < m.getRowDimension(); r++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1119,for (int r = 0; r < m.getRowDimension(); r++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1084,or (int i = 0; i < m.getRowDimension(); i++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1136,for (int i = 0; i < m.getRowDimension(); i++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1089,or (int i = 0; i < m.getColumnDimension(); i++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1142,for (int i = 0; i < m.getColumnDimension(); i++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1108,or (int i = 0; i < m1.getRowDimension(); i++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1162,for (int i = 0; i < m1.getRowDimension(); i++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1121,or (int r = 0; r < n; r++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1176,for (int r = 0; r < n; r++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1135,or (int r = 0; r < n; r++)
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1136,f (r < m)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1191,for (int r = 0; r < n; r++) {
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1192,if (r < m) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1165,or (int r = 0; r < n * rd; r++)
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1166,or (int c = 0; c < m * cd; c++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1223,for (int r = 0; r < n * rd; r++) {
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1224,for (int c = 0; c < m * cd; c++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1198,or (int r = 0; r < m.getRowDimension(); r++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1258,for (int r = 0; r < m.getRowDimension(); r++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1201,f (max < e)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1261,if (max < e) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1214,or (int r = 0; r < m.getRowDimension(); r++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1276,for (int r = 0; r < m.getRowDimension(); r++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1217,f (min > e)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1279,if (min > e) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1230,or (int r = 0; r < m.length; r++)
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1231,f (max < m[r])
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1294,for (int r = 0; r < m.length; r++) {
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1295,if (max < m[r]) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1243,or (int r = 0; r < m.length; r++)
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1244,f (min > m[r])
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1309,for (int r = 0; r < m.length; r++) {
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1310,if (min > m[r]) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1256,or (int i = 0; i < indices.length; i++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1324,for (int i = 0; i < indices.length; i++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1268,or (int i = 0; i < indices.length; i++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1337,for (int i = 0; i < indices.length; i++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1280,or (int i = 0; i < size; i++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1350,for (int i = 0; i < size; i++) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1294,or (int r = 0; r < size; r++)
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1295,or (int c = 0; c < popSize; c++)
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1365,for (int r = 0; r < size; r++) {
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,1366,for (int c = 0; c < popSize; c++) {
False,src/main/java/org/apache/commons/math/stat/Frequency.java,src/main/java/org/apache/commons/math/stat/Frequency.java,494,f (this == obj)
True,src/main/java/org/apache/commons/math/stat/Frequency.java,src/main/java/org/apache/commons/math/stat/Frequency.java,494,if (this == obj) {
False,src/main/java/org/apache/commons/math/stat/Frequency.java,src/main/java/org/apache/commons/math/stat/Frequency.java,496,f (!(obj instanceof Frequency))
True,src/main/java/org/apache/commons/math/stat/Frequency.java,src/main/java/org/apache/commons/math/stat/Frequency.java,497,if (!(obj instanceof Frequency)) {
False,src/main/java/org/apache/commons/math/stat/Frequency.java,src/main/java/org/apache/commons/math/stat/Frequency.java,500,f (other.freqTable != null)
True,src/main/java/org/apache/commons/math/stat/Frequency.java,src/main/java/org/apache/commons/math/stat/Frequency.java,502,if (other.freqTable != null) {
False,src/main/java/org/apache/commons/math/stat/Frequency.java,src/main/java/org/apache/commons/math/stat/Frequency.java,502, else if (!freqTable.equals(other.freqTable))
True,src/main/java/org/apache/commons/math/stat/Frequency.java,src/main/java/org/apache/commons/math/stat/Frequency.java,505,} else if (!freqTable.equals(other.freqTable)) {
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,136,f (this == obj)
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,136,if (this == obj) {
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,138,f (!(obj instanceof VectorialCovariance))
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,139,if (!(obj instanceof VectorialCovariance)) {
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,141,f (isBiasCorrected != other.isBiasCorrected)
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,143,if (isBiasCorrected != other.isBiasCorrected) {
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,143,f (n != other.n)
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,146,if (n != other.n) {
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,145,"f (!Arrays.equals(productsSums, other.productsSums))"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,149,"if (!Arrays.equals(productsSums, other.productsSums)) {"
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,147,"f (!Arrays.equals(sums, other.sums))"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java,152,"if (!Arrays.equals(sums, other.sums)) {"
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java,93,f (this == obj)
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java,93,if (this == obj) {
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java,95,f (!(obj instanceof VectorialMean))
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java,96,if (!(obj instanceof VectorialMean)) {
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java,98,"f (!Arrays.equals(means, other.means))"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java,100,"if (!Arrays.equals(means, other.means)) {"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,579,f (forward)
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,579,if (forward) {
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,581,lse
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,581,} else {
False,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,1611,f (x * x == 1.0)
False,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,1612,eturn Double.NaN;
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,1611,if (x * x == 1.0) {
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,1612,return Double.NaN;
False,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,2580,f (remA > 0.0)
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,2581,if (remA > 0.0) {
False,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,2665,f (remA > 0.0)
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,2667,if (remA > 0.0) {
False,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,2760,f (remA > 0.0)
True,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,2763,if (remA > 0.0) {
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,213,f (k > n / 2)
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,213,if (k > n / 2) {
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,505,f (front) startIndex += i;
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,505,if (front) {
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,506,startIndex += i;
