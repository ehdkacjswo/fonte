is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,23,import org.apache.commons.math.util.MathUtils;
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,189,* Compute the coefficients of the polynomial <code>P<sub>s</sub>(x)</code>
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,190,* whose values at point {@code x} will be the same as the those from the
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,191,* original polynomial <code>P(x)</code> when computed at {@code x + shift}.
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,192,"* Thus, if <code>P(x) = &Sigma;<sub>i</sub> a<sub>i</sub> x<sup>i</sup></code>,"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,193,* then
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,194,* <pre>
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,195,*  <table>
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,196,*   <tr>
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,197,*    <td><code>P<sub>s</sub>(x)</td>
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,198,*    <td>= &Sigma;<sub>i</sub> b<sub>i</sub> x<sup>i</sup></code></td>
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,199,*   </tr>
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,200,*   <tr>
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,201,*    <td></td>
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,202,*    <td>= &Sigma;<sub>i</sub> a<sub>i</sub> (x + shift)<sup>i</sup></code></td>
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,203,*   </tr>
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,204,*  </table>
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,205,* </pre>
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,207,* @param coefficients Coefficients of the original polynomial.
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,208,* @param shift Shift value.
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,209,* @return the coefficients <code>b<sub>i</sub></code> of the shifted
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,210,* polynomial.
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,212,"public static double[] shift(final double[] coefficients,"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,213,final double shift) {
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,214,final int dp1 = coefficients.length;
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,215,final double[] newCoefficients = new double[dp1];
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,217,// Pascal triangle.
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,218,final int[][] coeff = new int[dp1][dp1];
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,219,for (int i = 0; i < dp1; i++){
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,220,for(int j = 0; j <= i; j++){
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,221,"coeff[i][j] = (int) MathUtils.binomialCoefficient(i, j);"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,225,// First polynomial coefficient.
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,226,for (int i = 0; i < dp1; i++){
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,227,"newCoefficients[0] += coefficients[i] * FastMath.pow(shift, i);"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,230,// Superior order.
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,231,final int d = dp1 - 1;
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,232,for (int i = 0; i < d; i++) {
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,233,for (int j = i; j < d; j++){
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,234,newCoefficients[i + 1] += coeff[j + 1][j - i] *
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,235,"coefficients[j + 1] * FastMath.pow(shift, j - i);"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,239,return newCoefficients;
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,210,@Test
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,211,public void testShift(){
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,212,// f1(x) = 1 + x + 2 x^2
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,213,"PolynomialFunction f1x = new PolynomialFunction(new double[] { 1, 1, 2 });"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,215,PolynomialFunction f1x1
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,216,"= new PolynomialFunction(PolynomialsUtils.shift(f1x.getCoefficients(), 1));"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,217,"checkPolynomial(f1x1, ""4 + 5 x + 2 x^2"");"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,219,PolynomialFunction f1xM1
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,220,"= new PolynomialFunction(PolynomialsUtils.shift(f1x.getCoefficients(), -1));"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,221,"checkPolynomial(f1xM1, ""2 - 3 x + 2 x^2"");"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,223,PolynomialFunction f1x3
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,224,"= new PolynomialFunction(PolynomialsUtils.shift(f1x.getCoefficients(), 3));"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,225,"checkPolynomial(f1x3, ""22 + 13 x + 2 x^2"");"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,227,// f2(x) = 2 + 3 x^2 + 8 x^3 + 121 x^5
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,228,"PolynomialFunction f2x = new PolynomialFunction(new double[]{2, 0, 3, 8, 0, 121});"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,230,PolynomialFunction f2x1
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,231,"= new PolynomialFunction(PolynomialsUtils.shift(f2x.getCoefficients(), 1));"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,232,"checkPolynomial(f2x1, ""134 + 635 x + 1237 x^2 + 1218 x^3 + 605 x^4 + 121 x^5"");"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,234,PolynomialFunction f2x3
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,235,"= new PolynomialFunction(PolynomialsUtils.shift(f2x.getCoefficients(), 3));"
True,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,236,"checkPolynomial(f2x3, ""29648 + 49239 x + 32745 x^2 + 10898 x^3 + 1815 x^4 + 121 x^5"");"
