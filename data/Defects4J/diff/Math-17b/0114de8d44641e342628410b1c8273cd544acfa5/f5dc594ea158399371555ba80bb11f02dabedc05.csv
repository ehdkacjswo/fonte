is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,30,import org.apache.commons.math.TestUtils;
False,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,35, @version $Revision: 1.17 $ $Date: 2004/05/23 00:30:01 $
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,36,* @version $Revision: 1.18 $ $Date: 2004/06/17 23:51:33 $
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,163,public void testSerialization() {
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,164,// Empty
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,165,EmpiricalDistribution dist = new EmpiricalDistributionImpl();
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,166,EmpiricalDistribution dist2 = (EmpiricalDistribution) TestUtils.serializeAndRecover(dist);
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,167,"verifySame(dist, dist2);"
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,169,// Loaded
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,170,empiricalDistribution2.load(dataArray);
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,171,dist2 = (EmpiricalDistribution) TestUtils.serializeAndRecover(empiricalDistribution2);
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,172,"verifySame(empiricalDistribution2, dist2);"
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,175,"private void verifySame(EmpiricalDistribution d1, EmpiricalDistribution d2) {"
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,176,"assertEquals(d1.isLoaded(), d2.isLoaded());"
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,177,"assertEquals(d1.getBinCount(), d2.getBinCount());"
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,178,"assertEquals(d1.getSampleStats(), d2.getSampleStats());"
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,179,if (d1.isLoaded()) {
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,180,for (int i = 0;  i < d1.getUpperBounds().length; i++) {
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,181,"assertEquals(d1.getUpperBounds()[i], d2.getUpperBounds()[i], 0);"
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,183,"assertEquals(d1.getBinStats(), d2.getBinStats());"
