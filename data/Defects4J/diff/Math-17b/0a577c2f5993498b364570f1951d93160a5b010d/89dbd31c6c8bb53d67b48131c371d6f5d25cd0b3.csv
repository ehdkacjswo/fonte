is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,258, = FastMath.log1p(-1.0);
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,258,x = FastMath.log1p(-1.0);
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,803,ouble x = ((generator.nextDouble() * 2.0) - 1.0) * generator.nextDouble();
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,803,double x = ((generator.nextDouble() * 2.0) - 1.0) * generator.nextDouble();
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,826,ouble x = ((generator.nextDouble() * 2.0) - 1.0) * generator.nextDouble();
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,826,double x = ((generator.nextDouble() * 2.0) - 1.0) * generator.nextDouble();
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,849,ouble x;
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,849,double x;
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,851, = FastMath.acos(Double.NaN);
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,852,f (x == x)
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,853,"hrow new RuntimeException(""acos(NaN) should NaN"");"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,851,x = FastMath.acos(Double.NaN);
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,852,if (x == x)
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,853,"throw new RuntimeException(""acos(NaN) should NaN"");"
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,855, = FastMath.acos(-1.1);
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,856,f (x == x)
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,857,"hrow new RuntimeException(""acos(-1.1) should NaN"");"
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,859, = FastMath.acos(1.1);
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,860,f (x == x)
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,861,"hrow new RuntimeException(""acos(-1.1) should NaN"");"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,855,x = FastMath.acos(-1.1);
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,856,if (x == x)
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,857,"throw new RuntimeException(""acos(-1.1) should NaN"");"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,859,x = FastMath.acos(1.1);
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,860,if (x == x)
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,861,"throw new RuntimeException(""acos(-1.1) should NaN"");"
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,863,"ssert.assertEquals(FastMath.acos(-1.0), FastMath.PI, Double.MIN_VALUE);"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,863,"Assert.assertEquals(FastMath.acos(-1.0), FastMath.PI, Double.MIN_VALUE);"
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,865,"ssert.assertEquals(FastMath.acos(1.0), 0.0, Double.MIN_VALUE);"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,865,"Assert.assertEquals(FastMath.acos(1.0), 0.0, Double.MIN_VALUE);"
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,867,"ssert.assertEquals(FastMath.acos(0.0), FastMath.PI / 2.0, Double.MIN_VALUE);"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,867,"Assert.assertEquals(FastMath.acos(0.0), FastMath.PI / 2.0, Double.MIN_VALUE);"
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,875,ouble x;
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,875,double x;
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,877, = FastMath.asin(Double.NaN);
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,878,f (x == x)
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,879,"hrow new RuntimeException(""asin(NaN) should NaN"");"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,877,x = FastMath.asin(Double.NaN);
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,878,if (x == x)
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,879,"throw new RuntimeException(""asin(NaN) should NaN"");"
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,881, = FastMath.asin(-1.1);
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,882,f (x == x)
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,883,"hrow new RuntimeException(""asin(-1.1) should NaN"");"
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,885, = FastMath.asin(1.1);
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,886,f (x == x)
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,887,"hrow new RuntimeException(""asin(-1.1) should NaN"");"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,881,x = FastMath.asin(-1.1);
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,882,if (x == x)
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,883,"throw new RuntimeException(""asin(-1.1) should NaN"");"
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,889,"ssert.assertEquals(FastMath.asin(1.0), FastMath.PI / 2.0, Double.MIN_VALUE);"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,885,x = FastMath.asin(1.1);
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,886,if (x == x)
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,887,"throw new RuntimeException(""asin(-1.1) should NaN"");"
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,891,"ssert.assertEquals(FastMath.asin(-1.0), -FastMath.PI / 2.0, Double.MIN_VALUE);"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,889,"Assert.assertEquals(FastMath.asin(1.0), FastMath.PI / 2.0, Double.MIN_VALUE);"
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,893,"ssert.assertEquals(FastMath.asin(0.0), 0.0, Double.MIN_VALUE);"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,891,"Assert.assertEquals(FastMath.asin(-1.0), -FastMath.PI / 2.0, Double.MIN_VALUE);"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,893,"Assert.assertEquals(FastMath.asin(0.0), 0.0, Double.MIN_VALUE);"
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,913,ouble x = ((generator.nextDouble() * 16.0) - 8.0) * generator.nextDouble();
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,913,double x = ((generator.nextDouble() * 16.0) - 8.0) * generator.nextDouble();
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,921,ouble errulp = field.newDfp(tst).subtract(sinh(field.newDfp(x))).divide(field.newDfp(ulp)).toDouble();
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,922,"/System.out.println(x+""\t""+tst+""\t""+ref+""\t""+err+""\t""+errulp);"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,921,double errulp = field.newDfp(tst).subtract(sinh(field.newDfp(x))).divide(field.newDfp(ulp)).toDouble();
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,922,"//System.out.println(x+""\t""+tst+""\t""+ref+""\t""+err+""\t""+errulp);"
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,935,ouble x = ((generator.nextDouble() * 16.0) - 8.0) * generator.nextDouble();
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,935,double x = ((generator.nextDouble() * 16.0) - 8.0) * generator.nextDouble();
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,943,ouble errulp = field.newDfp(tst).subtract(cosh(field.newDfp(x))).divide(field.newDfp(ulp)).toDouble();
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,944,"/System.out.println(x+""\t""+tst+""\t""+ref+""\t""+err+""\t""+errulp);"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,943,double errulp = field.newDfp(tst).subtract(cosh(field.newDfp(x))).divide(field.newDfp(ulp)).toDouble();
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,944,"//System.out.println(x+""\t""+tst+""\t""+ref+""\t""+err+""\t""+errulp);"
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,957,ouble x = ((generator.nextDouble() * 16.0) - 8.0) * generator.nextDouble();
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,957,double x = ((generator.nextDouble() * 16.0) - 8.0) * generator.nextDouble();
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,965,ouble errulp = field.newDfp(tst).subtract(tanh(field.newDfp(x))).divide(field.newDfp(ulp)).toDouble();
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,966,"/System.out.println(x+""\t""+tst+""\t""+ref+""\t""+err+""\t""+errulp);"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,965,double errulp = field.newDfp(tst).subtract(tanh(field.newDfp(x))).divide(field.newDfp(ulp)).toDouble();
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,966,"//System.out.println(x+""\t""+tst+""\t""+ref+""\t""+err+""\t""+errulp);"
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,979,ouble x = ((generator.nextDouble() * 200.0) - 100.0) * generator.nextDouble();
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,979,double x = ((generator.nextDouble() * 200.0) - 100.0) * generator.nextDouble();
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,987,ouble errulp = field.newDfp(tst).subtract(cbrt(field.newDfp(x))).divide(field.newDfp(ulp)).toDouble();
False,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,988,"/System.out.println(x+""\t""+tst+""\t""+ref+""\t""+err+""\t""+errulp);"
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,987,double errulp = field.newDfp(tst).subtract(cbrt(field.newDfp(x))).divide(field.newDfp(ulp)).toDouble();
True,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,988,"//System.out.println(x+""\t""+tst+""\t""+ref+""\t""+err+""\t""+errulp);"
