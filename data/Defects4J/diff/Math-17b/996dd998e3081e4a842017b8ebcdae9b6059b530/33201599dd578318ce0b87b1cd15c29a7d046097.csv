is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,347,"ERO_DENOMINATOR(""denominator must be different from 0""),"
True,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,347,"ZERO_DENOMINATOR(""denominator must be different from 0""), /* keep */"
True,src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java,src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java,24,import org.apache.commons.math3.exception.MathIllegalStateException;
True,src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java,src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java,254,* @throws MathIllegalStateException when the guessing procedure cannot
True,src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java,src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java,255,* produce sensible results.
True,src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java,src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java,323,if (c2 == 0) {
True,src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java,src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java,324,"// In some ill-conditioned cases (cf. MATH-844), the guesser"
True,src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java,src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java,325,// procedure cannot produce sensible results.
True,src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java,src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java,326,throw new MathIllegalStateException(LocalizedFormats.ZERO_DENOMINATOR);
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,25,import org.apache.commons.math3.exception.MathIllegalStateException;
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,181,@Test(expected=MathIllegalStateException.class)
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,182,public void testMath844() {
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,183,"final double[] y = { 0, 1, 2, 3, 2, 1,"
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,184,"0, -1, -2, -3, -2, -1,"
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,185,"0, 1, 2, 3, 2, 1,"
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,186,"0, -1, -2, -3, -2, -1,"
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,187,"0, 1, 2, 3, 2, 1, 0 };"
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,188,final int len = y.length;
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,189,final WeightedObservedPoint[] points = new WeightedObservedPoint[len];
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,190,for (int i = 0; i < len; i++) {
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,191,"points[i] = new WeightedObservedPoint(1, i, y[i]);"
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,194,final HarmonicFitter.ParameterGuesser guesser
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,195,= new HarmonicFitter.ParameterGuesser(points);
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,197,// The guesser fails because the function is far from an harmonic
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,198,// function: It is a triangular periodic function with amplitude 3
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,199,"// and period 12, and all sample points are taken at integer abscissae"
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,200,"// so function values all belong to the integer subset {-3, -2, -1, 0,"
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,201,"// 1, 2, 3}."
True,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java,202,guesser.guess();
