is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,60, An array of double primitives which can expand as needed.
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,59,* <p>
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,60,* A DoubleArray implementation which automatically expands
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,61,* an internal double array to handle an array of arbitrary length.  This
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,62,* implementation of DoubleArray is provided to support scenarios in
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,63,"* which the ultimate length of an array is unknown, and the"
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,64,* developer can control the expansion process through the
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,65,* <code>initialCapacity</code> and <code>expansionFactor</code>
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,66,* parameters.
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,67,* </p>
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,69,* <p>
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,70,* This implementation also allows a developer to:
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,71,* <ul>
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,72,*  <li>Resize an array via <code>setNumElements(int)</code></li>
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,73,*  <li>Discard elements from the front of an array via
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,74,*      <code>discardFrontElements(int)</code></li>
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,75,*  <li>Find the minimum and maximum values stored in this array</li>
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,76,* </ul>
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,77,* </p>
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,79,* <p>
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,80,* The initialCapacity parameter sets the capacity of the initial
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,81,"* storage array, and the expansionFactor is the factor by which"
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,82,* the current storage capacity is multiplied each time the internal
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,83,* array needs to be expanded.  <b>Please note</b> that the length of the
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,84,* internal storage array has nothing to do with the number of elements
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,85,* currently stored in this array.  If one creates an instance of this
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,86,"* class with an initialCapacity of ""2"" and an expansion factor of ""2"", and"
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,87,"* then adds 3546 elements to the array, this implementation will need to"
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,88,"* expand the array 10 times - first from 2 -> 4. then 4 -> 8, 8 -> 16,"
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,89,* and so on until we reach 4096 which is sufficient to hold 3546 elements.
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,90,* </p>
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,96,"// TODO: expansionFactor is valuable, by if I only need storage"
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,97,"// for 1025 items and I use the default settings, I'll end up"
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,98,// with enough storage for 2048 elements.  Maybe this implementation
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,99,"// should have flags for incremental growth - (i.e. when expanding, only"
True,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/ExpandableDoubleArray.java,100,"// increase storage by a constant size - 100, 200 ) ?"
