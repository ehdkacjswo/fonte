is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,30, <pre>
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,31,   y(t_n + theta h) = y (t_n + h)
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,32,                    + (1 - theta) (h/6) [ (-4 theta^2 + 5 theta - 1) y'_1
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,33,                                          +(4 theta^2 - 2 theta - 2) (y'_2 + y'_3)
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,34,                                          -(4 theta^2 +   theta + 1) y'_4
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,29,* <ul>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,30,*   <li>Using reference point at step start:<br>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,31,*   y(t<sub>n</sub> + &theta; h) = y (t<sub>n</sub>)
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,32,*                    + &theta; (h/6) [  (6 - 9 &theta; + 4 &theta;<sup>2</sup>) y'<sub>1</sub>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,33,*                                     + (    6 &theta; - 4 &theta;<sup>2</sup>) (y'<sub>2</sub> + y'<sub>3</sub>)
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,34,*                                     + (   -3 &theta; + 4 &theta;<sup>2</sup>) y'<sub>4</sub>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,36,*   </li>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,37,*   <li>Using reference point at step end:<br>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,38,*   y(t<sub>n</sub> + &theta; h) = y (t<sub>n</sub> + h)
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,39,*                    + (1 - &theta;) (h/6) [ (-4 &theta;^2 + 5 &theta; - 1) y'<sub>1</sub>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,40,*                                          +(4 &theta;^2 - 2 &theta; - 2) (y'<sub>2</sub> + y'<sub>3</sub>)
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,41,*                                          -(4 &theta;^2 +   &theta; + 1) y'<sub>4</sub>
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,36, </pre>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,43,*   </li>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,44,* </ul>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,45,* </p>
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,38, where theta belongs to [0 ; 1] and where y'_1 to y'_4 are the four
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,47,* where &theta; belongs to [0 ; 1] and where y'<sub>1</sub> to y'<sub>4</sub> are the four
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,86,inal double fourTheta      = 4 * theta;
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,89,inal double s             = oneMinusThetaH / 6.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,90,inal double coeff1        = s * ((-fourTheta + 5) * theta - 1);
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,91,inal double coeff23       = s * (( fourTheta - 2) * theta - 2);
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,92,inal double coeff4        = s * ((-fourTheta - 1) * theta - 1);
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,96,or (int i = 0; i < interpolatedState.length; ++i) {
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,97,inal double yDot1  = yDotK[0][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,98,inal double yDot23 = yDotK[1][i] + yDotK[2][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,99,inal double yDot4  = yDotK[3][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,100,nterpolatedState[i] =
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,101,urrentState[i] + coeff1  * yDot1 + coeff23 * yDot23 + coeff4  * yDot4;
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,102,nterpolatedDerivatives[i] =
False,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,103,oeffDot1 * yDot1 + coeffDot23 * yDot23 + coeffDot4 * yDot4;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,100,if ((previousState != null) && (theta <= 0.5)) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,101,final double fourTheta2     = 4 * theta * theta;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,102,final double s             = theta * h / 6.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,103,final double coeff1        = s * ( 6 - 9 * theta + fourTheta2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,104,final double coeff23       = s * ( 6 * theta - fourTheta2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,105,final double coeff4        = s * (-3 * theta + fourTheta2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,106,for (int i = 0; i < interpolatedState.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,107,final double yDot1  = yDotK[0][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,108,final double yDot23 = yDotK[1][i] + yDotK[2][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,109,final double yDot4  = yDotK[3][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,110,interpolatedState[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,111,previousState[i] + coeff1  * yDot1 + coeff23 * yDot23 + coeff4  * yDot4;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,112,interpolatedDerivatives[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,113,coeffDot1 * yDot1 + coeffDot23 * yDot23 + coeffDot4 * yDot4;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,115,} else {
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,116,final double fourTheta      = 4 * theta;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,117,final double s             = oneMinusThetaH / 6.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,118,final double coeff1        = s * ((-fourTheta + 5) * theta - 1);
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,119,final double coeff23       = s * (( fourTheta - 2) * theta - 2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,120,final double coeff4        = s * ((-fourTheta - 1) * theta - 1);
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,121,for (int i = 0; i < interpolatedState.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,122,final double yDot1  = yDotK[0][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,123,final double yDot23 = yDotK[1][i] + yDotK[2][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,124,final double yDot4  = yDotK[3][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,125,interpolatedState[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,126,currentState[i] + coeff1  * yDot1 + coeff23 * yDot23 + coeff4  * yDot4;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,127,interpolatedDerivatives[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java,128,coeffDot1 * yDot1 + coeffDot23 * yDot23 + coeffDot4 * yDot4;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,207,or (int i = 0; i < interpolatedState.length; ++i) {
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,208,nterpolatedState[i] =
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,209,urrentState[i] - oneMinusThetaH * (v1[i] - theta * (v2[i] + theta * (v3[i] + eta * v4[i])));
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,210,nterpolatedDerivatives[i] = v1[i] + dot2 * v2[i] + dot3 * v3[i] + dot4 * v4[i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,207,if ((previousState != null) && (theta <= 0.5)) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,208,for (int i = 0; i < interpolatedState.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,209,interpolatedState[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,210,previousState[i] + theta * h * (v1[i] + eta * (v2[i] + theta * (v3[i] + eta * v4[i])));
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,211,interpolatedDerivatives[i] = v1[i] + dot2 * v2[i] + dot3 * v3[i] + dot4 * v4[i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,213,} else {
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,214,for (int i = 0; i < interpolatedState.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,215,interpolatedState[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,216,currentState[i] - oneMinusThetaH * (v1[i] - theta * (v2[i] + theta * (v3[i] + eta * v4[i])));
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,217,interpolatedDerivatives[i] = v1[i] + dot2 * v2[i] + dot3 * v3[i] + dot4 * v4[i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,28,* <ul>
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,29,*   <li>Using reference point at step start:<br>
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,30,*     y(t<sub>n</sub> + &theta; h) = y (t<sub>n</sub>) + &theta; h y'
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,31,*   </li>
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,32,*   <li>Using reference point at step end:<br>
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,33,*     y(t<sub>n</sub> + &theta; h) = y (t<sub>n</sub> + h) - (1-&theta;) h y'
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,34,*   </li>
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,35,* </ul>
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,36,* </p>
False,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,29, <pre>
False,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,30,   y(t_n + theta h) = y (t_n + h) - (1-theta) h y'
False,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,31, </pre>
False,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,33, where theta belongs to [0 ; 1] and where y' is the evaluation of
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,38,* where &theta; belongs to [0 ; 1] and where y' is the evaluation of
False,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,82,or (int i = 0; i < interpolatedState.length; ++i) {
False,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,83,nterpolatedState[i] = currentState[i] - oneMinusThetaH * yDotK[0][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,85,"ystem.arraycopy(yDotK[0], 0, interpolatedDerivatives, 0, interpolatedDerivatives.length);"
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,86,if ((previousState != null) && (theta <= 0.5)) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,87,for (int i = 0; i < interpolatedState.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,88,interpolatedState[i] = previousState[i] + theta * h * yDotK[0][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,90,"System.arraycopy(yDotK[0], 0, interpolatedDerivatives, 0, interpolatedDerivatives.length);"
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,91,} else {
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,92,for (int i = 0; i < interpolatedState.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,93,interpolatedState[i] = currentState[i] - oneMinusThetaH * yDotK[0][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java,95,"System.arraycopy(yDotK[0], 0, interpolatedDerivatives, 0, interpolatedDerivatives.length);"
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,31, <pre>
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,32,   y(t_n + theta h) = y (t_n + h)
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,33,                    - (1 - theta) (h/6) [ (1 - theta) (1 - 4 theta) y'_1
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,34,                                        + (1 - theta) (1 + 2 theta) ((2-q) y'_2 + (2+q) y'_3)
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,35,                                        + (1 + theta + 4 theta^2) y'_4
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,37, </pre>
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,38," where theta belongs to [0 ; 1], q = sqrt(2) and where y'_1 to y'_4"
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,30,* <ul>
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,31,*   <li>Using reference point at step start:<br>
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,32,*   y(t<sub>n</sub> + &theta; h) = y (t<sub>n</sub>)
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,33,*                    + &theta; (h/6) [ (6 - 9 &theta; + 4 &theta;<sup>2</sup>) y'<sub>1</sub>
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,34,*                                    + (    6 &theta; - 4 &theta;<sup>2</sup>) ((1-1/&radic;2) y'<sub>2</sub> + (1+1/&radic;2)) y'<sub>3</sub>)
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,35,*                                    + (  - 3 &theta; + 4 &theta;<sup>2</sup>) y'<sub>4</sub>
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,37,*   </li>
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,38,*   <li>Using reference point at step start:<br>
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,39,*   y(t<sub>n</sub> + &theta; h) = y (t<sub>n</sub> + h)
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,40,*                    - (1 - &theta;) (h/6) [ (1 - 5 &theta; + 4 &theta;<sup>2</sup>) y'<sub>1</sub>
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,41,*                                          + (2 + 2 &theta; - 4 &theta;<sup>2</sup>) ((1-1/&radic;2) y'<sub>2</sub> + (1+1/&radic;2)) y'<sub>3</sub>)
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,42,*                                          + (1 +   &theta; + 4 &theta;<sup>2</sup>) y'<sub>4</sub>
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,44,*   </li>
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,45,* </ul>
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,46,* </p>
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,47,* where &theta; belongs to [0 ; 1] and where y'<sub>1</sub> to y'<sub>4</sub>
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,51,rivate static final double TWO_MINUS_SQRT_2 = 2 - FastMath.sqrt(2.0);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,60,private static final double ONE_MINUS_INV_SQRT_2 = 1 - FastMath.sqrt(0.5);
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,54,rivate static final double TWO_PLUS_SQRT_2 = 2 + FastMath.sqrt(2.0);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,63,private static final double ONE_PLUS_INV_SQRT_2 = 1 + FastMath.sqrt(0.5);
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,94,inal double twoTheta  = 2 * theta;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,95,inal double fourTheta = 4 * theta;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,96,inal double s         = oneMinusThetaH / 6.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,97,inal double oMt       = 1 - theta;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,98,inal double soMt      = s * oMt;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,99,inal double c23       = soMt * (1 + twoTheta);
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,100,inal double coeff1    = soMt * (1 - fourTheta);
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,101,inal double coeff2    = c23  * TWO_MINUS_SQRT_2;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,102,inal double coeff3    = c23  * TWO_PLUS_SQRT_2;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,103,inal double coeff4    = s * (1 + theta * (1 + fourTheta));
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,104,inal double coeffDot1 = theta * (twoTheta - 3) + 1;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,105,inal double cDot23    = theta * oMt;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,106,inal double coeffDot2 = cDot23  * TWO_MINUS_SQRT_2;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,107,inal double coeffDot3 = cDot23  * TWO_PLUS_SQRT_2;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,108,inal double coeffDot4 = theta * (twoTheta - 1);
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,110,or (int i = 0; i < interpolatedState.length; ++i) {
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,111,inal double yDot1 = yDotK[0][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,112,inal double yDot2 = yDotK[1][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,113,inal double yDot3 = yDotK[2][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,114,inal double yDot4 = yDotK[3][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,115,nterpolatedState[i] =
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,116,urrentState[i] - coeff1 * yDot1 - coeff2 * yDot2 - coeff3 * yDot3 - coeff4 * yDot4;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,117,nterpolatedDerivatives[i] =
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,118,oeffDot1 * yDot1 + coeffDot2 * yDot2 + coeffDot3 * yDot3 + coeffDot4 * yDot4;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,103,final double twoTheta   = 2 * theta;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,104,final double fourTheta2 = twoTheta * twoTheta;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,105,final double coeffDot1  = theta * (twoTheta - 3) + 1;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,106,final double cDot23     = twoTheta * (1 - theta);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,107,final double coeffDot2  = cDot23  * ONE_MINUS_INV_SQRT_2;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,108,final double coeffDot3  = cDot23  * ONE_PLUS_INV_SQRT_2;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,109,final double coeffDot4  = theta * (twoTheta - 1);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,111,if ((previousState != null) && (theta <= 0.5)) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,112,final double s         = theta * h / 6.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,113,final double c23       = s * (6 * theta - fourTheta2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,114,final double coeff1    = s * (6 - 9 * theta + fourTheta2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,115,final double coeff2    = c23  * ONE_MINUS_INV_SQRT_2;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,116,final double coeff3    = c23  * ONE_PLUS_INV_SQRT_2;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,117,final double coeff4    = s * (-3 * theta + fourTheta2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,118,for (int i = 0; i < interpolatedState.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,119,final double yDot1 = yDotK[0][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,120,final double yDot2 = yDotK[1][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,121,final double yDot3 = yDotK[2][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,122,final double yDot4 = yDotK[3][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,123,interpolatedState[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,124,previousState[i] + coeff1 * yDot1 + coeff2 * yDot2 + coeff3 * yDot3 + coeff4 * yDot4;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,125,interpolatedDerivatives[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,126,coeffDot1 * yDot1 + coeffDot2 * yDot2 + coeffDot3 * yDot3 + coeffDot4 * yDot4;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,128,} else {
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,129,final double s      = oneMinusThetaH / 6.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,130,final double c23    = s * (2 + twoTheta - fourTheta2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,131,final double coeff1 = s * (1 - 5 * theta + fourTheta2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,132,final double coeff2 = c23  * ONE_MINUS_INV_SQRT_2;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,133,final double coeff3 = c23  * ONE_PLUS_INV_SQRT_2;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,134,final double coeff4 = s * (1 + theta + fourTheta2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,135,for (int i = 0; i < interpolatedState.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,136,final double yDot1 = yDotK[0][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,137,final double yDot2 = yDotK[1][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,138,final double yDot3 = yDotK[2][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,139,final double yDot4 = yDotK[3][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,140,interpolatedState[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,141,currentState[i] - coeff1 * yDot1 - coeff2 * yDot2 - coeff3 * yDot3 - coeff4 * yDot4;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,142,interpolatedDerivatives[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,143,coeffDot1 * yDot1 + coeffDot2 * yDot2 + coeffDot3 * yDot3 + coeffDot4 * yDot4;
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,74,inal double theta2 = theta * theta;
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,76,inal double b0 = h * (-1.0/12.0 + theta * (1.0 + theta * (-15.0/4.0 + theta * (16.0/3.0 + theta * -5.0/2.0))));
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,77,inal double b2 = h * (-27.0/32.0 + theta2 * (459.0/32.0 + theta * (-243.0/8.0 + theta * 135.0/8.0)));
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,78,inal double b3 = h * (4.0/3.0 + theta2 * (-22.0 + theta * (152.0/3.0  + theta * -30.0)));
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,79,inal double b4 = h * (-125.0/96.0 + theta2 * (375.0/32.0 + theta * (-625.0/24.0 + theta * 125.0/8.0)));
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,80,inal double b5 = h * (-5.0/48.0 + theta2 * (-5.0/16.0 + theta * 5.0/12.0));
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,87,or (int i = 0; i < interpolatedState.length; ++i) {
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,88,inal double yDot0 = yDotK[0][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,89,inal double yDot2 = yDotK[2][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,90,inal double yDot3 = yDotK[3][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,91,inal double yDot4 = yDotK[4][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,92,inal double yDot5 = yDotK[5][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,93,nterpolatedState[i] =
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,94,urrentState[i] + b0 * yDot0 + b2 * yDot2 + b3 * yDot3 + b4 * yDot4 + b5 * yDot5;
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,95,nterpolatedDerivatives[i] =
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,96,Dot0 * yDot0 + bDot2 * yDot2 + bDot3 * yDot3 + bDot4 * yDot4 + bDot5 * yDot5;
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,80,if ((previousState != null) && (theta <= 0.5)) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,81,final double hTheta = h * theta;
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,82,final double b0 = hTheta * (1.0 + theta * (-15.0/4.0  + theta * (16.0/3.0 - 5.0/2.0 * theta)));
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,83,final double b2 = hTheta * (      theta * (459.0/32.0 + theta * (-243.0/8.0 + theta * 135.0/8.0)));
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,84,final double b3 = hTheta * (      theta * (-22.0      + theta * (152.0/3.0  + theta * -30.0)));
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,85,final double b4 = hTheta * (      theta * (375.0/32.0 + theta * (-625.0/24.0 + theta * 125.0/8.0)));
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,86,final double b5 = hTheta * (      theta * (-5.0/16.0  + theta *  5.0/12.0));
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,87,for (int i = 0; i < interpolatedState.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,88,final double yDot0 = yDotK[0][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,89,final double yDot2 = yDotK[2][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,90,final double yDot3 = yDotK[3][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,91,final double yDot4 = yDotK[4][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,92,final double yDot5 = yDotK[5][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,93,interpolatedState[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,94,previousState[i] + b0 * yDot0 + b2 * yDot2 + b3 * yDot3 + b4 * yDot4 + b5 * yDot5;
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,95,interpolatedDerivatives[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,96,bDot0 * yDot0 + bDot2 * yDot2 + bDot3 * yDot3 + bDot4 * yDot4 + bDot5 * yDot5;
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,98,} else {
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,99,final double theta2 = theta * theta;
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,100,final double b0 = h * (-1.0/12.0 + theta * (1.0 + theta * (-15.0/4.0 + theta * (16.0/3.0 + theta * -5.0/2.0))));
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,101,final double b2 = h * (-27.0/32.0 + theta2 * (459.0/32.0 + theta * (-243.0/8.0 + theta * 135.0/8.0)));
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,102,final double b3 = h * (4.0/3.0 + theta2 * (-22.0 + theta * (152.0/3.0  + theta * -30.0)));
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,103,final double b4 = h * (-125.0/96.0 + theta2 * (375.0/32.0 + theta * (-625.0/24.0 + theta * 125.0/8.0)));
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,104,final double b5 = h * (-5.0/48.0 + theta2 * (-5.0/16.0 + theta * 5.0/12.0));
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,105,for (int i = 0; i < interpolatedState.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,106,final double yDot0 = yDotK[0][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,107,final double yDot2 = yDotK[2][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,108,final double yDot3 = yDotK[3][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,109,final double yDot4 = yDotK[4][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,110,final double yDot5 = yDotK[5][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,111,interpolatedState[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,112,currentState[i] + b0 * yDot0 + b2 * yDot2 + b3 * yDot3 + b4 * yDot4 + b5 * yDot5;
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,113,interpolatedDerivatives[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,114,bDot0 * yDot0 + bDot2 * yDot2 + bDot3 * yDot3 + bDot4 * yDot4 + bDot5 * yDot5;
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,29,* <ul>
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,30,*   <li>Using reference point at step start:<br>
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,31,*   y(t<sub>n</sub> + &theta; h) = y (t<sub>n</sub>) + &theta; h [(1 - &theta;) y'<sub>1</sub> + &theta; y'<sub>2</sub>]
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,32,*   </li>
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,33,*   <li>Using reference point at step end:<br>
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,34,*   y(t<sub>n</sub> + &theta; h) = y (t<sub>n</sub> + h) + (1-&theta;) h [&theta; y'<sub>1</sub> - (1+&theta;) y'<sub>2</sub>]
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,35,*   </li>
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,36,* </ul>
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,37,* </p>
False,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,30, <pre>
False,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,31,   y(t_n + theta h) = y (t_n + h) + (1-theta) h [theta y'_1 - (1+theta) y'_2]
False,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,32, </pre>
False,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,34, where theta belongs to [0 ; 1] and where y'_1 and y'_2 are the two
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,39,* where &theta; belongs to [0 ; 1] and where y'<sub>1</sub> and y'<sub>2</sub> are the two
False,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,84,inal double coeff1    = oneMinusThetaH * theta;
False,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,85,inal double coeff2    = oneMinusThetaH * (1.0 + theta);
False,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,89,or (int i = 0; i < interpolatedState.length; ++i) {
False,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,90,inal double yDot1 = yDotK[0][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,91,inal double yDot2 = yDotK[1][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,92,nterpolatedState[i] = currentState[i] + coeff1 * yDot1 - coeff2 * yDot2;
False,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,93,nterpolatedDerivatives[i] = coeffDot1 * yDot1 + coeffDot2 * yDot2;
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,92,if ((previousState != null) && (theta <= 0.5)) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,93,final double coeff1    = theta * oneMinusThetaH;
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,94,final double coeff2    = theta * theta * h;
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,95,for (int i = 0; i < interpolatedState.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,96,final double yDot1 = yDotK[0][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,97,final double yDot2 = yDotK[1][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,98,interpolatedState[i] = previousState[i] + coeff1 * yDot1 + coeff2 * yDot2;
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,99,interpolatedDerivatives[i] = coeffDot1 * yDot1 + coeffDot2 * yDot2;
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,101,} else {
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,102,final double coeff1    = oneMinusThetaH * theta;
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,103,final double coeff2    = oneMinusThetaH * (1.0 + theta);
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,104,for (int i = 0; i < interpolatedState.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,105,final double yDot1 = yDotK[0][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,106,final double yDot2 = yDotK[1][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,107,interpolatedState[i] = currentState[i] + coeff1 * yDot1 - coeff2 * yDot2;
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,108,interpolatedDerivatives[i] = coeffDot1 * yDot1 + coeffDot2 * yDot2;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,29,* <ul>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,30,*   <li>Using reference point at step start:<br>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,31,*     y(t<sub>n</sub> + &theta; h) = y (t<sub>n</sub>)
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,32,*                      + &theta; (h/8) [ (8 - 15 &theta; +  8 &theta;<sup>2</sup>) y'<sub>1</sub>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,33,*                                     +  3 * (15 &theta; - 12 &theta;<sup>2</sup>) y'<sub>2</sub>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,34,*                                     +        3 &theta;                           y'<sub>3</sub>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,35,*                                     +      (-3 &theta; +  4 &theta;<sup>2</sup>) y'<sub>4</sub>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,37,*   </li>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,38,*   <li>Using reference point at step end:<br>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,39,*     y(t<sub>n</sub> + &theta; h) = y (t<sub>n</sub> + h)
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,40,*                      - (1 - &theta;) (h/8) [(1 - 7 &theta; + 8 &theta;<sup>2</sup>) y'<sub>1</sub>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,41,*                                         + 3 (1 +   &theta; - 4 &theta;<sup>2</sup>) y'<sub>2</sub>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,42,*                                         + 3 (1 +   &theta;)                         y'<sub>3</sub>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,43,*                                         +   (1 +   &theta; + 4 &theta;<sup>2</sup>) y'<sub>4</sub>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,45,*   </li>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,46,* </ul>
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,47,* </p>
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,30, <pre>
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,31,   y(t_n + theta h) = y (t_n + h)
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,32,                    - (1 - theta) (h/8) [ (1 - 7 theta + 8 theta^2) y'_1
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,33,                                      + 3 (1 +   theta - 4 theta^2) y'_2
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,34,                                      + 3 (1 +   theta)             y'_3
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,35,                                      +   (1 +   theta + 4 theta^2) y'_4
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,37, </pre>
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,39, where theta belongs to [0 ; 1] and where y'_1 to y'_4 are the four
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,49,* where &theta; belongs to [0 ; 1] and where y'<sub>1</sub> to y'<sub>4</sub> are the four
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,89,inal double fourTheta2 = 4 * theta * theta;
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,90,inal double s          = oneMinusThetaH / 8.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,91,inal double coeff1     = s * (1 - 7 * theta + 2 * fourTheta2);
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,92,inal double coeff2     = 3 * s * (1 + theta - fourTheta2);
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,93,inal double coeff3     = 3 * s * (1 + theta);
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,94,inal double coeff4     = s * (1 + theta + fourTheta2);
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,100,or (int i = 0; i < interpolatedState.length; ++i) {
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,101,inal double yDot1 = yDotK[0][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,102,inal double yDot2 = yDotK[1][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,103,inal double yDot3 = yDotK[2][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,104,inal double yDot4 = yDotK[3][i];
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,105,nterpolatedState[i] =
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,106,urrentState[i] - coeff1 * yDot1 - coeff2 * yDot2 - coeff3 * yDot3 - coeff4 * yDot4;
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,107,nterpolatedDerivatives[i] =
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,108,oeffDot1 * yDot1 + coeffDot2 * yDot2 + coeffDot3 * yDot3 + coeffDot4 * yDot4;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,104,if ((previousState != null) && (theta <= 0.5)) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,105,final double s          = theta * h / 8.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,106,final double fourTheta2 = 4 * theta * theta;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,107,final double coeff1     = s * (8 - 15 * theta + 2 * fourTheta2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,108,final double coeff2     = 3 * s * (5 * theta - fourTheta2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,109,final double coeff3     = 3 * s * theta;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,110,final double coeff4     = s * (-3 * theta + fourTheta2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,111,for (int i = 0; i < interpolatedState.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,112,final double yDot1 = yDotK[0][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,113,final double yDot2 = yDotK[1][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,114,final double yDot3 = yDotK[2][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,115,final double yDot4 = yDotK[3][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,116,interpolatedState[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,117,previousState[i] + coeff1 * yDot1 + coeff2 * yDot2 + coeff3 * yDot3 + coeff4 * yDot4;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,118,interpolatedDerivatives[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,119,coeffDot1 * yDot1 + coeffDot2 * yDot2 + coeffDot3 * yDot3 + coeffDot4 * yDot4;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,122,} else {
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,123,final double s          = oneMinusThetaH / 8.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,124,final double fourTheta2 = 4 * theta * theta;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,125,final double coeff1     = s * (1 - 7 * theta + 2 * fourTheta2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,126,final double coeff2     = 3 * s * (1 + theta - fourTheta2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,127,final double coeff3     = 3 * s * (1 + theta);
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,128,final double coeff4     = s * (1 + theta + fourTheta2);
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,129,for (int i = 0; i < interpolatedState.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,130,final double yDot1 = yDotK[0][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,131,final double yDot2 = yDotK[1][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,132,final double yDot3 = yDotK[2][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,133,final double yDot4 = yDotK[3][i];
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,134,interpolatedState[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,135,currentState[i] - coeff1 * yDot1 - coeff2 * yDot2 - coeff3 * yDot3 - coeff4 * yDot4;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,136,interpolatedDerivatives[i] =
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,137,coeffDot1 * yDot1 + coeffDot2 * yDot2 + coeffDot3 * yDot3 + coeffDot4 * yDot4;
False,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,153,ssert.assertTrue(error < FastMath.abs(previousValueError));
True,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java,153,Assert.assertTrue(error < 1.01 * FastMath.abs(previousValueError));
True,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,75,interpolator.shift();
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,81,nterpolator.shift();
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,87,ssert.assertTrue(FastMath.abs(result[i] - y0[i]) < 1.0e-10);
True,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,87,Assert.assertTrue(FastMath.abs(result[i] - y0[i]) < 1.0e-10);
False,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,101,"ouble[]   y    =   { 1.0, 3.0, -4.0 };"
True,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,101,"double[]   y    =   { 0.0, 1.0, -2.0 };"
True,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,109,y[0] =  1.0;
True,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,110,y[1] =  3.0;
True,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java,111,y[2] = -4.0;
False,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,78,ssert.assertTrue(valueError < FastMath.abs(previousValueError));
True,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java,78,Assert.assertTrue(valueError < 1.01 * FastMath.abs(previousValueError));
False,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,78,ssert.assertTrue(error < FastMath.abs(previousValueError));
True,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java,78,Assert.assertTrue(error < 1.01 * FastMath.abs(previousValueError));
