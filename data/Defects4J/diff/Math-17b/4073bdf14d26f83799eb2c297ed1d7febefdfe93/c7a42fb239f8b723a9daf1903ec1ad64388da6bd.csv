is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,149,"* Replace the submatrix starting at <code>row, column</code> using data in"
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,150,* the input <code>subMatrix</code> array. Indexes are 0-based.
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,151,* <p>
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,152,* Example:<br>
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,153,* Starting with <pre>
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,154,* 1  2  3  4
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,155,* 5  6  7  8
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,156,* 9  0  1  2
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,157,* </pre>
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,158,"* and <code>subMatrix = {{3, 4} {5,6}}</code>, invoking"
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,159,"* <code>setSubMatrix(subMatrix,1,1))</code> will result in <pre>"
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,160,* 1  2  3  4
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,161,* 5  3  4  8
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,162,* 9  5  6  2
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,163,* </pre>
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,165,* @param subMatrix  array containing the submatrix replacement data
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,166,"* @param row  row coordinate of the top, left element to be replaced"
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,167,"* @param column  column coordinate of the top, left element to be replaced"
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,168,* @throws MatrixIndexException  if subMatrix does not fit into this
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,169,"*    matrix from element in (row, column)"
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,170,* @throws IllegalArgumentException if <code>subMatrix</code> is not rectangular
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,171,*  (not all rows have the same length) or empty
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,172,* @throws NullPointerException if <code>subMatrix</code> is null
True,src/java/org/apache/commons/math/linear/BigMatrix.java,src/java/org/apache/commons/math/linear/BigMatrix.java,174,"public void setSubMatrix(BigDecimal subMatrix[][], int row, int column) throws MatrixIndexException;"
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,116,nt nRows = d.length;
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,117,f (nRows == 0) {
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,118,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,119,"Matrix must have at least one row."");"
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,121,nt nCols = d[0].length;
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,122,f (nCols == 0) {
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,123,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,124,"Matrix must have at least one column."");"
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,126,or (int row = 1; row < nRows; row++) {
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,127,f (d[row].length != nCols) {
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,128,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,129,"All input rows must have the same length."");"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,491,"* Replace the submatrix starting at <code>row, column</code> using data in"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,492,* the input <code>subMatrix</code> array. Indexes are 0-based.
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,493,* <p>
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,494,* Example:<br>
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,495,* Starting with <pre>
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,496,* 1  2  3  4
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,497,* 5  6  7  8
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,498,* 9  0  1  2
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,499,* </pre>
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,500,"* and <code>subMatrix = {{3, 4} {5,6}}</code>, invoking"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,501,"* <code>setSubMatrix(subMatrix,1,1))</code> will result in <pre>"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,502,* 1  2  3  4
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,503,* 5  3  4  8
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,504,* 9  5  6  2
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,505,* </pre>
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,507,* @param subMatrix  array containing the submatrix replacement data
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,508,"* @param row  row coordinate of the top, left element to be replaced"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,509,"* @param column  column coordinate of the top, left element to be replaced"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,510,* @throws MatrixIndexException  if subMatrix does not fit into this
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,511,"*    matrix from element in (row, column)"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,512,* @throws IllegalArgumentException if <code>subMatrix</code> is not rectangular
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,513,*  (not all rows have the same length) or empty
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,514,* @throws NullPointerException if <code>subMatrix</code> is null
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,516,"public void setSubMatrix(BigDecimal[][] subMatrix, int row, int column)"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,517,throws MatrixIndexException {
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,518,if ((row < 0) || (column < 0)){
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,519,throw new MatrixIndexException
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,520,"(""invalid row or column index selection"");"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,522,int nRows = subMatrix.length;
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,523,if (nRows == 0) {
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,524,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,525,"""Matrix must have at least one row."");"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,527,int nCols = subMatrix[0].length;
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,528,if (nCols == 0) {
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,529,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,530,"""Matrix must have at least one column."");"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,532,for (int r = 1; r < nRows; r++) {
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,533,if (subMatrix[r].length != nCols) {
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,534,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,535,"""All input rows must have the same length."");"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,538,if (data == null) {
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,539,if ((row > 0)||(column > 0)) throw new MatrixIndexException
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,540,"(""matrix must be initialized to perfom this method"");"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,541,data = new BigDecimal[nRows][nCols];
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,542,"System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,544,if (((nRows + row) > this.getRowDimension())
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,545,|| (nCols + column > this.getColumnDimension()))
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,546,throw new MatrixIndexException(
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,547,"""invalid row or column index selection"");"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,548,for (int i = 0; i < nRows; i++) {
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,549,"System.arraycopy(subMatrix[i], 0, data[row + i], column, nCols);"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,551,lu = null;
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1256,* <p>
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1257,* Verifies that the input array is rectangular and non-empty.
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1260,* @throws IllegalArgumentException if input array is emtpy or not
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1261,*    rectangular
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1262,* @throws NullPointerException if input array is null
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1212,nt nRows = in.length;
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1213,nt nCols = in[0].length;
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1214,ata = new BigDecimal[nRows][nCols];
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1215,"ystem.arraycopy(in, 0, data, 0, in.length);"
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1216,or (int i = 0; i < nRows; i++) {
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1217,"ystem.arraycopy(in[i], 0, data[i], 0, nCols);"
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1219,u = null;
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1265,"setSubMatrix(in,0,0);"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,2, Copyright 2003-2004 The Apache Software Foundation.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,2,* Copyright 2003-2005 The Apache Software Foundation.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,132,"* Replace the submatrix starting at <code>row, column</code> using data in"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,133,* the input <code>subMatrix</code> array. Indexes are 0-based.
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,134,* <p>
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,135,* Example:<br>
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,136,* Starting with <pre>
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,137,* 1  2  3  4
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,138,* 5  6  7  8
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,139,* 9  0  1  2
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,140,* </pre>
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,141,"* and <code>subMatrix = {{3, 4} {5,6}}</code>, invoking"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,142,"* <code>setSubMatrix(subMatrix,1,1))</code> will result in <pre>"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,143,* 1  2  3  4
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,144,* 5  3  4  8
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,145,* 9  5  6  2
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,146,* </pre>
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,148,* @param subMatrix  array containing the submatrix replacement data
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,149,"* @param row  row coordinate of the top, left element to be replaced"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,150,"* @param column  column coordinate of the top, left element to be replaced"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,151,* @throws MatrixIndexException  if subMatrix does not fit into this
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,152,"*    matrix from element in (row, column)"
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,153,* @throws IllegalArgumentException if <code>subMatrix</code> is not rectangular
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,154,*  (not all rows have the same length) or empty
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,155,* @throws NullPointerException if <code>subMatrix</code> is null
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,157,"public void setSubMatrix(double subMatrix[][], int row, int column) throws MatrixIndexException;"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,2, Copyright 2003-2004 The Apache Software Foundation.
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,2,* Copyright 2003-2005 The Apache Software Foundation.
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,107,nt nRows = d.length;
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,108,f (nRows == 0) {
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,109,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,110,"Matrix must have at least one row."");"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,112,nt nCols = d[0].length;
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,113,f (nCols == 0) {
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,114,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,115,"Matrix must have at least one column."");"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,117,or (int row = 1; row < nRows; row++) {
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,118,f (d[row].length != nCols) {
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,119,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,120,"All input rows must have the same length."");"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,360,"* Replace the submatrix starting at <code>row, column</code> using data in"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,361,* the input <code>subMatrix</code> array. Indexes are 0-based.
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,362,* <p>
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,363,* Example:<br>
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,364,* Starting with <pre>
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,365,* 1  2  3  4
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,366,* 5  6  7  8
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,367,* 9  0  1  2
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,368,* </pre>
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,369,"* and <code>subMatrix = {{3, 4} {5,6}}</code>, invoking"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,370,"* <code>setSubMatrix(subMatrix,1,1))</code> will result in <pre>"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,371,* 1  2  3  4
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,372,* 5  3  4  8
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,373,* 9  5  6  2
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,374,* </pre>
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,376,* @param subMatrix  array containing the submatrix replacement data
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,377,"* @param row  row coordinate of the top, left element to be replaced"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,378,"* @param column  column coordinate of the top, left element to be replaced"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,379,* @throws MatrixIndexException  if subMatrix does not fit into this
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,380,"*    matrix from element in (row, column)"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,381,* @throws IllegalArgumentException if <code>subMatrix</code> is not rectangular
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,382,*  (not all rows have the same length) or empty
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,383,* @throws NullPointerException if <code>subMatrix</code> is null
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,385,"public void setSubMatrix(double[][] subMatrix, int row, int column)"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,386,throws MatrixIndexException {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,387,if ((row < 0) || (column < 0)){
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,388,throw new MatrixIndexException
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,389,"(""invalid row or column index selection"");"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,391,int nRows = subMatrix.length;
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,392,if (nRows == 0) {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,393,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,394,"""Matrix must have at least one row."");"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,396,int nCols = subMatrix[0].length;
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,397,if (nCols == 0) {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,398,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,399,"""Matrix must have at least one column."");"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,401,for (int r = 1; r < nRows; r++) {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,402,if (subMatrix[r].length != nCols) {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,403,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,404,"""All input rows must have the same length."");"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,407,if (data == null) {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,408,if ((row > 0)||(column > 0)) throw new MatrixIndexException
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,409,"(""matrix must be initialized to perfom this method"");"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,410,data = new double[nRows][nCols];
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,411,"System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,413,if (((nRows + row) > this.getRowDimension())
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,414,|| (nCols + column > this.getColumnDimension()))
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,415,throw new MatrixIndexException(
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,416,"""invalid row or column index selection"");"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,417,for (int i = 0; i < nRows; i++) {
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,418,"System.arraycopy(subMatrix[i], 0, data[row + i], column, nCols);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,420,lu = null;
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,376, Returns the entries in row number <code>row</code>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,377, as a row matrix.  Row indices start at 0.
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,379, @param row the row to be fetched
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,424,* Returns the entries in row number <code>row</code> as a row matrix.
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,425,* Row indices start at 0.
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,427,* @param row  the row to be fetched
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,1006,* <p>
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,1007,* Verifies that the input array is rectangular and non-empty
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,1010,* @throws IllegalArgumentException if input array is emtpy or not
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,1011,*    rectangular
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,1012,* @throws NullPointerException if input array is null
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,962,nt nRows = in.length;
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,963,nt nCols = in[0].length;
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,964,ata = new double[nRows][nCols];
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,965,"ystem.arraycopy(in, 0, data, 0, in.length);"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,966,or (int i = 0; i < nRows; i++) {
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,967,"ystem.arraycopy(in[i], 0, data[i], 0, nCols);"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,969,u = null;
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,1015,"setSubMatrix(in,0,0);"
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,2, Copyright 2004 The Apache Software Foundation.
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,2,* Copyright 2004-2005 The Apache Software Foundation.
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,639,public void testSetSubMatrix() throws Exception {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,640,BigDecimal[][] detData3 =
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,641,MatrixUtils.createBigMatrix(detData2).getData();
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,642,BigMatrixImpl m = new BigMatrixImpl(testData);
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,643,"m.setSubMatrix(detData3,1,1);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,644,BigMatrix expected = MatrixUtils.createBigMatrix
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,645,"(new double[][] {{1.0,2.0,3.0},{2.0,1.0,3.0},{1.0,2.0,4.0}});"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,646,"assertEquals(expected, m);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,648,"m.setSubMatrix(detData3,0,0);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,649,expected = MatrixUtils.createBigMatrix
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,650,"(new double[][] {{1.0,3.0,3.0},{2.0,4.0,3.0},{1.0,2.0,4.0}});"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,651,"assertEquals(expected, m);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,653,BigDecimal[][] testDataPlus3 =
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,654,MatrixUtils.createBigMatrix(testDataPlus2).getData();
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,655,"m.setSubMatrix(testDataPlus3,0,0);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,656,expected = MatrixUtils.createBigMatrix
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,657,"(new double[][] {{3.0,4.0,5.0},{4.0,7.0,5.0},{3.0,2.0,10.0}});"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,658,"assertEquals(expected, m);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,660,// javadoc example
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,661,BigMatrix matrix = MatrixUtils.createBigMatrix
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,662,"(new double[][] {{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 0, 1 , 2}});"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,663,"matrix.setSubMatrix(new BigDecimal[][] {{new BigDecimal(3),"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,664,"new BigDecimal(4)}, {new BigDecimal(5), new BigDecimal(6)}}, 1, 1);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,665,expected = MatrixUtils.createBigMatrix
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,666,"(new BigDecimal[][] {{new BigDecimal(1), new BigDecimal(2),"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,667,"new BigDecimal(3), new BigDecimal(4)}, {new BigDecimal(5),"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,668,"new BigDecimal(3), new BigDecimal(4), new BigDecimal(8)},"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,669,"{new BigDecimal(9), new BigDecimal(5) , new BigDecimal(6),"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,670,new BigDecimal(2)}});
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,671,"assertEquals(expected, matrix);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,673,// dimension overflow
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,674,try {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,675,"m.setSubMatrix(matrix.getData(),1,1);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,676,"fail(""expecting MatrixIndexException"");"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,677,} catch (MatrixIndexException e) {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,678,// expected
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,681,// null
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,682,try {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,683,"m.setSubMatrix(null,1,1);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,684,"fail(""expecting NullPointerException"");"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,685,} catch (NullPointerException e) {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,686,// expected
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,689,// ragged
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,690,try {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,691,"m.setSubMatrix(new BigDecimal[][] {{new BigDecimal(1)},"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,692,"{new BigDecimal(2), new BigDecimal(3)}}, 0, 0);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,693,"fail(""expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,694,} catch (IllegalArgumentException e) {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,695,// expected
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,698,// empty
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,699,try {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,700,"m.setSubMatrix(new BigDecimal[][] {{}}, 0, 0);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,701,"fail(""expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,702,} catch (IllegalArgumentException e) {
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,703,// expected
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,2, Copyright 2003-2004 The Apache Software Foundation.
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,2,* Copyright 2003-2005 The Apache Software Foundation.
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,613,public void testSetSubMatrix() throws Exception {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,614,RealMatrixImpl m = new RealMatrixImpl(testData);
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,615,"m.setSubMatrix(detData2,1,1);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,616,RealMatrix expected = MatrixUtils.createRealMatrix
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,617,"(new double[][] {{1.0,2.0,3.0},{2.0,1.0,3.0},{1.0,2.0,4.0}});"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,618,"assertEquals(expected, m);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,620,"m.setSubMatrix(detData2,0,0);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,621,expected = MatrixUtils.createRealMatrix
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,622,"(new double[][] {{1.0,3.0,3.0},{2.0,4.0,3.0},{1.0,2.0,4.0}});"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,623,"assertEquals(expected, m);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,625,"m.setSubMatrix(testDataPlus2,0,0);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,626,expected = MatrixUtils.createRealMatrix
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,627,"(new double[][] {{3.0,4.0,5.0},{4.0,7.0,5.0},{3.0,2.0,10.0}});"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,628,"assertEquals(expected, m);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,630,// javadoc example
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,631,RealMatrix matrix = MatrixUtils.createRealMatrix
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,632,"(new double[][] {{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 0, 1 , 2}});"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,633,"matrix.setSubMatrix(new double[][] {{3, 4}, {5, 6}}, 1, 1);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,634,expected = MatrixUtils.createRealMatrix
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,635,"(new double[][] {{1, 2, 3, 4}, {5, 3, 4, 8}, {9, 5 ,6, 2}});"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,636,"assertEquals(expected, matrix);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,638,// dimension overflow
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,639,try {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,640,"m.setSubMatrix(testData,1,1);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,641,"fail(""expecting MatrixIndexException"");"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,642,} catch (MatrixIndexException e) {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,643,// expected
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,646,// null
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,647,try {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,648,"m.setSubMatrix(null,1,1);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,649,"fail(""expecting NullPointerException"");"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,650,} catch (NullPointerException e) {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,651,// expected
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,654,// ragged
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,655,try {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,656,"m.setSubMatrix(new double[][] {{1}, {2, 3}}, 0, 0);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,657,"fail(""expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,658,} catch (IllegalArgumentException e) {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,659,// expected
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,662,// empty
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,663,try {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,664,"m.setSubMatrix(new double[][] {{}}, 0, 0);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,665,"fail(""expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,666,} catch (IllegalArgumentException e) {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,667,// expected
