is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,586,* Abbreviates a string nicely.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,588,* This method searches for the first space after the lower limit and abbreviates
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,589,* the String there. It will also append any String passed as a parameter
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,590,* to the end of the String. The upper limit can be specified to forcibly
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,591,* abbreviate a String.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,593,"* @param str         the string to be abbreviated. If null is passed, null is returned."
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,594,"*                    If the empty String is passed, the empty string is returned."
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,595,* @param lower       the lower limit.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,596,* @param upper       the upper limit; specify -1 if no limit is desired.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,597,"*                    If the upper limit is lower than the lower limit, it will be"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,598,*                    adjusted to be the same as the lower limit.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,599,* @param appendToEnd String to be appended to the end of the abbreviated string.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,600,*                    This is appended ONLY if the string was indeed abbreviated.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,601,*                    The append does not count towards the lower or upper limits.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,602,* @return the abbreviated String.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,604,"public static String abbreviate(String str, int lower, int upper, String appendToEnd) {"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,605,// initial parameter checks
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,606,if (str == null) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,607,return null;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,609,if (str.length() == 0) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,610,return StringUtils.EMPTY;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,613,// if the upper value is -1 (i.e. no limit) or is greater
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,614,"// than the length of the string, set to the length of the string"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,615,if (upper == -1 || upper > str.length()) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,616,upper = str.length();
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,618,"// if upper is less than lower, raise it to lower"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,619,if (upper < lower) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,620,upper = lower;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,623,StringBuffer result = new StringBuffer();
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,624,"int index = StringUtils.indexOf(str, "" "", lower);"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,625,if (index == -1) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,626,"result.append(str.substring(0, upper));"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,627,// only if abbreviation has occured do we append the appendToEnd value
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,628,if (upper != str.length()) result.append(StringUtils.defaultString(appendToEnd));
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,629,} else if (index > upper) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,630,"result.append(str.substring(0, upper));"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,631,result.append(StringUtils.defaultString(appendToEnd));
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,632,} else {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,633,"result.append(str.substring(0, index));"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,634,result.append(StringUtils.defaultString(appendToEnd));
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,636,return result.toString();
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,366,public void testAbbreviate() {
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,367,// check null and empty are returned respectively
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,368,"assertNull(WordUtils.abbreviate(null, 1,-1,""""));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,369,"assertEquals(StringUtils.EMPTY, WordUtils.abbreviate("""", 1,-1,""""));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,371,// test upper limit
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,372,"assertEquals(""01234"", WordUtils.abbreviate(""0123456789"", 0,5,""""));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,373,"assertEquals(""01234"", WordUtils.abbreviate(""0123456789"", 5, 2,""""));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,374,"assertEquals(""012"", WordUtils.abbreviate(""012 3456789"", 2, 5,""""));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,375,"assertEquals(""012 3"", WordUtils.abbreviate(""012 3456789"", 5, 2,""""));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,376,"assertEquals(""0123456789"", WordUtils.abbreviate(""0123456789"", 0,-1,""""));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,378,// test upper limit + append string
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,379,"assertEquals(""01234-"", WordUtils.abbreviate(""0123456789"", 0,5,""-""));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,380,"assertEquals(""01234-"", WordUtils.abbreviate(""0123456789"", 5, 2,""-""));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,381,"assertEquals(""012"", WordUtils.abbreviate(""012 3456789"", 2, 5, null));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,382,"assertEquals(""012 3"", WordUtils.abbreviate(""012 3456789"", 5, 2,""""));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,383,"assertEquals(""0123456789"", WordUtils.abbreviate(""0123456789"", 0,-1,""""));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,385,// test lower value
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,386,"assertEquals(""012"", WordUtils.abbreviate(""012 3456789"", 0,5, null));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,387,"assertEquals(""01234"", WordUtils.abbreviate(""01234 56789"", 5, 10, null));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,388,"assertEquals(""01 23 45 67"", WordUtils.abbreviate(""01 23 45 67 89"", 9, -1, null));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,389,"assertEquals(""01 23 45 6"", WordUtils.abbreviate(""01 23 45 67 89"", 9, 10, null));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,391,// test lower value + append
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,392,"assertEquals(""012"", WordUtils.abbreviate(""012 3456789"", 0,5, null));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,393,"assertEquals(""01234-"", WordUtils.abbreviate(""01234 56789"", 5, 10, ""-""));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,394,"assertEquals(""01 23 45 67abc"", WordUtils.abbreviate(""01 23 45 67 89"", 9, -1, ""abc""));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,395,"assertEquals(""01 23 45 6"", WordUtils.abbreviate(""01 23 45 67 89"", 9, 10, """"));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,397,// others
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,398,"assertEquals("""", WordUtils.abbreviate(""0123456790"", 0,0,""""));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,399,"assertEquals("""", WordUtils.abbreviate("" 0123456790"", 0,-1,""""));"
