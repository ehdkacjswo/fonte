is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,4,* Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,5,* reserved.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,9,* are met:
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,17,*    distribution.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,24,*    if and wherever such third-party acknowledgements normally appear.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,54,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,57,* <p><code>WordUtils</code> is a utility class to assist with word wrapping.</p>
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,59,* <p>This class tries to handle <code>null</code> input gracefully.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,60,* An exception will not be thrown for a <code>null</code> input.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,61,* Each method documents its behaviour in more detail.</p>
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,63,* @author Apache Jakarta Velocity
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,64,* @author Henri Yandell
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,65,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,66,"* @author <a href=""mailto:hps@intermeta.de"">Henning P. Schmiedehausen</a>"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,67,"* @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,68,* @since 2.0
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,69,"* @version $Id: WordUtils.java,v 1.1 2003/08/17 21:57:37 scolebourne Exp $"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,71,public class WordUtils {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,74,* <p><code>WordWrapUtils</code> instances should NOT be constructed in
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,75,"* standard programming. Instead, the class should be used as"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,76,"* <code>WordWrapUtils.wrap(""foo bar"", 20);</code>.</p>"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,78,* <p>This constructor is public to permit tools that require a JavaBean
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,79,* instance to operate.</p>
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,81,public WordUtils() {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,84,// Wrapping
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,87,//     * <p>Wraps a block of text to a specified line length using '\n' as
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,88,//     * a newline.</p>
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,90,"//     * <p>This method takes a block of text, which might have long lines in it"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,91,//     * and wraps the long lines based on the supplied lineLength parameter.</p>
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,93,"//     * <p>If a single word is longer than the line length (eg. a URL), it will"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,94,"//     * not be broken, and will display beyond the expected width.</p>"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,96,"//     * <p>If there are tabs in inString, you are going to get results that are"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,97,//     * a bit strange. Tabs are a single character but are displayed as 4 or 8
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,98,//     * spaces. Remove the tabs.</p>
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,100,"//     * @param str  text which is in need of word-wrapping, may be null"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,101,//     * @param lineLength  the column to wrap the words at
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,102,//     * @return the text with all the long lines word-wrapped
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,103,//     *  <code>null</code> if null string input
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,105,"//    public static String wrapText(String str, int lineLength) {"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,106,"//        return wrap(str, null, lineLength);"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,110,//     * <p>Wraps a block of text to a specified line length.</p>
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,112,"//     * <p>This method takes a block of text, which might have long lines in it"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,113,//     * and wraps the long lines based on the supplied lineLength parameter.</p>
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,115,"//     * <p>If a single word is longer than the wrapColumn (eg. a URL), it will"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,116,"//     * not be broken, and will display beyond the expected width.</p>"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,118,"//     * <p>If there are tabs in inString, you are going to get results that are"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,119,//     * a bit strange. Tabs are a single character but are displayed as 4 or 8
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,120,//     * spaces. Remove the tabs.</p>
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,122,"//     * @param str  text which is in need of word-wrapping, may be null"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,123,"//     * @param newLineChars  the characters that define a newline, null treated as \n"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,124,//     * @param lineLength  the column to wrap the words at
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,125,//     * @return the text with all the long lines word-wrapped
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,126,//     *  <code>null</code> if null string input
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,128,"//    public static String wrapText(String str, String newLineChars, int lineLength) {"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,129,//        if (str == null) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,130,//            return null;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,132,//        if (newLineChars == null) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,133,"//            newLineChars = ""\n"";"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,135,"//        StringTokenizer lineTokenizer = new StringTokenizer(str, newLineChars, true);"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,136,//        StringBuffer stringBuffer = new StringBuffer();
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,138,//        while (lineTokenizer.hasMoreTokens()) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,139,//            try {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,140,//                String nextLine = lineTokenizer.nextToken();
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,142,//                if (nextLine.length() > lineLength) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,143,//                    // This line is long enough to be wrapped.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,144,"//                    nextLine = wrapLine(nextLine, null, lineLength, false);"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,147,//                stringBuffer.append(nextLine);
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,149,//            } catch (NoSuchElementException nsee) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,150,"//                // thrown by nextToken(), but I don't know why it would"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,151,//                break;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,155,//        return (stringBuffer.toString());
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,159,"* <p>Wraps a single line of text, identifying words by <code>' '</code>.</p>"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,161,* <p>New lines will be separated by the system property line separator.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,162,"* Very long words, such as URLs will <i>not</i> be wrapped.</p>"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,164,* <p>Leading spaces on a new line are stripped.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,165,* Trailing spaces are not stripped.</p>
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,167,* <pre>
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,168,"* WordUtils.wrap(null, *) = null"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,169,"* WordUtils.wrap("""", *) = null"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,170,* </pre>
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,172,"* @param str  the String to be word wrapped, may be null"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,173,"* @param wrapLength  the column to wrap the words at, less than 1 is treated as 1"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,174,"* @return a line with newlines inserted, <code>null</code> if null input"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,176,"public static String wrap(String str, int wrapLength) {"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,177,"return wrap(str, wrapLength, null, false);"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,181,"* <p>Wraps a single line of text, identifying words by <code>' '</code>.</p>"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,183,* <p>Leading spaces on a new line are stripped.
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,184,* Trailing spaces are not stripped.</p>
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,186,* <pre>
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,187,"* WordUtils.wrap(null, *, *, *) = null"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,188,"* WordUtils.wrap("""", *, *, *) = null"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,189,* </pre>
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,191,"* @param str  the String to be word wrapped, may be null"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,192,"* @param wrapLength  the column to wrap the words at, less than 1 is treated as 1"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,193,"* @param newLineStr  the string to insert for a new line,"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,194,*  <code>null</code> uses the system property line separator
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,195,* @param wrapLongWords  true if long words (such as URLs) should be wrapped
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,196,"* @return a line with newlines inserted, <code>null</code> if null input"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,198,"public static String wrap(String str, int wrapLength, String newLineStr, boolean wrapLongWords) {"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,199,if (str == null) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,200,return null;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,202,if (newLineStr == null) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,203,newLineStr = SystemUtils.LINE_SEPARATOR;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,205,if (wrapLength < 1) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,206,wrapLength = 1;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,208,int inputLineLength = str.length();
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,209,int offset = 0;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,210,StringBuffer wrappedLine = new StringBuffer(inputLineLength + 32);
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,212,while ((inputLineLength - offset) > wrapLength) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,213,if (str.charAt(offset) == ' ') {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,214,offset++;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,215,continue;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,217,"int spaceToWrapAt = str.lastIndexOf(' ', wrapLength + offset);"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,219,if (spaceToWrapAt >= offset) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,220,// normal case
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,221,"wrappedLine.append(str.substring(offset, spaceToWrapAt));"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,222,wrappedLine.append(newLineStr);
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,223,offset = spaceToWrapAt + 1;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,225,} else {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,226,// really long word or URL
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,227,if (wrapLongWords) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,228,// wrap really long word one line at a time
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,229,"wrappedLine.append(str.substring(offset, wrapLength + offset));"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,230,wrappedLine.append(newLineStr);
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,231,offset += wrapLength;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,232,} else {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,233,"// do not wrap really long word, just extend beyond limit"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,234,"spaceToWrapAt = str.indexOf(' ', wrapLength + offset);"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,235,if (spaceToWrapAt >= 0) {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,236,"wrappedLine.append(str.substring(offset, spaceToWrapAt));"
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,237,wrappedLine.append(newLineStr);
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,238,offset = spaceToWrapAt + 1;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,239,} else {
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,240,wrappedLine.append(str.substring(offset));
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,241,offset = inputLineLength;
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,247,// Whatever is left in line is short enough to just pass through
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,248,wrappedLine.append(str.substring(offset));
True,src/java/org/apache/commons/lang/WordUtils.java,src/java/org/apache/commons/lang/WordUtils.java,250,return wrappedLine.toString();
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,4, Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,5, reserved.
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,9, are met:
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,17,    distribution.
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,54,ackage org.apache.commons.lang;
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,56,mport java.util.NoSuchElementException;
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,57,mport java.util.StringTokenizer;
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,60, <p><code>WordWrapUtils</code> is a utility class to assist with word wrapping.</p>
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,62, <p>This class tries to handle <code>null</code> input gracefully.
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,63, An exception will not be thrown for a <code>null</code> input.
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,64, Each method documents its behaviour in more detail.</p>
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,66, @author Apache Jakarta Velocity
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,67, @author Henri Yandell
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,68, @author Stephen Colebourne
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,69," @author <a href=""mailto:hps@intermeta.de"">Henning P. Schmiedehausen</a>"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,70," @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,71, @since 2.0
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,72," @version $Id: WordWrapUtils.java,v 1.10 2003/08/16 12:45:38 scolebourne Exp $"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,74,ublic class WordWrapUtils {
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,77, <p><code>WordWrapUtils</code> instances should NOT be constructed in
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,78," standard programming. Instead, the class should be used as"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,79," <code>WordWrapUtils.wordWrap(""foo bar"");</code>.</p>"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,81, <p>This constructor is public to permit tools that require a JavaBean
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,82, instance to operate.</p>
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,84,ublic WordWrapUtils() {
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,87,/ Wrapping
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,90,/     * <p>Wraps a block of text to a specified line length using '\n' as
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,91,/     * a newline.</p>
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,93,"/     * <p>This method takes a block of text, which might have long lines in it"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,94,/     * and wraps the long lines based on the supplied lineLength parameter.</p>
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,96,"/     * <p>If a single word is longer than the line length (eg. a URL), it will"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,97,"/     * not be broken, and will display beyond the expected width.</p>"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,99,"/     * <p>If there are tabs in inString, you are going to get results that are"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,100,/     * a bit strange. Tabs are a single character but are displayed as 4 or 8
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,101,/     * spaces. Remove the tabs.</p>
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,103,"/     * @param str  text which is in need of word-wrapping, may be null"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,104,/     * @param lineLength  the column to wrap the words at
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,105,/     * @return the text with all the long lines word-wrapped
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,106,/     *  <code>null</code> if null string input
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,108,"/    public static String wrapText(String str, int lineLength) {"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,109,"/        return wrap(str, null, lineLength);"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,113, <p>Wraps a block of text to a specified line length.</p>
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,115," <p>This method takes a block of text, which might have long lines in it"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,116, and wraps the long lines based on the supplied lineLength parameter.</p>
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,118," <p>If a single word is longer than the wrapColumn (eg. a URL), it will"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,119," not be broken, and will display beyond the expected width.</p>"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,121," <p>If there are tabs in inString, you are going to get results that are"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,122, a bit strange. Tabs are a single character but are displayed as 4 or 8
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,123, spaces. Remove the tabs.</p>
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,125," @param str  text which is in need of word-wrapping, may be null"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,126," @param newLineChars  the characters that define a newline, null treated as \n"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,127, @param lineLength  the column to wrap the words at
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,128, @return the text with all the long lines word-wrapped
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,129,  <code>null</code> if null string input
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,131,"ublic static String wrapText(String str, String newLineChars, int lineLength) {"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,132,f (str == null) {
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,133,eturn null;
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,135,f (newLineChars == null) {
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,136,"ewLineChars = ""\n"";"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,138,"tringTokenizer lineTokenizer = new StringTokenizer(str, newLineChars, true);"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,139,tringBuffer stringBuffer = new StringBuffer();
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,141,hile (lineTokenizer.hasMoreTokens()) {
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,142,ry {
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,143,tring nextLine = lineTokenizer.nextToken();
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,145,f (nextLine.length() > lineLength) {
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,146,/ This line is long enough to be wrapped.
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,147,"extLine = wrapLine(nextLine, newLineChars, lineLength);"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,150,tringBuffer.append(nextLine);
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,152, catch (NoSuchElementException nsee) {
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,153,"/ thrown by nextToken(), but I don't know why it would"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,154,reak;
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,158,eturn (stringBuffer.toString());
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,162, <p>Wraps a single line of text. Called by wrapText() to do the real
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,163, work of wrapping.</p>
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,165, @param line  a line which is in need of word-wrapping
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,166, @param newline  the characters that define a newline
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,167, @param lineLength  the column to wrap the words at
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,168, @return a line with newlines inserted
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,170,"rivate static String wrapLine(String line, String newline, int lineLength) {"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,171,tringBuffer wrappedLine = new StringBuffer();
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,173,hile (line.length() > lineLength) {
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,174,"nt spaceToWrapAt = line.lastIndexOf(' ', lineLength);"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,176,f (spaceToWrapAt >= 0) {
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,177,"rappedLine.append(line.substring(0, spaceToWrapAt));"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,178,rappedLine.append(newline);
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,179,ine = line.substring(spaceToWrapAt + 1);
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,182,/ This must be a really long word or URL. Pass it
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,183,/ through unchanged even though it's longer than the
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,184,/ wrapColumn would allow. This behavior could be
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,185,/ dependent on a parameter for those situations when
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,186,/ someone wants long words broken at line length.
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,187,lse {
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,188,"paceToWrapAt = line.indexOf(' ', lineLength);"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,190,f (spaceToWrapAt >= 0) {
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,191,"rappedLine.append(line.substring(0, spaceToWrapAt));"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,192,rappedLine.append(newline);
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,193,ine = line.substring(spaceToWrapAt + 1);
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,194, else {
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,195,rappedLine.append(line);
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,196,"ine = """";"
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,201,/ Whatever is left in line is short enough to just pass through
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,202,rappedLine.append(line);
False,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,204,eturn (wrappedLine.toString());
False,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,67," @version $Id: LangTestSuite.java,v 1.20 2003/08/17 19:41:17 bayard Exp $"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,67,"* @version $Id: LangTestSuite.java,v 1.21 2003/08/17 21:57:37 scolebourne Exp $"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,115,suite.addTest(WordUtilsTest.suite());
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,4,* Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,5,* reserved.
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,9,* are met:
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,17,*    distribution.
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,54,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,56,import java.lang.reflect.Constructor;
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,57,import java.lang.reflect.Modifier;
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,59,import junit.framework.Test;
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,60,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,61,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,64,* Unit tests for WordUtils class.
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,66,"* @author <a href=""mailto:ridesmet@users.sourceforge.net"">Ringo De Smet</a>"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,67,* @author Henri Yandell
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,68,* @author Stephen Colebourne
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,69,"* @version $Id: WordUtilsTest.java,v 1.1 2003/08/17 21:57:37 scolebourne Exp $"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,71,public class WordUtilsTest extends TestCase {
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,73,public WordUtilsTest(String name) {
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,74,super(name);
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,77,public static Test suite() {
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,78,TestSuite suite = new TestSuite(WordUtilsTest.class);
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,79,"suite.setName(""WordUtilsTests"");"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,80,return suite;
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,84,public void testConstructor() {
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,85,assertNotNull(new WordUtils());
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,86,Constructor[] cons = WordUtils.class.getDeclaredConstructors();
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,87,"assertEquals(1, cons.length);"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,88,"assertEquals(true, Modifier.isPublic(cons[0].getModifiers()));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,89,"assertEquals(true, Modifier.isPublic(WordUtils.class.getModifiers()));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,90,"assertEquals(false, Modifier.isFinal(WordUtils.class.getModifiers()));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,94,public void testWrap_StringInt() {
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,95,"assertEquals(null, WordUtils.wrap(null, 20));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,96,"assertEquals(null, WordUtils.wrap(null, -1));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,98,"assertEquals("""", WordUtils.wrap("""", 20));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,99,"assertEquals("""", WordUtils.wrap("""", -1));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,101,// normal
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,102,"String systemNewLine = System.getProperty(""line.separator"");"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,103,"String input = ""Here is one line of text that is going to be wrapped after 20 columns."";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,104,"String expected = ""Here is one line of"" + systemNewLine + ""text that is going"""
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,105,"+ systemNewLine + ""to be wrapped after"" + systemNewLine + ""20 columns."";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,106,"assertEquals(expected, WordUtils.wrap(input, 20));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,108,// long word at end
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,109,"input = ""Click here to jump to the jakarta website - http://jakarta.apache.org"";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,110,"expected = ""Click here to jump"" + systemNewLine + ""to the jakarta"" + systemNewLine"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,111,"+ ""website -"" + systemNewLine + ""http://jakarta.apache.org"";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,112,"assertEquals(expected, WordUtils.wrap(input, 20));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,114,// long word in middle
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,115,"input = ""Click here, http://jakarta.apache.org, to jump to the jakarta website"";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,116,"expected = ""Click here,"" + systemNewLine + ""http://jakarta.apache.org,"" + systemNewLine"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,117,"+ ""to jump to the"" + systemNewLine + ""jakarta website"";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,118,"assertEquals(expected, WordUtils.wrap(input, 20));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,121,public void testWrap_StringIntStringBoolean() {
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,122,"assertEquals(null, WordUtils.wrap(null, 20, ""\n"", false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,123,"assertEquals(null, WordUtils.wrap(null, 20, ""\n"", true));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,124,"assertEquals(null, WordUtils.wrap(null, 20, null, true));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,125,"assertEquals(null, WordUtils.wrap(null, 20, null, false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,126,"assertEquals(null, WordUtils.wrap(null, -1, null, true));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,127,"assertEquals(null, WordUtils.wrap(null, -1, null, false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,129,"assertEquals("""", WordUtils.wrap("""", 20, ""\n"", false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,130,"assertEquals("""", WordUtils.wrap("""", 20, ""\n"", true));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,131,"assertEquals("""", WordUtils.wrap("""", 20, null, false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,132,"assertEquals("""", WordUtils.wrap("""", 20, null, true));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,133,"assertEquals("""", WordUtils.wrap("""", -1, null, false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,134,"assertEquals("""", WordUtils.wrap("""", -1, null, true));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,136,// normal
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,137,"String input = ""Here is one line of text that is going to be wrapped after 20 columns."";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,138,"String expected = ""Here is one line of\ntext that is going\nto be wrapped after\n20 columns."";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,139,"assertEquals(expected, WordUtils.wrap(input, 20, ""\n"", false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,140,"assertEquals(expected, WordUtils.wrap(input, 20, ""\n"", true));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,142,// unusual newline char
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,143,"input = ""Here is one line of text that is going to be wrapped after 20 columns."";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,144,"expected = ""Here is one line of<br />text that is going<br />to be wrapped after<br />20 columns."";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,145,"assertEquals(expected, WordUtils.wrap(input, 20, ""<br />"", false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,146,"assertEquals(expected, WordUtils.wrap(input, 20, ""<br />"", true));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,148,// short line length
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,149,"input = ""Here is one line"";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,150,"expected = ""Here\nis one\nline"";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,151,"assertEquals(expected, WordUtils.wrap(input, 6, ""\n"", false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,152,"expected = ""Here\nis\none\nline"";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,153,"assertEquals(expected, WordUtils.wrap(input, 2, ""\n"", false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,154,"assertEquals(expected, WordUtils.wrap(input, -1, ""\n"", false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,156,// system newline char
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,157,"String systemNewLine = System.getProperty(""line.separator"");"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,158,"input = ""Here is one line of text that is going to be wrapped after 20 columns."";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,159,"expected = ""Here is one line of"" + systemNewLine + ""text that is going"" + systemNewLine"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,160,"+ ""to be wrapped after"" + systemNewLine + ""20 columns."";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,161,"assertEquals(expected, WordUtils.wrap(input, 20, null, false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,162,"assertEquals(expected, WordUtils.wrap(input, 20, null, true));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,164,// with extra spaces
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,165,"input = "" Here:  is  one  line  of  text  that  is  going  to  be  wrapped  after  20  columns."";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,166,"expected = ""Here:  is  one  line\nof  text  that  is \ngoing  to  be \nwrapped  after  20 \ncolumns."";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,167,"assertEquals(expected, WordUtils.wrap(input, 20, ""\n"", false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,168,"assertEquals(expected, WordUtils.wrap(input, 20, ""\n"", true));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,170,// with tab
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,171,"input = ""Here is\tone line of text that is going to be wrapped after 20 columns."";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,172,"expected = ""Here is\tone line of\ntext that is going\nto be wrapped after\n20 columns."";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,173,"assertEquals(expected, WordUtils.wrap(input, 20, ""\n"", false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,174,"assertEquals(expected, WordUtils.wrap(input, 20, ""\n"", true));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,176,// with tab at wrapColumn
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,177,"input = ""Here is one line of\ttext that is going to be wrapped after 20 columns."";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,178,"expected = ""Here is one line\nof\ttext that is\ngoing to be wrapped\nafter 20 columns."";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,179,"assertEquals(expected, WordUtils.wrap(input, 20, ""\n"", false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,180,"assertEquals(expected, WordUtils.wrap(input, 20, ""\n"", true));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,182,// difference because of long word
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,183,"input = ""Click here to jump to the jakarta website - http://jakarta.apache.org"";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,184,"expected = ""Click here to jump\nto the jakarta\nwebsite -\nhttp://jakarta.apache.org"";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,185,"assertEquals(expected, WordUtils.wrap(input, 20, ""\n"", false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,186,"expected = ""Click here to jump\nto the jakarta\nwebsite -\nhttp://jakarta.apach\ne.org"";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,187,"assertEquals(expected, WordUtils.wrap(input, 20, ""\n"", true));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,189,// difference because of long word in middle
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,190,"input = ""Click here, http://jakarta.apache.org, to jump to the jakarta website"";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,191,"expected = ""Click here,\nhttp://jakarta.apache.org,\nto jump to the\njakarta website"";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,192,"assertEquals(expected, WordUtils.wrap(input, 20, ""\n"", false));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,193,"expected = ""Click here,\nhttp://jakarta.apach\ne.org, to jump to\nthe jakarta website"";"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,194,"assertEquals(expected, WordUtils.wrap(input, 20, ""\n"", true));"
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,195,//        System.err.println(expected);
True,src/test/org/apache/commons/lang/WordUtilsTest.java,src/test/org/apache/commons/lang/WordUtilsTest.java,196,"//        System.err.println(WordUtils.wrap(input, 20, ""\n"", false));"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,2," The Apache Software License, Version 1.1"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,4, Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,5, reserved.
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,7," Redistribution and use in source and binary forms, with or without"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,8," modification, are permitted provided that the following conditions"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,9, are met:
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,11, 1. Redistributions of source code must retain the above copyright
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,16,    the documentation and/or other materials provided with the
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,17,    distribution.
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,20,"    any, must include the following acknowlegement:"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,21,"       ""This product includes software developed by the"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,28,    from this software without prior written permission. For written
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,29,"    permission, please contact apache@apache.org."
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,33,    permission of the Apache Software Foundation.
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,46, SUCH DAMAGE.
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,49, This software consists of voluntary contributions made by many
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,51," information on the Apache Software Foundation, please see"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,52, <http://www.apache.org/>.
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,54,ackage org.apache.commons.lang;
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,56,mport java.lang.reflect.Constructor;
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,57,mport java.lang.reflect.Modifier;
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,59,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,60,mport junit.framework.TestCase;
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,61,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,64, Unit tests for the wrap methods of WordWrapUtils.
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,66," @author <a href=""mailto:ridesmet@users.sourceforge.net"">Ringo De Smet</a>"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,67, @author Henri Yandell
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,68, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,69," @version $Id: WordWrapUtilsTest.java,v 1.3 2003/07/30 22:21:39 scolebourne Exp $"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,71,ublic class WordWrapUtilsTest extends TestCase {
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,73,ublic WordWrapUtilsTest(String name) {
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,74,uper(name);
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,77,ublic static Test suite() {
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,78,estSuite suite = new TestSuite(WordWrapUtilsTest.class);
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,79,"uite.setName(""WordWrapperTests"");"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,80,eturn suite;
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,84,ublic void testConstructor() {
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,85,ssertNotNull(new WordWrapUtils());
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,86,onstructor[] cons = WordWrapUtils.class.getDeclaredConstructors();
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,87,"ssertEquals(1, cons.length);"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,88,"ssertEquals(true, Modifier.isPublic(cons[0].getModifiers()));"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,89,"ssertEquals(true, Modifier.isPublic(WordWrapUtils.class.getModifiers()));"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,90,"ssertEquals(false, Modifier.isFinal(WordWrapUtils.class.getModifiers()));"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,95, Wrap text. This is the most general use.
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,97,ublic void testWrapText1() {
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,98,tring input =
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,99,"Here is one line of text that is going to be wrapped after 20 columns."";"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,100,tring expected =
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,101,"Here is one line of\ntext that is going\nto be wrapped after\n20 columns."";"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,102,"ssertEquals(""Text didn't wrap correctly, "", expected, WordWrapUtils.wrapText(input, ""\n"", 20));"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,106, Wrap text with a tab character in the middle of a string.
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,108,ublic void testWrapText2() {
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,109,tring input =
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,110,"Here is\tone line of text that is going to be wrapped after 20 columns."";"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,111,tring expected =
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,112,"Here is\tone line of\ntext that is going\nto be wrapped after\n20 columns."";"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,113,"ssertEquals(""Text with tab didn't wrap correctly, "", expected, WordWrapUtils.wrapText(input, ""\n"", 20));"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,117, Wrap text with a tab character located at the wrapping column index.
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,119,ublic void testWrapText3() {
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,120,tring input =
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,121,"Here is one line of\ttext that is going to be wrapped after 20 columns."";"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,122,tring expected =
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,123,"Here is one line\nof\ttext that is\ngoing to be wrapped\nafter 20 columns."";"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,124,"ssertEquals(""Text with tab at wrapping index didn't wrap correctly, "", expected, WordWrapUtils.wrapText(input, ""\n"", 20));"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,127,ublic void testWrapText4() {
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,128,"ssertEquals(null, WordWrapUtils.wrapText(null, ""\n"", 20));"
False,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,129,"ssertEquals("""", WordWrapUtils.wrapText("""", ""\n"", 20));"
