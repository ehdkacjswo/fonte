is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,4,* Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,5,* reserved.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,9,* are met:
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,17,*    distribution.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,54,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,56,import java.util.NoSuchElementException;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,57,import java.util.StringTokenizer;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,60,* <code>WordWrapUtils</code> is a utility class to assist with word wrapping.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,62,* @author Henri Yandell
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,63,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,64,"* @author <a href=""mailto:hps@intermeta.de"">Henning P. Schmiedehausen</a>"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,65,"* @version $Id: WordWrapUtils.java,v 1.1 2003/04/15 14:28:41 bayard Exp $"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,67,public class WordWrapUtils {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,69,// Wrapping
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,73,* Wraps a block of text to a specified line length.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,74,* <p>
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,75,"* This method takes a block of text, which might have long lines in it"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,76,* and wraps the long lines based on the supplied wrapColumn parameter.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,77,* It was initially implemented for use by VelocityEmail. If there are tabs
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,78,"* in inString, you are going to get results that are a bit strange,"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,79,* since tabs are a single character but are displayed as 4 or 8
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,80,* spaces. Remove the tabs.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,82,* @param str  text which is in need of word-wrapping
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,83,* @param newline  the characters that define a newline
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,84,* @param wrapColumn  the column to wrap the words at
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,85,* @return the text with all the long lines word-wrapped
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,87,"public static String wrapText(String str, String newline, int wrapColumn) {"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,88,"StringTokenizer lineTokenizer = new StringTokenizer(str, newline, true);"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,89,StringBuffer stringBuffer = new StringBuffer();
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,91,while (lineTokenizer.hasMoreTokens()) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,92,try {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,93,String nextLine = lineTokenizer.nextToken();
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,95,if (nextLine.length() > wrapColumn) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,96,// This line is long enough to be wrapped.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,97,"nextLine = wrapLine(nextLine, newline, wrapColumn);"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,100,stringBuffer.append(nextLine);
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,102,} catch (NoSuchElementException nsee) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,103,"// thrown by nextToken(), but I don't know why it would"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,104,break;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,108,return (stringBuffer.toString());
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,112,* Wraps a single line of text.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,113,* Called by wrapText() to do the real work of wrapping.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,115,* @param line  a line which is in need of word-wrapping
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,116,* @param newline  the characters that define a newline
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,117,* @param wrapColumn  the column to wrap the words at
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,118,* @return a line with newlines inserted
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,120,"private static String wrapLine(String line, String newline, int wrapColumn) {"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,121,StringBuffer wrappedLine = new StringBuffer();
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,123,while (line.length() > wrapColumn) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,124,"int spaceToWrapAt = line.lastIndexOf(' ', wrapColumn);"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,126,if (spaceToWrapAt >= 0) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,127,"wrappedLine.append(line.substring(0, spaceToWrapAt));"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,128,wrappedLine.append(newline);
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,129,line = line.substring(spaceToWrapAt + 1);
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,132,// This must be a really long word or URL. Pass it
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,133,// through unchanged even though it's longer than the
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,134,// wrapColumn would allow. This behavior could be
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,135,// dependent on a parameter for those situations when
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,136,// someone wants long words broken at line length.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,137,else {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,138,"spaceToWrapAt = line.indexOf(' ', wrapColumn);"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,140,if (spaceToWrapAt >= 0) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,141,"wrappedLine.append(line.substring(0, spaceToWrapAt));"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,142,wrappedLine.append(newline);
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,143,line = line.substring(spaceToWrapAt + 1);
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,144,} else {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,145,wrappedLine.append(line);
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,146,"line = """";"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,151,// Whatever is left in line is short enough to just pass through
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,152,wrappedLine.append(line);
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,154,return (wrappedLine.toString());
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,157,// Word wrapping
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,161,* Create a word-wrapped version of a String. Wrap at 80 characters and
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,162,* use newlines as the delimiter. If a word is over 80 characters long
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,163,* use a - sign to split it.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,165,public static String wordWrap(String str) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,166,"return wordWrap(str, 80, ""\n"", ""-"");"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,169,* Create a word-wrapped version of a String. Wrap at a specified width and
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,170,* use newlines as the delimiter. If a word is over the width in lenght
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,171,* use a - sign to split it.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,173,"public static String wordWrap(String str, int width) {"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,174,"return wordWrap(str, width, ""\n"", ""-"");"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,177,* Word-wrap a string.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,179,* @param str   String to word-wrap
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,180,* @param width int to wrap at
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,181,* @param delim String to use to separate lines
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,182,* @param split String to use to split a word greater than width long
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,184,* @return String that has been word wrapped
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,186,"public static String wordWrap(String str, int width, String delim, String split) {"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,187,int sz = str.length();
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,189,/// shift width up one. mainly as it makes the logic easier
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,190,width++;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,192,// our best guess as to an initial size
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,193,StringBuffer buffer = new StringBuffer(sz / width * delim.length() + sz);
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,195,// every line will include a delim on the end
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,196,width = width - delim.length();
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,198,int idx = -1;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,199,String substr = null;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,201,// beware: i is rolled-back inside the loop
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,202,for (int i = 0; i < sz; i += width) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,204,// on the last line
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,205,if (i > sz - width) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,206,buffer.append(str.substring(i));
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,207,break;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,210,// the current line
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,211,"substr = str.substring(i, i + width);"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,213,// is the delim already on the line
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,214,idx = substr.indexOf(delim);
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,215,if (idx != -1) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,216,"buffer.append(substr.substring(0, idx));"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,217,buffer.append(delim);
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,218,i -= width - idx - delim.length();
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,220,// Erase a space after a delim. Is this too obscure?
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,221,if(substr.length() > idx + 1) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,222,if (substr.charAt(idx + 1) != '\n') {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,223,if (Character.isWhitespace(substr.charAt(idx + 1))) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,224,i++;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,228,continue;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,231,idx = -1;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,233,// figure out where the last space is
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,234,char[] chrs = substr.toCharArray();
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,235,for (int j = width; j > 0; j--) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,236,if (Character.isWhitespace(chrs[j - 1])) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,237,idx = j;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,238,break;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,242,// idx is the last whitespace on the line.
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,243,if (idx == -1) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,244,for (int j = width; j > 0; j--) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,245,if (chrs[j - 1] == '-') {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,246,idx = j;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,247,break;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,250,if (idx == -1) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,251,buffer.append(substr);
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,252,buffer.append(delim);
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,253,} else {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,254,if (idx != width) {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,255,idx++;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,257,"buffer.append(substr.substring(0, idx));"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,258,buffer.append(delim);
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,259,i -= width - idx;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,261,} else {
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,262,"buffer.append(substr.substring(0, idx));"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,263,"buffer.append(StringUtils.repeat("" "", width - idx));"
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,264,buffer.append(delim);
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,265,i -= width - idx;
True,src/java/org/apache/commons/lang/WordWrapUtils.java,src/java/org/apache/commons/lang/WordWrapUtils.java,268,return buffer.toString();
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,4,* Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,5,* reserved.
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,9,* are met:
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,17,*    distribution.
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,54,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,61,* Unit tests for the wrap methods of WordWrapUtils.
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,63,"* @author <a href=""mailto:ridesmet@users.sourceforge.net"">Ringo De Smet</a>"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,64,"* @version $Id: WordWrapUtilsTest.java,v 1.1 2003/04/15 14:28:41 bayard Exp $"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,66,public class WordWrapUtilsTest extends TestCase {
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,68,public WordWrapUtilsTest(String name) {
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,69,super(name);
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,72,public static Test suite() {
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,73,TestSuite suite = new TestSuite(WordWrapUtilsTest.class);
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,74,"suite.setName(""WordWrapperTests"");"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,75,return suite;
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,79,* Wrap text. This is the most general use.
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,81,public void testWrapText1() {
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,82,String input =
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,83,"""Here is one line of text that is going to be wrapped after 20 columns."";"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,84,String expected =
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,85,"""Here is one line of\ntext that is going\nto be wrapped after\n20 columns."";"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,86,"assertEquals(""Text didn't wrap correctly, "", expected, WordWrapUtils.wrapText(input, ""\n"", 20));"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,90,* Wrap text with a tab character in the middle of a string.
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,92,public void testWrapText2() {
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,93,String input =
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,94,"""Here is\tone line of text that is going to be wrapped after 20 columns."";"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,95,String expected =
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,96,"""Here is\tone line of\ntext that is going\nto be wrapped after\n20 columns."";"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,97,"assertEquals(""Text with tab didn't wrap correctly, "", expected, WordWrapUtils.wrapText(input, ""\n"", 20));"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,101,* Wrap text with a tab character located at the wrapping column index.
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,103,public void testWrapText3() {
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,104,String input =
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,105,"""Here is one line of\ttext that is going to be wrapped after 20 columns."";"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,106,String expected =
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,107,"""Here is one line\nof\ttext that is\ngoing to be wrapped\nafter 20 columns."";"
True,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,src/test/org/apache/commons/lang/WordWrapUtilsTest.java,108,"assertEquals(""Text with tab at wrapping index didn't wrap correctly, "", expected, WordWrapUtils.wrapText(input, ""\n"", 20));"
