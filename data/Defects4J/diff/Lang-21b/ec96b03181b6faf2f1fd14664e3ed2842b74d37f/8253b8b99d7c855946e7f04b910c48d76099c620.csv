is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,114," @version $Id: StringUtils.java,v 1.133 2004/08/15 23:47:05 scolebourne Exp $"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,114,"* @version $Id: StringUtils.java,v 1.134 2004/08/22 03:40:27 bayard Exp $"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2064,"* <p>Splits the provided text into an array, separator string specified.</p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2066,* <p>The separator(s) will not be included in the returned String array.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2067,* Adjacent separators are treated as one separator.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2069,* <p>A <code>null</code> input String returns <code>null</code>.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2070,* A <code>null</code> separator splits on whitespace.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2072,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2073,"* StringUtils.split(null, *)            = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2074,"* StringUtils.split("""", *)              = []"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2075,"* StringUtils.split(""ab de fg"", null)   = [""ab"", ""de"", ""fg""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2076,"* StringUtils.split(""ab   de fg"", null) = [""ab"", ""de"", ""fg""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2077,"* StringUtils.split(""ab:cd:ef"", "":"")    = [""ab"", ""cd"", ""ef""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2078,"* StringUtils.split(""abstemiouslyaeiouyabstemiously"", ""aeiouy"")  = [""bst"", ""m"", ""sl"", ""bst"", ""m"", ""sl""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2079,"* StringUtils.split(""abstemiouslyaeiouyabstemiously"", ""aeiouy"")  = [""abstemiously"", ""abstemiously""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2080,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2082,"* @param str  the String to parse, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2083,"* @param separator  String containing the String to be used as a delimiter,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2084,*  <code>null</code> splits on whitespace
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2085,"* @return an array of parsed Strings, <code>null</code> if null String was input"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2087,"public static String[] splitByWholeSeparator(String str, String separator) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2088,"return splitByWholeSeparator( str, separator, -1 ) ;"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2092,"* <p>Splits the provided text into an array, separator string specified."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2093,* Returns a maximum of <code>max</code> substrings.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2095,* <p>The separator(s) will not be included in the returned String array.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2096,* Adjacent separators are treated as one separator.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2098,* <p>A <code>null</code> input String returns <code>null</code>.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2099,* A <code>null</code> separator splits on whitespace.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2101,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2102,"* StringUtils.splitByWholeSeparator(null, *, *)               = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2103,"* StringUtils.splitByWholeSeparator("""", *, *)                 = []"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2104,"* StringUtils.splitByWholeSeparator(""ab de fg"", null, 0)      = [""ab"", ""de"", ""fg""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2105,"* StringUtils.splitByWholeSeparator(""ab   de fg"", null, 0)    = [""ab"", ""de"", ""fg""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2106,"* StringUtils.splitByWholeSeparator(""ab:cd:ef"", "":"", 2)       = [""ab"", ""cd""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2107,"* StringUtils.splitByWholeSeparator(""abstemiouslyaeiouyabstemiously"", ""aeiouy"", 2) = [""bst"", ""m""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2108,"* StringUtils.splitByWholeSeparator(""abstemiouslyaeiouyabstemiously"", ""aeiouy"", 2)  = [""abstemiously"", ""abstemiously""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2109,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2111,"* @param str  the String to parse, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2112,"* @param separator  String containing the String to be used as a delimiter,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2113,*  <code>null</code> splits on whitespace
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2114,* @param max  the maximum number of elements to include in the returned
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2115,*  array. A zero or negative value implies no limit.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2116,"* @return an array of parsed Strings, <code>null</code> if null String was input"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2118,"public static String[] splitByWholeSeparator( String str, String separator, int max ) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2119,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2120,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2123,int len = str.length() ;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2125,if (len == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2126,return ArrayUtils.EMPTY_STRING_ARRAY;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2129,"if ( ( separator == null ) || ( """".equals( separator ) ) ) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2130,// Split on whitespace.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2131,"return split( str, null, max ) ;"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2135,int separatorLength = separator.length() ;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2137,ArrayList substrings = new ArrayList() ;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2138,int numberOfSubstrings = 0 ;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2139,int beg = 0 ;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2140,int end = 0 ;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2141,while ( end < len ) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2142,"end = str.indexOf( separator, beg ) ;"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2144,if ( end > -1 ) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2145,if ( end > beg ) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2146,numberOfSubstrings += 1 ;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2148,if ( numberOfSubstrings == max ) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2149,end = len ;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2150,substrings.add( str.substring( beg ) ) ;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2151,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2152,"// The following is OK, because String.substring( beg, end ) excludes"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2153,// the character at the position 'end'.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2154,"substrings.add( str.substring( beg, end ) ) ;"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2156,// Set the starting point for the next search.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2157,"// The following is equivalent to beg = end + (separatorLength - 1) + 1,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2158,// which is the right calculation:
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2159,beg = end + separatorLength ;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2161,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2162,"// We found a consecutive occurrence of the separator, so skip it."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2163,beg = end + separatorLength ;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2165,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2166,// String.substring( beg ) goes from 'beg' to the end of the String.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2167,substrings.add( str.substring( beg ) ) ;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2168,end = len ;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2172,return (String[]) substrings.toArray( new String[substrings.size()] ) ;
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,41," @version $Id: StringUtilsTest.java,v 1.61 2004/08/15 23:47:05 scolebourne Exp $"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,41,"* @version $Id: StringUtilsTest.java,v 1.62 2004/08/22 03:40:27 bayard Exp $"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,363,public void testSplitByWholeString_StringStringBoolean() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,364,"assertEquals( null, StringUtils.splitByWholeSeparator( null, ""."" ) ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,366,"assertEquals( 0, StringUtils.splitByWholeSeparator( """", ""."" ).length ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,368,"String stringToSplitOnNulls = ""ab   de fg"" ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,369,"String[] splitOnNullExpectedResults = { ""ab"", ""de"", ""fg"" } ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,371,"String[] splitOnNullResults = StringUtils.splitByWholeSeparator( ""ab   de fg"", null ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,372,"assertEquals( splitOnNullExpectedResults.length, splitOnNullResults.length ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,373,for ( int i = 0 ; i < splitOnNullExpectedResults.length ; i+= 1 ) {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,374,"assertEquals( splitOnNullExpectedResults[i], splitOnNullResults[i] ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,377,"String stringToSplitOnCharactersAndString = ""abstemiouslyaeiouyabstemiously"" ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,379,"String[] splitOnStringExpectedResults = { ""abstemiously"", ""abstemiously"" } ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,380,"String[] splitOnStringResults = StringUtils.splitByWholeSeparator( stringToSplitOnCharactersAndString, ""aeiouy"" ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,381,"assertEquals( splitOnStringExpectedResults.length, splitOnStringResults.length ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,382,for ( int i = 0 ; i < splitOnStringExpectedResults.length ; i+= 1 ) {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,383,"assertEquals( splitOnStringExpectedResults[i], splitOnStringResults[i] ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,387,public void testSplitByWholeString_StringStringBooleanInt() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,388,"assertEquals( null, StringUtils.splitByWholeSeparator( null, ""."", 3 ) ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,390,"assertEquals( 0, StringUtils.splitByWholeSeparator( """", ""."", 3 ).length ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,392,"String stringToSplitOnNulls = ""ab   de fg"" ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,393,"String[] splitOnNullExpectedResults = { ""ab"", ""de fg"" } ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,394,"//String[] splitOnNullExpectedResults = { ""ab"", ""de"" } ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,396,"String[] splitOnNullResults = StringUtils.splitByWholeSeparator( stringToSplitOnNulls, null, 2 ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,397,"assertEquals( splitOnNullExpectedResults.length, splitOnNullResults.length ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,398,for ( int i = 0 ; i < splitOnNullExpectedResults.length ; i+= 1 ) {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,399,"assertEquals( splitOnNullExpectedResults[i], splitOnNullResults[i] ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,402,"String stringToSplitOnCharactersAndString = ""abstemiouslyaeiouyabstemiouslyaeiouyabstemiously"" ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,404,"String[] splitOnStringExpectedResults = { ""abstemiously"", ""abstemiouslyaeiouyabstemiously"" } ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,405,"//String[] splitOnStringExpectedResults = { ""abstemiously"", ""abstemiously"" } ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,406,"String[] splitOnStringResults = StringUtils.splitByWholeSeparator( stringToSplitOnCharactersAndString, ""aeiouy"", 2 ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,407,"assertEquals( splitOnStringExpectedResults.length, splitOnStringResults.length ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,408,for ( int i = 0 ; i < splitOnStringExpectedResults.length ; i++ ) {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,409,"assertEquals( splitOnStringExpectedResults[i], splitOnStringResults[i] ) ;"
