is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,34, <p>The notion of a <code>canonical name</code> includes the human
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,35," readable name for the type, for example <code>int[]</code>. The"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,36," non-canonical method variants work with the JVM names, such as"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,34,* <p>The notion of a <code>canonical name</code> includes the human
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,35,"* readable name for the type, for example <code>int[]</code>. The"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,36,"* non-canonical method variants work with the JVM names, such as"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,400,//TODO when we bump the major version we should default autoboxing to true on platforms >= 1.5
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,481,//TODO when we bump the major version we should default autoboxing to true on platforms >= 1.5
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,664,ublic static Class[] wrappersToPrimitives(Class[] classes) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,666,public static Class[] wrappersToPrimitives(Class[] classes) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,770," <p>Returns the desired Method much like <code>Class.getMethod</code>, however"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,771, it ensures that the returned Method is from a public class or interface and not
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,772, from an anonymous inner class. This means that the Method is invokable and
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,773, doesn't fall foul of Java bug
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,772,"* <p>Returns the desired Method much like <code>Class.getMethod</code>, however"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,773,* it ensures that the returned Method is from a public class or interface and not
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,774,* from an anonymous inner class. This means that the Method is invokable and
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,775,* doesn't fall foul of Java bug
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,790,"ublic static Method getPublicMethod(Class cls, String methodName, Class parameterTypes[])"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,792,"public static Method getPublicMethod(Class cls, String methodName, Class parameterTypes[])"
