is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,114,/ check diagonal element
False,src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,115,f (lTData[i][i] < absolutePositivityThreshold) {
False,src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,116,hrow new NotPositiveDefiniteMatrixException();
True,src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,133,// check diagonal element
True,src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,134,if (ltI[i] < absolutePositivityThreshold) {
True,src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,135,throw new NotPositiveDefiniteMatrixException();
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,20,import static org.junit.Assert.assertEquals;
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,21,import static org.junit.Assert.assertTrue;
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,31,import org.junit.Test;
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,29,mport junit.framework.Test;
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,30,mport junit.framework.TestCase;
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,31,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,33,ublic class CholeskyDecompositionImplTest extends TestCase {
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,33,public class CholeskyDecompositionImplTest {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,43,ublic CholeskyDecompositionImplTest(String name) {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,44,uper(name);
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,47,ublic static Test suite() {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,48,estSuite suite = new TestSuite(CholeskyDecompositionImplTest.class);
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,49,"uite.setName(""CholeskyDecompositionImpl Tests"");"
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,50,eturn suite;
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,44,@Test
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,64,ublic void testNonSquare() {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,65,ry {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,66,ew CholeskyDecompositionImpl(MatrixUtils.createRealMatrix(new double[3][2]));
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,67, catch (NonSquareMatrixException ime) {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,68,/ expected behavior
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,69, catch (Exception e) {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,70,"ail(""wrong exception caught"");"
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,55,@Test(expected = NonSquareMatrixException.class)
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,56,public void testNonSquare() throws MathException {
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,57,new CholeskyDecompositionImpl(MatrixUtils.createRealMatrix(new double[3][2]));
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,75,ublic void testNotSymmetricMatrixException() {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,76,ry {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,77,ouble[][] changed = testData.clone();
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,78,hanged[0][changed[0].length - 1] += 1.0e-5;
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,79,ew CholeskyDecompositionImpl(MatrixUtils.createRealMatrix(changed));
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,80, catch (NotSymmetricMatrixException e) {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,81,/ expected behavior
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,82, catch (Exception e) {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,83,"ail(""wrong exception caught"");"
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,61,@Test(expected = NotSymmetricMatrixException.class)
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,62,public void testNotSymmetricMatrixException() throws MathException {
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,63,double[][] changed = testData.clone();
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,64,changed[0][changed[0].length - 1] += 1.0e-5;
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,65,new CholeskyDecompositionImpl(MatrixUtils.createRealMatrix(changed));
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,88,ublic void testNotPositiveDefinite() {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,89,ry {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,90,ew CholeskyDecompositionImpl(MatrixUtils.createRealMatrix(new double[][] {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,91," 14, 11, 13, 15, 24 },"
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,92," 11, 34, 13, 8,  25 },"
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,93," 13, 13, 14, 15, 21 },"
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,94," 15, 8,  15, 18, 23 },"
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,95," 24, 25, 21, 23, 45 }"
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,97, catch (NotPositiveDefiniteMatrixException e) {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,98,/ expected behavior
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,99, catch (Exception e) {
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,100,"ail(""wrong exception caught"");"
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,69,@Test(expected = NotPositiveDefiniteMatrixException.class)
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,70,public void testNotPositiveDefinite() throws MathException {
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,71,CholeskyDecomposition cd = new CholeskyDecompositionImpl(MatrixUtils.createRealMatrix(new double[][] {
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,72,"{ 14, 11, 13, 15, 24 },"
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,73,"{ 11, 34, 13, 8,  25 },"
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,74,"{ 13, 13, 14, 15, 21 },"
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,75,"{ 15, 8,  15, 18, 23 },"
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,76,"{ 24, 25, 21, 23, 45 }"
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,78,System.out.println(cd.getL().multiply(cd.getLT()));
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,81,@Test(expected = NotPositiveDefiniteMatrixException.class)
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,82,public void testMath274() throws MathException {
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,83,new CholeskyDecompositionImpl(MatrixUtils.createRealMatrix(new double[][] {
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,84,"{ 0.40434286, -0.09376327, 0.30328980, 0.04909388 },"
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,85,"{-0.09376327,  0.10400408, 0.07137959, 0.04762857 },"
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,86,"{ 0.30328980,  0.07137959, 0.30458776, 0.04882449 },"
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,87,"{ 0.04909388,  0.04762857, 0.04882449, 0.07543265 }"
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,93,@Test
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,104,@Test
False,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,120,"ssertEquals(0.0, l.getEntry(i, j));"
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,110,"assertEquals(0.0, l.getEntry(i, j), 0.0);"
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,116,@Test
True,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,src/test/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java,127,@Test
