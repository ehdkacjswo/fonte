is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java,365,hrows IOException;
True,src/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java,365,"throws IOException, ClassNotFoundException;"
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,191,// save the state of the base class
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,194,// save the local attributes
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,195,out.writeDouble(scalingH);
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,196,out.writeDouble(referenceTime);
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,198,final int n = (currentState == null) ? -1 : currentState.length;
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,199,if (scaled == null) {
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,200,out.writeBoolean(false);
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,201,} else {
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,202,out.writeBoolean(true);
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,203,for (int j = 0; j < n; ++j) {
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,204,out.writeDouble(scaled[j]);
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,208,if (nordsieck == null) {
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,209,out.writeBoolean(false);
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,210,} else {
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,211,out.writeBoolean(true);
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,212,out.writeObject(nordsieck);
False,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,196,hrows IOException {
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,220,"throws IOException, ClassNotFoundException {"
False,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,201,f ((scaled != null) && (nordsieck != null)) {
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,225,// read the local attributes
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,226,scalingH      = in.readDouble();
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,227,referenceTime = in.readDouble();
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,229,final int n = (currentState == null) ? -1 : currentState.length;
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,230,final boolean hasScaled = in.readBoolean();
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,231,if (hasScaled) {
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,232,scaled = new double[n];
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,233,for (int j = 0; j < n; ++j) {
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,234,scaled[j] = in.readDouble();
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,236,} else {
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,237,scaled = null;
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,240,final boolean hasNordsieck = in.readBoolean();
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,241,if (hasNordsieck) {
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,242,nordsieck = (Array2DRowRealMatrix) in.readObject();
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,243,} else {
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,244,nordsieck = null;
True,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,247,if (hasScaled && hasNordsieck) {
False,src/test/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,65,ssertTrue(bos.size () >  16000);
False,src/test/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,66,ssertTrue(bos.size () <  17000);
True,src/test/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,65,assertTrue(bos.size () >  20000);
True,src/test/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java,66,assertTrue(bos.size () <  25000);
