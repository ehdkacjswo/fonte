is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,64, result in <code>NaN<code> or infinite values returned.</p>
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,64,* result in <code>NaN</code> or infinite values returned.</p>
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,66," Since 2.2, Percentile implementation uses only selection instead of complete"
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,67, sorting and caches selection algorithm state between calls to the various
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,68, {@code evaluate} methods when several percentiles are to be computed on the same data.
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,69," This greatly improves efficiency, both for single percentile and multiple"
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,70," percentiles computations. However, it also induces a need to be sure the data"
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,71, at one call to {@code evaluate} is the same as the data with the cached algorithm
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,72, state from the previous calls. Percentile does this by checking the array reference
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,73, itself and a checksum of its content by default. If the user already knows he calls
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,74," {@code evaluate} on an immutable array, he can save the checking time by calling the"
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,75, {@code evaluate} methods that do <em>not</em>
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,66,"* Since 2.2, Percentile uses only selection instead of complete sorting"
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,67,* and caches selection algorithm state between calls to the various
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,68,"* {@code evaluate} methods. This greatly improves efficiency, both for a single"
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,69,* percentile and multiple percentile computations. To maximize performance when
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,70,"* multiple percentiles are computed based on the same data, users should set the"
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,71,"* data array once using either one of the {@link #evaluate(double[], double)} or"
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,72,* {@link #setData(double[])} methods and thereafter {@link #evaluate(double)}
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,73,* with just the percentile provided.
