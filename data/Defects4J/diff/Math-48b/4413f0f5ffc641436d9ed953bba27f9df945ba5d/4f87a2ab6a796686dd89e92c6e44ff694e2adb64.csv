is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,17,ackage org.apache.commons.math.distribution;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,19,mport org.apache.commons.math.special.Gamma;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,20,mport org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,23, <p>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,24, Utility class used by various distributions to accurately compute their
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,25, respective probability mass functions. The implementation for this class is
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,26," based on the Catherine Loader's <a target=""_blank"""
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,27," href=""http://www.herine.net/stat/software/dbinom.html"">dbinom</a> routines."
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,28, </p>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,29, <p>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,30, This class is not intended to be called directly.
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,31, </p>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,32, <p>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,33, References:
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,34, <ol>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,35," <li>Catherine Loader (2000). ""Fast and Accurate Computation of Binomial"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,36," Probabilities."". <a target=""_blank"""
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,37," href=""http://www.herine.net/stat/papers/dbinom.pdf"">"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,38, http://www.herine.net/stat/papers/dbinom.pdf</a></li>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,39, </ol>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,40, </p>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,42, @since 2.1
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,43, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,45,inal class SaddlePointExpansion {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,47,** 1/2 * log(2 &#960;). */
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,48,rivate static final double HALF_LOG_2_PI = 0.5 * Math.log(MathUtils.TWO_PI);
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,50,** exact Stirling expansion error for certain values. */
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,51,"rivate static final double[] EXACT_STIRLING_ERRORS = { 0.0, /* 0.0 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,52,".1534264097200273452913848, /* 0.5 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,53,".0810614667953272582196702, /* 1.0 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,54,".0548141210519176538961390, /* 1.5 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,55,".0413406959554092940938221, /* 2.0 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,56,".03316287351993628748511048, /* 2.5 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,57,".02767792568499833914878929, /* 3.0 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,58,".02374616365629749597132920, /* 3.5 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,59,".02079067210376509311152277, /* 4.0 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,60,".01848845053267318523077934, /* 4.5 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,61,".01664469118982119216319487, /* 5.0 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,62,".01513497322191737887351255, /* 5.5 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,63,".01387612882307074799874573, /* 6.0 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,64,".01281046524292022692424986, /* 6.5 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,65,".01189670994589177009505572, /* 7.0 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,66,".01110455975820691732662991, /* 7.5 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,67,".010411265261972096497478567, /* 8.0 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,68,".009799416126158803298389475, /* 8.5 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,69,".009255462182712732917728637, /* 9.0 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,70,".008768700134139385462952823, /* 9.5 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,71,".008330563433362871256469318, /* 10.0 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,72,".007934114564314020547248100, /* 10.5 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,73,".007573675487951840794972024, /* 11.0 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,74,".007244554301320383179543912, /* 11.5 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,75,".006942840107209529865664152, /* 12.0 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,76,".006665247032707682442354394, /* 12.5 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,77,".006408994188004207068439631, /* 13.0 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,78,".006171712263039457647532867, /* 13.5 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,79,".005951370112758847735624416, /* 14.0 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,80,".005746216513010115682023589, /* 14.5 */"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,81,.005554733551962801371038690 /* 15.0 */
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,85, Default constructor.
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,87,rivate SaddlePointExpansion() {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,88,uper();
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,92, Compute the error of Stirling's series at the given value.
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,93, <p>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,94, References:
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,95, <ol>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,96," <li>Eric W. Weisstein. ""Stirling's Series."" From MathWorld--A Wolfram Web"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,97," Resource. <a target=""_blank"""
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,98," href=""http://mathworld.wolfram.com/StirlingsSeries.html"">"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,99, http://mathworld.wolfram.com/StirlingsSeries.html</a></li>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,100, </ol>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,101, </p>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,103, @param z the value.
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,104, @return the Striling's series error.
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,106,tatic double getStirlingError(double z) {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,107,ouble ret;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,108,f (z < 15.0) {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,109,ouble z2 = 2.0 * z;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,110,f (Math.floor(z2) == z2) {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,111,et = EXACT_STIRLING_ERRORS[(int) z2];
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,112, else {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,113,et = Gamma.logGamma(z + 1.0) - (z + 0.5) * Math.log(z) +
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,114, - HALF_LOG_2_PI;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,116, else {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,117,ouble z2 = z * z;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,118,et = (0.083333333333333333333 -
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,119,0.00277777777777777777778 -
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,120,0.00079365079365079365079365 -
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,121,0.000595238095238095238095238 -
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,122,.0008417508417508417508417508 /
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,123,2) / z2) / z2) / z2) / z;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,125,eturn ret;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,129, A part of the deviance portion of the saddle point approximation.
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,130, <p>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,131, References:
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,132, <ol>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,133," <li>Catherine Loader (2000). ""Fast and Accurate Computation of Binomial"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,134," Probabilities."". <a target=""_blank"""
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,135," href=""http://www.herine.net/stat/papers/dbinom.pdf"">"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,136, http://www.herine.net/stat/papers/dbinom.pdf</a></li>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,137, </ol>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,138, </p>
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,140, @param x the x value.
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,141, @param mu the average.
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,142, @return a part of the deviance.
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,144,"tatic double getDeviancePart(double x, double mu) {"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,145,ouble ret;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,146,f (Math.abs(x - mu) < 0.1 * (x + mu)) {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,147,ouble d = x - mu;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,148,ouble v = d / (x + mu);
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,149,ouble s1 = v * d;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,150,ouble s = Double.NaN;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,151,ouble ej = 2.0 * x * v;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,152, = v * v;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,153,nt j = 1;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,154,hile (s1 != s) {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,155, = s1;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,156,j *= v;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,157,1 = s + ej / ((j * 2) + 1);
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,158,+j;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,160,et = s1;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,161, else {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,162,et = x * Math.log(x / mu) + mu - x;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,164,eturn ret;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,168, Compute the PMF for a binomial distribution using the saddle point
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,169, expansion.
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,171, @param x the value at which the probability is evaluated.
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,172, @param n the number of trials.
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,173, @param p the probability of success.
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,174, @param q the probability of failure (1 - p).
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,175, @return log(p(x)).
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,177,"tatic double logBinomialProbability(int x, int n, double p, double q) {"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,178,ouble ret;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,179,f (x == 0) {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,180,f (p < 0.1) {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,181,"et = -getDeviancePart(n, n * q) - n * p;"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,182, else {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,183,et = n * Math.log(q);
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,185, else if (x == n) {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,186,f (q < 0.1) {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,187,"et = -getDeviancePart(n, n * p) - n * q;"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,188, else {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,189,et = n * Math.log(p);
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,191, else {
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,192,et = getStirlingError(n) - getStirlingError(x) -
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,193,"etStirlingError(n - x) - getDeviancePart(x, n * p) -"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,194,"etDeviancePart(n - x, n * q);"
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,195,ouble f = (MathUtils.TWO_PI * x * (n - x)) / n;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,196,et = -0.5 * Math.log(f) + ret;
False,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,198,eturn ret;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,17,package org.apache.commons.math.distribution;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,19,import org.apache.commons.math.special.Gamma;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,20,import org.apache.commons.math.util.MathUtils;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,23,* <p>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,24,* Utility class used by various distributions to accurately compute their
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,25,* respective probability mass functions. The implementation for this class is
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,26,"* based on the Catherine Loader's <a target=""_blank"""
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,27,"* href=""http://www.herine.net/stat/software/dbinom.html"">dbinom</a> routines."
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,28,* </p>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,29,* <p>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,30,* This class is not intended to be called directly.
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,31,* </p>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,32,* <p>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,33,* References:
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,34,* <ol>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,35,"* <li>Catherine Loader (2000). ""Fast and Accurate Computation of Binomial"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,36,"* Probabilities."". <a target=""_blank"""
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,37,"* href=""http://www.herine.net/stat/papers/dbinom.pdf"">"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,38,* http://www.herine.net/stat/papers/dbinom.pdf</a></li>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,39,* </ol>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,40,* </p>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,42,* @since 2.1
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,43,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,45,final class SaddlePointExpansion {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,47,/** 1/2 * log(2 &#960;). */
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,48,private static final double HALF_LOG_2_PI = 0.5 * Math.log(MathUtils.TWO_PI);
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,50,/** exact Stirling expansion error for certain values. */
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,51,"private static final double[] EXACT_STIRLING_ERRORS = { 0.0, /* 0.0 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,52,"0.1534264097200273452913848, /* 0.5 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,53,"0.0810614667953272582196702, /* 1.0 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,54,"0.0548141210519176538961390, /* 1.5 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,55,"0.0413406959554092940938221, /* 2.0 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,56,"0.03316287351993628748511048, /* 2.5 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,57,"0.02767792568499833914878929, /* 3.0 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,58,"0.02374616365629749597132920, /* 3.5 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,59,"0.02079067210376509311152277, /* 4.0 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,60,"0.01848845053267318523077934, /* 4.5 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,61,"0.01664469118982119216319487, /* 5.0 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,62,"0.01513497322191737887351255, /* 5.5 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,63,"0.01387612882307074799874573, /* 6.0 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,64,"0.01281046524292022692424986, /* 6.5 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,65,"0.01189670994589177009505572, /* 7.0 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,66,"0.01110455975820691732662991, /* 7.5 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,67,"0.010411265261972096497478567, /* 8.0 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,68,"0.009799416126158803298389475, /* 8.5 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,69,"0.009255462182712732917728637, /* 9.0 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,70,"0.008768700134139385462952823, /* 9.5 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,71,"0.008330563433362871256469318, /* 10.0 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,72,"0.007934114564314020547248100, /* 10.5 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,73,"0.007573675487951840794972024, /* 11.0 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,74,"0.007244554301320383179543912, /* 11.5 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,75,"0.006942840107209529865664152, /* 12.0 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,76,"0.006665247032707682442354394, /* 12.5 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,77,"0.006408994188004207068439631, /* 13.0 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,78,"0.006171712263039457647532867, /* 13.5 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,79,"0.005951370112758847735624416, /* 14.0 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,80,"0.005746216513010115682023589, /* 14.5 */"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,81,0.005554733551962801371038690 /* 15.0 */
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,85,* Default constructor.
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,87,private SaddlePointExpansion() {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,88,super();
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,92,* Compute the error of Stirling's series at the given value.
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,93,* <p>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,94,* References:
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,95,* <ol>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,96,"* <li>Eric W. Weisstein. ""Stirling's Series."" From MathWorld--A Wolfram Web"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,97,"* Resource. <a target=""_blank"""
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,98,"* href=""http://mathworld.wolfram.com/StirlingsSeries.html"">"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,99,* http://mathworld.wolfram.com/StirlingsSeries.html</a></li>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,100,* </ol>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,101,* </p>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,103,* @param z the value.
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,104,* @return the Striling's series error.
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,106,static double getStirlingError(double z) {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,107,double ret;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,108,if (z < 15.0) {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,109,double z2 = 2.0 * z;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,110,if (Math.floor(z2) == z2) {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,111,ret = EXACT_STIRLING_ERRORS[(int) z2];
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,112,} else {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,113,ret = Gamma.logGamma(z + 1.0) - (z + 0.5) * Math.log(z) +
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,114,z - HALF_LOG_2_PI;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,116,} else {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,117,double z2 = z * z;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,118,ret = (0.083333333333333333333 -
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,119,(0.00277777777777777777778 -
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,120,(0.00079365079365079365079365 -
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,121,(0.000595238095238095238095238 -
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,122,0.0008417508417508417508417508 /
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,123,z2) / z2) / z2) / z2) / z;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,125,return ret;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,129,* A part of the deviance portion of the saddle point approximation.
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,130,* <p>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,131,* References:
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,132,* <ol>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,133,"* <li>Catherine Loader (2000). ""Fast and Accurate Computation of Binomial"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,134,"* Probabilities."". <a target=""_blank"""
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,135,"* href=""http://www.herine.net/stat/papers/dbinom.pdf"">"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,136,* http://www.herine.net/stat/papers/dbinom.pdf</a></li>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,137,* </ol>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,138,* </p>
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,140,* @param x the x value.
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,141,* @param mu the average.
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,142,* @return a part of the deviance.
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,144,"static double getDeviancePart(double x, double mu) {"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,145,double ret;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,146,if (Math.abs(x - mu) < 0.1 * (x + mu)) {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,147,double d = x - mu;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,148,double v = d / (x + mu);
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,149,double s1 = v * d;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,150,double s = Double.NaN;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,151,double ej = 2.0 * x * v;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,152,v = v * v;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,153,int j = 1;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,154,while (s1 != s) {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,155,s = s1;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,156,ej *= v;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,157,s1 = s + ej / ((j * 2) + 1);
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,158,++j;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,160,ret = s1;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,161,} else {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,162,ret = x * Math.log(x / mu) + mu - x;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,164,return ret;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,168,* Compute the PMF for a binomial distribution using the saddle point
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,169,* expansion.
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,171,* @param x the value at which the probability is evaluated.
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,172,* @param n the number of trials.
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,173,* @param p the probability of success.
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,174,* @param q the probability of failure (1 - p).
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,175,* @return log(p(x)).
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,177,"static double logBinomialProbability(int x, int n, double p, double q) {"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,178,double ret;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,179,if (x == 0) {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,180,if (p < 0.1) {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,181,"ret = -getDeviancePart(n, n * q) - n * p;"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,182,} else {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,183,ret = n * Math.log(q);
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,185,} else if (x == n) {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,186,if (q < 0.1) {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,187,"ret = -getDeviancePart(n, n * p) - n * q;"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,188,} else {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,189,ret = n * Math.log(p);
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,191,} else {
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,192,ret = getStirlingError(n) - getStirlingError(x) -
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,193,"getStirlingError(n - x) - getDeviancePart(x, n * p) -"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,194,"getDeviancePart(n - x, n * q);"
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,195,double f = (MathUtils.TWO_PI * x * (n - x)) / n;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,196,ret = -0.5 * Math.log(f) + ret;
True,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java,198,return ret;
