is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/linear/DecompositionSolver.java,src/java/org/apache/commons/math/linear/DecompositionSolver.java,25," {@link QRDecomposition}, {@link LUDecomposition} or {@link"
False,src/java/org/apache/commons/math/linear/DecompositionSolver.java,src/java/org/apache/commons/math/linear/DecompositionSolver.java,26, SingularValueDecomposition}. All these algorithms decompose an A matrix has a
False,src/java/org/apache/commons/math/linear/DecompositionSolver.java,src/java/org/apache/commons/math/linear/DecompositionSolver.java,27, product of several specific matrices from which they can solve A &times; X = B
False,src/java/org/apache/commons/math/linear/DecompositionSolver.java,src/java/org/apache/commons/math/linear/DecompositionSolver.java,28, in least squares sense: they find X such that ||A &times; X - B|| is minimal.</p>
True,src/java/org/apache/commons/math/linear/DecompositionSolver.java,src/java/org/apache/commons/math/linear/DecompositionSolver.java,25,"* {@link QRDecomposition}, {@link LUDecomposition}, {@link"
True,src/java/org/apache/commons/math/linear/DecompositionSolver.java,src/java/org/apache/commons/math/linear/DecompositionSolver.java,26,* SingularValueDecomposition} or {@link EigenDecomposition}. All these
True,src/java/org/apache/commons/math/linear/DecompositionSolver.java,src/java/org/apache/commons/math/linear/DecompositionSolver.java,27,* algorithms decompose an A matrix has a product of several specific matrices
True,src/java/org/apache/commons/math/linear/DecompositionSolver.java,src/java/org/apache/commons/math/linear/DecompositionSolver.java,28,* from which they can solve A &times; X = B in least squares sense: they find X
True,src/java/org/apache/commons/math/linear/DecompositionSolver.java,src/java/org/apache/commons/math/linear/DecompositionSolver.java,29,* such that ||A &times; X - B|| is minimal.</p>
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,15,* limitations under the License.
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,18,package org.apache.commons.math.linear;
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,21,* An interface to classes that implement an algorithm to calculate the
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,22,* eigen decomposition of a real symmetric matrix.
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,23,* <p>The eigen decomposition of matrix A is a set of two matrices:
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,24,* V and D such that A = V &times; D &times; V<sup>T</sup>.
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,25,"* Let A be an m &times; n matrix, then V is an m &times; m orthogonal matrix"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,26,* and D is a m &times; n diagonal matrix.</p>
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,27,* <p>This interface is similar in spirit to the <code>EigenvalueDecomposition</code>
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,28,"* class from the now defunct <a href=""http://math.nist.gov/javanumerics/jama/"">JAMA</a>"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,29,"* library, with the following changes:</p>"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,30,* <ul>
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,31,"*   <li><code>solve</code> methods have been added (in the superinterface),</li>"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,32,*   <li>a {@link DecompositionSolver#decompose(RealMatrix) decompose(RealMatrix)}
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,33,"*   method has been added (in the superinterface),</li>"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,34,*   <li>a {@link DecompositionSolver#isNonSingular() isNonSingular} method has
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,35,"*   been added (in the superinterface),</li>"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,36,*   <li>a {@link DecompositionSolver#getInverse() getInverse} method has been
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,37,"*   added (in the superinterface),</li>"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,38,"*   <li>a {@link #getVt() getVt} method has been added,</li>"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,39,*   <li>the <code>getRealEigenvalues</code> method has been renamed as {@link
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,40,"*   #getEigenValues() getEigenValues},</li>"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,41,*   <li>the <code>getImagEigenvalues</code> method has been removed</li>
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,42,* </ul>
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,43,"* @see <a href=""http://mathworld.wolfram.com/EigenDecomposition.html"">MathWorld</a>"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,44,"* @see <a href=""http://en.wikipedia.org/wiki/Eigendecomposition_of_a_matrix"">Wikipedia</a>"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,45,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,46,* @since 2.0
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,48,public interface EigenDecomposition extends DecompositionSolver {
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,51,* Returns the matrix V of the decomposition.
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,52,"* <p>V is an orthogonal matrix, i.e. its transpose is also its inverse.</p>"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,53,* <p>The columns of V are the eigenvectors of the original matrix.</p>
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,54,* @return the V matrix
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,55,* @exception IllegalStateException if {@link
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,56,* DecompositionSolver#decompose(RealMatrix) decompose} has not been called
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,58,RealMatrix getV() throws IllegalStateException;
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,61,* Returns the diagonal matrix D of the decomposition.
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,62,* <p>D is a diagonal matrix.</p>
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,63,* <p>The values on the diagonal are the eigenvalues of the original matrix.</p>
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,64,* @return the D matrix
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,65,* @exception IllegalStateException if {@link
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,66,* DecompositionSolver#decompose(RealMatrix) decompose} has not been called
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,67,* @see #getEigenValues()
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,69,RealMatrix getD() throws IllegalStateException;
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,72,* Returns the transpose of the matrix V of the decomposition.
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,73,"* <p>V is an orthogonal matrix, i.e. its transpose is also its inverse.</p>"
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,74,* <p>The columns of V are the eigenvectors of the original matrix.</p>
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,75,* @return the transpose of the V matrix
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,76,* @exception IllegalStateException if {@link
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,77,* DecompositionSolver#decompose(RealMatrix) decompose} has not been called
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,79,RealMatrix getVt() throws IllegalStateException;
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,82,* Returns the eigenvalues of the original matrix.
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,83,* @return eigenvalues of the original matrix
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,84,* @exception IllegalStateException if {@link
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,85,* DecompositionSolver#decompose(RealMatrix) decompose} has not been called
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,86,* @see #getD()
True,src/java/org/apache/commons/math/linear/EigenDecomposition.java,src/java/org/apache/commons/math/linear/EigenDecomposition.java,88,double[] getEigenValues() throws IllegalStateException;
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,15,* limitations under the License.
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,18,package org.apache.commons.math.linear;
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,20,import org.apache.commons.math.ConvergenceException;
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,23,* An interface to classes that implement an algorithm to calculate the
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,24,* Singular Value Decomposition of a real matrix.
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,25,* <p>The Singular Value Decomposition of matrix A is a set of three matrices:
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,26,"* U, &Sigma; and V such that A = U &times; &Sigma; &times; V<sup>T</sup>."
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,27,"* Let A be an m &times; n matrix, then U is an m &times; m orthogonal matrix,"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,28,"* &Sigma; is a m &times; n diagonal matrix with positive diagonal elements,"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,29,* and V is an n &times; n orthogonal matrix.</p>
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,30,* <p>This interface is similar to the class with similar name from the now defunct
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,31,"* <a href=""http://math.nist.gov/javanumerics/jama/"">JAMA</a> library, with the"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,32,* following changes:</p>
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,33,* <ul>
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,34,"*   <li><code>solve</code> methods have been added (in the superinterface),</li>"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,35,*   <li>a {@link DecompositionSolver#decompose(RealMatrix) decompose(RealMatrix)}
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,36,"*   method has been added (in the superinterface),</li>"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,37,"*   <li>a {@link #decompose(RealMatrix, int) decompose(RealMatrix), int)} method"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,38,"*   has been added,</li>"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,39,*   <li>a {@link DecompositionSolver#isNonSingular() isNonSingular} method has
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,40,"*   been added (in the superinterface),</li>"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,41,*   <li>a {@link DecompositionSolver#getInverse() getInverse} method has been
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,42,"*   added (in the superinterface),</li>"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,43,*   <li>the <code>norm2</code> method which has been renamed as {@link #getNorm()
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,44,"*   getNorm},</li>"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,45,*   <li>the <code>cond</code> method which has been renamed as {@link
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,46,"*   #getConditionNumber() getConditionNumber},</li>"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,47,*   <li>the <code>rank</code> method which has been renamed as {@link #getRank()
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,48,*   getRank}</li>
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,49,* </ul>
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,50,"* @see <a href=""http://mathworld.wolfram.com/SingularValueDecomposition.html"">MathWorld</a>"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,51,"* @see <a href=""http://en.wikipedia.org/wiki/Singular_value_decomposition"">Wikipedia</a>"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,52,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,53,* @since 2.0
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,55,public interface SingularValueDecomposition extends DecompositionSolver {
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,58,* Decompose a matrix to find its largest singular values.
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,59,* @param matrix
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,60,* @param maxSingularValues maximal number of singular values to compute
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,61,* @exception InvalidMatrixException (wrapping a {@link ConvergenceException}
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,62,* if algorithm fails to converge
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,64,"void decompose(RealMatrix matrix, int maxSingularValues)"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,65,throws InvalidMatrixException;
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,68,* Returns the matrix U of the decomposition.
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,69,"* <p>U is an orthogonal matrix, i.e. its transpose is also its inverse.</p>"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,70,* @return the U matrix
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,71,* @exception IllegalStateException if neither {@link
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,72,* DecompositionSolver#decompose(RealMatrix) decompose} nor {@link
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,73,"* #decompose(RealMatrix, int)} have not been called"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,75,RealMatrix getU() throws IllegalStateException;
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,78,* Returns the diagonal matrix &Sigma; of the decomposition.
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,79,* <p>&Sigma; is a diagonal matrix.</p>
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,80,* @return the &Sigma; matrix
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,81,* @exception IllegalStateException if neither {@link
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,82,* DecompositionSolver#decompose(RealMatrix) decompose} nor {@link
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,83,"* #decompose(RealMatrix, int)} have not been called"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,85,RealMatrix getS() throws IllegalStateException;
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,88,* Returns the diagonal elements of the matrix &Sigma; of the decomposition.
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,89,* @return the diagonal elements of the &Sigma; matrix
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,90,* @exception IllegalStateException if neither {@link
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,91,* DecompositionSolver#decompose(RealMatrix) decompose} nor {@link
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,92,"* #decompose(RealMatrix, int)} have not been called"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,94,double[] getSingularValues() throws IllegalStateException;
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,97,* Returns the matrix V of the decomposition.
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,98,"* <p>V is an orthogonal matrix, i.e. its transpose is also its inverse.</p>"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,99,* @return the V matrix (or null if decomposed matrix is singular)
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,100,* @exception IllegalStateException if neither {@link
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,101,* DecompositionSolver#decompose(RealMatrix) decompose} nor {@link
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,102,"* #decompose(RealMatrix, int)} have not been called"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,104,RealMatrix getV() throws IllegalStateException;
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,107,* Returns the L<sub>2</sub> norm of the matrix.
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,108,* <p>The L<sub>2</sub> norm is max(|A &times; u|<sub>2</sub> /
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,109,"* |u|<sub>2</sub>), where |.|<sub>2</sub> denotes the vectorial 2-norm"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,110,* (i.e. the traditional euclidian norm).</p>
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,111,* @return norm
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,112,* @exception IllegalStateException if neither {@link
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,113,* DecompositionSolver#decompose(RealMatrix) decompose} nor {@link
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,114,"* #decompose(RealMatrix, int)} have not been called"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,116,double getNorm() throws IllegalStateException;
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,119,* Return the condition number of the matrix.
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,120,* @return condition number of the matrix
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,121,* @exception IllegalStateException if neither {@link
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,122,* DecompositionSolver#decompose(RealMatrix) decompose} nor {@link
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,123,"* #decompose(RealMatrix, int)} have not been called"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,125,double getConditionNumber() throws IllegalStateException;
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,128,* Return the effective numerical matrix rank.
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,129,* <p>The effective numerical rank is the number of non-negligible
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,130,* singular values. The threshold used to identify non-negligible
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,131,"* terms is max(m,n) &times; ulp(s<sub>1</sub>) where ulp(s<sub>1</sub>)"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,132,* is the least significant bit of the largest singular value.</p>
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,133,* @return effective numerical matrix rank
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,134,* @exception IllegalStateException if neither {@link
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,135,* DecompositionSolver#decompose(RealMatrix) decompose} nor {@link
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,136,"* #decompose(RealMatrix, int)} have not been called"
True,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/java/org/apache/commons/math/linear/SingularValueDecomposition.java,138,int getRank() throws IllegalStateException;
