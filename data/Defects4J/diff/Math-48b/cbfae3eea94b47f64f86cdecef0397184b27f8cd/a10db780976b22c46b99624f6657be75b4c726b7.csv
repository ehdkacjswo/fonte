is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,149, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,150," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,151, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,152, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,149,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,150,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,151,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,152,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,153,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,154,* be smaller than this
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,169, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,170," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,171, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,172, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,171,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,172,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,173,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,174,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,175,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,176,* be smaller than this
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,42, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,43," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,44, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,45, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,42,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,43,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,44,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,45,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,46,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,47,* be smaller than this
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,65, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,66," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,67, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,68, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,67,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,68,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,69,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,70,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,71,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java,72,* be smaller than this
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,165, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,166," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,167, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,168, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,165,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,166,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,167,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,168,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,169,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,170,* be smaller than this
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,185, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,186," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,187, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,188, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,187,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,188,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,189,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,190,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,191,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java,192,* be smaller than this
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,95, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,96," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,97, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,98, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,95,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,96,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,97,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,98,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,99,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,100,* be smaller than this
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,125, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,126," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,127, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,128, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,127,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,128,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,129,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,130,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,131,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,132,* be smaller than this
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,96, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,97," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,98, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,99, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,96,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,97,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,98,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,99,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,100,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,101,* be smaller than this
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,112, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,113," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,114, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,115, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,114,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,115,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,116,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,117,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,118,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java,119,* be smaller than this
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,208, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,209," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,210, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,211, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,208,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,209,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,210,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,211,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,212,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,213,* be smaller than this
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,225, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,226," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,227, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,228, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,227,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,228,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,229,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,230,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,231,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java,232,* be smaller than this
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,102, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,103," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,104, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,105, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,102,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,103,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,104,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,105,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,106,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,107,* be smaller than this
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,158, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,159," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,160, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,161, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,158,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,159,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,160,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,161,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,162,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,163,* be smaller than this
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,69, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,70," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,71, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,72, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,69,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,70,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,71,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,72,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,73,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,74,* be smaller than this
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,85, @param minStep minimal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,86," integration), the last step can be smaller than this"
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,87, @param maxStep maximal step (must be positive even for backward
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,88, integration)
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,87,"* @param minStep minimal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,88,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,89,* be smaller than this
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,90,"* @param maxStep maximal step (sign is irrelevant, regardless of"
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,91,"* integration direction, forward or backward), the last step can"
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java,92,* be smaller than this
