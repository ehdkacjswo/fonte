is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/MathRuntimeException.java,src/java/org/apache/commons/math/MathRuntimeException.java,20,import java.io.IOException;
True,src/java/org/apache/commons/math/MathRuntimeException.java,src/java/org/apache/commons/math/MathRuntimeException.java,253,* Constructs a new <code>IOException</code> with specified nested
True,src/java/org/apache/commons/math/MathRuntimeException.java,src/java/org/apache/commons/math/MathRuntimeException.java,254,* <code>Throwable</code> root cause.
True,src/java/org/apache/commons/math/MathRuntimeException.java,src/java/org/apache/commons/math/MathRuntimeException.java,255,* <p>This factory method allows chaining of other exceptions within an
True,src/java/org/apache/commons/math/MathRuntimeException.java,src/java/org/apache/commons/math/MathRuntimeException.java,256,* <code>IOException</code> even for Java 5. The constructor for
True,src/java/org/apache/commons/math/MathRuntimeException.java,src/java/org/apache/commons/math/MathRuntimeException.java,257,* <code>IOException</code> with a cause parameter was introduced only
True,src/java/org/apache/commons/math/MathRuntimeException.java,src/java/org/apache/commons/math/MathRuntimeException.java,258,* with Java 6.</p>
True,src/java/org/apache/commons/math/MathRuntimeException.java,src/java/org/apache/commons/math/MathRuntimeException.java,259,* @param rootCause the exception or error that caused this exception
True,src/java/org/apache/commons/math/MathRuntimeException.java,src/java/org/apache/commons/math/MathRuntimeException.java,260,* to be thrown.
True,src/java/org/apache/commons/math/MathRuntimeException.java,src/java/org/apache/commons/math/MathRuntimeException.java,262,public static IOException createIOException(final Throwable rootCause) {
True,src/java/org/apache/commons/math/MathRuntimeException.java,src/java/org/apache/commons/math/MathRuntimeException.java,263,IOException ioe = new IOException(rootCause.getLocalizedMessage());
True,src/java/org/apache/commons/math/MathRuntimeException.java,src/java/org/apache/commons/math/MathRuntimeException.java,264,ioe.initCause(rootCause);
True,src/java/org/apache/commons/math/MathRuntimeException.java,src/java/org/apache/commons/math/MathRuntimeException.java,265,return ioe;
True,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,24,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,253,hrow new IOException(e.getMessage());
True,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,254,throw MathRuntimeException.createIOException(e);
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,24,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,395,hrow new IOException(e.getMessage());
True,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,396,throw MathRuntimeException.createIOException(e);
True,src/java/org/apache/commons/math/ode/nonstiff/MultistepStepInterpolator.java,src/java/org/apache/commons/math/ode/nonstiff/MultistepStepInterpolator.java,24,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/ode/nonstiff/MultistepStepInterpolator.java,src/java/org/apache/commons/math/ode/nonstiff/MultistepStepInterpolator.java,160,hrow new IOException(e.getMessage());
True,src/java/org/apache/commons/math/ode/nonstiff/MultistepStepInterpolator.java,src/java/org/apache/commons/math/ode/nonstiff/MultistepStepInterpolator.java,161,throw MathRuntimeException.createIOException(e);
True,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,24,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,168,hrow new IOException(e.getMessage());
True,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,169,throw MathRuntimeException.createIOException(e);
True,src/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java,24,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java,372,hrow new IOException(e.getMessage());
True,src/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java,373,throw MathRuntimeException.createIOException(e);
True,src/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,24,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,122,hrow new IOException(e.getMessage());
True,src/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,123,throw MathRuntimeException.createIOException(e);
False,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,139,hrow new IOException(e.getMessage());
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,139,throw MathRuntimeException.createIOException(e);
False,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,178,hrow new IOException(e.getMessage());
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,178,throw MathRuntimeException.createIOException(e);
False,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,379,hrow new IOException(e.getMessage());
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,379,throw MathRuntimeException.createIOException(e);
False,src/test/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,123,ssertNull(ioe.getMessage());
True,src/test/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,123,"assertEquals(0, ioe.getMessage().length());"
False,src/test/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,169,ssertNull(ioe.getMessage());
True,src/test/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,169,"assertEquals(0, ioe.getMessage().length());"
