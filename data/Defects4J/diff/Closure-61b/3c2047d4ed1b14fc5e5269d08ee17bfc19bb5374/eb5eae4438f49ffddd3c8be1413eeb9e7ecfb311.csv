is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,837,"tate.anonymousFunctionNameMap, functionInformationMap,"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,837,"state.anonymousFunctionNameMap, state.stringMap, functionInformationMap,"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1406,/ is done first.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1406,// is done first.
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1409,ormalize();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1409,normalize();
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,20,import com.google.common.collect.Lists;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,30,import java.util.List;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,512,/** Configuration strings */
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,513,List<String> replaceStringsFunctionDescriptions;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,514,String replaceStringsPlaceholderToken;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,696,replaceStringsFunctionDescriptions = Collections.emptyList();
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,697,"replaceStringsPlaceholderToken = """";"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,849,* Sets the id generators to replace.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,851,public void setReplaceStringsConfiguration(
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,852,"String placeholderToken, List<String> functionDescriptors) {"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,853,this.replaceStringsPlaceholderToken = placeholderToken;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,854,this.replaceStringsFunctionDescriptions =
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,855,Lists.newArrayList(functionDescriptors);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,119,/** String replacement map */
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,120,private VariableMap stringMap = null;
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,130,"nonymousFunctionNameMap, functionNames);"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,133,"anonymousFunctionNameMap, stringMap, functionNames);"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,146,this.stringMap = state.stringMap;
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,304,if (!options.replaceStringsFunctionDescriptions.isEmpty()) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,305,passes.add(replaceStrings);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1092,/** Replace strings. */
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1093,private final PassFactory replaceStrings =
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1094,"new PassFactory(""replaceStrings"", true) {"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1095,@Override
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1096,protected CompilerPass createInternal(final AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1097,VariableMap map = null;
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1098,return new CompilerPass() {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1099,"@Override public void process(Node externs, Node root) {"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1100,ReplaceStrings pass = new ReplaceStrings(
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1101,"compiler,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1102,"options.replaceStringsPlaceholderToken,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1103,options.replaceStringsFunctionDescriptions);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1104,"pass.process(externs, root);"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1105,stringMap = pass.getStringMap();
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,229,final VariableMap stringMap;
False,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,234,"ariableMap anonymousFunctionNameMap, FunctionNames functionNames) {"
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,235,"VariableMap anonymousFunctionNameMap,"
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,236,"VariableMap stringMap, FunctionNames functionNames) {"
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,243,this.stringMap = stringMap;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,17,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,19,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,20,import com.google.common.collect.HashMultimap;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,21,import com.google.common.collect.ImmutableList;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,22,import com.google.common.collect.ImmutableSet;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,23,import com.google.common.collect.Lists;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,24,import com.google.common.collect.Maps;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,25,import com.google.common.collect.Multimap;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,26,import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,27,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,28,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,29,import com.google.javascript.rhino.jstype.JSType;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,30,import com.google.javascript.rhino.jstype.JSTypeRegistry;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,32,import java.util.Collection;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,33,import java.util.List;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,34,import java.util.Map;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,35,import java.util.Set;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,38,* Replaces JavaScript strings in the list of supplied methods with shortened
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,39,* forms. Useful for replacing debug message such as: throw new
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,40,"* Error(""Something bad happened""); with generated codes like: throw new"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,41,"* Error(""a""); This makes the compiled JavaScript smaller and prevents us from"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,42,* leaking details about the source code.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,44,* Based in concept on the work by Jared Jacobs.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,47,public class ReplaceStrings extends AbstractPostOrderCallback
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,48,implements CompilerPass {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,49,static final DiagnosticType BAD_REPLACEMENT_CONFIGURATION =
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,50,DiagnosticType.warning(
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,51,"""JSC_BAD_REPLACEMENT_CONFIGURATION"","
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,52,"""Bad replacement configuration."");"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,54,"private final String DEFAULT_PLACEHOLDER_TOKEN = ""`"";"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,55,private final String placeholderToken;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,56,"private static final String REPLACE_ONE_MARKER = ""?"";"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,57,"private static final String REPLACE_ALL_MARKER = ""*"";"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,59,private final AbstractCompiler compiler;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,60,private final JSTypeRegistry registry;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,63,"private final Map<String, Config> functions = Maps.newHashMap();"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,64,"private final Multimap<String, String> methods = HashMultimap.create();"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,65,private final NameGenerator nameGenerator = createNameGenerator();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,66,"private final Map<String, Result> results = Maps.newLinkedHashMap();"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,69,* Describes a function to look for a which parameters to replace.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,71,private class Config {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,72,"// TODO(johnlenz): Support name ""groups"" so that unrelated strings can"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,73,"// reuse strings.  For example, event-id can reuse the names used for logger"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,74,// classes.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,75,final String name;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,76,final int parameter;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,77,static final int REPLACE_ALL_VALUE = 0;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,79,"Config(String name, int parameter) {"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,80,this.name = name;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,81,this.parameter = parameter;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,86,* Describes a replacement that occurred.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,88,class Result {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,89,// The original message with non-static content replaced with
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,90,// {@code placeholderToken}.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,91,public final String original;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,92,public final String replacement;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,93,public final List<Location> replacementLocations = Lists.newLinkedList();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,95,"Result(String original, String replacement) {"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,96,this.original = original;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,97,this.replacement = replacement;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,100,void addLocation(Node n) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,101,replacementLocations.add(new Location(
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,102,"(String)n.getProp(Node.SOURCEFILE_PROP),"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,103,"n.getLineno(), n.getCharno()));"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,107,/** Represent a source location where a replacement occurred. */
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,108,class Location {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,109,public final String sourceFile;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,110,public final int line;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,111,public final int column;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,112,"Location(String sourceFile, int line, int column) {"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,113,this.sourceFile = sourceFile;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,114,this.line = line;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,115,this.column = column;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,120,* @param placeholderToken Separator to use between string parts. Used to replace
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,121,*     non-static string content.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,122,* @param functionsToInspect A list of function configurations in the form of
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,123,"*     function($,,,)"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,124,*   or
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,125,"*     class.prototype.method($,,,)"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,126,* where '$' is used to indicate which parameter should be replaced.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,128,ReplaceStrings(
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,129,"AbstractCompiler compiler, String placeholderToken,"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,130,List<String> functionsToInspect) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,131,this.compiler = compiler;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,132,this.placeholderToken = placeholderToken.isEmpty()
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,133,? DEFAULT_PLACEHOLDER_TOKEN : placeholderToken;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,134,this.registry = compiler.getTypeRegistry();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,136,// Intialize the map of functions to inspect for renaming canidates.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,137,parseConfiguration(functionsToInspect);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,140,// Get the list of all replacements performed.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,141,List<Result> getResult() {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,142,return ImmutableList.copyOf(results.values());
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,145,// Get the list of replaces as a VariableMap
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,146,VariableMap getStringMap() {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,147,"Map<String, String> map = Maps.newHashMap();"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,148,for (Result result : results.values()) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,149,"map.put(result.replacement, result.original);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,152,VariableMap stringMap = new VariableMap(map);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,153,return stringMap;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,156,@Override
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,157,"public void process(Node externs, Node root) {"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,158,"NodeTraversal.traverse(compiler, root, this);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,161,@Override
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,162,"public void visit(NodeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,163,"// TODO(johnlenz): Determine if it is necessary to support "".call"" or"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,164,"// "".apply""."
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,165,switch (n.getType()) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,166,case Token.NEW: // e.g. new Error('msg');
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,167,case Token.CALL: // e.g. Error('msg');
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,168,Node calledFn = n.getFirstChild();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,170,// Look for calls to static functions.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,171,String name = calledFn.getQualifiedName();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,172,if (name != null) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,173,Config config = findMatching(name);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,174,if (config != null) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,175,"doSubstitutions(t, config, n);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,176,return;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,180,// Look for calls to class methods.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,181,if (NodeUtil.isGet(calledFn)) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,182,Node rhs = calledFn.getLastChild();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,183,if (rhs.getType() == Token.NAME || rhs.getType() == Token.STRING) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,184,String methodName = rhs.getString();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,185,Collection<String> classes = methods.get(methodName);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,186,if (classes != null) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,187,Node lhs = calledFn.getFirstChild();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,188,JSType type = lhs.getJSType().restrictByNotNullOrUndefined();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,189,"Config config = findMatchingClass(type, classes);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,190,if (config != null) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,191,"doSubstitutions(t, config, n);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,192,return;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,197,break;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,202,* @param name The function name to find.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,203,* @return The Config object for the name or null if no match was found.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,205,private Config findMatching(String name) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,206,Config config = functions.get(name);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,207,if (config == null) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,208,"name = name.replace('$', '.');"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,209,config = functions.get(name);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,211,return config;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,215,* @return The Config object for the class match the specified type or null
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,216,* if no match was found.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,218,private Config findMatchingClass(
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,219,"JSType callClassType, Collection<String> declarationNames) {"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,220,if (!callClassType.isNoObjectType() && !callClassType.isUnknownType()) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,221,for (String declarationName : declarationNames) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,222,String className = getClassFromDeclarationName(declarationName);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,223,JSType methodClassType = registry.getType(className);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,224,if (methodClassType != null
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,225,&& callClassType.isSubtype(methodClassType)) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,226,return functions.get(declarationName);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,230,return null;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,234,"* Replace the parameters specified in the config, if possible."
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,236,"private void doSubstitutions(NodeTraversal t, Config config, Node n) {"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,237,Preconditions.checkState(
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,238,n.getType() == Token.NEW || n.getType() == Token.CALL);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,240,if (config.parameter != Config.REPLACE_ALL_VALUE) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,241,"// Note: the first child is the function, but the parameter id is 1 based."
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,242,Node arg = n.getChildAtIndex(config.parameter);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,243,if (arg != null) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,244,"replaceExpression(t, arg, n);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,246,} else {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,247,// Replace all parameters.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,248,Node firstParam = n.getFirstChild().getNext();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,249,for (Node arg = firstParam; arg != null; arg = arg.getNext()) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,250,"arg = replaceExpression(t, arg, n);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,256,* Replaces a string expression with a short encoded string expression.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,258,* @param t The traversal
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,259,* @param expr The expression node
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,260,* @param parent The expression node's parent
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,261,* @return The replacement node (or the original expression if no replacement
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,262,*         is made)
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,264,"private Node replaceExpression(NodeTraversal t, Node expr, Node parent) {"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,265,Node replacement;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,266,String key = null;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,267,String replacementString;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,268,switch (expr.getType()) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,269,case Token.STRING:
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,270,key = expr.getString();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,271,replacementString = getReplacement(key);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,272,replacement = Node.newString(replacementString);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,273,break;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,274,case Token.ADD:
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,275,StringBuilder keyBuilder = new StringBuilder();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,276,"Node keyNode = Node.newString("""");"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,277,"replacement = buildReplacement(expr, keyNode, keyBuilder);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,278,key = keyBuilder.toString();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,279,replacementString = getReplacement(key);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,280,keyNode.setString(replacementString);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,281,break;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,282,case Token.NAME:
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,283,"// If the referenced variable is a constant, use its value."
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,284,Scope.Var var = t.getScope().getVar(expr.getString());
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,285,if (var != null && var.isConst()) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,286,Node value = var.getInitialValue();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,287,if (value != null && value.getType() == Token.STRING) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,288,key = value.getString();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,289,replacementString = getReplacement(key);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,290,replacement = Node.newString(replacementString);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,291,break;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,294,return expr;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,295,default:
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,296,// This may be a function call or a variable reference. We don't
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,297,// replace these.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,298,return expr;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,301,Preconditions.checkNotNull(key);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,302,Preconditions.checkNotNull(replacementString);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,303,"recordReplacement(expr, key, replacementString);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,305,"parent.replaceChild(expr, replacement);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,306,compiler.reportCodeChange();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,307,return replacement;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,311,* Get a replacement string for the provide key text.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,313,private String getReplacement(String key) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,314,Result result = results.get(key);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,315,if (result != null) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,316,return result.replacement;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,319,String replacement = nameGenerator.generateNextName();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,320,"result = new Result(key, replacement);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,321,"results.put(key, result);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,322,return replacement;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,326,* Record the location the replacement was made.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,328,"private void recordReplacement(Node n, String key, String replacement) {"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,329,Result result = results.get(key);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,330,Preconditions.checkState(result != null);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,332,result.addLocation(n);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,336,* Builds a replacement abstract syntax tree for the string expression {@code
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,337,* expr}. Appends any string literal values that are encountered to
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,338,"* {@code keyBuilder}, to build the expression's replacement key."
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,340,* @param expr A JS expression that evaluates to a string value
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,341,* @param prefix The JS expression to which {@code expr}'s replacement is
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,342,*        logically being concatenated. It is a partial solution to the
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,343,*        problem at hand and will either be this method's return value or a
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,344,*        descendant of it.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,345,* @param keyBuilder A builder of the string expression's replacement key
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,346,* @return The abstract syntax tree that should replace {@code expr}
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,348,private Node buildReplacement(
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,349,"Node expr, Node prefix, StringBuilder keyBuilder) {"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,350,switch (expr.getType()) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,351,case Token.ADD:
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,352,Node left = expr.getFirstChild();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,353,Node right = left.getNext();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,354,"prefix = buildReplacement(left, prefix, keyBuilder);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,355,"return buildReplacement(right, prefix, keyBuilder);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,356,case Token.STRING:
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,357,keyBuilder.append(expr.getString());
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,358,return prefix;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,359,default:
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,360,keyBuilder.append(placeholderToken);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,361,prefix = new Node(
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,362,"Token.ADD, prefix, Node.newString(placeholderToken));"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,363,"return new Node(Token.ADD, prefix, expr.cloneTree());"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,368,* From a provide name extract the method name.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,370,private String getMethodFromDeclarationName(String fullDeclarationName) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,371,"String[] parts = fullDeclarationName.split(""\\.prototype\\."");"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,372,Preconditions.checkState(parts.length == 1 || parts.length == 2);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,373,if (parts.length == 2) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,374,return parts[1];
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,376,return null;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,380,* From a provide name extract the class name.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,382,private String getClassFromDeclarationName(String fullDeclarationName) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,383,"String[] parts = fullDeclarationName.split(""\\.prototype\\."");"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,384,Preconditions.checkState(parts.length == 1 || parts.length == 2);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,385,if (parts.length == 2) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,386,return parts[0];
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,388,return null;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,392,* Build the data structures need by this pass from the provided
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,393,* list of functions and methods.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,395,private void parseConfiguration(List<String> functionsToInspect) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,396,for (String function : functionsToInspect) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,397,Config config = parseConfiguration(function);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,398,"functions.put(config.name, config);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,400,String method = getMethodFromDeclarationName(config.name);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,401,if (method != null) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,402,"methods.put(method, config.name);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,408,* Convert the provide string into a Config.  The string can be a static function:
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,409,"*    foo(,,?)"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,410,*    foo.bar(?)
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,411,* or a class method:
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,412,*    foo.prototype.bar(?)
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,413,"* And is allowed to either replace all parameters using ""*"" or one parameter ""?""."
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,414,"* "","" is used as a placeholder for ignored parameters."
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,416,private Config parseConfiguration(String function) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,417,"// Looks like this function_name(,$,)"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,418,int first = function.indexOf('(');
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,419,int last = function.indexOf(')');
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,421,// TODO(johnlenz): Make parsing precondition checks JSErrors reports.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,422,Preconditions.checkState(first != -1 && last != -1);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,424,"String name = function.substring(0, first);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,425,"String params = function.substring(first+1, last);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,427,int paramCount = 0;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,428,int replacementParameter = -1;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,429,"String[] parts = params.split("","");"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,430,for (String param : parts) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,431,paramCount++;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,432,if (param.equals(REPLACE_ALL_MARKER)) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,433,Preconditions.checkState(paramCount == 1 && parts.length == 1);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,434,replacementParameter = Config.REPLACE_ALL_VALUE;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,435,} else if (param.equals(REPLACE_ONE_MARKER)) {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,436,// TODO(johnlenz): Support multiple.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,437,Preconditions.checkState(replacementParameter == -1);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,438,replacementParameter = paramCount;
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,439,} else {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,440,"Preconditions.checkState(param.isEmpty(), ""Unknown marker"");"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,444,Preconditions.checkState(replacementParameter != -1);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,445,"return new Config(name, replacementParameter);"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,449,* Use a name generate to create names so the names overlap with the names
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,450,* used for variable and properties.
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,452,private static NameGenerator createNameGenerator() {
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,453,"final String namePrefix = """";"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,454,final char[] reservedChars = new char[0];
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,455,final Set<String> reservedNames = ImmutableSet.of();
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,456,"return new NameGenerator(reservedNames, namePrefix, reservedChars);"
True,src/com/google/javascript/jscomp/Result.java,src/com/google/javascript/jscomp/Result.java,32,public final VariableMap stringMap;
True,src/com/google/javascript/jscomp/Result.java,src/com/google/javascript/jscomp/Result.java,41,"VariableMap stringMap,"
True,src/com/google/javascript/jscomp/Result.java,src/com/google/javascript/jscomp/Result.java,52,this.stringMap = stringMap;
False,src/com/google/javascript/jscomp/Result.java,src/com/google/javascript/jscomp/Result.java,63,"amedAnonFunctionMap, functionInformationMap, sourceMap,"
True,src/com/google/javascript/jscomp/Result.java,src/com/google/javascript/jscomp/Result.java,66,"namedAnonFunctionMap, null, functionInformationMap, sourceMap,"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,2,* Copyright 2010 Google Inc.
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,6,* You may obtain a copy of the License at
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,13,* See the License for the specific language governing permissions and
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,14,* limitations under the License.
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,17,package com.google.javascript.jscomp;
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,19,import com.google.common.collect.Lists;
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,20,import com.google.javascript.jscomp.ReplaceStrings.Result;
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,22,import java.util.List;
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,25,* Tests for {@link ReplaceStrings}.
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,29,public class ReplaceStringsTest extends CompilerTestCase {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,30,private ReplaceStrings pass;
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,32,private final static String EXTERNS =
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,33,"""var goog = {};\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,34,"""goog.debug = {};\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,35,"""/** @constructor */\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,36,"""goog.debug.Trace = function() {};\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,37,"""goog.debug.Trace.startTracer = function (var_args) {};\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,38,"""/** @constructor */\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,39,"""goog.debug.Logger = function() {};\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,40,"""goog.debug.Logger.prototype.info = function(msg, opt_ex) {};\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,41,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,42,""" * @param {string} name\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,43,""" * @return {!goog.debug.Logger}\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,44,""" */\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,45,"""goog.debug.Logger.getLogger = function(name){};\n"";"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,47,public ReplaceStringsTest() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,48,"super(EXTERNS, true);"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,49,enableNormalize();
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,52,@Override
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,53,protected CompilerOptions getOptions() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,54,CompilerOptions options = super.getOptions();
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,55,options.setWarningLevel(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,56,"DiagnosticGroups.MISSING_PROPERTIES, CheckLevel.OFF);"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,57,return options;
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,60,@Override
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,61,protected void setUp() throws Exception {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,62,super.setUp();
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,63,super.enableLineNumberCheck(false);
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,64,super.enableTypeCheck(CheckLevel.OFF);
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,67,@Override
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,68,public CompilerPass getProcessor(Compiler compiler) {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,69,List<String> names = Lists.newArrayList(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,70,"""Error(?)"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,71,"""goog.debug.Trace.startTracer(*)"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,72,"""goog.debug.Logger.getLogger(?)"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,73,"""goog.debug.Logger.prototype.info(?)"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,75,"pass = new ReplaceStrings(compiler, ""`"", names);"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,76,return pass;
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,79,@Override
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,80,public int getNumRepetitions() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,81,// This compiler pass is not idempotent and should only be run over a
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,82,// parse tree once.
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,83,return 1;
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,86,public void testThrowError1() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,87,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,88,"""throw Error('xyz');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,89,"""throw Error('a');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,90,"(new String[] { ""a"", ""xyz"" }));"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,93,public void testThrowError2() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,94,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,95,"""throw Error('x' +\n    'yz');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,96,"""throw Error('a');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,97,"(new String[] { ""a"", ""xyz"" }));"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,100,public void testThrowError3() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,101,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,102,"""throw Error('Unhandled mail' + ' search type ' + type);"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,103,"""throw Error('a' + '`' + type);"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,104,"(new String[] { ""a"", ""Unhandled mail search type `"" }));"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,107,public void testThrowError4() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,108,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,109,"""/** @constructor */\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,110,"""var A = function() {};\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,111,"""A.prototype.m = function(child) {\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,112,"""  if (this.haveChild(child)) {\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,113,"""    throw Error('Node: ' + this.getDataPath() +\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,114,"""                ' already has a child named ' + child);\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,115,"""  } else if (child.parentNode) {\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,116,"""    throw Error('Node: ' + child.getDataPath() +\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,117,"""                ' already has a parent');\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,118,"""  }\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,119,"""  child.parentNode = this;\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,122,"""var A = function(){};\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,123,"""A.prototype.m = function(child) {\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,124,"""  if (this.haveChild(child)) {\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,125,"""    throw Error('a' + '`' + this.getDataPath() + '`' + child);\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,126,"""  } else if (child.parentNode) {\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,127,"""    throw Error('b' + '`' + child.getDataPath());\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,128,"""  }\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,129,"""  child.parentNode = this;\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,131,(new String[] {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,132,"""a"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,133,"""Node: ` already has a child named `"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,134,"""b"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,135,"""Node: ` already has a parent"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,139,public void testThrowNonStringError() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,140,// No replacement is done when an error is neither a string literal nor
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,141,// a string concatenation expression.
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,142,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,143,"""throw Error(x('abc'));"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,144,"""throw Error(x('abc'));"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,145,(new String[] { }));
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,148,public void testThrowConstStringError() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,149,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,150,"""var AA = 'uvw', AB = 'xyz'; throw Error(AB);"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,151,"""var AA = 'uvw', AB = 'xyz'; throw Error('a');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,152,"(new String [] { ""a"", ""xyz"" }));"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,155,public void testThrowNewError1() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,156,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,157,"""throw new Error('abc');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,158,"""throw new Error('a');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,159,"(new String[] { ""a"", ""abc"" }));"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,162,public void testThrowNewError2() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,163,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,164,"""throw new Error();"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,165,"""throw new Error();"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,166,new String[] {});
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,169,public void testStartTracer1() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,170,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,171,"""goog.debug.Trace.startTracer('HistoryManager.updateHistory');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,172,"""goog.debug.Trace.startTracer('a');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,173,"(new String[] { ""a"", ""HistoryManager.updateHistory"" }));"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,176,public void testStartTracer2() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,177,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,178,"""goog$debug$Trace.startTracer('HistoryManager', 'updateHistory');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,179,"""goog$debug$Trace.startTracer('a', 'b');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,180,(new String[] {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,181,"""a"", ""HistoryManager"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,182,"""b"", ""updateHistory"" }));"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,185,public void testStartTracer3() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,186,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,187,"""goog$debug$Trace.startTracer('ThreadlistView',\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,188,"""                             'Updating ' + array.length + ' rows');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,189,"""goog$debug$Trace.startTracer('a', 'b' + '`' + array.length);"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,190,"new String[] { ""a"", ""ThreadlistView"", ""b"", ""Updating ` rows"" });"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,193,public void testStartTracer4() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,194,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,195,"""goog.debug.Trace.startTracer(s, 'HistoryManager.updateHistory');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,196,"""goog.debug.Trace.startTracer(s, 'a');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,197,"(new String[] { ""a"", ""HistoryManager.updateHistory"" }));"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,200,public void testLoggerInitialization() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,201,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,202,"""goog$debug$Logger$getLogger('my.app.Application');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,203,"""goog$debug$Logger$getLogger('a');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,204,"(new String[] { ""a"", ""my.app.Application"" }));"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,207,public void testLoggerOnObject1() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,208,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,209,"""var x = {};"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,210,"""x.logger_ = goog.debug.Logger.getLogger('foo');"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,211,"""x.logger_.info('Some message');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,212,"""var x = {};"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,213,"""x.logger_ = goog.debug.Logger.getLogger('a');"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,214,"""x.logger_.info('b');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,215,new String[] {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,216,"""a"", ""foo"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,217,"""b"", ""Some message""});"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,220,"// Non-matching ""info"" property."
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,221,public void testLoggerOnObject2() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,222,testSame(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,223,"""var x = {};"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,224,"""x.info = function(a) {};"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,225,"""x.info('Some message');"");"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,228,"// Non-matching ""info"" prototype property."
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,229,public void testLoggerOnObject3() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,230,testSame(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,231,"""/** @constructor */\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,232,"""var x = function() {};\n"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,233,"""x.prototype.info = function(a) {};"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,234,"""(new x).info('Some message');"");"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,237,"// Non-matching ""info"" property on ""NoObject"" type."
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,238,public void testLoggerOnObject4() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,239,"testSame(""(new x).info('Some message');"");"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,242,"// Non-matching ""info"" property on ""UnknownObject"" type."
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,243,public void testLoggerOnObject5() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,244,"testSame(""my$Thing.logger_.info('Some message');"");"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,247,public void testLoggerOnVar() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,248,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,249,"""var logger = goog.debug.Logger.getLogger('foo');"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,250,"""logger.info('Some message');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,251,"""var logger = goog.debug.Logger.getLogger('a');"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,252,"""logger.info('b');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,253,new String[] {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,254,"""a"", ""foo"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,255,"""b"", ""Some message""});"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,258,public void testLoggerOnThis() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,259,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,260,"""this.logger_ = goog.debug.Logger.getLogger('foo');"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,261,"""this.logger_.info('Some message');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,262,"""this.logger_ = goog.debug.Logger.getLogger('a');"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,263,"""this.logger_.info('b');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,264,new String[] {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,265,"""a"", ""foo"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,266,"""b"", ""Some message""});"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,269,public void testRepeatedErrorString1() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,270,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,271,"""Error('abc');Error('def');Error('abc');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,272,"""Error('a');Error('b');Error('a');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,273,"(new String[] { ""a"", ""abc"", ""b"", ""def"" }));"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,276,public void testRepeatedErrorString2() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,277,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,278,"""Error('a:' + u + ', b:' + v); Error('a:' + x + ', b:' + y);"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,279,"""Error('a' + '`' + u + '`' + v); Error('a' + '`' + x + '`' + y);"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,280,"(new String[] { ""a"", ""a:`, b:`"" }));"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,283,public void testRepeatedErrorString3() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,284,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,285,"""var AB = 'b'; throw Error(AB); throw Error(AB);"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,286,"""var AB = 'b'; throw Error('a'); throw Error('a');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,287,"(new String[] { ""a"", ""b"" }));"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,290,public void testRepeatedTracerString() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,291,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,292,"""goog$debug$Trace.startTracer('A', 'B', 'A');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,293,"""goog$debug$Trace.startTracer('a', 'b', 'a');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,294,"(new String[] { ""a"", ""A"", ""b"", ""B"" }));"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,297,public void testRepeatedLoggerString() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,298,testDebugStrings(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,299,"""goog$debug$Logger$getLogger('goog.net.XhrTransport');"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,300,"""goog$debug$Logger$getLogger('my.app.Application');"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,301,"""goog$debug$Logger$getLogger('my.app.Application');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,302,"""goog$debug$Logger$getLogger('a');"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,303,"""goog$debug$Logger$getLogger('b');"" +"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,304,"""goog$debug$Logger$getLogger('b');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,305,new String[] {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,306,"""a"", ""goog.net.XhrTransport"",""b"", ""my.app.Application"" });"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,309,public void testRepeatedStringsWithDifferentMethods() {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,310,test(
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,311,"""throw Error('A');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,312,"+ ""goog$debug$Trace.startTracer('B', 'A');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,313,"+ ""goog$debug$Logger$getLogger('C');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,314,"+ ""goog$debug$Logger$getLogger('B');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,315,"+ ""goog$debug$Logger$getLogger('A');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,316,"+ ""throw Error('D');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,317,"+ ""throw Error('C');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,318,"+ ""throw Error('B');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,319,"+ ""throw Error('A');"","
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,320,"""throw Error('a');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,321,"+ ""goog$debug$Trace.startTracer('b', 'a');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,322,"+ ""goog$debug$Logger$getLogger('c');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,323,"+ ""goog$debug$Logger$getLogger('b');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,324,"+ ""goog$debug$Logger$getLogger('a');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,325,"+ ""throw Error('d');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,326,"+ ""throw Error('c');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,327,"+ ""throw Error('b');"""
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,328,"+ ""throw Error('a');"");"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,331,"private void testDebugStrings(String js, String expected,"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,332,String[] substitutedStrings) {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,333,// Verify that the strings are substituted correctly in the js code.
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,334,"test(js, expected);"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,336,List<Result> results = pass.getResult();
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,337,assertTrue(substitutedStrings.length % 2 == 0);
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,338,"assertEquals(substitutedStrings.length/2, results.size());"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,340,// Verify that substituted strings are decoded correctly.
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,341,for (int i = 0; i < substitutedStrings.length; i += 2) {
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,342,Result result = results.get(i/2);
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,343,String original = substitutedStrings[i + 1];
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,344,"assertEquals(original, result.original);"
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,346,String replacement = substitutedStrings[i];
True,test/com/google/javascript/jscomp/ReplaceStringsTest.java,test/com/google/javascript/jscomp/ReplaceStringsTest.java,347,"assertEquals(replacement, result.replacement);"
