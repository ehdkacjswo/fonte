is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,57,"tring functionName = NodeUtil.getFunctionName(n, parent);"
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,57,String functionName = NodeUtil.getFunctionName(n);
False,src/com/google/javascript/jscomp/FindExportableNodes.java,src/com/google/javascript/jscomp/FindExportableNodes.java,75,"xport = NodeUtil.getFunctionName(n, parent);"
True,src/com/google/javascript/jscomp/FindExportableNodes.java,src/com/google/javascript/jscomp/FindExportableNodes.java,75,export = NodeUtil.getFunctionName(n);
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,754,"hrow new IllegalStateException(""Call site missed."");"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,754,"throw new IllegalStateException(""Call site missed.\n call: """
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,755,"+ ref.callNode.toStringTree() + ""\n parent:  """
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,756,+ ref.callNode.getParent().toStringTree());
False,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,124,"tring name = NodeUtil.getFunctionName(root, parent);"
True,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,src/com/google/javascript/jscomp/NameReferenceGraphConstruction.java,124,String name = NodeUtil.getFunctionName(root);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,149, @param parent {@code n}'s parent (never {@code null})
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,152,"tatic String getFunctionName(Node n, Node parent) {"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,151,static String getFunctionName(Node n) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,152,Node parent = n.getParent();
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,140,tring className = funType.getInstanceType().getReferenceName();
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,140,if (funType.getSource() == null) {
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,141,return nodeToInsertAfter;
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,144,String className = NodeUtil.getFunctionName(funType.getSource());
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,365,"NodeTraversal.traverse(compiler, js,"
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,366,"new Normalize.NormalizeStatements(compiler, false));"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1331,"\n\nTree2:\n"" + node2.toStringTree();"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1331,"""\n\nTree2:\n"" + node2.toStringTree() +"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1332,"""\n\nSubtree1: "" + diff.nodeA.toStringTree() +"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1333,"""\n\nSubtree2: "" + diff.nodeB.toStringTree();"
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,214,rotected void collectPropertyNames(Set<String> props) {
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,214,void collectPropertyNames(Set<String> props) {
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,102,eturn constructor.getReferenceName();
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,102,if (constructor.hasReferenceName()) {
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,103,return constructor.getReferenceName();
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,104,} else {
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,105,return super.toString();
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1062,"eturn createObjectType(null, null, null);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1062,PrototypeObjectType type =
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1063,"new PrototypeObjectType(this, null, null);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1064,type.setPrettyPrint(true);
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1065,return type;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,44,import com.google.common.base.Preconditions;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,46,import com.google.common.collect.Sets;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,79,"// Whether the toString representation of this should be pretty-printed,"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,80,// by printing all properties.
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,81,private boolean prettyPrint = false;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,83,private static final int MAX_PRETTY_PRINTED_PROPERTIES = 4;
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,168,rotected void collectPropertyNames(Set<String> props) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,176,void collectPropertyNames(Set<String> props) {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,322,eturn getReferenceName();
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,330,if (hasReferenceName()) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,331,return getReferenceName();
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,332,} else if (prettyPrint) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,333,// Use a tree set so that the properties are sorted.
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,334,Set<String> propertyNames = Sets.newTreeSet();
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,335,for (ObjectType current = this;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,336,current != null && !current.isNativeObjectType() &&
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,337,propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,338,current = current.getImplicitPrototype()) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,339,propertyNames.addAll(current.getOwnPropertyNames());
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,342,StringBuilder sb = new StringBuilder();
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,343,"sb.append(""{"");"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,345,int i = 0;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,346,for (String property : propertyNames) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,347,if (i > 0) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,348,"sb.append("", "");"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,351,sb.append(property);
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,352,"sb.append("": "");"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,353,sb.append(getPropertyType(property).toString());
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,355,++i;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,356,if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,357,"sb.append("", ..."");"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,358,break;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,362,"sb.append(""}"");"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,363,return sb.toString();
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,364,} else {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,365,"return ""{...}"";"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,369,void setPrettyPrint(boolean prettyPrint) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,370,this.prettyPrint = prettyPrint;
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,351,"eturn ""{...}"";"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,399,return null;
False,src/com/google/javascript/rhino/jstype/UnknownType.java,src/com/google/javascript/rhino/jstype/UnknownType.java,152,rotected void collectPropertyNames(Set<String> props) {
True,src/com/google/javascript/rhino/jstype/UnknownType.java,src/com/google/javascript/rhino/jstype/UnknownType.java,152,void collectPropertyNames(Set<String> props) {
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,117,"estGetFunctionName(parent.getFirstChild(), parent, ""name"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,117,"testGetFunctionName(parent.getFirstChild(), ""name"");"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,125,"estGetFunctionName(parent.getFirstChild(), parent, ""name"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,125,"testGetFunctionName(parent.getFirstChild(), ""name"");"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,133,"estGetFunctionName(parent.getLastChild(), parent, ""qualified.name"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,133,"testGetFunctionName(parent.getLastChild(), ""qualified.name"");"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,141,"estGetFunctionName(parent.getFirstChild(), parent, ""name2"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,141,"testGetFunctionName(parent.getFirstChild(), ""name2"");"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,149,"estGetFunctionName(parent.getLastChild(), parent, ""qualified.name2"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,149,"testGetFunctionName(parent.getLastChild(), ""qualified.name2"");"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,152,"rivate void testGetFunctionName(Node function, Node parent, String name) {"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,152,"private void testGetFunctionName(Node function, String name) {"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,154,"ssertEquals(name, NodeUtil.getFunctionName(function, parent));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,154,"assertEquals(name, NodeUtil.getFunctionName(function));"
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,19,import com.google.javascript.rhino.Node;
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,107,public void testInnerClasses() {
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,108,enableNormalize(false);
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,109,testChecks(
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,110,"""function f() { /** @constructor */ function inner() {} }"" +"
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,111,"""function g() { /** @constructor */ function inner() {} }"","
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,112,"""function f() {"" +"
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,113,"""  /** @constructor */ function inner() {}"" +"
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,114,"""  inner.prototype['instance_of__inner'] = true;"" +"
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,116,"""function g() {"" +"
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,117,"""  /** @constructor */ function inner$$1() {}"" +"
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,118,"""  inner$$1.prototype['instance_of__inner$$1'] = true;"" +"
False,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,202,"est(js, boilerplateCode + expected);"
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,219,Compiler compiler = new Compiler();
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,220,"compiler.init(new JSSourceFile[0], new JSSourceFile[0],"
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,221,new CompilerOptions());
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,222,Node ast = compiler.parseSyntheticCode(boilerplateCode + expected);
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,223,"NodeTraversal.traverse(compiler, ast,"
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,224,"new Normalize.NormalizeStatements(compiler, false));"
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,226,"test(js, compiler.toSource(ast));"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3224,"found   : {...}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,3224,"""found   : {}\n"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4690,"found   : {...}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4690,"""found   : {}\n"" +"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5029,"ssertEquals(""{...}"", anonymous.getReferenceName());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5029,assertNull(anonymous.getReferenceName());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5030,"assertEquals(""{}"", anonymous.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5034,* Tests the factory method
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5035,* {@link JSTypeRegistry#createAnonymousObjectType()}} and adds
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5036,* some properties to it.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5038,public void testCreateAnonymousObjectType2() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5039,// anonymous
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5040,ObjectType anonymous = registry.createAnonymousObjectType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5041,anonymous.defineDeclaredProperty(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5042,"""a"", NUMBER_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5043,anonymous.defineDeclaredProperty(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5044,"""b"", NUMBER_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5045,anonymous.defineDeclaredProperty(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5046,"""c"", NUMBER_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5047,anonymous.defineDeclaredProperty(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5048,"""d"", NUMBER_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5049,anonymous.defineDeclaredProperty(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5050,"""e"", NUMBER_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5051,anonymous.defineDeclaredProperty(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5052,"""f"", NUMBER_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5053,"assertEquals(""{a: number, b: number, c: number, d: number, ...}"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5054,anonymous.toString());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5043,"ssertEquals(""{...}"", subDate.getReferenceName());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5068,assertNull(subDate.getReferenceName());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5069,"assertEquals(""{...}"", subDate.toString());"
