is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,19,import com.google.common.base.Preconditions;
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,21,mport com.google.common.base.Hash;
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,22,mport com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,29,import javax.annotation.Nullable;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,429,* This class contains routines for hashing.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,431,* <p>The hash takes a byte array representing arbitrary data (a
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,432,"* number, String, or Object) and turns it into a small, hopefully"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,433,"* unique, number. There are additional convenience functions which"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,434,"* hash int, long, and String types."
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,436,* <p><b>Note</b>: this hash has weaknesses in the two
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,437,* most-significant key bits and in the three least-significant seed
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,438,"* bits. The weaknesses are small and practically speaking, will not"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,439,"* affect the distribution of hash values. Still, it would be good"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,440,"* practice not to choose seeds 0, 1, 2, 3, ..., n to yield n,"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,441,* independent hash functions. Use pseudo-random seeds instead.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,443,* <p>This code is based on the work of Craig Silverstein and Sanjay
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,444,"* Ghemawat in, then forked from com.google.common."
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,446,* <p>The original code for the hash function is courtesy
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,447,"* <a href=""http://burtleburtle.net/bob/hash/evahash.html"">Bob Jenkins</a>."
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,449,* <p>TODO: Add stream hashing functionality.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,451,final static class Hash {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,452,private Hash() {}
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,454,/** Default hash seed (64 bit) */
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,455,private static final long SEED64 =
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,456,"0x2b992ddfa23249d6L; // part of pi, arbitrary"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,458,/** Hash constant (64 bit) */
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,459,private  static final long CONSTANT64 =
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,460,"0xe08c1d668b756f82L; // part of golden ratio, arbitrary"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,464,* STRING HASHING *
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,468,* Hash a string to a 64 bit value. The digits of pi are used for
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,469,* the hash seed.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,471,* @param value the string to hash
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,472,* @return 64 bit hash value
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,474,static long hash64(@Nullable String value) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,475,"return hash64(value, SEED64);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,479,* Hash a string to a 64 bit value using the supplied seed.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,481,* @param value the string to hash
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,482,* @param seed the seed
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,483,* @return 64 bit hash value
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,485,"private static long hash64(@Nullable String value, long seed) {"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,486,if (value == null) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,487,"return hash64(null, 0, 0, seed);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,489,"return hash64(value.getBytes(), seed);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,493,* Hash byte array to a 64 bit value. The digits of pi are used
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,494,* for the hash seed.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,496,* @param value the bytes to hash
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,497,* @param offset the starting position of value where bytes are
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,498,* used for the hash computation
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,499,* @param length number of bytes of value that are used for the
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,500,* hash computation
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,501,* @return 64 bit hash value
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,503,"private static long hash64(byte[] value, int offset, int length) {"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,504,"return hash64(value, offset, length, SEED64);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,508,* Hash byte array to a 64 bit value using the supplied seed.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,510,* @param value the bytes to hash
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,511,* @param seed the seed
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,512,* @return 64 bit hash value
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,514,"private static long hash64(byte[] value, long seed) {"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,515,"return hash64(value, 0, value == null ? 0 : value.length, seed);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,519,* Hash byte array to a 64 bit value using the supplied seed.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,521,* @param value the bytes to hash
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,522,* @param offset the starting position of value where bytes are
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,523,* used for the hash computation
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,524,* @param length number of bytes of value that are used for the
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,525,* hash computation
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,526,* @param seed the seed
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,527,* @return 64 bit hash value
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,529,"@SuppressWarnings(""fallthrough"")"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,530,private static long hash64(
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,531,"byte[] value, int offset, int length, long seed) {"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,532,long a = CONSTANT64;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,533,long b = a;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,534,long c = seed;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,535,int keylen;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,537,"for (keylen = length; keylen >= 24; keylen -= 24, offset += 24) {"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,538,"a += word64At(value, offset);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,539,"b += word64At(value, offset + 8);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,540,"c += word64At(value, offset + 16);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,542,// Mix
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,543,a -= b; a -= c; a ^= c >>> 43;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,544,b -= c; b -= a; b ^= a << 9;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,545,c -= a; c -= b; c ^= b >>> 8;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,546,a -= b; a -= c; a ^= c >>> 38;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,547,b -= c; b -= a; b ^= a << 23;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,548,c -= a; c -= b; c ^= b >>> 5;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,549,a -= b; a -= c; a ^= c >>> 35;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,550,b -= c; b -= a; b ^= a << 49;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,551,c -= a; c -= b; c ^= b >>> 11;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,552,a -= b; a -= c; a ^= c >>> 12;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,553,b -= c; b -= a; b ^= a << 18;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,554,c -= a; c -= b; c ^= b >>> 22;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,557,c += length;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,558,switch (keylen) { // deal with rest. Cases fall through
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,559,case 23:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,560,c += ((long) value[offset + 22]) << 56;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,561,case 22:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,562,c += (value[offset + 21] & 0xffL) << 48;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,563,case 21:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,564,c += (value[offset + 20] & 0xffL) << 40;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,565,case 20:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,566,c += (value[offset + 19] & 0xffL) << 32;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,567,case 19:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,568,c += (value[offset + 18] & 0xffL) << 24;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,569,case 18:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,570,c += (value[offset + 17] & 0xffL) << 16;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,571,case 17:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,572,c += (value[offset + 16] & 0xffL) << 8;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,573,// the first byte of c is reserved for the length
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,574,case 16:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,575,"b += word64At(value, offset + 8);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,576,"a += word64At(value, offset);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,577,break;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,578,case 15:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,579,b += (value[offset + 14] & 0xffL) << 48;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,580,case 14:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,581,b += (value[offset + 13] & 0xffL) << 40;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,582,case 13:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,583,b += (value[offset + 12] & 0xffL) << 32;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,584,case 12:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,585,b += (value[offset + 11] & 0xffL) << 24;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,586,case 11:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,587,b += (value[offset + 10] & 0xffL) << 16;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,588,case 10:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,589,b += (value[offset + 9] & 0xffL) << 8;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,590,case 9:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,591,b += (value[offset + 8] & 0xffL);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,592,case 8:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,593,"a += word64At(value, offset);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,594,break;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,595,case 7:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,596,a += (value[offset + 6] & 0xffL) << 48;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,597,case 6:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,598,a += (value[offset + 5] & 0xffL) << 40;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,599,case 5:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,600,a += (value[offset + 4] & 0xffL) << 32;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,601,case 4:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,602,a += (value[offset + 3] & 0xffL) << 24;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,603,case 3:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,604,a += (value[offset + 2] & 0xffL) << 16;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,605,case 2:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,606,a += (value[offset + 1] & 0xffL) << 8;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,607,case 1:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,608,a += (value[offset + 0] & 0xffL);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,609,// case 0: nothing left to add
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,611,"return mix64(a, b, c);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,614,"private static long word64At(byte[] bytes, int offset) {"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,615,return (bytes[offset + 0] & 0xffL)
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,616,+ ((bytes[offset + 1] & 0xffL) << 8)
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,617,+ ((bytes[offset + 2] & 0xffL) << 16)
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,618,+ ((bytes[offset + 3] & 0xffL) << 24)
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,619,+ ((bytes[offset + 4] & 0xffL) << 32)
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,620,+ ((bytes[offset + 5] & 0xffL) << 40)
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,621,+ ((bytes[offset + 6] & 0xffL) << 48)
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,622,+ ((bytes[offset + 7] & 0xffL) << 56);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,626,"* Mixes longs a, b, and c, and returns the final value of c."
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,628,"private static long mix64(long a, long b, long c) {"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,629,a -= b; a -= c; a ^= c >>> 43;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,630,b -= c; b -= a; b ^= a << 9;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,631,c -= a; c -= b; c ^= b >>> 8;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,632,a -= b; a -= c; a ^= c >>> 38;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,633,b -= c; b -= a; b ^= a << 23;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,634,c -= a; c -= b; c ^= b >>> 5;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,635,a -= b; a -= c; a ^= c >>> 35;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,636,b -= c; b -= a; b ^= a << 49;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,637,c -= a; c -= b; c ^= b >>> 11;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,638,a -= b; a -= c; a ^= c >>> 12;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,639,b -= c; b -= a; b ^= a << 18;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,640,c -= a; c -= b; c ^= b >>> 22;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,641,return c;
True,test/com/google/javascript/jscomp/JsMessageTest.java,test/com/google/javascript/jscomp/JsMessageTest.java,37,public void testHashValues() {
True,test/com/google/javascript/jscomp/JsMessageTest.java,test/com/google/javascript/jscomp/JsMessageTest.java,38,"final String EMPTY = """";"
True,test/com/google/javascript/jscomp/JsMessageTest.java,test/com/google/javascript/jscomp/JsMessageTest.java,39,"final String VAL = ""Hello, world"";"
True,test/com/google/javascript/jscomp/JsMessageTest.java,test/com/google/javascript/jscomp/JsMessageTest.java,40,final long   ANSWER_STRING_64 = 0x43ec5d9731515874L;
True,test/com/google/javascript/jscomp/JsMessageTest.java,test/com/google/javascript/jscomp/JsMessageTest.java,41,final long   ANSWER_EMPTY_64 = 0x468d9ea2c42361aaL;
True,test/com/google/javascript/jscomp/JsMessageTest.java,test/com/google/javascript/jscomp/JsMessageTest.java,43,"assertEquals(ANSWER_STRING_64, JsMessage.Hash.hash64(VAL));"
True,test/com/google/javascript/jscomp/JsMessageTest.java,test/com/google/javascript/jscomp/JsMessageTest.java,44,"assertEquals(ANSWER_EMPTY_64, JsMessage.Hash.hash64(EMPTY));"
