is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,655,c.endStatement(true);
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,655,if (cc.shouldPreserveExtraBlocks()) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,656,cc.beginBlock();
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,657,"cc.endBlock(cc.breakAfterBlockFor(n, context == Context.STATEMENT));"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,658,} else {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,659,cc.endStatement(true);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,709,"/ Ideally, this pass should be the first pass run, however:"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,710,/ 1) VariableReferenceCheck reports unexpected warnings if Normalize
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,711,/ is done first.
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,712,"/ 2) ReplaceMessages, stripCode, and potentially custom passes rely on"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,713,/ unmodified local names.
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,714,ormalize();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1404,"// Ideally, this pass should be the first pass run, however:"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1405,// 1) VariableReferenceCheck reports unexpected warnings if Normalize
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1406,// is done first.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1407,"// 2) ReplaceMessages, stripCode, and potentially custom passes rely on"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1408,// unmodified local names.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1409,normalize();
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,410,"if(1);"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,410,"""if(1) {\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,411,"""}\n"");"
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,446,"if(1);else {\n  alert(a)\n}\n"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,447,"""if(1) {\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,448,"""}else {\n  alert(a)\n}\n"");"
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,462,"for(;;);"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,464,"""for(;;) {\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,465,"""}\n"");"
