is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/graph/FixedPointGraphTraversal.java,src/com/google/javascript/jscomp/graph/FixedPointGraphTraversal.java,21,mport com.google.javascript.jscomp.graph.DiGraph;
True,src/com/google/javascript/jscomp/graph/FixedPointGraphTraversal.java,src/com/google/javascript/jscomp/graph/FixedPointGraphTraversal.java,129,/** Edge callback */
False,src/com/google/javascript/jscomp/graph/GraphColoring.java,src/com/google/javascript/jscomp/graph/GraphColoring.java,21,mport com.google.javascript.jscomp.graph.Annotation;
False,src/com/google/javascript/jscomp/graph/GraphColoring.java,src/com/google/javascript/jscomp/graph/GraphColoring.java,22,mport com.google.javascript.jscomp.graph.GraphNode;
False,src/com/google/javascript/jscomp/graph/GraphColoring.java,src/com/google/javascript/jscomp/graph/GraphColoring.java,23,mport com.google.javascript.jscomp.graph.SubGraph;
True,src/com/google/javascript/jscomp/graph/GraphColoring.java,src/com/google/javascript/jscomp/graph/GraphColoring.java,85,/** The color of a node */
True,src/com/google/javascript/jscomp/graph/GraphPruner.java,src/com/google/javascript/jscomp/graph/GraphPruner.java,34,* @param <N> The type of data that the graph node holds.
True,src/com/google/javascript/jscomp/graph/GraphPruner.java,src/com/google/javascript/jscomp/graph/GraphPruner.java,35,* @param <E> The type of data that the graph edge holds.
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,28,* @param <N> The type of data that the graph node holds.
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,29,* @param <E> The type of data that the graph edge holds.
False,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,298,"(LinkedDirectedGraphNode<N, E>) node).neighborIterator();i.hasNext();) {"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,298,"((LinkedDirectedGraphNode<N, E>) node).neighborIterator(); i.hasNext();) {"
False,src/com/google/javascript/jscomp/graph/StandardUnionFind.java,src/com/google/javascript/jscomp/graph/StandardUnionFind.java,18,mport javax.annotation.Nullable;
False,src/com/google/javascript/jscomp/graph/StandardUnionFind.java,src/com/google/javascript/jscomp/graph/StandardUnionFind.java,19,mport com.google.common.base.Objects;
True,src/com/google/javascript/jscomp/graph/StandardUnionFind.java,src/com/google/javascript/jscomp/graph/StandardUnionFind.java,19,import static com.google.common.collect.Iterators.filter;
True,src/com/google/javascript/jscomp/graph/StandardUnionFind.java,src/com/google/javascript/jscomp/graph/StandardUnionFind.java,21,import com.google.common.base.Objects;
False,src/com/google/javascript/jscomp/graph/StandardUnionFind.java,src/com/google/javascript/jscomp/graph/StandardUnionFind.java,25,mport static com.google.common.collect.Iterators.filter;
True,src/com/google/javascript/jscomp/graph/StandardUnionFind.java,src/com/google/javascript/jscomp/graph/StandardUnionFind.java,35,import javax.annotation.Nullable;
True,src/com/google/javascript/jscomp/parsing/Config.java,src/com/google/javascript/jscomp/parsing/Config.java,32,/** JavaScript mode */
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,303,unctionNode fnNode = (FunctionNode)node;
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,303,FunctionNode fnNode = (FunctionNode) node;
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,324,& isPropAccess(((Assignment)node).getLeft());
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,324,&& isPropAccess(((Assignment) node).getLeft());
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,523,ode.addChildToBack(transform((AstNode)child));
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,523,node.addChildToBack(transform((AstNode) child));
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,540,et = transformNameAsString((Name)n);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,540,ret = transformNameAsString((Name) n);
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,542,et = transformNumberAsString((NumberLiteral)n);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,542,ret = transformNumberAsString((NumberLiteral) n);
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,583,ode.addChildToBack(transform((AstNode)child));
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,583,node.addChildToBack(transform((AstNode) child));
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,616,f (n == null) return false;
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,616,if (n == null) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,617,return false;
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,96,tatic private final Set<String> modifiesAnnotationKeywords =
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,96,private static final Set<String> modifiesAnnotationKeywords =
False,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,34,rivate final static int
False,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,35,OF_CHAR = -1;
True,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,34,private static final int EOF_CHAR = -1;
False,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,229,eturn lineno == initLineno? initCharno + charno : charno;
True,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,228,return lineno == initLineno ? initCharno + charno : charno;
False,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,242,nt N = stringBufferTop;
False,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,243,f (N == stringBuffer.length) {
True,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,241,int n = stringBufferTop;
True,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,242,if (n == stringBuffer.length) {
False,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,245,"ystem.arraycopy(stringBuffer, 0, tmp, 0, N);"
True,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,244,"System.arraycopy(stringBuffer, 0, tmp, 0, n);"
False,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,248,tringBuffer[N] = (char)c;
False,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,249,tringBufferTop = N + 1;
True,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,247,stringBuffer[n] = (char) c;
True,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,248,stringBufferTop = n + 1;
False,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,314,| Character.getType((char)c) == Character.SPACE_SEPARATOR;
True,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,313,|| Character.getType((char) c) == Character.SPACE_SEPARATOR;
False,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,319,eturn c > 127 && Character.getType((char)c) == Character.FORMAT;
True,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,318,return c > 127 && Character.getType((char) c) == Character.FORMAT;
False,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,346,or(;;) {
True,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,345,for (;;) {
False,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,402,or(;;) {
True,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java,401,for (;;) {
True,src/com/google/javascript/jscomp/parsing/ParserRunner.java,src/com/google/javascript/jscomp/parsing/ParserRunner.java,37,/** parser runner */
False,src/com/google/javascript/jscomp/parsing/ParserRunner.java,src/com/google/javascript/jscomp/parsing/ParserRunner.java,39,rivate static final String configResource =
True,src/com/google/javascript/jscomp/parsing/ParserRunner.java,src/com/google/javascript/jscomp/parsing/ParserRunner.java,40,private static final String CONFIG_RESOURCE =
False,src/com/google/javascript/jscomp/parsing/ParserRunner.java,src/com/google/javascript/jscomp/parsing/ParserRunner.java,87,esourceBundle config = ResourceBundle.getBundle(configResource);
True,src/com/google/javascript/jscomp/parsing/ParserRunner.java,src/com/google/javascript/jscomp/parsing/ParserRunner.java,88,ResourceBundle config = ResourceBundle.getBundle(CONFIG_RESOURCE);
False,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,42,mport com.google.javascript.rhino.jstype.TemplatizedType;
True,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java,44,import com.google.javascript.rhino.jstype.TemplatizedType;
False,src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java,src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java,105,rivate final
False,src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java,src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java,106,"unction<TypePair, TypePair> INEQ ="
True,src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java,src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java,105,"private final Function<TypePair, TypePair> ineq ="
False,src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java,src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java,236,"eturn caseEquality(condition, blindScope, INEQ);"
True,src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java,src/com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java,235,"return caseEquality(condition, blindScope, ineq);"
