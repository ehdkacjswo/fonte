is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,55,boolean visitedFunction = false;
False,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,61,/ We only care about function annotations at the FUNCTION and SCRIPT
False,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,62,"/ level. Otherwise, the @suppress annotation has an implicit"
False,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,63,"/ dependency on the exact structure of our AST, and that seems like"
False,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,64,/ a bad idea.
False,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,66,nfo = NodeUtil.getFunctionJSDocInfo(current);
True,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,63,info = NodeUtil.getBestJSDocInfo(current);
True,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,64,visitedFunction = true;
False,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,69, else if (type == Token.ASSIGN) {
False,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,70,ode rhs = current.getLastChild();
False,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,71,f (rhs.isFunction()) {
False,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,72,nfo = NodeUtil.getFunctionJSDocInfo(rhs);
True,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,67,} else if (current.isVar() || current.isAssign()) {
True,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,68,// There's one edge case we're worried about:
True,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,69,"// if the warning points to an assigment to a function, we"
True,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,70,// want the suppressions on that function to apply.
True,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,71,// It's OK if we double-count some cases.
True,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,72,Node rhs = NodeUtil.getRValueOfLValue(current.getFirstChild());
True,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,73,if (rhs != null) {
True,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,74,if (rhs.isCast()) {
True,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,75,rhs = rhs.getFirstChild();
True,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,78,if (rhs.isFunction() && !visitedFunction) {
True,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,src/com/google/javascript/jscomp/SuppressDocWarningsGuard.java,79,info = NodeUtil.getBestJSDocInfo(current);
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2271,public void testDuplicateStaticMethodDecl6() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2272,// Make sure the CAST node doesn't interfere with the @suppress
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2273,// annotation.
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2274,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2275,"""var goog = goog || {};"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2276,"""goog.foo = function(x) {};"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2277,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2278,""" * @suppress {duplicate}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2279,""" * @return {undefined}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2280,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2281,"""goog.foo = "" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2282,"""   /** @type {!Function} */ (function(x) {});"");"
