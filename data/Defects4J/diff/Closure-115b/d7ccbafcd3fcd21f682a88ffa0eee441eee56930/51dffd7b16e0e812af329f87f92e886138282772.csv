is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,471,".getScope().getVar(root.getString()),"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,471,"maybeGetVar(t, root),"
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,484,"/ May be STRING, GET, or SET,"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,484,"// May be STRING, GETTER_DEF, or SETTER_DEF,"
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,488,".getScope().getVar(root.getString()),"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,488,"maybeGetVar(t, root),"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,499,"private Var maybeGetVar(NodeTraversal t, Node maybeName) {"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,500,return maybeName.isName()
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,501,? t.getScope().getVar(maybeName.getString()) : null;
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,124,"/ 3) it is not a get or a set, and"
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,124,"// 3) it is not a GETTER_DEF or a SETTER_DEF, and"
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,137,f (!(prop.getRootVar() != null && prop.getRootVar().isGlobal())) {
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,137,if (prop.getRootVar() == null || !prop.getRootVar().isGlobal()) {
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,993,"ew PeepholeReplaceKnownMethods(late),"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,993,"new PeepholeReplaceKnownMethods(),"
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1010,"ew PeepholeReplaceKnownMethods(late),"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1010,"new PeepholeReplaceKnownMethods(),"
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,25,mport java.util.regex.Pattern;
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,35,rivate final boolean late;
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,38," @param late When late is true, this mean we are currently running after"
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,39, most of the other optimizations. In this case we avoid changes that make
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,40, the code larger (but otherwise easier to analyze - such as using string
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,41, splitting).
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,43,eepholeReplaceKnownMethods(boolean late) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,44,his.late = late;
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,106,"f (functionNameString.equals(""split"")) {"
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,107,"ubtree = tryFoldStringSplit(subtree, stringNode, firstArg);"
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,108, else if (firstArg == null) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,94,if (firstArg == null) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,663, Try to fold .split() calls on strings
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,665,"rivate Node tryFoldStringSplit(Node n, Node stringNode, Node arg1) {"
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,666,f (late) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,667,eturn n;
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,670,reconditions.checkArgument(n.isCall());
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,671,reconditions.checkArgument(stringNode.isString());
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,673,tring separator = null;
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,674,tring stringValue = stringNode.getString();
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,675,nt limit = stringValue.length();
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,677,f (arg1 != null) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,678,f (arg1.isString()) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,679,eparator = arg1.getString();
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,680, else if (!arg1.isNull()) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,681,eturn n;
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,684,ode arg2 = arg1.getNext();
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,685,f (arg2 != null) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,686,f (arg2.isNumber()) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,687,imit = (int) arg2.getDouble();
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,688,f (limit < 0) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,689,eturn n;
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,691, else {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,692,eturn n;
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,697,tring[] stringArray;
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,698,f (separator != null) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,699,tringArray = stringValue.split(Pattern.quote(separator));
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,700, else {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,701,tringArray = new String[1];
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,702,tringArray[0] = stringValue;
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,705,ode arrayOfStrings = IR.arraylit();
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,706,or (int i = 0; i < limit && i < stringArray.length; i++) {
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,707,rrayOfStrings.addChildToBack(
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,708,R.string(stringArray[i]).srcref(stringNode));
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,711,ode parent = n.getParent();
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,712,"arent.replaceChild(n, arrayOfStrings);"
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,713,eportCodeChange();
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,714,eturn arrayOfStrings;
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,553,public void testPrototypeOfThisAssign() {
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,554,testSame(
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,555,createModuleChain(
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,556,"""/** @constructor */"" +"
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,557,"""function F() {}"" +"
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,558,"""this.prototype.foo = function() {};"","
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,559,"""(new F()).foo();""));"
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,25,rivate boolean late = true;
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,39,ew PeepholeReplaceKnownMethods(late));
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,37,new PeepholeReplaceKnownMethods());
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,197,ublic void testFoldStringSplit() {
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,198,ate = false;
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,199,"old(""x = 'abcde'.split()"", ""x = ['abcde']"");"
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,200,"old(""x = 'abcde'.split(null)"", ""x = ['abcde']"");"
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,201,"old(""x = 'a b c d e'.split(' ')"", ""x = ['a','b','c','d','e']"");"
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,202,"old(""x = 'a b c d e'.split(' ', 0)"", ""x = []"");"
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,203,"old(""x = 'abcde'.split('cd')"", ""x = ['ab','e']"");"
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,204,"old(""x = 'a b c d e'.split(' ', 1)"", ""x = ['a']"");"
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,205,"old(""x = 'a b c d e'.split(' ', 3)"", ""x = ['a','b','c']"");"
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,206,"old(""x = 'a b c d e'.split(null, 1)"", ""x = ['a b c d e']"");"
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,207,"oldSame(""x = 'abcde'.split(/ /)"");"
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,208,"oldSame(""x = 'abcde'.split(' ', -1)"");"
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,210,ate = true;
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,211,"oldSame(""x = 'a b c d e'.split(' ')"");"
