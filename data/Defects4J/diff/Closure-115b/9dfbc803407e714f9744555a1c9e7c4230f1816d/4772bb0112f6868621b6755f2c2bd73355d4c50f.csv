is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,291,"ode.newString(Token.NAME, getArrayNotationNameFor(propName));"
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,291,IR.name(getArrayNotationNameFor(propName));
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,293,"ode elemNode = new Node(Token.GETELEM, propSrc, newNameNode);"
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,293,"Node elemNode = IR.getelem(propSrc, newNameNode);"
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,335,"ode callName = Node.newString(Token.NAME,"
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,336,etMutatorFor(propNameNode.getString()));
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,337,"ode call = new Node(Token.CALL, callName, propSrc, propDest);"
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,335,Node callName = IR.name(
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,336,getMutatorFor(propNameNode.getString()));
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,337,"Node call = IR.call( callName, propSrc, propDest);"
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,380,"ode propValue = Node.newString(Token.STRING, propName);"
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,380,Node propValue = IR.string(propName);
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,382,"ode.newString(Token.NAME, getArrayNotationNameFor(propName));"
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,382,IR.name(getArrayNotationNameFor(propName));
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,384,"ode var = new Node(Token.VAR, propNameNode);"
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,384,Node var = IR.var(propNameNode);
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,721,"ode globalValue = Node.newString(Token.NAME, global.name);"
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,721,Node globalValue = IR.name(global.name);
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,724,ode globalNameNode =
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,725,"ode.newString(Token.NAME, ""GLOBAL_"" + globalName);"
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,724,"Node globalNameNode = IR.name(""GLOBAL_"" + globalName);"
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,727,"ode var = new Node(Token.VAR, globalNameNode);"
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,726,Node var = IR.var(globalNameNode);
False,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,175,"ode aliasCall = new Node(Token.CALL, name, throwNode.removeFirstChild());"
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,175,"Node aliasCall = IR.call( name, throwNode.removeFirstChild());"
False,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,177,"ode exprResult = new Node(Token.EXPR_RESULT, aliasCall);"
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,177,Node exprResult = IR.exprResult(aliasCall);
False,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,291,"ode value = new Node(Token.VOID, Node.newNumber(0));"
True,src/com/google/javascript/jscomp/AliasKeywords.java,src/com/google/javascript/jscomp/AliasKeywords.java,291,Node value = IR.voidNode(IR.number(0));
False,src/com/google/javascript/jscomp/AliasStrings.java,src/com/google/javascript/jscomp/AliasStrings.java,313,"ode.newString(Token.NAME, name));"
True,src/com/google/javascript/jscomp/AliasStrings.java,src/com/google/javascript/jscomp/AliasStrings.java,313,IR.name(name));
True,src/com/google/javascript/jscomp/AstChangeProxy.java,src/com/google/javascript/jscomp/AstChangeProxy.java,21,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/AstChangeProxy.java,src/com/google/javascript/jscomp/AstChangeProxy.java,111,ode block = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/AstChangeProxy.java,src/com/google/javascript/jscomp/AstChangeProxy.java,112,Node block = IR.block();
True,src/com/google/javascript/jscomp/AstParallelizer.java,src/com/google/javascript/jscomp/AstParallelizer.java,22,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/AstParallelizer.java,src/com/google/javascript/jscomp/AstParallelizer.java,23,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/AstParallelizer.java,src/com/google/javascript/jscomp/AstParallelizer.java,103,"eturn new Node(Token.FUNCTION,"
False,src/com/google/javascript/jscomp/AstParallelizer.java,src/com/google/javascript/jscomp/AstParallelizer.java,104,"ode.newString(Token.NAME, TEMP_NAME),"
False,src/com/google/javascript/jscomp/AstParallelizer.java,src/com/google/javascript/jscomp/AstParallelizer.java,105,"ew Node(Token.PARAM_LIST), new Node(Token.BLOCK));"
True,src/com/google/javascript/jscomp/AstParallelizer.java,src/com/google/javascript/jscomp/AstParallelizer.java,102,"return IR.function(IR.name(TEMP_NAME), IR.paramList(), IR.block());"
False,src/com/google/javascript/jscomp/AstParallelizer.java,src/com/google/javascript/jscomp/AstParallelizer.java,126,eturn NodeUtil.newExpr(Node.newString(TEMP_NAME));
True,src/com/google/javascript/jscomp/AstParallelizer.java,src/com/google/javascript/jscomp/AstParallelizer.java,123,return NodeUtil.newExpr(IR.string(TEMP_NAME));
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,21,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,22,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,78,ode objNode = new Node(Token.OBJECTLIT)
False,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,79,copyInformationFrom(callNode);
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,77,Node objNode = IR.objectlit().srcref(callNode);
False,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,89,eyNode = Node.newString(NodeUtil.getStringValue(keyNode))
False,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,90,copyInformationFrom(keyNode);
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,87,keyNode = IR.string(NodeUtil.getStringValue(keyNode))
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,88,.srcref(keyNode);
False,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,93,eyNode.addChildToBack(valueNode);
False,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,94,bjNode.addChildToBack(keyNode);
True,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,src/com/google/javascript/jscomp/ClosureOptimizePrimitives.java,91,"objNode.addChildToBack(IR.propdef(keyNode, valueNode));"
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,36,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,37,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,362,"ode assign = new Node(Token.ASSIGN, name, value)"
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,363,copyInformationFrom(name);
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,361,"Node assign = IR.assign(name, value).srcref(name);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,31,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,231,"liasParent.replaceChild(alias.node, new Node(Token.NULL));"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,232,"aliasParent.replaceChild(alias.node, IR.nullNode());"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,337,"ode varNode = new Node(Token.VAR, nameNode).copyInformationFrom(nameNode);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,338,Node varNode = IR.var(nameNode).copyInformationFrom(nameNode);
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,570,"ode varNode = new Node(Token.VAR, nameNode);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,571,Node varNode = IR.var(nameNode);
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,592,"ode stubVar = new Node(Token.VAR, nameNode.cloneTree())"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,593,Node stubVar = IR.var(nameNode.cloneTree())
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,867,"efNode = Node.newString(Token.NAME, propAlias);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,868,refNode = IR.name(propAlias);
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,876,"ode nameNode = Node.newString(Token.NAME, propAlias);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,877,Node nameNode = IR.name(propAlias);
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,881,"ode newVar = new Node(Token.VAR, nameNode)"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,882,Node newVar = IR.var(nameNode)
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,937,"ode nameNode = Node.newString(Token.NAME, propAlias);"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,938,"ode newVar = new Node(Token.VAR, nameNode)"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,938,Node nameNode = IR.name(propAlias);
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,939,Node newVar = IR.var(nameNode)
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,34,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,37,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1166,sRoot = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1166,jsRoot = IR.block();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1169,xternsRoot = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1169,externsRoot = IR.block();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1172,"xternAndJsRoot = new Node(Token.BLOCK, externsRoot, jsRoot);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1172,"externAndJsRoot = IR.block(externsRoot, jsRoot);"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,25,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,27,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,924,"ap.put(name, ((Boolean) value).booleanValue() ?"
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,925,ew Node(Token.TRUE) : new Node(Token.FALSE));
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,923,"map.put(name, NodeUtil.booleanNode(((Boolean) value).booleanValue()));"
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,927,"ap.put(name, Node.newNumber(((Integer) value).intValue()));"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,925,"map.put(name, IR.number(((Integer) value).intValue()));"
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,929,"ap.put(name, Node.newNumber(((Double) value).doubleValue()));"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,927,"map.put(name, IR.number(((Double) value).doubleValue()));"
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,932,"ap.put(name, Node.newString((String) value));"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,930,"map.put(name, IR.string((String) value));"
True,src/com/google/javascript/jscomp/ConvertToDottedProperties.java,src/com/google/javascript/jscomp/ConvertToDottedProperties.java,20,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/ConvertToDottedProperties.java,src/com/google/javascript/jscomp/ConvertToDottedProperties.java,62,"arent.replaceChild(n, new Node(Token.GETPROP, left, right));"
True,src/com/google/javascript/jscomp/ConvertToDottedProperties.java,src/com/google/javascript/jscomp/ConvertToDottedProperties.java,63,"parent.replaceChild(n, IR.getprop(left, right));"
True,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,21,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,22,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,111,ode outerBlock = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,110,Node outerBlock = IR.block();
False,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,115,ode innerBlock = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,src/com/google/javascript/jscomp/CreateSyntheticBlocks.java,114,Node innerBlock = IR.block();
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,22,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,23,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,156,"ode stubCall = new Node(Token.CALL,"
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,157,"ode.newString(Token.NAME, STUB_METHOD_NAME),"
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,158,ode.newNumber(stubId))
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,155,Node stubCall = IR.call(
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,156,"IR.name(STUB_METHOD_NAME),"
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,157,IR.number(stubId))
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,169,"ode unstubCall = new Node(Token.CALL,"
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,170,"ode.newString(Token.NAME, UNSTUB_METHOD_NAME),"
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,171,"ode.newNumber(stubId),"
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,168,Node unstubCall = IR.call(
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,169,"IR.name(UNSTUB_METHOD_NAME),"
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,170,"IR.number(stubId),"
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,176,"ew Node(Token.EXPR_RESULT,"
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,177,"ew Node(Token.ASSIGN,"
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,178,"ew Node(Token.GETPROP,"
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,175,IR.exprResult(
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,176,IR.assign(
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,177,IR.getprop(
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,180,"ode.newString(Token.STRING, nameInfo.name)),"
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,179,"IR.string(nameInfo.name)),"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,29,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,249,"ew Node(Token.VOID, Node.newNumber(0).copyInformationFrom(n)));"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,250,IR.voidNode(IR.number(0).srcref(n)));
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,254,"arent.replaceChild(n, new Node(Token.EMPTY));"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,255,"parent.replaceChild(n, IR.empty());"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,30,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,31,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,2190,"dditionalReplacements.put(COMPILED_CONSTANT_NAME, new Node(Token.TRUE));"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,2189,"additionalReplacements.put(COMPILED_CONSTANT_NAME, IR.trueNode());"
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,2195,ode.newString(options.locale));
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,2194,IR.string(options.locale));
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,21,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,279,"unction.replaceChild(function.getFirstChild(),"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,280,"ode.newString(Token.NAME, """"));"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,280,"function.replaceChild(function.getFirstChild(), IR.name(""""));"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,353,"eturn new Node(Token.GETPROP,"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,354,"ew Node(Token.OBJECTLIT),"
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,355,ame.cloneNode());
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,353,return IR.getprop(
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,354,"IR.objectlit(),"
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,355,IR.string(name.getString()));
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,22,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,23,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,301,arent.addChildToFront(
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,302,"ode.newString(Token.NAME, newMethodName)"
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,303,copyInformationFrom(node));
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,301,parent.addChildToFront(IR.name(newMethodName).srcref(node));
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,330,"ode newNameNode = Node.newString(Token.NAME, newMethodName)"
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,328,Node newNameNode = IR.name(newMethodName)
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,339,"lock.replaceChild(expr, new Node(Token.VAR, newNameNode));"
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,337,"block.replaceChild(expr, IR.var(newNameNode));"
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,344,"rgList.addChildToFront(Node.newString(Token.NAME, self)"
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,342,argList.addChildToFront(IR.name(self)
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,396,"ode newName = Node.newString(Token.NAME, name);"
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,394,Node newName = IR.name(name);
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,19,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,20,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,125,"ode call = new Node(Token.CALL, exportCallTarget);"
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,124,Node call = IR.call( exportCallTarget);
False,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,129,all.addChildToBack(Node.newString(testFunctionName));
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,128,call.addChildToBack(IR.string(testFunctionName));
False,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,134,"ode expression = new Node(Token.EXPR_RESULT, call);"
True,src/com/google/javascript/jscomp/ExportTestFunctions.java,src/com/google/javascript/jscomp/ExportTestFunctions.java,133,Node expression = IR.exprResult(call);
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,22,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,122,"xpression, Node.newString(Token.NAME, resultName));"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,123,"expression, IR.name(resultName));"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,351,ode trueExpr = new Node(Token.BLOCK).copyInformationFrom(expr);
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,352,ode falseExpr = new Node(Token.BLOCK).copyInformationFrom(expr);
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,352,Node trueExpr = IR.block().srcref(expr);
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,353,Node falseExpr = IR.block().srcref(expr);
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,381,"fNode = new Node(Token.IF, cond, trueExpr, falseExpr);"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,382,"ifNode = IR.ifNode(cond, trueExpr, falseExpr);"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,383,"fNode = new Node(Token.IF, cond, trueExpr);"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,384,"ifNode = IR.ifNode(cond, trueExpr);"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,395,"ode replacementValueNode = Node.newString(Token.NAME, tempName);"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,396,Node replacementValueNode = IR.name(tempName);
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,420,"eturn new Node(Token.ASSIGN,"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,421,"ode.newString(Token.NAME, tempName),"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,422,xpr).copyInformationFromForTree(expr);
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,421,return IR.assign(
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,422,"IR.name(tempName),"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,423,expr).srcrefTree(expr);
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,468,"ode replacementValueNode = Node.newString(Token.NAME, tempName)"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,469,copyInformationFrom(expr);
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,469,Node replacementValueNode = IR.name(tempName).srcref(expr);
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,552,"ode newCall = new Node(Token.CALL,"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,553,"ew Node(Token.GETPROP,"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,552,Node newCall = IR.call(
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,553,IR.getprop(
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,555,"ode.newString(""call"")),"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,556,"hisNameNode.cloneNode(), call.getLineno(), call.getCharno());"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,555,"IR.string(""call"")),"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,556,thisNameNode.cloneNode()).srcref(call);
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,146,nitializer = new Node(Token.OBJECTLIT);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,146,initializer = IR.objectlit();
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,184,"athDefinition = NodeUtil.newExpr(new Node(Token.ASSIGN, qualifiedPath,"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,185,nitializer));
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,184,pathDefinition = NodeUtil.newExpr(
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,185,"IR.assign(qualifiedPath, initializer));"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,385,his.externsRoot = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,385,this.externsRoot = IR.block();
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,21,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,22,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,179,"ew Node(Token.ASSIGN,"
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,180,"ode.newString(Token.NAME, prototypeAlias),"
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,178,IR.assign(
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,179,"IR.name(prototypeAlias),"
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,188,ode block = new Node(Token.BLOCK);
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,189,"ode func = new Node(Token.FUNCTION,"
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,190,"ode.newString(Token.NAME, """"),"
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,191,"ew Node(Token.PARAM_LIST, Node.newString(Token.NAME, prototypeAlias)),"
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,187,Node block = IR.block();
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,188,Node func = IR.function(
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,189,"IR.name(""""),"
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,190,"IR.paramList(IR.name(prototypeAlias)),"
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,194,"ode call = new Node(Token.CALL,func,"
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,193,"Node call = IR.call(func,"
True,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,25,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,499,"arent.replaceChild(callNode, Node.newString(Token.NAME, resultName));"
True,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,500,"parent.replaceChild(callNode, IR.name(resultName));"
True,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,23,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,217,"nt lineno, int charno) {"
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,218,"ode call = new Node(Token.CALL, lineno, charno);"
True,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,218,Node srcref) {
True,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,219,Node call = IR.call(IR.name(methodName)).srcref(srcref);
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,220,"all.addChildToBack(Node.newString(Token.NAME, methodName));"
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,252,"eturn buildCallNode(FACTORY_METHOD_NAME, null,"
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,253,"ode.getLineno(), node.getCharno());"
True,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,252,"return buildCallNode(FACTORY_METHOD_NAME, null, node);"
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,313,"eturn buildCallNode(FACTORY_METHOD_NAME, null,"
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,314,"ode.getLineno(), node.getCharno());"
True,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,312,"return buildCallNode(FACTORY_METHOD_NAME, null, node);"
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,374,"eturn buildCallNode(FACTORY_METHOD_NAME, valueNode,"
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,375,"ode.getLineno(), node.getCharno());"
True,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,372,"return buildCallNode(FACTORY_METHOD_NAME, valueNode, node);"
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,433,"eturn buildCallNode(FACTORY_METHOD_NAME, propName,"
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,434,"ode.getLineno(), node.getCharno());"
True,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,430,"return buildCallNode(FACTORY_METHOD_NAME, propName, node);"
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,495,"eturn buildCallNode(FACTORY_METHOD_NAME, propName,"
False,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,496,"ode.getLineno(), node.getCharno());"
True,src/com/google/javascript/jscomp/FunctionRewriter.java,src/com/google/javascript/jscomp/FunctionRewriter.java,491,"return buildCallNode(FACTORY_METHOD_NAME, propName, node);"
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,25,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,126,ode var = new Node(Token.VAR).copyInformationFrom(n);
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,127,"ode name = Node.newString(Token.NAME, fnNameNode.getString())"
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,128,copyInformationFrom(fnNameNode);
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,127,Node name = IR.name(fnNameNode.getString()).srcref(fnNameNode);
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,128,Node var = IR.var(name).srcref(n);
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,133,ar.addChildToFront(name);
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,273,"ode.newString(Token.NAME, newName)"
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,274,copyInformationFromForTree(newValue));
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,272,IR.name(newName)
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,273,.srcrefTree(newValue));
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,350,ode label = new Node(Token.LABEL).copyInformationFrom(block);
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,351,"ode name = Node.newString(Token.LABEL_NAME, labelName)"
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,352,copyInformationFrom(block);
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,353,abel.addChildToFront(name);
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,354,abel.addChildToBack(block);
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,349,Node name = IR.labelName(labelName).srcref(block);
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,350,"Node label = IR.label(name, block).srcref(block);"
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,356,ode newRoot = new Node(Token.BLOCK).copyInformationFrom(block);
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,352,Node newRoot = IR.block().srcref(block);
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,423,"ode nameNode = Node.newString(Token.NAME, name);"
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,424,"ode assign = new Node(Token.ASSIGN, nameNode, expression);"
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,419,Node nameNode = IR.name(name);
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,420,"Node assign = IR.assign(nameNode, expression);"
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,494,"ode name = Node.newString(Token.LABEL_NAME, labelName);"
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,495,"ode breakNode = new Node(Token.BREAK, name);"
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,490,Node breakNode = IR.breakNode(IR.labelName(labelName));
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,31,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,34,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,406,ode lp = new Node(Token.PARAM_LIST);
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,406,Node lp = IR.paramList();
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,408,"p.addChildToBack(Node.newString(Token.NAME, name));"
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,408,lp.addChildToBack(IR.name(name));
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,24,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,166,"et = new Node(Token.COMMA, ret, part).copyInformationFrom(node);"
True,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java,167,"ret = IR.comma(ret, part).srcref(node);"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,21,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,22,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,95,"all = new Node(Token.CALL,"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,94,call = IR.call(
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,97,"context.getNode(), export),"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,98,"IR.string(export),"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,99,NodeUtil.newQualifiedNameNode(
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,100,"compiler.getCodingConvention(), export,"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,99,all.addChildToBack(Node.newString(export));
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,100,all.addChildToBack(NodeUtil.newQualifiedNameNode(
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,101,"ompiler.getCodingConvention(), export,"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,102,"ontext.getNode(), export));"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,106,"all = new Node(Token.CALL,"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,107,ew Node[] {
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,108,odeUtil.newQualifiedNameNode(
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,109,"ompiler.getCodingConvention(), exportPropertyFunction,"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,110,"ontext.getNode(), exportPropertyFunction),"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,111,odeUtil.newQualifiedNameNode(
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,112,"ompiler.getCodingConvention(), parent,"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,113,"ontext.getNode(), exportPropertyFunction),"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,114,"ode.newString(property),"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,115,odeUtil.newQualifiedNameNode(
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,116,"ompiler.getCodingConvention(), export,"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,117,"ontext.getNode(), exportPropertyFunction)"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,105,call = IR.call(
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,106,NodeUtil.newQualifiedNameNode(
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,107,"compiler.getCodingConvention(), exportPropertyFunction,"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,108,"context.getNode(), exportPropertyFunction),"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,109,NodeUtil.newQualifiedNameNode(
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,110,"compiler.getCodingConvention(), parent,"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,111,"context.getNode(), exportPropertyFunction),"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,112,"IR.string(property),"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,113,NodeUtil.newQualifiedNameNode(
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,114,"compiler.getCodingConvention(), export,"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,115,"context.getNode(), exportPropertyFunction));"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,121,"ode expression = new Node(Token.EXPR_RESULT, call);"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,118,Node expression = IR.exprResult(call);
True,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,22,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,23,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,156,ode initializedVal = initializedName.getFirstChild();
False,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,157,nitializedName.removeChild(initializedVal);
False,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,158,"ode assignmentNode = new Node(Token.ASSIGN, initializedName);"
False,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,159,"ssignmentNode.addChildAfter(initializedVal, initializedName);"
True,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,155,Node initializedVal = initializedName.removeFirstChild();
True,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,156,"Node assignmentNode = IR.assign(initializedName, initializedVal);"
False,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,178,ode emptyNode = new Node(Token.EMPTY);
True,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,src/com/google/javascript/jscomp/GroupVariableDeclarations.java,175,Node emptyNode = IR.empty();
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,20,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,21,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,62,"ode tmp = Node.newString(Token.NAME,"
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,62,Node tmp = IR.name(
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,64,".addChildToFront(new Node(Token.VAR, tmp));"
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,64,n.addChildToFront(IR.var(tmp));
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,79,fBody = new Node(
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,80,"oken.BLOCK,"
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,79,ifBody = IR.block(
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,82,ew Node(
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,83,"oken.EXPR_RESULT,"
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,84,ew Node(
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,85,"oken.ASSIGN,"
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,86,"ey.getFirstChild().cloneNode(),"
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,87,"mp.cloneTree())),"
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,81,IR.exprResult(
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,82,IR.assign(
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,83,"key.getFirstChild().cloneNode(),"
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,84,"tmp.cloneTree())),"
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,98,fBody = new Node(
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,99,"oken.BLOCK,"
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,100,ew Node(
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,101,"oken.EXPR_RESULT,"
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,102,ew Node(
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,103,"oken.ASSIGN,"
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,104,"ey,"
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,105,"mp.cloneTree())),"
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,95,ifBody = IR.block(
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,96,IR.exprResult(
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,97,IR.assign(
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,98,"key,"
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,99,"tmp.cloneTree())),"
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,110,ode newBody = new Node(
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,111,"oken.BLOCK,"
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,112,ew Node(
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,113,"oken.IF,"
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,114,ew Node(
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,115,"oken.NOT,"
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,116,ew Node(
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,117,"oken.CALL,"
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,118,ew Node(
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,119,"oken.GETPROP,"
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,104,Node newBody = IR.block(
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,105,IR.ifNode(
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,106,IR.not(
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,107,IR.call(
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,108,IR.getprop(
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,121,"ode.newString(""match"")),"
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,122,ew Node(
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,123,"oken.REGEXP,"
False,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,124,"ode.newString(""___$"")))),"
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,110,"IR.string(""match"")),"
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,111,IR.regexp(
True,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,src/com/google/javascript/jscomp/IgnoreCajaProperties.java,112,"IR.string(""___$"")))),"
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,29,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,317,"ew Node(Token.ASSIGN,"
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,318,"ode.newString(Token.NAME, varmap.get(var)), value));"
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,318,IR.assign(
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,319,"IR.name(varmap.get(var)),"
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,320,value));
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,325,"ew Node(Token.ASSIGN,"
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,326,"ode.newString(Token.NAME, varmap.get(var)),"
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,327,odeUtil.newUndefinedNode(null)));
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,327,IR.assign(
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,328,"IR.name(varmap.get(var)),"
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,329,NodeUtil.newUndefinedNode(null)));
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,332,eplacement = new Node(Token.TRUE);
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,334,replacement = IR.trueNode();
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,336,odes.add(new Node(Token.TRUE));
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,338,nodes.add(IR.trueNode());
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,434,"ode replacement = Node.newString(Token.NAME, varmap.get(var));"
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,436,Node replacement = IR.name(varmap.get(var));
True,src/com/google/javascript/jscomp/InlineSimpleMethods.java,src/com/google/javascript/jscomp/InlineSimpleMethods.java,21,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/InlineSimpleMethods.java,src/com/google/javascript/jscomp/InlineSimpleMethods.java,22,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/InlineSimpleMethods.java,src/com/google/javascript/jscomp/InlineSimpleMethods.java,255,"arent.getParent().replaceChild(parent, new Node(Token.EMPTY));"
True,src/com/google/javascript/jscomp/InlineSimpleMethods.java,src/com/google/javascript/jscomp/InlineSimpleMethods.java,254,"parent.getParent().replaceChild(parent, IR.empty());"
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,23,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,140,"ode call = new Node(Token.CALL,"
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,141,"ode.newString(Token.NAME, appNameSetter),"
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,142,ode.newString(appNameStr));
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,141,Node call = IR.call(
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,142,"IR.name(appNameSetter),"
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,143,IR.string(appNameStr));
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,144,"ode expr = new Node(Token.EXPR_RESULT, call);"
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,145,Node expr = IR.exprResult(call);
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,231,"ode expr = new Node(Token.EXPR_RESULT, call);"
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,232,Node expr = IR.exprResult(call);
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,258,"ode call = new Node(Token.CALL,"
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,259,"ode.newString(Token.NAME, reportFunctionExitName),"
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,260,ode.newNumber(functionId));
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,259,Node call = IR.call(
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,260,"IR.name(reportFunctionExitName),"
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,261,IR.number(functionId));
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,302,"ode call = new Node(Token.CALL,"
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,303,"ode.newString(Token.NAME, reportFunctionName),"
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,304,ode.newNumber(id));
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,303,Node call = IR.call(
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,304,"IR.name(reportFunctionName),"
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,305,IR.number(id));
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,306,"ode expr = new Node(Token.EXPR_RESULT, call);"
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,307,Node expr = IR.exprResult(call);
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,317,"ode call = new Node(Token.CALL,"
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,318,"ode.newString(Token.NAME, definedFunctionName),"
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,319,ode.newNumber(id));
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,318,Node call = IR.call(
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,319,"IR.name(definedFunctionName),"
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,320,IR.number(id));
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,23,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,25,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,98,oot = new Node(Token.SCRIPT);
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,97,root = IR.script();
True,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,25,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,246,ode newDestBlock = new Node(Token.BLOCK).copyInformationFrom(ifNode);
True,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,247,Node newDestBlock = IR.block().srcref(ifNode);
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,36,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,433,hangeProxy.replaceWith(
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,434,"arent, node, new Node(Token.VOID, Node.newNumber(0)));"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,434,"changeProxy.replaceWith(parent, node, IR.voidNode(IR.number(0)));"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,462,"hangeProxy.replaceWith(gramps, parent, new Node(Token.FALSE));"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,462,"changeProxy.replaceWith(gramps, parent, IR.falseNode());"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1690,eplacements.add(new Node(Token.EMPTY));
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1690,replacements.add(IR.empty());
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1756,"xpr = new Node(Token.COMMA, expr, rep);"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,1756,"expr = IR.comma(expr, rep);"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,751,"ode expr = new Node(Token.EXPR_RESULT, child)"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,752,copyInformationFrom(child);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,753,eturn expr;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,751,return IR.exprResult(child).srcref(child);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1803,"arent.replaceChild(node, new Node(Token.EMPTY));"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1801,"parent.replaceChild(node, IR.empty());"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1816,ryNode.addChildrenToBack(new Node(Token.BLOCK)
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1817,copyInformationFrom(tryNode));
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1814,tryNode.addChildrenToBack(IR.block().srcref(tryNode));
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2225,ode var = new Node(
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2226,"oken.VAR,"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2227,"ode.newString(Token.NAME, nameNode.getString())"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2228,copyInformationFrom(nameNode))
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2229,copyInformationFrom(nameNode);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2222,Node var = IR.var(
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2223,IR.name(nameNode.getString())
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2224,.srcref(nameNode))
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2225,.srcref(nameNode);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2310,"ode propNode = Node.newString(Token.STRING, part, lineno, charno);"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2306,"Node propNode = Node.newString(part, lineno, charno);"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2389,"ode nameNode = Node.newString(Token.NAME, name);"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2385,Node nameNode = IR.name(name);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2564,"ode node = new Node(Token.VOID, Node.newNumber(0));"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2560,Node node = IR.voidNode(IR.number(0));
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2575,"ode nodeName = Node.newString(Token.NAME, name);"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2571,Node nodeName = IR.name(name);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2579,odeName.copyInformationFrom(value);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2575,nodeName.srcref(value);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2581,"ode var = new Node(Token.VAR, nodeName)"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2582,copyInformationFrom(nodeName);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2577,Node var = IR.var(nodeName).srcref(nodeName);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2906,"ode call = new Node(Token.CALL, callTarget);"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2901,Node call = IR.call(callTarget);
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,27,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,323,ode empty = new Node(Token.EMPTY);
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,324,Node empty = IR.empty();
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,416,"ode var = new Node(Token.VAR, fnNameNode, n.getLineno(), n.getCharno());"
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,417,ar.copyInformationFrom(n);
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,417,Node var = IR.var(fnNameNode).srcref(n);
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,475,ode block = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,475,Node block = IR.block();
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,523,ode empty = new Node(Token.EMPTY);
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,523,Node empty = IR.empty();
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,563,ode newVar = new Node(
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,564,"oken.VAR, name, n.getLineno(), n.getCharno());"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,563,Node newVar = IR.var(name).srcref(n);
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,727,"ode replacement = new Node(Token.ASSIGN, n, value);"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,726,"Node replacement = IR.assign(n, value);"
True,src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java,20,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java,75,ode.newString(secondArgument.getFirstChild().getString()));
True,src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java,76,IR.string(secondArgument.getFirstChild().getString()));
False,src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java,89,ode.newString(secondArgument.getString()));
True,src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPostprocess.java,90,IR.string(secondArgument.getString()));
True,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,20,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,70,"ew Node(Token.VAR,"
False,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,71,"ode.newString(Token.NAME, EXTERN_OBJECT_PROPERTY_STRING)));"
True,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,71,IR.var(
True,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,72,IR.name(EXTERN_OBJECT_PROPERTY_STRING)));
False,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,78,cript = new Node(Token.SCRIPT);
True,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,79,script = IR.script();
False,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,89,ode newName =
False,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,90,"ode.newString(Token.NAME, EXTERN_OBJECT_PROPERTY_STRING);"
True,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,src/com/google/javascript/jscomp/ObjectPropertyStringPreprocess.java,90,Node newName = IR.name(EXTERN_OBJECT_PROPERTY_STRING);
True,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,23,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,131,"ode newAssign = new Node(Token.ASSIGN,"
False,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,132,"ode.newString(Token.NAME, newName));"
True,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,132,Node newAssign = IR.assign(
True,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,133,"IR.name(newName), assign.getLastChild().detachFromParent());"
False,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,134,ewAssign.addChildToBack(assign.getLastChild().detachFromParent());
False,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,136,ssign.addChildrenToBack(
False,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,137,"ode.newString(Token.NAME, newName).copyInformationFrom(assign));"
True,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,136,assign.addChildrenToBack(IR.name(newName).srcref(assign));
False,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,141,"ode var = new Node(Token.VAR, Node.newString(Token.NAME, newName));"
True,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,src/com/google/javascript/jscomp/OperaCompoundAssignFix.java,140,Node var = IR.var(IR.name(newName));
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,22,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,23,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,253,"arametersList.addChildrenToBack(Node.newString(Token.NAME, name));"
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,252,parametersList.addChildrenToBack(IR.name(name));
False,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,270,"ode.newString(Token.NAME, argNames[value - numNamedParameter]));"
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,269,IR.name(argNames[value - numNamedParameter]));
False,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,284,"ode.newString(Token.NAME, name.getString()));"
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,283,IR.name(name.getString()));
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,25,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,465,"tmt = new Node(Token.EXPR_RESULT, value);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,466,stmt = IR.exprResult(value);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,492,"ode var = new Node(Token.VAR, argNode).copyInformationFrom(argNode);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,493,Node var = IR.var(argNode).copyInformationFrom(argNode);
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,23,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,24,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,148,ew Node(
False,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,149,"oken.EXPR_RESULT, result).copyInformationFrom(result), node);"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,146,"IR.exprResult(result).srcref(result), node);"
False,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,248,ode newProperty = Node.newString(propertyName)
True,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java,248,Node newProperty = IR.string(propertyName)
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,185,".replaceChild(child, Node.newNumber(0));"
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,185,"n.replaceChild(child, IR.number(0));"
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,321,ode newNode = Node.newString(typeNameString);
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,321,Node newNode = IR.string(typeNameString);
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,384,ode negNumNode = Node.newNumber(negNum);
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,384,Node negNumNode = IR.number(negNum);
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,400,ode notIntValNode = Node.newNumber(~intVal);
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,400,Node notIntValNode = IR.number(~intVal);
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,626,".replaceChild(right, Node.newString(result));"
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,626,"n.replaceChild(right, IR.string(result));"
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,649,".replaceChild(left, Node.newString(result));"
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,649,"n.replaceChild(left, IR.string(result));"
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,669,ode newStringNode = Node.newString(leftString + rightString);
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,669,Node newStringNode = IR.string(leftString + rightString);
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,903,ode newNumber = Node.newNumber(result);
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,903,Node newNumber = IR.number(result);
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1339,ode newString = Node.newString(stringValue);
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1339,Node newString = IR.string(stringValue);
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1396,ode lengthNode = Node.newNumber(knownLength);
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1396,Node lengthNode = IR.number(knownLength);
True,src/com/google/javascript/jscomp/PeepholeFoldWithTypes.java,src/com/google/javascript/jscomp/PeepholeFoldWithTypes.java,20,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/PeepholeFoldWithTypes.java,src/com/google/javascript/jscomp/PeepholeFoldWithTypes.java,107,ode newNode = Node.newString(typeName);
True,src/com/google/javascript/jscomp/PeepholeFoldWithTypes.java,src/com/google/javascript/jscomp/PeepholeFoldWithTypes.java,108,Node newNode = IR.string(typeName);
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,157,ode replacement = Node.newString(lowered);
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,157,Node replacement = IR.string(lowered);
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,169,ode replacement = Node.newString(uppered);
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,169,Node replacement = IR.string(uppered);
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,247,umericNode = Node.newNumber(checkVal.intValue());
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,247,numericNode = IR.number(checkVal.intValue());
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,249,umericNode = Node.newNumber(checkVal);
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,249,numericNode = IR.number(checkVal);
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,298,ewNode = Node.newNumber(newVal);
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,298,newNode = IR.number(newVal);
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,303,ewNode = Node.newNumber(newVal);
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,303,newNode = IR.number(newVal);
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,353,ode newNode = Node.newNumber(indexVal);
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,353,Node newNode = IR.number(indexVal);
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,414,ode.newString(sb.toString()).copyInformationFrom(prev));
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,414,IR.string(sb.toString()).copyInformationFrom(prev));
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,429,ode.newString(sb.toString()).copyInformationFrom(prev));
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,429,IR.string(sb.toString()).copyInformationFrom(prev));
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,437,"ode emptyStringNode = Node.newString("""");"
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,437,"Node emptyStringNode = IR.string("""");"
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,526,ode resultNode = Node.newString(result);
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,526,Node resultNode = IR.string(result);
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,579,ode resultNode = Node.newString(result);
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,579,Node resultNode = IR.string(result);
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,610,ode resultNode = Node.newString(
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,610,Node resultNode = IR.string(
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,641,ode resultNode = Node.newNumber(stringAsString.charAt(index));
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,641,Node resultNode = IR.number(stringAsString.charAt(index));
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1309,ode newNode = Node.newNumber(num);
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1309,Node newNode = IR.number(num);
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1668,eturn Node.newString(sb.toString()).copyInformationFrom(n);
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1668,return IR.string(sb.toString()).srcref(n);
True,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,20,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,101,"ode newBlock = new Node(Token.BLOCK, n.getLineno(), n.getCharno());"
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,102,ewBlock.copyInformationFrom(n);
True,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,102,Node newBlock = IR.block().srcref(n);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,24,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,219,"arent.replaceChild(n, Node.newNumber(0));"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,220,"parent.replaceChild(n, IR.number(0));"
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,915,"ode varNode = new Node(Token.VAR, nameNode);"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,916,Node varNode = IR.var(nameNode);
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,971,"ode name = Node.newString(Token.NAME, namespace);"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,972,Node name = IR.name(namespace);
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,974,"ode decl = new Node(Token.VAR, name);"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,975,Node decl = IR.var(name);
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,996,ode objlit = new Node(Token.OBJECTLIT);
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,997,Node objlit = IR.objectlit();
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1007,"ode decl = new Node(Token.EXPR_RESULT,"
False,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1008,"ew Node(Token.ASSIGN,"
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1008,Node decl = IR.exprResult(
True,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,src/com/google/javascript/jscomp/ProcessClosurePrimitives.java,1009,IR.assign(
True,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,24,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,174,eturn new Node(Token.FALSE);
True,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,175,return IR.falseNode();
False,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,176,eturn Node.newNumber(0);
True,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,177,return IR.number(0);
False,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,178,"eturn Node.newString("""");"
True,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,179,"return IR.string("""");"
False,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,257,ode voidZeroNode = new Node(Token.VOID)
False,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,258,copyInformationFrom(callNode);
False,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,259,oidZeroNode.addChildToBack(Node.newNumber(0)
False,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,260,copyInformationFrom(callNode));
True,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,258,Node voidZeroNode = IR.voidNode(IR.number(0).srcref(callNode))
True,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,259,.srcref(callNode);
False,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,273,ode objNode = new Node(Token.OBJECTLIT)
False,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,274,copyInformationFrom(sourceInformationNode);
True,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,272,Node objNode = IR.objectlit().srcref(sourceInformationNode);
False,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,276,ode objKeyNode = Node.newString(entry.getKey())
True,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,274,Node objKeyNode = IR.string(entry.getKey())
True,src/com/google/javascript/jscomp/RemoveTryCatch.java,src/com/google/javascript/jscomp/RemoveTryCatch.java,20,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/RemoveTryCatch.java,src/com/google/javascript/jscomp/RemoveTryCatch.java,84,lock = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/RemoveTryCatch.java,src/com/google/javascript/jscomp/RemoveTryCatch.java,85,block = IR.block();
True,src/com/google/javascript/jscomp/RemoveUnusedClassProperties.java,src/com/google/javascript/jscomp/RemoveUnusedClassProperties.java,22,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/RemoveUnusedClassProperties.java,src/com/google/javascript/jscomp/RemoveUnusedClassProperties.java,68,"arent.getParent().replaceChild(parent, Node.newNumber(0));"
True,src/com/google/javascript/jscomp/RemoveUnusedClassProperties.java,src/com/google/javascript/jscomp/RemoveUnusedClassProperties.java,69,"parent.getParent().replaceChild(parent, IR.number(0));"
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,28,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,433,".getParent().replaceChild(n, Node.newNumber(0).copyInformationFrom(n));"
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,434,"n.getParent().replaceChild(n, IR.number(0).srcref(n));"
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,831,"ew Node(Token.EXPR_RESULT, nameNode.removeFirstChild()));"
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,832,IR.exprResult(nameNode.removeFirstChild()));
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,951,"eplacement = new Node(Token.COMMA,"
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,952,replacement = IR.comma(
True,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,29,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,263,"arent.replaceChild(nodeEntry.getKey(), Node.newString(sb.toString()));"
True,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,264,"parent.replaceChild(nodeEntry.getKey(), IR.string(sb.toString()));"
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,24,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,175,"ode replacement = new Node(Token.ADD, first,"
False,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,176,"ode.newString(""-"" + second.getString())"
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,176,"Node replacement = IR.add(first,"
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,177,"IR.string(""-"" + second.getString())"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,22,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,181,"arent.replaceChild(n, Node.newString(rename));"
True,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,src/com/google/javascript/jscomp/ReplaceIdGenerators.java,182,"parent.replaceChild(n, IR.string(rename));"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,21,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,109,eturn Node.newString(message.toString());
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,111,return IR.string(message.toString());
False,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,158," Node.newString("""");"
False,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,159,"ode newBlockNode = new Node(Token.BLOCK,"
False,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,160,"ew Node(Token.RETURN, valueNode));"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,160,": IR.string("""");"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,161,Node newBlockNode = IR.block(IR.returnNode(valueNode));
False,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,196,"artNode = Node.newString(Token.NAME, arg);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,197,partNode = IR.name(arg);
False,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,208,artNode = Node.newString(part.toString());
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,209,partNode = IR.string(part.toString());
False,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,212,"eturn new Node(Token.ADD, partNode,"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,213,"return IR.add(partNode,"
False,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,309,artNode = Node.newString(part.toString());
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,310,partNode = IR.string(part.toString());
False,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,313,"eturn new Node(Token.ADD, partNode,"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,314,"return IR.add(partNode,"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,27,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,283,eplacement = Node.newString(replacementString);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,284,replacement = IR.string(replacementString);
False,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,287,"ode keyNode = Node.newString("""");"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,288,"Node keyNode = IR.string("""");"
False,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,301,eplacement = Node.newString(replacementString);
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,302,replacement = IR.string(replacementString);
False,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,372,refix = new Node(
False,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,373,"oken.ADD, prefix, Node.newString(placeholderToken));"
False,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,374,"eturn new Node(Token.ADD, prefix, expr.cloneTree());"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,373,"prefix = IR.add(prefix, IR.string(placeholderToken));"
True,src/com/google/javascript/jscomp/ReplaceStrings.java,src/com/google/javascript/jscomp/ReplaceStrings.java,374,"return IR.add(prefix, expr.cloneTree());"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,20,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,21,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,68,"ode nameNode = Node.newString(Token.NAME, globalSymbolNamespace);"
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,69,ode varNode = new Node(Token.VAR);
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,70,arNode.addChildToBack(nameNode);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,67,Node varNode = IR.var(IR.name(globalSymbolNamespace));
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,189,"ode replacement = new Node(Token.GETPROP,"
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,190,"ode.newString(Token.NAME, globalSymbolNamespace)"
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,191,"copyInformationFrom(node),"
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,192,ode.newString(name).copyInformationFrom(node));
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,193,eplacement.copyInformationFrom(node);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,186,Node replacement = IR.getprop(
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,187,"IR.name(globalSymbolNamespace).srcref(node),"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,188,IR.string(name).srcref(node));
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,189,replacement.srcref(node);
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,196,"ode assign = new Node(Token.ASSIGN, replacement,"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,192,"Node assign = IR.assign(replacement,"
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,246,ode expr = new Node(Token.EXPR_RESULT);
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,247,xpr.copyInformationFrom(c);
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,248,xpr.addChildToBack(c.cloneTree());
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,242,Node expr = IR.exprResult(c.cloneTree()).srcref(c);
False,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,264,"ode nextComma = new Node(Token.COMMA, comma, commas.get(i));"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,258,"Node nextComma = IR.comma(comma, commas.get(i));"
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,25,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,26,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,158,ode marker = Node.newString(
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,158,Node marker = IR.string(
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,163,"ode assign = new Node(Token.EXPR_RESULT, new Node(Token.ASSIGN,"
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,164,"ew Node(Token.GETELEM,"
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,165,"ew Node(Token.GETPROP,"
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,163,Node assign = IR.exprResult(IR.assign(
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,164,IR.getelem(
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,165,IR.getprop(
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,167,"ode.newString(""prototype"")), marker),"
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,168,ew Node(Token.TRUE)));
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,167,"IR.string(""prototype"")), marker),"
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,168,IR.trueNode()));
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,264,"heckNode = new Node(Token.EXPR_RESULT, checkNode);"
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,264,checkNode = IR.exprResult(checkNode);
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,307,ode arrayNode = new Node(Token.ARRAYLIT);
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,307,Node arrayNode = IR.arraylit();
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,322,"eturn new Node(Token.CALL, jsCode(""checkType""), expr, arrayNode);"
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,322,"return IR.call(jsCode(""checkType""), expr, arrayNode);"
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,340,"eturn new Node(Token.CALL,"
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,340,return IR.call(
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,342,ode.newString(type.toString()));
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,342,IR.string(type.toString()));
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,352,"eturn new Node(Token.CALL,"
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,352,return IR.call(
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,354,ode.newString(refName));
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,354,IR.string(refName));
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,357,"eturn new Node(Token.CALL,"
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,357,return IR.call(
False,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,360,ode.newString(refName));
True,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,src/com/google/javascript/jscomp/RuntimeTypeCheck.java,360,IR.string(refName));
True,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,23,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,24,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,202,ode syntheticModuleJsRoot = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,201,Node syntheticModuleJsRoot = IR.block();
False,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,221,ode syntheticExternsAndJsRoot = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,220,Node syntheticExternsAndJsRoot = IR.block();
False,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,524,"ode assignment = new Node(Token.ASSIGN, nameNode, functionCopy);"
True,src/com/google/javascript/jscomp/SpecializeModule.java,src/com/google/javascript/jscomp/SpecializeModule.java,523,"Node assignment = IR.assign(nameNode, functionCopy);"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,23,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,593,"arent.replaceChild(n, new Node(Token.NULL));"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,594,"parent.replaceChild(n, IR.nullNode());"
True,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,19,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,21,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,50,oot = new Node(Token.SCRIPT);
True,src/com/google/javascript/jscomp/SyntheticAst.java,src/com/google/javascript/jscomp/SyntheticAst.java,50,root = IR.script();
True,src/com/google/javascript/jscomp/UnfoldCompoundAssignments.java,src/com/google/javascript/jscomp/UnfoldCompoundAssignments.java,21,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/UnfoldCompoundAssignments.java,src/com/google/javascript/jscomp/UnfoldCompoundAssignments.java,102,"hs = new Node(Token.POS, lhs);"
True,src/com/google/javascript/jscomp/UnfoldCompoundAssignments.java,src/com/google/javascript/jscomp/UnfoldCompoundAssignments.java,103,lhs = IR.pos(lhs);
False,src/com/google/javascript/jscomp/UnfoldCompoundAssignments.java,src/com/google/javascript/jscomp/UnfoldCompoundAssignments.java,106,"hs, Node.newNumber(1));"
True,src/com/google/javascript/jscomp/UnfoldCompoundAssignments.java,src/com/google/javascript/jscomp/UnfoldCompoundAssignments.java,107,"lhs, IR.number(1));"
True,src/com/google/javascript/jscomp/VarCheck.java,src/com/google/javascript/jscomp/VarCheck.java,23,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/VarCheck.java,src/com/google/javascript/jscomp/VarCheck.java,220,"ode nameNode = Node.newString(Token.NAME, varName);"
True,src/com/google/javascript/jscomp/VarCheck.java,src/com/google/javascript/jscomp/VarCheck.java,221,Node nameNode = IR.name(varName);
False,src/com/google/javascript/jscomp/VarCheck.java,src/com/google/javascript/jscomp/VarCheck.java,233,"ew Node(Token.VAR, nameNode));"
True,src/com/google/javascript/jscomp/VarCheck.java,src/com/google/javascript/jscomp/VarCheck.java,234,IR.var(nameNode));
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,25,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,132,ode root = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,133,Node root = IR.block();
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,473,ode.addChildToBack(new Node(Token.EMPTY));
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,474,node.addChildToBack(IR.empty());
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,494,"ode.addChildToBack(Node.newString(Token.LABEL_NAME, label));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,495,node.addChildToBack(IR.labelName(label));
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,532,ode block = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,533,Node block = IR.block();
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,536,ode block = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,537,Node block = IR.block();
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,630,ode block = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,631,Node block = IR.block();
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,693,ode = Node.newNumber(((Number) name).doubleValue());
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,694,node = IR.number(((Number) name).doubleValue());
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,695,"ode = Node.newString(Token.STRING, (String) name);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,696,node = IR.string((String) name);
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,754,ode block = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,755,Node block = IR.block();
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,792,arent.addChildToBack(new Node(Token.EMPTY));
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,793,parent.addChildToBack(IR.empty());
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,795,"arent.addChildToBack(Node.newString(Token.NAME, """"));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,796,"parent.addChildToBack(IR.name(""""));"
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,805,arent.addChildToBack(new Node(Token.EMPTY));
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,806,parent.addChildToBack(IR.empty());
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,815,"ode child = Node.newString(Token.NAME, ""eval"");"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,816,"Node child = IR.name(""eval"");"
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,864,"ode node = Node.newString(Token.NAME, name);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,865,Node node = IR.name(name);
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,877,"ode node = Node.newString(Token.NAME,"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,878,Node node = IR.name(
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,888,"ode node = Node.newString(Token.NAME,"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,889,Node node = IR.name(
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,935,"ode.addChildToBack(Node.newString(Token.LABEL_NAME, label));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,936,node.addChildToBack(IR.labelName(label));
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,941,ode.addChildToBack(new Node(Token.EMPTY));
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,942,node.addChildToBack(IR.empty());
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,956,ode = new Node(Token.TRUE);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,957,node = IR.trueNode();
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,958,ode = new Node(Token.FALSE);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,959,node = IR.falseNode();
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,966,ode = new Node(Token.NULL);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,967,node = IR.nullNode();
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,972,ode = Node.newNumber(value);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,973,node = IR.number(value);
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,978,ode = Node.newString(value);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,979,node = IR.string(value);
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1049,ode script = new Node(Token.SCRIPT);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1050,Node script = IR.script();
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1071,ode node = new Node(Token.EXPR_RESULT);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1072,Node node = IR.exprResult(IR.string(directive));
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1073,"ode.addChildToBack(Node.newString(Token.STRING, directive));"
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1083,"ode.addChildToBack(Node.newString(Token.STRING, body));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1083,node.addChildToBack(IR.string(body));
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1087,"ode.addChildToBack(Node.newString(Token.STRING, flags));"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1087,node.addChildToBack(IR.string(flags));
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1157,ode block = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1157,Node block = IR.block();
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,68,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,1293,eturn Node.newString(value).clonePropsFrom(templateNode);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,1294,return IR.string(value).clonePropsFrom(templateNode);
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,1301,eturn Node.newNumber(value).clonePropsFrom(templateNode);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,1302,return IR.number(value).clonePropsFrom(templateNode);
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,26,import com.google.javascript.rhino.IR;
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,1555,"eturn wrapNode(Token.ELLIPSIS, new Node(Token.EMPTY));"
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,1556,"return wrapNode(Token.ELLIPSIS, IR.empty());"
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,1636,ode typeList = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,1637,Node typeList = IR.block();
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,2179,ode templateNode = new Node(Token.SCRIPT);
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,2180,Node templateNode = IR.script();
False,src/com/google/javascript/rhino/IR.java,src/com/google/javascript/rhino/IR.java,375,reconditions.checkState(!string.isString());
True,src/com/google/javascript/rhino/IR.java,src/com/google/javascript/rhino/IR.java,375,Preconditions.checkState(string.isString());
