is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,264,nt type = ancestor.getType();
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,265,f (type != Token.GETPROP &&
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,266,ype != Token.GETELEM &&
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,267,ype != Token.CALL) {
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,264,if (ancestor.isAssign()) {
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,265,Node ancParent = ancestor.getParent();
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,266,ancParent.replaceChild(
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,267,"ancestor, ancestor.getLastChild().detachFromParent());"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,268,break;
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,270,if (!NodeUtil.isGet(ancestor)
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,271,&& !ancestor.isCall()) {
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,325,f (nameEndsWithFieldNameToStrip(expression) ||
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,329,if (nameIncludesFieldNameToStrip(expression) ||
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,399,ameEndsWithFieldNameToStrip(n.getFirstChild()));
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,403,nameIncludesFieldNameToStrip(n.getFirstChild()));
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,459," Checks whether the name begins with a strip type, ends with a field name"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,463,"* Checks whether the name begins with a strip type, includes a field name"
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,499,eturn nameEndsWithFieldNameToStrip(callee) ||
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,500,ameEndsWithFieldNameToStrip(function) ||
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,503,return nameIncludesFieldNameToStrip(callee) ||
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,504,nameIncludesFieldNameToStrip(function) ||
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,506, Gets whether a name ends with a field name that should be stripped. For
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,507," example, this function would return true when passed ""this.logger"" or"
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,508," ""a.b.c.myLogger"" if ""logger"" is a strip name."
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,510, @param n A node (typically a GETPROP node)
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,511, @return Whether the name ends with a field name that should be stripped
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,513,oolean nameEndsWithFieldNameToStrip(@Nullable Node n) {
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,514,f (n != null && n.isGetProp()) {
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,515,ode propNode = n.getLastChild();
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,516,eturn propNode != null && propNode.isString() &&
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,517,sStripName(propNode.getString());
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,519,eturn false;
False,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,368,"a.prototype.logger_ = function(msg) {};"" +"
False,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,369,"a.prototype.b = function() { this.logger_('hi'); }"","
False,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,370,"a=function(){};a.prototype.b=function(){}"");"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,368,"""a.prototype.logger_ = function(msg) {};"" +"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,369,"""a.prototype.b = function() { this.logger_('hi'); }"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,370,"""a=function(){};a.prototype.b=function(){}"");"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,373,public void testStripCallsToStrippedNames3() {
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,374,"test(""a = function() { this.logger_ = function(msg){}; };"" +"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,375,"""a.prototype.b = function() { this.logger_('hi').foo = 2; }"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,376,"""a=function(){};a.prototype.b=function(){2;}"");"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,379,public void testStripCallsToStrippedNames4() {
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,380,"test(""a = this.logger_().foo;"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,381,"""a = null;"");"
False,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,373,ublic void testStripVarsInitializedFromStrippedNames() {
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,384,public void testStripVarsInitializedFromStrippedNames1() {
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,391,public void testStripVarsInitializedFromStrippedNames2() {
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,392,"test(""a = function() { this.logger_ = function() { return 1; }; };"" +"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,393,"""a.prototype.b = function() { "" +"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,394,"""  var one = this.logger_.foo.bar(); if (one) foo() }"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,395,"""a=function(){};a.prototype.b=function(){if(null)foo()}"");"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,425,public void testNewOperatior3() {
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,426,"test(""(new goog.debug.Logger()).foo().bar = 2;"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,427,"""2;"");"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,463,public void testMethodCallTriggersRemoval() {
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,464,"test(""this.logger_.foo.bar();"","
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,468,public void testRemoveExpressionByName() {
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,469,"test(""this.logger_.foo.bar;"","
