is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,255,"// Propagate the template types, if they exist."
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,256,templateTypeNames = oldType.getTemplateTypeMap().getTemplateKeys();
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,582,// NOTE: these template type names may override a list
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,583,// of inherited ones from an overridden function.
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,585, else {
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,586,emplateTypeNames = ImmutableList.of();
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,938,rototypeOwnerTypeMap =
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,939,rototypeOwner.getTypeOfThis().getTemplateTypeMap();
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,938,prototypeOwnerTypeMap =
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,939,prototypeOwner.getTypeOfThis().getTemplateTypeMap();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,620,if (isTemplateType() && that.isTemplateType()) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,621,return this == that;
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,129,/ TODO(johnlenz): should we support preserving template keys?
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,133,builder.withTemplateKeys(type.getTemplateTypeMap().getUnfilledTemplateKeys());
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,330,@Override
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,331,public String toString() {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,332,"String s = """";"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,334,"int len = Math.max(Math.max(templateKeys.size(), templateValues.size()),"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,335,resolvedTemplateValues.size());
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,336,"s += ""{ "";"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,337,for (int i = 0; i < len; i++) {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,338,"s += ""("";"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,339,"s += (i < templateKeys.size()) ? templateKeys.get(i) : """";"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,340,"s += "","";"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,341,"s += (i < templateValues.size()) ? templateValues.get(i) : """";"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,342,"s += "","";"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,343,"s += (i < resolvedTemplateValues.size()) ? resolvedTemplateValues.get(i) : """";"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,344,"s += "") "";"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,346,"s += ""}"";"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,348,return s;
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11981,public void testTemplatized6() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11982,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11983,"""/** @interface */ function I(){}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11984,"""/** @param {T} a\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11985,""" * @return {T}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11986,""" * @template T\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11987,"""*/\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11988,"""I.prototype.method;\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11990,"""/** @constructor \n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11991,""" * @implements {I}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11992,""" */ function C(){}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11993,"""/** @override*/ C.prototype.method = function(a) {}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11995,"""/** @type {null} */ var some = new C().method('str');"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11996,"""initializing variable\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11997,"""found   : string\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,11998,"""required: null"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12001,public void testTemplatized7() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12002,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12003,"""/** @interface\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12004,""" *  @template Q\n "" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12005,""" */ function I(){}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12007,"""/** @param {T} a\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12008,""" * @return {T|Q}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12009,""" * @template T\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12010,"""*/\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12011,"""I.prototype.method;\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12013,"""/** @constructor \n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12014,""" * @implements {I.<number>}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12015,""" */ function C(){}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12016,"""/** @override*/ C.prototype.method = function(a) {}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12018,"""/** @type {null} */ var some = new C().method('str');"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12020,"""initializing variable\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12021,"""found   : (number|string)\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12022,"""required: null"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12025,public void disable_testTemplatized8() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12026,// TODO(johnlenz): this should generate a warning but does not.
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12027,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12028,"""/** @interface\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12029,""" *  @template Q\n "" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12030,""" */ function I(){}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12032,"""/** @param {T} a\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12033,""" * @return {T|Q}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12034,""" * @template T\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12035,"""*/\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12036,"""I.prototype.method;\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12038,"""/** @constructor \n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12039,""" *  @implements {I.<R>}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12040,""" *  @template R\n "" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12041,""" */ function C(){}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12042,"""/** @override*/ C.prototype.method = function(a) {}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12044,"""/** @type {C.<number>} var x = new C();"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12045,"""/** @type {null} */ var some = x.method('str');"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12047,"""initializing variable\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12048,"""found   : (number|string)\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12049,"""required: null"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12052,public void testTemplatized9() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12053,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12054,"""/** @interface\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12055,""" *  @template Q\n "" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12056,""" */ function I(){}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12058,"""/** @param {T} a\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12059,""" * @return {T|Q}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12060,""" * @template T\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12061,"""*/\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12062,"""I.prototype.method;\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12064,"""/** @constructor \n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12065,""" *  @param {R} a\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12066,""" *  @implements {I.<R>}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12067,""" *  @template R\n "" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12068,""" */ function C(a){}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12069,"""/** @override*/ C.prototype.method = function(a) {}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12071,"""/** @type {null} */ var some = new C(1).method('str');"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12073,"""initializing variable\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12074,"""found   : (number|string)\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,12075,"""required: null"");"
