is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,260,"dd(Long.toString(mantissa) + ""E"" + Integer.toString(exp));"
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,260,"addConstant(Long.toString(mantissa) + ""E"" + Integer.toString(exp));"
False,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,262,dd(Long.toString(value));
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,262,addConstant(Long.toString(value));
False,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,265,dd(String.valueOf(x));
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,265,addConstant(String.valueOf(x));
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,269,void addConstant(String newcode) {
True,src/com/google/javascript/jscomp/CodeConsumer.java,src/com/google/javascript/jscomp/CodeConsumer.java,270,add(newcode);
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,553,"dd(""null"");"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,553,"cc.addConstant(""null"");"
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,563,"dd(""false"");"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,563,"cc.addConstant(""false"");"
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,568,"dd(""true"");"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,568,"cc.addConstant(""true"");"
True,src/com/google/javascript/jscomp/InlineCostEstimator.java,src/com/google/javascript/jscomp/InlineCostEstimator.java,99,"* Constants (true, false, null) are considered basically free,"
True,src/com/google/javascript/jscomp/InlineCostEstimator.java,src/com/google/javascript/jscomp/InlineCostEstimator.java,100,* because it's likely that they will get folded when we're done.
True,src/com/google/javascript/jscomp/InlineCostEstimator.java,src/com/google/javascript/jscomp/InlineCostEstimator.java,102,@Override
True,src/com/google/javascript/jscomp/InlineCostEstimator.java,src/com/google/javascript/jscomp/InlineCostEstimator.java,103,void addConstant(String newcode) {
True,src/com/google/javascript/jscomp/InlineCostEstimator.java,src/com/google/javascript/jscomp/InlineCostEstimator.java,104,"add(""0"");"
True,test/com/google/javascript/jscomp/InlineCostEstimatorTest.java,test/com/google/javascript/jscomp/InlineCostEstimatorTest.java,49,"checkCost(""true"", ""1"");"
True,test/com/google/javascript/jscomp/InlineCostEstimatorTest.java,test/com/google/javascript/jscomp/InlineCostEstimatorTest.java,50,"checkCost(""false"", ""1"");"
False,test/com/google/javascript/jscomp/InlineCostEstimatorTest.java,test/com/google/javascript/jscomp/InlineCostEstimatorTest.java,53,"heckCost(""10 + foo(a,b)"", ""10+xx(xx,xx)"");"
True,test/com/google/javascript/jscomp/InlineCostEstimatorTest.java,test/com/google/javascript/jscomp/InlineCostEstimatorTest.java,55,"checkCost(""10 + foo(a,b)"", ""0+xx(xx,xx)"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,2167,public void testIssue728() {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,2168,"String f = ""var f = function() { return false; };"";"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,2169,StringBuilder calls = new StringBuilder();
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,2170,StringBuilder folded = new StringBuilder();
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,2171,for (int i = 0; i < 30; i++) {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,2172,"calls.append(""if (!f()) alert('x');"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,2173,"folded.append(""if (!false) alert('x');"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,2176,"test(f + calls, folded.toString());"
