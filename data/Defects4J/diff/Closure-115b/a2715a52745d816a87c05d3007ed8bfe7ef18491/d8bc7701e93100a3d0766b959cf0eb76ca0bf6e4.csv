is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CheckRegExp.java,src/com/google/javascript/jscomp/CheckRegExp.java,57,oolean first = (n == parent.getFirstChild());
True,src/com/google/javascript/jscomp/CheckRegExp.java,src/com/google/javascript/jscomp/CheckRegExp.java,57,boolean first = (n == parent.getFirstChild());
False,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,250,f (needToCheckDuplications
False,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,251,& !isUnnamedMsg
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,250,if (needToCheckDuplications
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,251,&& !isUnnamedMsg
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,340,ewName = original +
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,340,newName = original +
False,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,208," the end of a block and removes them by moving the if node's siblings,"
True,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,208,"* the end of a block and removes them by moving the if node's siblings,"
False,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,269, Creates a JS object that holds a map of tweakId -> default value override.
True,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,269,* Creates a JS object that holds a map of tweakId -> default value override.
False,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,472, error for each function call.
True,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,472,* error for each function call.
False,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,492,"/ For register* and overrideDefaultValue calls, ensure the default"
True,src/com/google/javascript/jscomp/ProcessTweaks.java,src/com/google/javascript/jscomp/ProcessTweaks.java,492,"// For register* and overrideDefaultValue calls, ensure the default"
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,65,rivate static final Predicate<Node> NOT_FUNCTION_PREDICATE =
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,65,private static final Predicate<Node> NOT_FUNCTION_PREDICATE =
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,108,"ocationAbstraction = createVisibilityAbstraction(externs, root);"
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,108,"locationAbstraction = createVisibilityAbstraction(externs, root);"
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,138, Determines whether it is safe to move code ({@code source}) across
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,138,* Determines whether it is safe to move code ({@code source}) across
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,142," <p>The notion of ""environment"" is optimization-specific, but it should"
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,142,"* <p>The notion of ""environment"" is optimization-specific, but it should"
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,146, {@code destination} must not be a descendant of {@code source}.
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,146,* {@code destination} must not be a descendant of {@code source}.
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,154,"ublic boolean safeToMoveBefore(Node source,"
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,154,"public boolean safeToMoveBefore(Node source,"
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,165,/ Don't currently support interprocedural analysis
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,165,// Don't currently support interprocedural analysis
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,219," Returns true if the node is pure, that is it side effect free and does it"
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,219,"* Returns true if the node is pure, that is it side effect free and does it"
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,229," Returns true if the two nodes have the same control flow properties,"
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,229,"* Returns true if the two nodes have the same control flow properties,"
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,265,f (node1DeepestControlDependentBlock ==
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,265,if (node1DeepestControlDependentBlock ==
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,365,rivate static Node closestControlDependentAncestor(Node node) {
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,365,private static Node closestControlDependentAncestor(Node node) {
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,443, @param cfgDestination The node immediately before which cfgSource
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,443,* @param cfgDestination The node immediately before which cfgSource
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,553," That is, could any of the concrete storage locations (fields, variables,"
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,553,"* That is, could any of the concrete storage locations (fields, variables,"
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,578, <p>Implementations of this class will each provide own their
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,578,* <p>Implementations of this class will each provide own their
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,602,ublic LocationSummary calculateLocationSummary(Set<Node> nodes) {
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,602,public LocationSummary calculateLocationSummary(Set<Node> nodes) {
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,625,rivate static class DegenerateLocationAbstraction
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,625,private static class DegenerateLocationAbstraction
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,705,rivate static class VisibilityLocationAbstraction
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,705,private static class VisibilityLocationAbstraction
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,741,nt visibilityModLocations = VISIBILITY_LOCATION_NONE;
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,741,int visibilityModLocations = VISIBILITY_LOCATION_NONE;
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,750,/ Heap access
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,750,// Heap access
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,795,rivate int effectMaskForVariableReference(Node variableReference) {
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,795,private int effectMaskForVariableReference(Node variableReference) {
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,800,ode declaringNameNode =
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,800,Node declaringNameNode =
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,804,ariableVisibility visibility =
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,804,VariableVisibility visibility =
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,823,"hrow new IllegalStateException(""Unrecognized variable"" +"
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,823,"throw new IllegalStateException(""Unrecognized variable"" +"
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,866,oolean nonSimpleAssign =
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,866,boolean nonSimpleAssign =
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,869,eturn (nonSimpleAssign
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,869,return (nonSimpleAssign
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,871,| parent.getType() == Token.INC);
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,871,|| parent.getType() == Token.INC);
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,902,rivate static class VisibilityBasedEffectLocation
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,902,private static class VisibilityBasedEffectLocation
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,912,reconditions.checkArgument(otherLocation instanceof
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,912,Preconditions.checkArgument(otherLocation instanceof
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,915,nt otherMask =
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,915,int otherMask =
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,928,reconditions.checkArgument(otherLocation instanceof
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,928,Preconditions.checkArgument(otherLocation instanceof
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,931,nt otherMask =
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,931,int otherMask =
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,936,eturn new VisibilityBasedEffectLocation(joinedMask);
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,936,return new VisibilityBasedEffectLocation(joinedMask);
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,966,eferenceCollectingCallback callback =
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,967,"ew ReferenceCollectingCallback(compiler,"
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,966,ReferenceCollectingCallback callback =
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,967,"new ReferenceCollectingCallback(compiler,"
False,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,976,or (Reference reference : referenceCollection.references) {
True,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,src/com/google/javascript/jscomp/SideEffectsAnalysis.java,976,for (Reference reference : referenceCollection.references) {
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,124, <pre>
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,125,    31.980 Start        [LockManager] Waiting for user lock
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,126,   9 31.989 Done    9 ms    0ms cpu;  5944bytes;  [LockManager] Waiting for user lock
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,127,   0 31.989 Start        [CssClientImpl] ThreadGet (1 thread)
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,128,   5 31.994 Done    5 ms    0ms cpu;  2832bytes;  [CssClientImpl] ThreadGet (1 thread)
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,129,   0 31.994 Start        [MessageSorter] sort
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,130,   0 31.994 Done    0 ms    0ms cpu;   600bytes;  [MessageSorter] sort
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,131,   0 31.994 Start        [ConversationView] getMessageSummaries
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,132,   0 31.994 Start        [ConversationView] creating message summary 0
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,133,   1 31.995 Done    1 ms    0ms cpu;  5800bytes;  [ConversationView] creating message summary 0
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,134,   0 31.995 Start        [ConversationView] creating message summary 1
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,135,   0 31.995 Done    0 ms    0ms cpu;  5464bytes;  [ConversationView] creating message summary 1
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,137, TOTAL NameDetector 3 (0 ms; 0 ms cpu;  784 bytes)
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,138, TOTAL Format 4 (1 ms; 0 ms cpu; 7344 bytes)
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,139, TOTAL ConversationView 5 (4 ms; 0 ms cpu; 55456 bytes)
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,140,/pre>
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,189,* This list is guaranteed to only increase in length.  It contains a list of additional
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,190, statistics that the user wants to keep track of.
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,172,/* This list is guaranteed to only increase in length.  It contains
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,173,* a list of additional statistics that the user wants to keep track
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,174,* of.
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,393,"/ 99.9% of the time, this will be O(1) and return extraTracingStatistics.length - 1"
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,377,"// 99.9% of the time, this will be O(1) and return"
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,378,// extraTracingStatistics.length - 1
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,401, For testing purposes only.  These removes all current tracers.  Severe errors can occur
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,402, if there are any active tracers going on when this is called.
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,386,* For testing purposes only.  These removes all current tracers.
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,387,* Severe errors can occur if there are any active tracers going on
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,388,* when this is called.
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,431,/ We use extraTracingValues.length rather than extraTracingStatistics.size() because
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,432,/ a new statistic may have been added
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,417,// We use extraTracingValues.length rather than
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,418,// extraTracingStatistics.size() because a new statistic may
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,419,// have been added
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,683,"b.append(longToPaddedString(eventTime() - prevEventTime, digitsColWidth));"
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,670,sb.append(longToPaddedString(
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,671,"eventTime() - prevEventTime, digitsColWidth));"
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,838,"nt overlapLength = Math.min(stat.extraInfo.length, t.extraTracingValues.length);"
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,826,int overlapLength =
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,827,"Math.min(stat.extraInfo.length, t.extraTracingValues.length);"
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,841,tomicTracerStatMap map = extraTracingStatistics.get(i).getTracingStat();
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,830,AtomicTracerStatMap map =
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,831,extraTracingStatistics.get(i).getTracingStat();
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,961,rivate static ThreadLocal<ThreadTrace> traces = new ThreadLocal<ThreadTrace>();
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,951,private static ThreadLocal<ThreadTrace> traces =
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,952,new ThreadLocal<ThreadTrace>();
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,982, A TracingStatistic allows the program to add additional optional statistics to the trace
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,983, output.
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,973,* A TracingStatistic allows the program to add additional optional
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,974,* statistics to the trace output.
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,985, The class {@link com.google.monitoring.tracing.TracingStatistics} contains several
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,986, useful tracing statistics
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,976,* The class {@link com.google.monitoring.tracing.TracingStatistics}
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,977,* contains several useful tracing statistics
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,991, This method is called at the start of the trace.  It should return a numeric result
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,992, indicating the amount of the specific resource in use before the call started
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,982,* This method is called at the start of the trace.  It should
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,983,* return a numeric result indicating the amount of the specific
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,984,* resource in use before the call started
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,994, @return   A numeric value indicating the amount of the resource already used.
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,986,* @return A numeric value indicating the amount of the resource
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,987,* already used.
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,999, This method is called at the end of the trace.  It should return a numeric result
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1000, indicating the amount of the specific resource in use after the call ends. The actual
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1001, reported result will be the result end() - start()
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,992,* This method is called at the end of the trace.  It should
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,993,* return a numeric result indicating the amount of the specific
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,994,* resource in use after the call ends. The actual reported result
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,995,* will be the result end() - start()
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1003, @return   A numeric value indicating the amount of the resource currently used.
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,997,* @return A numeric value indicating the amount of the resource
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,998,* currently used.
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1008, Called when this tracing statistic is first enabled.  A return value of True indicates that
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1009, this statistic can successfully run in the current JVM.
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1003,* Called when this tracing statistic is first enabled.  A return
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1004,* value of True indicates that this statistic can successfully
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1005,* run in the current JVM.
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1011, @return  An indication of whether this statistic can be implemented in the current JVM.
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1007,* @return An indication of whether this statistic can be
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1008,* implemented in the current JVM.
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1021,** A string that should be appended to the numeric output indicating what this is.
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1018,/** A string that should be appended to the numeric output
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1019,* indicating what this is.
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1034,"rivate ConcurrentMap<String, Long> map = new ConcurrentHashMap<String, Long>();"
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1032,"private ConcurrentMap<String, Long> map ="
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1033,"new ConcurrentHashMap<String, Long>();"
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1042,/ Nullness checker is not powerful enough to prove null-safety of this method
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1041,// Nullness checker is not powerful enough to prove null-safety of
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1042,// this method
False,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1057,/ Someone filled in the slot behind our back.  oldValue has its current value
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1057,// Someone filled in the slot behind our back.  oldValue has
True,src/com/google/javascript/jscomp/Tracer.java,src/com/google/javascript/jscomp/Tracer.java,1058,// its current value
False,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,209,/ BLOCKs are used in several ways including wrapping CATCH blocks in TRYs
True,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,209,// BLOCKs are used in several ways including wrapping CATCH
True,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,210,// blocks in TRYs
False,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,84, </pre>
True,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,84,* </pre>
False,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,94,  </pre>
True,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,94,*  </pre>
False,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,113,eferenceCollectingCallback callback =
False,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,114,"ew ReferenceCollectingCallback(compiler,"
True,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,113,ReferenceCollectingCallback callback =
True,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,114,"new ReferenceCollectingCallback(compiler,"
False,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,126,isibility = VariableVisibility.PARAMETER;
True,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,126,visibility = VariableVisibility.PARAMETER;
False,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,129,isibility = VariableVisibility.CAPTURED_LOCAL;
True,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,129,visibility = VariableVisibility.CAPTURED_LOCAL;
False,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,131,isibility = VariableVisibility.LOCAL;
True,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,131,visibility = VariableVisibility.LOCAL;
False,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,48,rivate static Logger logger = Logger.getLogger(JsFunctionParser.class.getName());
True,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,48,private static Logger logger =
True,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,49,Logger.getLogger(JsFunctionParser.class.getName());
False,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,68,"ublic JsFunctionParser(Collection<String> functions, ErrorManager errorManager) {"
True,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,69,public JsFunctionParser(
True,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,70,"Collection<String> functions, ErrorManager errorManager) {"
False,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,104,"ublic Collection<SymbolInfo> parseFile(String filePath, String fileContents) {"
True,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,106,public Collection<SymbolInfo> parseFile(
True,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,107,"String filePath, String fileContents) {"
False,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,108,"rivate Collection<SymbolInfo> parseReader(String filePath, Reader fileContents) {"
True,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,111,private Collection<SymbolInfo> parseReader(
True,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,112,"String filePath, Reader fileContents) {"
False,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,139,tring arg = parseJsString(matcher.group(2)); // Parse the param.
True,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,src/com/google/javascript/jscomp/deps/JsFunctionParser.java,143,String arg = parseJsString(matcher.group(2)); // Parse the param.
False,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,162,"ublic void markText(String text, int startLineno, int startCharno, int endLineno,"
False,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,163,nt endCharno) {
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,162,"public void markText(String text, int startLineno, int startCharno,"
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,163,"int endLineno, int endCharno) {"
False,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,175,"ublic void markTypeNode(Node typeNode, int lineno, int startCharno, int endCharno,"
False,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,176,oolean hasLC) {
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,175,"public void markTypeNode(Node typeNode, int lineno, int startCharno,"
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,176,"int endCharno, boolean hasLC) {"
False,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,246,"ublic boolean recordParameterDescription(String parameterName, String description) {"
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,246,public boolean recordParameterDescription(
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,247,"String parameterName, String description) {"
False,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,288,"ublic boolean recordThrowDescription(JSTypeExpression type, String description) {"
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,289,public boolean recordThrowDescription(
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,290,"JSTypeExpression type, String description) {"
False,src/com/google/javascript/rhino/ObjArray.java,src/com/google/javascript/rhino/ObjArray.java,47,mplementation of resizable array with focus on minimizing memory usage by storing few initial array elements in object fields. Can also be used as a stack.
True,src/com/google/javascript/rhino/ObjArray.java,src/com/google/javascript/rhino/ObjArray.java,47,* Implementation of resizable array with focus on minimizing memory
True,src/com/google/javascript/rhino/ObjArray.java,src/com/google/javascript/rhino/ObjArray.java,48,* usage by storing few initial array elements in object fields. Can also
True,src/com/google/javascript/rhino/ObjArray.java,src/com/google/javascript/rhino/ObjArray.java,49,* be used as a stack.
False,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1043,"f.createCatch(varName, nameLineno, nameCharno, catchCond,"
False,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1044,"tatements(), catchLineno, catchCharno));"
True,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1043,nf.createCatch(
True,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1044,"varName, nameLineno, nameCharno, catchCond,"
True,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1045,"statements(), catchLineno, catchCharno));"
False,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1517,"n = nf.createBinary(Token.BITXOR, pn, bitAndExpr(inForInit), lineno,"
True,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1518,pn = nf.createBinary(
True,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1519,"Token.BITXOR, pn, bitAndExpr(inForInit), lineno,"
False,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1883,"* Experimental syntax:  allow an object literal to follow a new expression,"
False,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1884, which will mean a kind of anonymous class built with the JavaAdapter.
False,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1885, the object literal will be passed as an additional argument to the constructor.
True,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1885,/* Experimental syntax: allow an object literal to follow
True,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1886,"* a new expression, which will mean a kind of anonymous"
True,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1887,* class built with the JavaAdapter.  the object literal
True,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1888,* will be passed as an additional argument to the
True,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1889,* constructor.
False,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1944,"s.getLineno(), ts.getCharno());                        break;"
True,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1948,"ts.getLineno(), ts.getCharno());"
True,src/com/google/javascript/rhino/Parser.java,src/com/google/javascript/rhino/Parser.java,1949,break;
False,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,196,ase 'f': if (s.charAt(2)=='r' && s.charAt(1)=='o') {id=Id_for; break L0;} break L;
False,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,197,ase 'i': if (s.charAt(2)=='t' && s.charAt(1)=='n') {id=Id_int; break L0;} break L;
False,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,198,ase 'n': if (s.charAt(2)=='w' && s.charAt(1)=='e') {id=Id_new; break L0;} break L;
False,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,199,ase 't': if (s.charAt(2)=='y' && s.charAt(1)=='r') {id=Id_try; break L0;} break L;
False,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,200,ase 'v': if (s.charAt(2)=='r' && s.charAt(1)=='a') {id=Id_var; break L0;} break L;
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,196,case 'f':
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,197,if (s.charAt(2)=='r' && s.charAt(1)=='o') {
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,198,id=Id_for; break L0;
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,199,} break L;
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,200,case 'i':
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,201,if (s.charAt(2)=='t' && s.charAt(1)=='n') {
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,202,id=Id_int; break L0;
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,203,} break L;
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,204,case 'n':
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,205,if (s.charAt(2)=='w' && s.charAt(1)=='e') {
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,206,id=Id_new; break L0;
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,207,} break L;
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,208,case 't':
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,209,if (s.charAt(2)=='y' && s.charAt(1)=='r') {
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,210,id=Id_try; break L0;
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,211,} break L;
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,212,case 'v':
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,213,if (s.charAt(2)=='r' && s.charAt(1)=='a') {
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,214,id=Id_var; break L0;
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,215,} break L;
False,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,207,lse if (c=='r') { if (s.charAt(2)=='a' && s.charAt(1)=='h') {
False,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,208,d=Id_char; break L0;} }
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,222,else if (c=='r') {
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,223,if (s.charAt(2)=='a' && s.charAt(1)=='h') {
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,224,id=Id_char; break L0;
False,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,213,lse if (c=='m') { if (s.charAt(2)=='u' && s.charAt(1)=='n') {
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,231,else if (c=='m') {
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,232,if (s.charAt(2)=='u' && s.charAt(1)=='n') {
False,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,222,lse if (c=='s') { if (s.charAt(2)=='i' && s.charAt(1)=='h') {
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,241,else if (c=='s') {
True,src/com/google/javascript/rhino/TokenStream.java,src/com/google/javascript/rhino/TokenStream.java,242,if (s.charAt(2)=='i' && s.charAt(1)=='h') {
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,52,tatic final String SHARED_EXTERNS =
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,52,static final String SHARED_EXTERNS =
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,69,ublic void testGetAllFunctions() {
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,70,tring source =
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,69,public void testGetAllFunctions() {
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,70,String source =
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,73,"(function C(){A()})()\n"" +"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,73,"""(function C(){A()})()\n"" +"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,83,allGraph.Function functionA =
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,83,CallGraph.Function functionA =
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,120,ssertTrue(allFunctions.contains(functionA));
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,120,assertTrue(allFunctions.contains(functionA));
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,125,tring source =
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,125,String source =
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,137,"allgraph.getUniqueFunctionWithName(""namespace.A"")));"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,137,"callgraph.getUniqueFunctionWithName(""namespace.A"")));"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,142,tring source =
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,142,String source =
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,158,tring source =
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,158,String source =
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,181,"allGraph.Function functionA = callgraph.getUniqueFunctionWithName(""A"");"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,181,"CallGraph.Function functionA = callgraph.getUniqueFunctionWithName(""A"");"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,190,ublic void testFunctionGetCallsites() {
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,191,tring source =
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,190,public void testFunctionGetCallsites() {
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,191,String source =
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,194,"(function C(){A()})()\n"" +"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,194,"""(function C(){A()})()\n"" +"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,199,"allGraph.Function functionA = callgraph.getUniqueFunctionWithName(""A"");"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,199,"CallGraph.Function functionA = callgraph.getUniqueFunctionWithName(""A"");"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,262,tring source =
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,262,String source =
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,281,"ssertEquals(1, targetsOfCallsiteInC.size());"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,281,"assertEquals(1, targetsOfCallsiteInC.size());"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,285,tring source =
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,285,String source =
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,305,"ssertEquals(1, targetsOfCallsiteInC.size());"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,305,"assertEquals(1, targetsOfCallsiteInC.size());"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,309,tring source =
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,309,String source =
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,312,"(function (){A()})()\n"" +"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,312,"""(function (){A()})()\n"" +"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,336,"ssertEquals(""A"", callsiteNode.getFirstChild().getString());"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,336,"assertEquals(""A"", callsiteNode.getFirstChild().getString());"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,364,"ssertEquals(Token.FUNCTION, callsiteNode.getFirstChild().getType());"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,364,"assertEquals(Token.FUNCTION, callsiteNode.getFirstChild().getType());"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,386,ublic void testGetDirectedGraph_backwardOnBackward() {
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,386,public void testGetDirectedGraph_backwardOnBackward() {
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,430,computeFixedPoint(callgraph.getBackwardDirectedGraph());
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,430,.computeFixedPoint(callgraph.getBackwardDirectedGraph());
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,440,"allgraph.getUniqueFunctionWithName(""E"")));"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,440,"callgraph.getUniqueFunctionWithName(""E"")));"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,447,ublic void testGetDirectedGraph_backwardOnForward() {
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,447,public void testGetDirectedGraph_backwardOnForward() {
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,491,computeFixedPoint(callgraph.getBackwardDirectedGraph());
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,491,.computeFixedPoint(callgraph.getBackwardDirectedGraph());
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,501,"allgraph.getUniqueFunctionWithName(""E"")));"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,501,"callgraph.getUniqueFunctionWithName(""E"")));"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,508,ublic void testGetDirectedGraph_forwardOnForward() {
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,508,public void testGetDirectedGraph_forwardOnForward() {
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,520,"function Y(){Z()};\n"" +"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,520,"""function Y(){Z()};\n"" +"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,552,computeFixedPoint(callgraph.getForwardDirectedGraph());
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,552,.computeFixedPoint(callgraph.getForwardDirectedGraph());
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,577,"allgraph.getUniqueFunctionWithName(""E"")));"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,577,"callgraph.getUniqueFunctionWithName(""E"")));"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,584,ublic void testGetDirectedGraph_forwardOnBackward() {
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,584,public void testGetDirectedGraph_forwardOnBackward() {
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,596,"function Y(){Z()};\n"" +"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,596,"""function Y(){Z()};\n"" +"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,628,computeFixedPoint(callgraph.getForwardDirectedGraph());
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,628,.computeFixedPoint(callgraph.getForwardDirectedGraph());
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,653,"allgraph.getUniqueFunctionWithName(""E"")));"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,653,"callgraph.getUniqueFunctionWithName(""E"")));"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,747,"ssertTrue(callsiteNamesInMain.contains(""A""));"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,747,"assertTrue(callsiteNamesInMain.contains(""A""));"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,751,"allGraph.Function functionA = callgraph.getUniqueFunctionWithName(""A"");"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,751,"CallGraph.Function functionA = callgraph.getUniqueFunctionWithName(""A"");"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,771,"allGraph.Function functionA = callgraph.getUniqueFunctionWithName(""A"");"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,771,"CallGraph.Function functionA = callgraph.getUniqueFunctionWithName(""A"");"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,817,ssertTrue(callsitesTargetingC.containsAll(expectedFunctionsCallingC));
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,817,assertTrue(callsitesTargetingC.containsAll(expectedFunctionsCallingC));
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,828,"allGraph.Function functionC = callgraph.getUniqueFunctionWithName(""C"");"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,828,"CallGraph.Function functionC = callgraph.getUniqueFunctionWithName(""C"");"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,832,ublic void testFunctionGetIsAliased() {
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,833,/ Aliased by VAR assignment
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,832,public void testFunctionGetIsAliased() {
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,833,// Aliased by VAR assignment
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,852,/ Aliased by normal assignment
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,852,// Aliased by normal assignment
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,874,/ Aliased by passing as parameter
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,874,// Aliased by passing as parameter
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,927,ublic void testFunctionGetIsExposedToCallOrApply() {
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,927,public void testFunctionGetIsExposedToCallOrApply() {
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,956,"unction functionA = callgraph.getUniqueFunctionWithName(""A"");"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,956,"Function functionA = callgraph.getUniqueFunctionWithName(""A"");"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,1054,"ssertEquals(0, callInB.getPossibleTargets().size());"
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,1054,"assertEquals(0, callInB.getPossibleTargets().size());"
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,1076,ssertNotNull(caughtException);
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,1076,assertNotNull(caughtException);
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,1100,ail();
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,1100,fail();
False,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,1115,allsites) {
True,test/com/google/javascript/jscomp/CallGraphTest.java,test/com/google/javascript/jscomp/CallGraphTest.java,1115,callsites) {
False,test/com/google/javascript/jscomp/CheckGlobalNamesTest.java,test/com/google/javascript/jscomp/CheckGlobalNamesTest.java,60,rivate static final String GET_NAMES =
True,test/com/google/javascript/jscomp/CheckGlobalNamesTest.java,test/com/google/javascript/jscomp/CheckGlobalNamesTest.java,60,private static final String GET_NAMES =
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,65,"ssertEquals(6, cb.getColumnIndex());"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,65,"assertEquals(6, cb.getColumnIndex());"
False,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,286,"function cow() { a++; }; cow(); var z = x;""},"
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,286,"""function cow() { a++; }; cow(); var z = x;""},"
False,test/com/google/javascript/jscomp/MemoizedScopeCreatorTest.java,test/com/google/javascript/jscomp/MemoizedScopeCreatorTest.java,38,ompiler.initOptions(new CompilerOptions());
True,test/com/google/javascript/jscomp/MemoizedScopeCreatorTest.java,test/com/google/javascript/jscomp/MemoizedScopeCreatorTest.java,38,compiler.initOptions(new CompilerOptions());
False,test/com/google/javascript/jscomp/PeepholeFoldWithTypesTest.java,test/com/google/javascript/jscomp/PeepholeFoldWithTypesTest.java,74,"var x = undefined;\""undefined\"""");"
True,test/com/google/javascript/jscomp/PeepholeFoldWithTypesTest.java,test/com/google/javascript/jscomp/PeepholeFoldWithTypesTest.java,74,"""var x = undefined;\""undefined\"""");"
False,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,45,urrentCompiler = compiler;
True,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,45,currentCompiler = compiler;
False,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,55,f (currentLocationAbstractionIdentifier ==
True,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,55,if (currentLocationAbstractionIdentifier ==
False,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,80,ublic void testDegenerateSafeMoves() {
True,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,80,public void testDegenerateSafeMoves() {
False,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,97,ublic void testVisibilitySafeMoves() {
True,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,97,public void testVisibilitySafeMoves() {
False,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,520,"case 18:"" +"
True,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,test/com/google/javascript/jscomp/SideEffectsAnalysisTest.java,520,"""case 18:"" +"
False,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,43,nalysis.analyze(finder);
True,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,43,analysis.analyze(finder);
False,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,50,ublic void testFunctionGetIsAliased() {
False,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,51,/ Aliased by VAR assignment
True,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,50,public void testFunctionGetIsAliased() {
True,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,51,// Aliased by VAR assignment
False,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,70,/ Aliased by normal assignment
True,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,70,// Aliased by normal assignment
False,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,92,/ Aliased by passing as parameter
True,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,92,// Aliased by passing as parameter
False,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,145,ublic void testFunctionGetIsExposedToCallOrApply() {
True,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,test/com/google/javascript/jscomp/SimpleFunctionAliasAnalysisTest.java,145,public void testFunctionGetIsExposedToCallOrApply() {
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,65,"evirtualizePrototypeMethods, inlineFunctions,"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,65,"devirtualizePrototypeMethods, inlineFunctions,"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,68,eturn new CompilerPass() {
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,68,return new CompilerPass() {
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,74,"ew VarCheck(compiler).process(externs, root);"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,74,"new VarCheck(compiler).process(externs, root);"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,90,"var A = function() {alert(B());A()};"" +"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,90,"""var A = function() {alert(B());A()};"" +"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,92,"A();"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,92,"""A();"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,103,"var A = function() {alert(6);A()};"" + /* Specialized A */"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,103,"""var A = function() {alert(6);A()};"" + /* Specialized A */"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,105,"var B;"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,105,"""var B;"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,121,"var A = function() {alert(B());A()};"" +"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,121,"""var A = function() {alert(B());A()};"" +"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,124,"A();"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,124,"""A();"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,131,"var A = function() {alert(6);A()};"" + /* Specialized A */"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,131,"""var A = function() {alert(6);A()};"" + /* Specialized A */"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,133,"var B, C;"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,133,"""var B, C;"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,147,"var A = function() {alert(B());A()};"" +"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,147,"""var A = function() {alert(B());A()};"" +"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,149,"A();"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,149,"""A();"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,159,"var A = function() {alert(6);A()};"" + /* Specialized A */"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,159,"""var A = function() {alert(6);A()};"" + /* Specialized A */"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,161,"var B;"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,161,"""var B;"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,179,"ns.A = function() {alert(B());ns.A()};"" +"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,179,"""ns.A = function() {alert(B());ns.A()};"" +"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,181,"ns.A();"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,181,"""ns.A();"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,189,"ns.A = function() {alert(6);ns.A()};"" + /* Specialized A */"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,189,"""ns.A = function() {alert(6);ns.A()};"" + /* Specialized A */"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,191,"var B;"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,191,"""var B;"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,204,"function A() {alert(B());A()}"" +"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,204,"""function A() {alert(B());A()}"" +"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,206,"A();"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,206,"""A();"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,213,"function A() {alert(6);A()}"" + /* Specialized A */"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,213,"""function A() {alert(6);A()}"" + /* Specialized A */"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,215,"var B;"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,215,"""var B;"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,232,"function() {alert(6)};noSpecialize()})()"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,232,"""function() {alert(6)};noSpecialize()})()"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,239,"function() {alert(6)};noSpecialize()})()"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,239,"""function() {alert(6)};noSpecialize()})()"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,249,"var A = function() {alert(B() + C());A()};"" +"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,249,"""var A = function() {alert(B() + C());A()};"" +"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,252,"A();"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,252,"""A();"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,259,"var A = function() {alert(6 + 8);A()};"" + /* Specialized A */"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,259,"""var A = function() {alert(6 + 8);A()};"" + /* Specialized A */"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,261,"var B, C;"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,261,"""var B, C;"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,275,"Foo.prototype.a = function() {this.a()};"" +"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,275,"""Foo.prototype.a = function() {this.a()};"" +"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,280,"x.a();"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,280,"""x.a();"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,290,"x.a();"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,290,"""x.a();"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,293,"Foo.prototype.c = function() {return 7};"""
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,293,"""Foo.prototype.c = function() {return 7};"""
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,301,"function A() {alert(B());A()}"" +"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,301,"""function A() {alert(B());A()}"" +"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,304,"A();"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,304,"""A();"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,312,"function A() {alert(B());A()}"" +"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,312,"""function A() {alert(B());A()}"" +"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,315,"A();"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,315,"""A();"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,326,"Foo.prototype.a = function() {this.a()};"" +"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,326,"""Foo.prototype.a = function() {this.a()};"" +"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,334,"var aliasC = (new Foo).c"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,334,"""var aliasC = (new Foo).c"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,348,"var aliasC = (new Foo).c"","
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,348,"""var aliasC = (new Foo).c"","
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,350,"Foo.prototype.d = function() {return 7};"""
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,350,"""Foo.prototype.d = function() {return 7};"""
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,370,"function(JSCompiler_StaticMethods_a$self) {"" +"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,370,"""function(JSCompiler_StaticMethods_a$self) {"" +"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,406,ublic static class SpecializeModuleSpecializationStateTest
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,406,public static class SpecializeModuleSpecializationStateTest
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,420,"ublic void process(Node externs, Node root) {"
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,421,impleDefinitionFinder defFinder =
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,420,"public void process(Node externs, Node root) {"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,421,SimpleDefinitionFinder defFinder =
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,426,impleFunctionAliasAnalysis functionAliasAnalysis =
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,426,SimpleFunctionAliasAnalysis functionAliasAnalysis =
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,429,unctionAliasAnalysis.analyze(defFinder);
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,431,astState = new SpecializationState(functionAliasAnalysis);
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,429,functionAliasAnalysis.analyze(defFinder);
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,431,lastState = new SpecializationState(functionAliasAnalysis);
False,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,479,"ns.H = function(){};"" +"
True,test/com/google/javascript/jscomp/SpecializeModuleTest.java,test/com/google/javascript/jscomp/SpecializeModuleTest.java,479,"""ns.H = function(){};"" +"
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,44,tring source =
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,44,String source =
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,61,tring source =
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,61,String source =
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,66,"ssertIsGlobal(""global"");"
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,66,"assertIsGlobal(""global"");"
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,70,tring source =
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,70,String source =
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,110,"ssertEquals(visibility, lastAnalysis.getVariableVisibility(nameNode));"
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,110,"assertEquals(visibility, lastAnalysis.getVariableVisibility(nameNode));"
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,120,/   NAME
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,120,//   NAME
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,123,"ssertEquals(visibility, lastAnalysis.getVariableVisibility(nameNode));"
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,123,"assertEquals(visibility, lastAnalysis.getVariableVisibility(nameNode));"
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,127,"ssertLabeledVariableHasVisibility(label,"
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,128,ariableVisibility.CAPTURED_LOCAL);
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,127,"assertLabeledVariableHasVisibility(label,"
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,128,VariableVisibility.CAPTURED_LOCAL);
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,132,"ssertLabeledVariableHasVisibility(label,"
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,133,ariableVisibility.LOCAL);
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,132,"assertLabeledVariableHasVisibility(label,"
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,133,VariableVisibility.LOCAL);
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,137,"ssertLabeledVariableHasVisibility(label,"
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,138,ariableVisibility.GLOBAL);
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,137,"assertLabeledVariableHasVisibility(label,"
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,138,VariableVisibility.GLOBAL);
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,201,& functionName.equals(NodeUtil.getFunctionName(n))) {
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,201,&& functionName.equals(NodeUtil.getFunctionName(n))) {
False,test/com/google/javascript/jscomp/deps/JsFunctionParserTest.java,test/com/google/javascript/jscomp/deps/JsFunctionParserTest.java,63," ""goog.require(\""bar.data.SuperstarAddStarThreadActionRequestDelegate\""); """
True,test/com/google/javascript/jscomp/deps/JsFunctionParserTest.java,test/com/google/javascript/jscomp/deps/JsFunctionParserTest.java,63,"+ ""goog.require(\"""""
True,test/com/google/javascript/jscomp/deps/JsFunctionParserTest.java,test/com/google/javascript/jscomp/deps/JsFunctionParserTest.java,64,"+ ""bar.data.SuperstarAddStarThreadActionRequestDelegate\""); """
False,test/com/google/javascript/jscomp/deps/JsFunctionParserTest.java,test/com/google/javascript/jscomp/deps/JsFunctionParserTest.java,82,"ssertEquals(symbolInfo.symbol, ""bar.data.SuperstarAddStarThreadActionRequestDelegate"");"
True,test/com/google/javascript/jscomp/deps/JsFunctionParserTest.java,test/com/google/javascript/jscomp/deps/JsFunctionParserTest.java,83,"assertEquals(symbolInfo.symbol,"
True,test/com/google/javascript/jscomp/deps/JsFunctionParserTest.java,test/com/google/javascript/jscomp/deps/JsFunctionParserTest.java,84,"""bar.data.SuperstarAddStarThreadActionRequestDelegate"");"
False,test/com/google/javascript/jscomp/jsonml/JsonMLValidationTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLValidationTest.java,568,agType[] tags =
True,test/com/google/javascript/jscomp/jsonml/JsonMLValidationTest.java,test/com/google/javascript/jscomp/jsonml/JsonMLValidationTest.java,568,TagType[] tags =
