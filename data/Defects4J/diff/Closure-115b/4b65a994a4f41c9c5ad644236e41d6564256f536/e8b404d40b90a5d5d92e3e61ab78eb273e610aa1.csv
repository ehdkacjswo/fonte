is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,28,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,97, The variable's doc info.
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,99,rivate final JSDocInfo info;
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,111,** Whether the variable is a define */
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,112,inal boolean isDefine;
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,135,"cope scope, int index, CompilerInput input, boolean isDefine,"
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,136,SDocInfo info) {
True,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,126,"Scope scope, int index, CompilerInput input) {"
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,143,his.isDefine = isDefine;
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,144,his.info = info;
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,239,eturn isDefine;
True,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,227,JSDocInfo info = getJSDocInfo();
True,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,228,return info != null && info.isDefine();
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,243,ode parent = getParentNode();
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,244,nt pType = parent.getType();
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,245,f (pType == Token.FUNCTION) {
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,246,eturn parent;
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,247, else if (pType == Token.ASSIGN) {
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,248,eturn parent.getLastChild();
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,249, else if (pType == Token.VAR) {
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,250,eturn nameNode.getFirstChild();
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,251, else {
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,252,eturn null;
True,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,232,return NodeUtil.getRValueOfLValue(nameNode);
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,277,eturn info;
True,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,256,return nameNode == null ? null : NodeUtil.getBestJSDocInfo(nameNode);
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,315,f (info != null && info.isNoShadow()) {
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,316,eturn true;
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,317, else {
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,318,eturn false;
True,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,294,JSDocInfo info = getJSDocInfo();
True,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,295,return info != null && info.isNoShadow();
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,392,"ull,  // input,"
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,393,"alse, // not a define"
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,394,ull   // no jsdoc
True,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,368,null   // input
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,532,/ native variables do not have a name node.
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,533,SDocInfo info = nameNode == null
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,534, null : NodeUtil.getBestJSDocInfo(nameNode);
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,536,"ar var = new Var(inferred, name, nameNode, type, this, vars.size(), input,"
False,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,537,"nfo != null && info.isDefine(), info);"
True,src/com/google/javascript/jscomp/Scope.java,src/com/google/javascript/jscomp/Scope.java,506,"Var var = new Var(inferred, name, nameNode, type, this, vars.size(), input);"
