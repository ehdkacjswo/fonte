is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,292,f (nameContainsFieldNameToStrip(lvalue) ||
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,291,if (nameEndsWithFieldNameToStrip(lvalue) ||
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,325,f (nameContainsFieldNameToStrip(expression) ||
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,324,if (nameEndsWithFieldNameToStrip(expression) ||
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,400,ameContainsFieldNameToStrip(n.getFirstChild()));
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,399,nameEndsWithFieldNameToStrip(n.getFirstChild()));
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,500,eturn nameContainsFieldNameToStrip(callee) ||
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,501,ameContainsFieldNameToStrip(function) ||
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,499,return nameEndsWithFieldNameToStrip(callee) ||
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,500,nameEndsWithFieldNameToStrip(function) ||
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,507, @return Whether the node is a name contains a property that should be
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,508,     stripped
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,506,* Gets whether a name ends with a field name that should be stripped. For
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,507,"* example, this function would return true when passed ""this.logger"" or"
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,508,"* ""a.b.c.myLogger"" if ""logger"" is a strip name."
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,510,* @param n A node (typically a GETPROP node)
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,511,* @return Whether the name ends with a field name that should be stripped
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,510,oolean nameContainsFieldNameToStrip(@Nullable Node n) {
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,513,boolean nameEndsWithFieldNameToStrip(@Nullable Node n) {
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,513,eturn isStripName(propNode.getString())
False,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,514,| nameContainsFieldNameToStrip(n.getFirstChild());
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,516,return propNode != null && propNode.isString() &&
True,src/com/google/javascript/jscomp/StripCode.java,src/com/google/javascript/jscomp/StripCode.java,517,isStripName(propNode.getString());
False,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,258,/ Eliminate property assignments on vars/properties that we
False,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,259,/ remove as otherwise we create invalid code.
False,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,260,"est(""goog.debug.Logger = 1; goog.debug.Logger.prop=2; "", """");"
False,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,261,"est(""this.blcLogger_.level=x"", """");"
False,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,262,"est(""goog.ui.Component.logger.prop=y"", """");"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,258,// We don't eliminate property assignments on vars/properties that we
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,259,"// remove, since the debugging classes should have setter methods instead"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,260,// of public properties.
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,261,"testSame(""rootLogger.someProperty=3"");"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,262,"testSame(""this.blcLogger_.level=x"");"
True,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,263,"testSame(""goog.ui.Component.logger.prop=y"");"
False,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,425,ublic void testNamespace1() {
False,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,426,est(
False,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,427,"var x = {};x.traceutil = {};x.traceutil.FOO = 1;"","
False,test/com/google/javascript/jscomp/StripCodeTest.java,test/com/google/javascript/jscomp/StripCodeTest.java,428,"var x = {};"");"
