is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,473,ublic Duration multipliedBy(long multiplicant)
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,474,* Returns a new duration with this length multiplied by the
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,475,* specified multiplicand.
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,476,* This instance is immutable and is not altered.
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,477,* <p>
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,478,"* If the multiplicand is one, this instance is returned."
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,480,* @param multiplicand  the multiplicand to multiply this one by
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,481,* @return the new duration instance
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,483,public Duration multipliedBy(long multiplicand)
False,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,475,f(multiplicant == 1)
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,485,if(multiplicand == 1)
False,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,477,"eturn new Duration(FieldUtils.safeMultiply(getMillis(), multiplicant));"
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,487,"return new Duration(FieldUtils.safeMultiply(getMillis(), multiplicand));"
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,491,* Returns a new duration with this length divided by the
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,492,* specified divisor.
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,493,* This instance is immutable and is not altered.
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,494,* <p>
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,495,"* If the divisor is one, this instance is returned."
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,497,* @param divisor  the divisor to divide this one by
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,498,* @return the new duration instance
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,508,* Returns a new duration with this length negated.
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,509,* This instance is immutable and is not altered.
True,src/main/java/org/joda/time/Duration.java,src/main/java/org/joda/time/Duration.java,511,* @return the new duration instance
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,180,* Divides the dividend by the divisor throwing an exception if
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,181,* overflow occurs or the divisor is zero.
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,183,* @param dividend  the dividend
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,184,* @param divisor  the divisor
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,185,* @return the new total
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,186,* @throws ArithmeticException if the operation overflows or the divisor is zero
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,188,"public static long safeDivide(long dividend, long divisor)"
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,190,if(dividend == Long.MIN_VALUE && divisor == -1L)
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,191,"throw new ArithmeticException(""Multiplication overflows a long: "" + dividend + "" / "" + divisor);"
True,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,192,return dividend / divisor;
False,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,330,"ublic static long safeDivide(long dividend, long divisor)"
False,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,332,f(dividend == Long.MIN_VALUE && divisor == -1L)
False,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,333,"hrow new ArithmeticException(""Multiplication overflows a long: "" + dividend + "" / "" + divisor);"
False,src/main/java/org/joda/time/field/FieldUtils.java,src/main/java/org/joda/time/field/FieldUtils.java,334,eturn dividend / divisor;
