is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,59,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,130,* @throws IllegalArgumentException if the lower limit is greater than the upper
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,136,if (lowerLimit != null && upperLimit != null) {
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,137,if (lowerLimit.getDurationField().getUnitMillis() > upperLimit.getDurationField().getUnitMillis()) {
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,138,"throw new IllegalArgumentException(""Lower limit greater than upper: "" +"
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,139,"lowerLimit.getName() + "" > "" + upperLimit.getName());"
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,153,if (chrono == null) {
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,154,chrono = ISOChronology.getInstance();
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,167,if (chrono == null) {
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,168,chrono = ISOChronology.getInstance();
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,165,"rivate DateTimeComparator(DateTimeField lowerLimit, DateTimeField upperLimit) {"
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,179,"protected DateTimeComparator(DateTimeField lowerLimit, DateTimeField upperLimit) {"
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,206,ateTimeField field;
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,207,f ((field = iLowerLimit) != null) {
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,208,hsMillis = field.roundFloor(lhsMillis);
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,209,hsMillis = field.roundFloor(rhsMillis);
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,220,if (iLowerLimit != null) {
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,221,lhsMillis = iLowerLimit.roundFloor(lhsMillis);
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,222,rhsMillis = iLowerLimit.roundFloor(rhsMillis);
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,212,f ((field = iUpperLimit) != null) {
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,213,hsMillis = field.remainder(lhsMillis);
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,214,hsMillis = field.remainder(rhsMillis);
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,225,if (iUpperLimit != null) {
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,226,lhsMillis = iUpperLimit.remainder(lhsMillis);
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,227,rhsMillis = iUpperLimit.remainder(rhsMillis);
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,250,"eturn ""DateTimeComparator[lowerLimit:"""
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,251," (iLowerLimit == null ? ""none"" : iLowerLimit.getName())"
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,252," "",upperLimit:"""
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,253," (iUpperLimit == null ? ""none"" : iUpperLimit.getName())"
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,263,"return ""DateTimeComparator["""
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,264,"+ (iLowerLimit == null ? """" : iLowerLimit.getName())"
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,265,"+ (iLowerLimit == null && iUpperLimit == null ? """" : ""-"")"
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,266,"+ (iUpperLimit == null ? """" : iUpperLimit.getName())"
False,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,64,ublic final class DateTimeUtils {
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,64,public class DateTimeUtils {
False,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,75,rivate DateTimeUtils() {
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,75,protected DateTimeUtils() {
False,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,88,ublic static long currentTimeMillis() {
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,88,public static final long currentTimeMillis() {
False,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,98,ublic static void setCurrentMillisSystem() throws SecurityException {
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,98,public static final void setCurrentMillisSystem() throws SecurityException {
False,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,111,ublic static void setCurrentMillisFixed(long fixedMillis) throws SecurityException {
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,111,public static final void setCurrentMillisFixed(long fixedMillis) throws SecurityException {
False,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,125,ublic static void setCurrentMillisOffset(long offsetMillis) throws SecurityException {
True,JodaTime/src/java/org/joda/time/DateTimeUtils.java,JodaTime/src/java/org/joda/time/DateTimeUtils.java,125,public static final void setCurrentMillisOffset(long offsetMillis) throws SecurityException {
