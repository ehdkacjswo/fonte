is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/joda/time/tz/ZoneInfoCompiler.java,src/main/java/org/joda/time/tz/ZoneInfoCompiler.java,68,tatic ThreadLocal<Boolean> cVerbose = new ThreadLocal<Boolean>();
False,src/main/java/org/joda/time/tz/ZoneInfoCompiler.java,src/main/java/org/joda/time/tz/ZoneInfoCompiler.java,69,tatic {
False,src/main/java/org/joda/time/tz/ZoneInfoCompiler.java,src/main/java/org/joda/time/tz/ZoneInfoCompiler.java,70,Verbose.set(Boolean.FALSE);
True,src/main/java/org/joda/time/tz/ZoneInfoCompiler.java,src/main/java/org/joda/time/tz/ZoneInfoCompiler.java,68,static ThreadLocal<Boolean> cVerbose = new ThreadLocal<Boolean>() {
True,src/main/java/org/joda/time/tz/ZoneInfoCompiler.java,src/main/java/org/joda/time/tz/ZoneInfoCompiler.java,69,protected Boolean initialValue() {
True,src/main/java/org/joda/time/tz/ZoneInfoCompiler.java,src/main/java/org/joda/time/tz/ZoneInfoCompiler.java,70,return Boolean.FALSE;
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,88,public void testDateTimeZoneBuilder() throws Exception {
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,89,"// test multithreading, issue #18"
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,90,"getTestDataTimeZoneBuilder().toDateTimeZone(""TestDTZ1"", true);"
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,91,final DateTimeZone[] zone = new DateTimeZone[1];
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,92,Thread t = new Thread(new Runnable() {
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,93,public void run() {
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,94,"zone[0] = getTestDataTimeZoneBuilder().toDateTimeZone(""TestDTZ2"", true);"
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,97,t.start();
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,98,t.join();
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,99,assertNotNull(zone[0]);
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,102,private DateTimeZoneBuilder getTestDataTimeZoneBuilder() {
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,103,return new DateTimeZoneBuilder()
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,104,".addCutover(1601, 'w', 1, 1, 1, false, 7200000)"
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,105,.setStandardOffset(3600000)
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,106,".addRecurringSavings("""", 3600000, 1601, Integer.MAX_VALUE, 'w', 3, -1, 1, false, 7200000)"
True,src/test/java/org/joda/time/tz/TestCompiler.java,src/test/java/org/joda/time/tz/TestCompiler.java,107,".addRecurringSavings("""", 0, 1601, Integer.MAX_VALUE, 'w', 10, -1, 1, false, 10800000);"
