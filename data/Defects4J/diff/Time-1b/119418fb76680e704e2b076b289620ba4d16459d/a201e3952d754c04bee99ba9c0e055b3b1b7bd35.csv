is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,667,* Does this partial match the specified partial.
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,668,* <p>
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,669,* A match occurs when all the fields of this partial are the same as the
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,670,* corresponding fields on the specified partial.
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,672,"* @param partial  a partial to check against, must not be null"
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,673,* @return true if this partial matches the specified partial
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,674,* @throws IllegalArgumentException if the partial is null
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,675,* @throws IllegalArgumentException if the fields of the two partials do not match
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,677,public boolean isMatch(ReadablePartial partial) {
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,678,if (partial == null) {
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,679,"throw new IllegalArgumentException(""The partial must not be null"");"
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,681,for (int i = 0; i < iTypes.length; i++) {
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,682,int value = partial.get(iTypes[i]);
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,683,if (value != iValues[i]) {
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,684,return false;
True,JodaTime/src/java/org/joda/time/Partial.java,JodaTime/src/java/org/joda/time/Partial.java,687,return true;
False,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,95,ublic void testIsMatch() {
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,95,public void testIsMatch_Instant() {
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,127,public void testIsMatch_Partial() {
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,128,"// Year=2005, Month=7 (July), DayOfWeek=2 (Tuesday)"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,129,"Partial test = createYMDwPartial(ISO_UTC, 2005, 7, 2);"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,130,"LocalDate partial = new LocalDate(2005, 7, 5);"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,131,"assertEquals(true, test.isMatch(partial));"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,133,"partial = new LocalDate(2005, 7, 4);"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,134,"assertEquals(false, test.isMatch(partial));"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,136,"partial = new LocalDate(2005, 7, 6);"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,137,"assertEquals(false, test.isMatch(partial));"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,139,"partial = new LocalDate(2005, 7, 12);"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,140,"assertEquals(true, test.isMatch(partial));"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,142,"partial = new LocalDate(2005, 7, 19);"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,143,"assertEquals(true, test.isMatch(partial));"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,145,"partial = new LocalDate(2005, 7, 26);"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,146,"assertEquals(true, test.isMatch(partial));"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,148,"partial = new LocalDate(2005, 8, 2);"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,149,"assertEquals(false, test.isMatch(partial));"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,151,"partial = new LocalDate(2006, 7, 5);"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,152,"assertEquals(false, test.isMatch(partial));"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,154,"partial = new LocalDate(2005, 6, 5);"
True,JodaTime/src/test/org/joda/time/TestPartial_Match.java,JodaTime/src/test/org/joda/time/TestPartial_Match.java,155,"assertEquals(false, test.isMatch(partial));"
