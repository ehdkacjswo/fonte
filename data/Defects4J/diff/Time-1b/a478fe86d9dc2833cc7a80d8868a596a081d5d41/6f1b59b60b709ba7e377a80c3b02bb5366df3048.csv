is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,521,ong localInstant = iZone.convertUTCToLocal(instant);
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,522,ocalInstant = iField.roundFloor(localInstant);
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,523,"eturn iZone.convertLocalToUTC(localInstant, false);"
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,521,if (iTimeField) {
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,522,int offset = getOffsetToAdd(instant);
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,523,instant = iField.roundFloor(instant + offset);
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,524,return instant - offset;
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,525,} else {
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,526,long localInstant = iZone.convertUTCToLocal(instant);
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,527,localInstant = iField.roundFloor(localInstant);
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,528,"return iZone.convertLocalToUTC(localInstant, false);"
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,527,ong localInstant = iZone.convertUTCToLocal(instant);
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,528,ocalInstant = iField.roundCeiling(localInstant);
False,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,529,"eturn iZone.convertLocalToUTC(localInstant, false);"
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,533,if (iTimeField) {
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,534,int offset = getOffsetToAdd(instant);
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,535,instant = iField.roundCeiling(instant + offset);
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,536,return instant - offset;
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,537,} else {
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,538,long localInstant = iZone.convertUTCToLocal(instant);
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,539,localInstant = iField.roundCeiling(localInstant);
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,540,"return iZone.convertLocalToUTC(localInstant, false);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,562,public void test_DateTime_roundFloor_day_NewYork_Spring_preCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,563,"DateTime dt = new DateTime(2007, 3, 11, 1, 30, 0, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,564,"assertEquals(""2007-03-11T01:30:00.000-05:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,565,DateTime rounded = dt.dayOfMonth().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,566,"assertEquals(""2007-03-11T00:00:00.000-05:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,569,public void test_DateTime_roundFloor_day_NewYork_Spring_postCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,570,"DateTime dt = new DateTime(2007, 3, 11, 3, 30, 0, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,571,"assertEquals(""2007-03-11T03:30:00.000-04:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,572,DateTime rounded = dt.dayOfMonth().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,573,"assertEquals(""2007-03-11T00:00:00.000-05:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,576,public void test_DateTime_roundFloor_hour_NewYork_Spring_preCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,577,"DateTime dt = new DateTime(2007, 3, 11, 1, 30, 0, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,578,"assertEquals(""2007-03-11T01:30:00.000-05:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,579,DateTime rounded = dt.hourOfDay().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,580,"assertEquals(""2007-03-11T01:00:00.000-05:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,583,public void test_DateTime_roundFloor_hour_NewYork_Spring_postCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,584,"DateTime dt = new DateTime(2007, 3, 11, 3, 30, 0, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,585,"assertEquals(""2007-03-11T03:30:00.000-04:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,586,DateTime rounded = dt.hourOfDay().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,587,"assertEquals(""2007-03-11T03:00:00.000-04:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,590,public void test_DateTime_roundFloor_minute_NewYork_Spring_preCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,591,"DateTime dt = new DateTime(2007, 3, 11, 1, 30, 40, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,592,"assertEquals(""2007-03-11T01:30:40.000-05:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,593,DateTime rounded = dt.minuteOfHour().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,594,"assertEquals(""2007-03-11T01:30:00.000-05:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,597,public void test_DateTime_roundFloor_minute_NewYork_Spring_postCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,598,"DateTime dt = new DateTime(2007, 3, 11, 3, 30, 40, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,599,"assertEquals(""2007-03-11T03:30:40.000-04:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,600,DateTime rounded = dt.minuteOfHour().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,601,"assertEquals(""2007-03-11T03:30:00.000-04:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,605,public void test_DateTime_roundCeiling_day_NewYork_Spring_preCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,606,"DateTime dt = new DateTime(2007, 3, 11, 1, 30, 0, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,607,"assertEquals(""2007-03-11T01:30:00.000-05:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,608,DateTime rounded = dt.dayOfMonth().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,609,"assertEquals(""2007-03-12T00:00:00.000-04:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,612,public void test_DateTime_roundCeiling_day_NewYork_Spring_postCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,613,"DateTime dt = new DateTime(2007, 3, 11, 3, 30, 0, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,614,"assertEquals(""2007-03-11T03:30:00.000-04:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,615,DateTime rounded = dt.dayOfMonth().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,616,"assertEquals(""2007-03-12T00:00:00.000-04:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,619,public void test_DateTime_roundCeiling_hour_NewYork_Spring_preCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,620,"DateTime dt = new DateTime(2007, 3, 11, 1, 30, 0, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,621,"assertEquals(""2007-03-11T01:30:00.000-05:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,622,DateTime rounded = dt.hourOfDay().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,623,"assertEquals(""2007-03-11T03:00:00.000-04:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,626,public void test_DateTime_roundCeiling_hour_NewYork_Spring_postCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,627,"DateTime dt = new DateTime(2007, 3, 11, 3, 30, 0, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,628,"assertEquals(""2007-03-11T03:30:00.000-04:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,629,DateTime rounded = dt.hourOfDay().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,630,"assertEquals(""2007-03-11T04:00:00.000-04:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,633,public void test_DateTime_roundCeiling_minute_NewYork_Spring_preCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,634,"DateTime dt = new DateTime(2007, 3, 11, 1, 30, 40, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,635,"assertEquals(""2007-03-11T01:30:40.000-05:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,636,DateTime rounded = dt.minuteOfHour().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,637,"assertEquals(""2007-03-11T01:31:00.000-05:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,640,public void test_DateTime_roundCeiling_minute_NewYork_Spring_postCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,641,"DateTime dt = new DateTime(2007, 3, 11, 3, 30, 40, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,642,"assertEquals(""2007-03-11T03:30:40.000-04:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,643,DateTime rounded = dt.minuteOfHour().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,644,"assertEquals(""2007-03-11T03:31:00.000-04:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,708,public void test_DateTime_roundFloor_day_NewYork_Autumn_preCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,709,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 0, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,710,"assertEquals(""2007-11-04T01:30:00.000-04:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,711,DateTime rounded = dt.dayOfMonth().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,712,"assertEquals(""2007-11-04T00:00:00.000-04:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,715,public void test_DateTime_roundFloor_day_NewYork_Autumn_postCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,716,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 0, 0, ZONE_NEW_YORK).plusHours(1);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,717,"assertEquals(""2007-11-04T01:30:00.000-05:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,718,DateTime rounded = dt.dayOfMonth().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,719,"assertEquals(""2007-11-04T00:00:00.000-04:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,722,public void test_DateTime_roundFloor_hourOfDay_NewYork_Autumn_preCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,723,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 0, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,724,"assertEquals(""2007-11-04T01:30:00.000-04:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,725,DateTime rounded = dt.hourOfDay().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,726,"assertEquals(""2007-11-04T01:00:00.000-04:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,729,public void test_DateTime_roundFloor_hourOfDay_NewYork_Autumn_postCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,730,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 0, 0, ZONE_NEW_YORK).plusHours(1);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,731,"assertEquals(""2007-11-04T01:30:00.000-05:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,732,DateTime rounded = dt.hourOfDay().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,733,"assertEquals(""2007-11-04T01:00:00.000-05:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,736,public void test_DateTime_roundFloor_minuteOfHour_NewYork_Autumn_preCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,737,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 40, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,738,"assertEquals(""2007-11-04T01:30:40.000-04:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,739,DateTime rounded = dt.minuteOfHour().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,740,"assertEquals(""2007-11-04T01:30:00.000-04:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,743,public void test_DateTime_roundFloor_minuteOfHour_NewYork_Autumn_postCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,744,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 40, 0, ZONE_NEW_YORK).plusHours(1);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,745,"assertEquals(""2007-11-04T01:30:40.000-05:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,746,DateTime rounded = dt.minuteOfHour().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,747,"assertEquals(""2007-11-04T01:30:00.000-05:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,750,public void test_DateTime_roundFloor_secondOfMinute_NewYork_Autumn_preCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,751,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 40, 500, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,752,"assertEquals(""2007-11-04T01:30:40.500-04:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,753,DateTime rounded = dt.secondOfMinute().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,754,"assertEquals(""2007-11-04T01:30:40.000-04:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,757,public void test_DateTime_roundFloor_secondOfMinute_NewYork_Autumn_postCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,758,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 40, 500, ZONE_NEW_YORK).plusHours(1);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,759,"assertEquals(""2007-11-04T01:30:40.500-05:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,760,DateTime rounded = dt.secondOfMinute().roundFloorCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,761,"assertEquals(""2007-11-04T01:30:40.000-05:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,765,public void test_DateTime_roundCeiling_day_NewYork_Autumn_preCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,766,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 0, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,767,"assertEquals(""2007-11-04T01:30:00.000-04:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,768,DateTime rounded = dt.dayOfMonth().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,769,"assertEquals(""2007-11-05T00:00:00.000-05:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,772,public void test_DateTime_roundCeiling_day_NewYork_Autumn_postCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,773,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 0, 0, ZONE_NEW_YORK).plusHours(1);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,774,"assertEquals(""2007-11-04T01:30:00.000-05:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,775,DateTime rounded = dt.dayOfMonth().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,776,"assertEquals(""2007-11-05T00:00:00.000-05:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,779,public void test_DateTime_roundCeiling_hourOfDay_NewYork_Autumn_preCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,780,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 0, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,781,"assertEquals(""2007-11-04T01:30:00.000-04:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,782,DateTime rounded = dt.hourOfDay().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,783,"assertEquals(""2007-11-04T01:00:00.000-05:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,786,public void test_DateTime_roundCeiling_hourOfDay_NewYork_Autumn_postCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,787,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 0, 0, ZONE_NEW_YORK).plusHours(1);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,788,"assertEquals(""2007-11-04T01:30:00.000-05:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,789,DateTime rounded = dt.hourOfDay().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,790,"assertEquals(""2007-11-04T02:00:00.000-05:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,793,public void test_DateTime_roundCeiling_minuteOfHour_NewYork_Autumn_preCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,794,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 40, 0, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,795,"assertEquals(""2007-11-04T01:30:40.000-04:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,796,DateTime rounded = dt.minuteOfHour().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,797,"assertEquals(""2007-11-04T01:31:00.000-04:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,800,public void test_DateTime_roundCeiling_minuteOfHour_NewYork_Autumn_postCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,801,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 40, 0, ZONE_NEW_YORK).plusHours(1);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,802,"assertEquals(""2007-11-04T01:30:40.000-05:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,803,DateTime rounded = dt.minuteOfHour().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,804,"assertEquals(""2007-11-04T01:31:00.000-05:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,807,public void test_DateTime_roundCeiling_secondOfMinute_NewYork_Autumn_preCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,808,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 40, 500, ZONE_NEW_YORK);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,809,"assertEquals(""2007-11-04T01:30:40.500-04:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,810,DateTime rounded = dt.secondOfMinute().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,811,"assertEquals(""2007-11-04T01:30:41.000-04:00"", rounded.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,814,public void test_DateTime_roundCeiling_secondOfMinute_NewYork_Autumn_postCutover() {
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,815,"DateTime dt = new DateTime(2007, 11, 4, 1, 30, 40, 500, ZONE_NEW_YORK).plusHours(1);"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,816,"assertEquals(""2007-11-04T01:30:40.500-05:00"", dt.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,817,DateTime rounded = dt.secondOfMinute().roundCeilingCopy();
True,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java,818,"assertEquals(""2007-11-04T01:30:41.000-05:00"", rounded.toString());"
