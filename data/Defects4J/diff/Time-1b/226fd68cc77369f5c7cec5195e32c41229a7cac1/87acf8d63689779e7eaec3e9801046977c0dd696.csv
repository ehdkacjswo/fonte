is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,92,uite.addTest(TestDuration_Constructors.suite());
False,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,93,uite.addTest(TestDuration_Basics.suite());
True,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,92,suite.addTest(TestPeriod_Constructors.suite());
True,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,93,suite.addTest(TestPeriod_Basics.suite());
False,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,95,uite.addTest(TestMillisDuration_Constructors.suite());
False,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,97,uite.addTest(TestMutableDuration_Constructors.suite());
False,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,98,uite.addTest(TestMutableDuration_Basics.suite());
False,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,99,uite.addTest(TestMutableDuration_Updates.suite());
True,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,95,suite.addTest(TestMutablePeriod_Constructors.suite());
True,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,96,suite.addTest(TestMutablePeriod_Basics.suite());
True,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,97,suite.addTest(TestMutablePeriod_Updates.suite());
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,154,ublic void testGetIsTotalMillisBased() {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,155,imePeriod test = new TimePeriod(123L);
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,156,"ssertEquals(false, test.isTotalMillisBased());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,157,"est = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,158,"ssertEquals(false, test.isTotalMillisBased());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,161,ublic void testGetTotalMillis() {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,162,imePeriod test = new TimePeriod(123L);
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,163,"ssertEquals(123L, test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,211,"uper(value, null, false);"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,199,"super(value, null);"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,572,ublic void testToDuration() {
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,560,public void testToTimePeriod() {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,574,imePeriod result = test.toDuration();
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,562,TimePeriod result = test.toTimePeriod();
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,578,ublic void testToMutableDuration() {
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,566,public void testToMutableTimePeriod() {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,580,utableTimePeriod result = test.toMutableDuration();
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,581,"ssertEquals(test.getDurationType(), result.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,582,"ssertEquals(test.isPrecise(), result.isPrecise());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,583,"ssertEquals(test.getTotalMillis(), result.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,568,MutableTimePeriod result = test.toMutableTimePeriod();
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,569,"assertEquals(test, result);"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,587,ublic void testConstant() {
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,588,"ssertEquals(0L, TimePeriod.ZERO.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,589,"ssertEquals(DurationType.getAllType(), TimePeriod.ZERO.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,573,public void testToDurationMillis() {
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,574,TimePeriod test = new TimePeriod(123L);
True,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,JodaTime/src/test/org/joda/time/TestDuration_Basics.java,575,"assertEquals(123L, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,140,imePeriod test = TimePeriod.ZERO;
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,141,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,140,MillisDuration test = MillisDuration.ZERO;
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,141,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,160,imePeriod test = new TimePeriod(length);
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,161,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,160,MillisDuration test = new MillisDuration(length);
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,161,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,180,"imePeriod test = new TimePeriod(length, null);"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,181,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,180,"MillisDuration test = new MillisDuration(length, null);"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,181,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,199,"imePeriod test = new TimePeriod(length, DurationType.getMillisType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,199,"MillisDuration test = new MillisDuration(length, DurationType.getMillisType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,218,"imePeriod test = new TimePeriod(length, DurationType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,219,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,218,"MillisDuration test = new MillisDuration(length, DurationType.getPreciseDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,219,"assertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,237,"imePeriod test = new TimePeriod(length, DurationType.getAllType().withMillisRemoved());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,238,"ssertEquals(DurationType.getAllType().withMillisRemoved(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,237,"MillisDuration test = new MillisDuration(length, DurationType.getPreciseAllType().withMillisRemoved());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,238,"assertEquals(DurationType.getPreciseAllType().withMillisRemoved(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,256,"imePeriod test = new TimePeriod(5, 6, 7, 8);"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,257,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,256,"MillisDuration test = new MillisDuration(5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,257,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,277,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,278,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,277,"MillisDuration test = new MillisDuration(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,278,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,287,"ssertEquals(false, test.isPrecise());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,288,ry {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,289,est.getTotalMillis();
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,290,ail();
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,291, catch (IllegalStateException ex) {}
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,287,"assertEquals(true, test.isPrecise());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,288,assertEquals(
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,289,(365L + 2L * 30L + 3L * 7L + 4L) * DateTimeConstants.MILLIS_PER_DAY +
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,290,5 * DateTimeConstants.MILLIS_PER_HOUR + 6 * DateTimeConstants.MILLIS_PER_MINUTE +
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,291,"7 * DateTimeConstants.MILLIS_PER_SECOND + 8, test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,299,"imePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, null);"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,300,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,299,"MillisDuration test = new MillisDuration(1, 2, 3, 4, 5, 6, 7, 8, null);"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,300,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,309,"ssertEquals(false, test.isPrecise());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,310,ry {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,311,est.getTotalMillis();
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,312,ail();
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,313, catch (IllegalStateException ex) {}
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,309,"assertEquals(true, test.isPrecise());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,310,assertEquals(
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,311,(365L + 2L * 30L + 3L * 7L + 4L) * DateTimeConstants.MILLIS_PER_DAY +
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,312,5 * DateTimeConstants.MILLIS_PER_HOUR + 6 * DateTimeConstants.MILLIS_PER_MINUTE +
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,313,"7 * DateTimeConstants.MILLIS_PER_SECOND + 8, test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,317,"imePeriod test = new TimePeriod(0, 0, 0, 0, 5, 6, 7, 8, DurationType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,318,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,317,"MillisDuration test = new MillisDuration(0, 0, 0, 0, 5, 6, 7, 8, DurationType.getPreciseDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,318,"assertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,335,"ew TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,335,"new MillisDuration(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,344,"imePeriod test = new TimePeriod(dt1.getMillis(), dt2.getMillis());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,345,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,344,"MillisDuration test = new MillisDuration(dt1.getMillis(), dt2.getMillis());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,345,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,361,"imePeriod test = new TimePeriod(dt1.getMillis(), dt2.getMillis());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,362,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,361,"MillisDuration test = new MillisDuration(dt1.getMillis(), dt2.getMillis());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,362,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,379,"imePeriod test = new TimePeriod(dt1.getMillis(), dt2.getMillis(), null);"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,380,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,379,"MillisDuration test = new MillisDuration(dt1.getMillis(), dt2.getMillis(), null);"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,380,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,396,"imePeriod test = new TimePeriod(dt1.getMillis(), dt2.getMillis(), DurationType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,397,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,396,"MillisDuration test = new MillisDuration(dt1.getMillis(), dt2.getMillis(), DurationType.getPreciseDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,397,"assertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,413,"imePeriod test = new TimePeriod(dt1.getMillis(), dt2.getMillis(), DurationType.getAllType().withMillisRemoved());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,414,"ssertEquals(DurationType.getAllType().withMillisRemoved(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,413,"MillisDuration test = new MillisDuration(dt1.getMillis(), dt2.getMillis(), DurationType.getPreciseAllType().withMillisRemoved());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,414,"assertEquals(DurationType.getPreciseAllType().withMillisRemoved(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,431,"imePeriod test = new TimePeriod(dt1, dt2);"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,432,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,431,"MillisDuration test = new MillisDuration(dt1, dt2);"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,432,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,448,"imePeriod test = new TimePeriod(dt1, dt2);"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,449,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,448,"MillisDuration test = new MillisDuration(dt1, dt2);"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,449,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,465,"imePeriod test = new TimePeriod(dt1, dt2);"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,466,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,465,"MillisDuration test = new MillisDuration(dt1, dt2);"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,466,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,470,"ssertEquals(1, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,470,"assertEquals(2, test.getDays());  // one more due to 2004 leap year and fixed 365 day years"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,482,"imePeriod test = new TimePeriod(dt1, dt2);"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,483,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,482,"MillisDuration test = new MillisDuration(dt1, dt2);"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,483,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,487,"ssertEquals(-1, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,487,"assertEquals(-2, test.getDays());  // one more due to 2004 leap year and fixed 365 day years"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,499,"imePeriod test = new TimePeriod(dt1, dt2);"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,500,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,499,"MillisDuration test = new MillisDuration(dt1, dt2);"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,500,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,517,"imePeriod test = new TimePeriod(dt1, dt2, null);"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,518,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,517,"MillisDuration test = new MillisDuration(dt1, dt2, null);"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,518,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,534,"imePeriod test = new TimePeriod(dt1, dt2, DurationType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,535,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,534,"MillisDuration test = new MillisDuration(dt1, dt2, DurationType.getPreciseDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,535,"assertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,551,"imePeriod test = new TimePeriod(dt1, dt2, DurationType.getAllType().withMillisRemoved());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,552,"ssertEquals(DurationType.getAllType().withMillisRemoved(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,551,"MillisDuration test = new MillisDuration(dt1, dt2, DurationType.getPreciseAllType().withMillisRemoved());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,552,"assertEquals(DurationType.getPreciseAllType().withMillisRemoved(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,568,"imePeriod test = new TimePeriod(dt1, dt2, DurationType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,569,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,568,"MillisDuration test = new MillisDuration(dt1, dt2, DurationType.getPreciseAllType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,569,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,573,"ssertEquals(1, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,573,"assertEquals(2, test.getDays());  // one more due to 2004 leap year and fixed 365 day years"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,585,"imePeriod test = new TimePeriod(dt1, dt2, DurationType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,586,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,585,"MillisDuration test = new MillisDuration(dt1, dt2, DurationType.getPreciseAllType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,586,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,604,"imePeriod test = new TimePeriod(""P1Y2M3D"");"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,605,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,604,"MillisDuration test = new MillisDuration(""P1Y2M3D"");"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,605,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,614,"ssertEquals(false, test.isPrecise());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,615,ry {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,616,est.getTotalMillis();
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,617,ail();
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,618, catch (IllegalStateException ex) {}
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,614,"assertEquals(true, test.isPrecise());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,615,assertEquals(
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,616,"(365L + 2L * 30L + 3L) * DateTimeConstants.MILLIS_PER_DAY, test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,622,imePeriod test = new TimePeriod((Object) null);
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,623,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,620,MillisDuration test = new MillisDuration((Object) null);
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,621,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,637,"imePeriod test = new TimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getDayHourType()));"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,638,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,635,"MillisDuration base = new MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getPreciseDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,636,MillisDuration test = new MillisDuration(base);
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,637,"assertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,655,"imePeriod base = new TimePeriod(dt1, dt2);  // AllType and precise"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,656,imePeriod test = new TimePeriod(base);
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,657,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,654,"MillisDuration base = new MillisDuration(dt1, dt2);  // AllType and precise"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,655,MillisDuration test = new MillisDuration(base);
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,656,"assertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,669,public void testConstructor_Object5() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,670,"MillisDuration base = new MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,671,try {
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,672,new MillisDuration(base);
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,673,fail();
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,674,} catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,675,"imePeriod test = new TimePeriod(""P1Y2M3D"", DurationType.getYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,676,"ssertEquals(DurationType.getYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,682,"MillisDuration test = new MillisDuration(""P1Y2M3D"", DurationType.getPreciseYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,683,"assertEquals(DurationType.getPreciseYearMonthType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,685,"ssertEquals(false, test.isPrecise());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,686,ry {
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,687,est.getTotalMillis();
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,688,ail();
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,689, catch (IllegalStateException ex) {}
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,692,"assertEquals(true, test.isPrecise());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,693,assertEquals(
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,694,"(365L + 2L * 30L + 3L) * DateTimeConstants.MILLIS_PER_DAY, test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,693,"imePeriod test = new TimePeriod((Object) null, DurationType.getYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,694,"ssertEquals(DurationType.getYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,698,"MillisDuration test = new MillisDuration((Object) null, DurationType.getPreciseYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,699,"assertEquals(DurationType.getPreciseYearMonthType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,708,"imePeriod test = new TimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getDayHourType()), DurationType.getYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,709,"ssertEquals(DurationType.getYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,713,MillisDuration test = new MillisDuration(
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,714,"new MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getPreciseDayHourType()), DurationType.getPreciseYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,715,"assertEquals(DurationType.getPreciseYearMonthType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,724,"imePeriod test = new TimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getDayHourType()), null);"
False,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,725,"ssertEquals(DurationType.getDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,730,"MillisDuration test = new MillisDuration(new MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getPreciseDayHourType()), null);"
True,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestDuration_Constructors.java,731,"assertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,186,ublic void testConstructor_RI_RD1() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,186,public void testConstructor_RI_RP1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,196,"ssertEquals(false, dur == test.getDuration());"
False,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,199,ublic void testConstructor_RI_RD2() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,198,public void testConstructor_RI_RP2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,210,"ssertEquals(false, dur == test.getDuration());"
False,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,213,ublic void testConstructor_RI_RD3() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,211,public void testConstructor_RI_RP3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,223,"ssertEquals(true, dur == test.getDuration());"
False,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,226,ublic void testConstructor_RI_RD4() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,223,public void testConstructor_RI_RP4() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,232,ublic void testConstructor_RI_RD5() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,229,public void testConstructor_RI_RP5() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,239,ublic void testConstructor_RI_RD6() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/org/joda/time/TestInterval_Constructors.java,236,public void testConstructor_RI_RP6() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,73,ublic class TestMutableDuration_Basics extends TestCase {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,73,public class TestMutablePeriod_Basics extends TestCase {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,114,eturn new TestSuite(TestMutableDuration_Basics.class);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,114,return new TestSuite(TestMutablePeriod_Basics.class);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,117,ublic TestMutableDuration_Basics(String name) {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,117,public TestMutablePeriod_Basics(String name) {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,154,ublic void testGetIsTotalMillisBased() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,155,utableTimePeriod test = new MutableTimePeriod(123L);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,156,"ssertEquals(false, test.isTotalMillisBased());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,157,"est = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,158,"ssertEquals(false, test.isTotalMillisBased());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,161,ublic void testGetTotalMillis() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,162,utableTimePeriod test = new MutableTimePeriod(123L);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,163,"ssertEquals(123L, test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,206,"ssertEquals(true, test1.equals(new MockMutableDuration(123L)));"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,194,"assertEquals(true, test1.equals(new MockMutablePeriod(123L)));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,210,lass MockMutableDuration extends AbstractTimePeriod {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,211,ublic MockMutableDuration(long value) {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,212,"uper(value, null, false);"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,198,class MockMutablePeriod extends AbstractTimePeriod {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,199,public MockMutablePeriod(long value) {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,200,"super(value, null);"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,219,ublic void testCompareTo() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,220,utableTimePeriod test1 = new MutableTimePeriod(123L);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,221,utableTimePeriod test1a = new MutableTimePeriod(123L);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,222,"ssertEquals(0, test1.compareTo(test1a));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,223,"ssertEquals(0, test1a.compareTo(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,224,"ssertEquals(0, test1.compareTo(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,225,"ssertEquals(0, test1a.compareTo(test1a));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,227,utableTimePeriod test2 = new MutableTimePeriod(321L);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,228,"ssertEquals(-1, test1.compareTo(test2));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,229,"ssertEquals(+1, test2.compareTo(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,231,"utableTimePeriod test3 = new MutableTimePeriod(321L, DurationType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,232,"ssertEquals(-1, test1.compareTo(test3));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,233,"ssertEquals(+1, test3.compareTo(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,234,"ssertEquals(0, test3.compareTo(test2));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,236,"ssertEquals(+1, test2.compareTo(new MockMutableDuration(123L)));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,237,"ssertEquals(0, test1.compareTo(new MockMutableDuration(123L)));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,239,ry {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,240,est1.compareTo(null);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,241,ail();
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,242, catch (NullPointerException ex) {}
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,243,ry {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,244,est1.compareTo(new Long(123L));
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,245,ail();
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,246, catch (ClassCastException ex) {}
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,247,ry {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,248,"est1.compareTo(new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,249,ail();
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,250, catch (IllegalStateException ex) {}
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,253,ublic void testIsEqual() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,254,utableTimePeriod test1 = new MutableTimePeriod(123L);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,255,utableTimePeriod test1a = new MutableTimePeriod(123L);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,256,"ssertEquals(true, test1.isEqual(test1a));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,257,"ssertEquals(true, test1a.isEqual(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,258,"ssertEquals(true, test1.isEqual(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,259,"ssertEquals(true, test1a.isEqual(test1a));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,261,utableTimePeriod test2 = new MutableTimePeriod(321L);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,262,"ssertEquals(false, test1.isEqual(test2));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,263,"ssertEquals(false, test2.isEqual(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,265,"utableTimePeriod test3 = new MutableTimePeriod(321L, DurationType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,266,"ssertEquals(false, test1.isEqual(test3));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,267,"ssertEquals(false, test3.isEqual(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,268,"ssertEquals(true, test3.isEqual(test2));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,270,"ssertEquals(false, test2.isEqual(new MockMutableDuration(123L)));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,271,"ssertEquals(true, test1.isEqual(new MockMutableDuration(123L)));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,272,"ssertEquals(false, test1.isEqual(null));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,273,"ssertEquals(true, new MutableTimePeriod(0L).isEqual(null));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,276,ublic void testIsBefore() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,277,utableTimePeriod test1 = new MutableTimePeriod(123L);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,278,utableTimePeriod test1a = new MutableTimePeriod(123L);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,279,"ssertEquals(false, test1.isShorterThan(test1a));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,280,"ssertEquals(false, test1a.isShorterThan(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,281,"ssertEquals(false, test1.isShorterThan(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,282,"ssertEquals(false, test1a.isShorterThan(test1a));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,284,utableTimePeriod test2 = new MutableTimePeriod(321L);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,285,"ssertEquals(true, test1.isShorterThan(test2));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,286,"ssertEquals(false, test2.isShorterThan(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,288,"utableTimePeriod test3 = new MutableTimePeriod(321L, DurationType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,289,"ssertEquals(true, test1.isShorterThan(test3));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,290,"ssertEquals(false, test3.isShorterThan(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,291,"ssertEquals(false, test3.isShorterThan(test2));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,293,"ssertEquals(false, test2.isShorterThan(new MockMutableDuration(123L)));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,294,"ssertEquals(false, test1.isShorterThan(new MockMutableDuration(123L)));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,295,"ssertEquals(false, test1.isShorterThan(null));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,296,"ssertEquals(false, new MutableTimePeriod(0L).isShorterThan(null));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,299,ublic void testIsAfter() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,300,utableTimePeriod test1 = new MutableTimePeriod(123L);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,301,utableTimePeriod test1a = new MutableTimePeriod(123L);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,302,"ssertEquals(false, test1.isLongerThan(test1a));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,303,"ssertEquals(false, test1a.isLongerThan(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,304,"ssertEquals(false, test1.isLongerThan(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,305,"ssertEquals(false, test1a.isLongerThan(test1a));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,307,utableTimePeriod test2 = new MutableTimePeriod(321L);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,308,"ssertEquals(false, test1.isLongerThan(test2));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,309,"ssertEquals(true, test2.isLongerThan(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,311,"utableTimePeriod test3 = new MutableTimePeriod(321L, DurationType.getAllType());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,312,"ssertEquals(false, test1.isLongerThan(test3));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,313,"ssertEquals(true, test3.isLongerThan(test1));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,314,"ssertEquals(false, test3.isLongerThan(test2));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,316,"ssertEquals(true, test2.isLongerThan(new MockMutableDuration(123L)));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,317,"ssertEquals(false, test1.isLongerThan(new MockMutableDuration(123L)));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,318,"ssertEquals(true, test1.isLongerThan(null));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,319,"ssertEquals(false, new MutableTimePeriod(0L).isLongerThan(null));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,573,ublic void testToDuration() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,458,public void testToTimePeriod() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,459,MutableTimePeriod test = new MutableTimePeriod(123L);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,460,TimePeriod result = test.toTimePeriod();
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,461,"assertEquals(test, result);"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,464,public void testToMutableTimePeriod() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,465,MutableTimePeriod test = new MutableTimePeriod(123L);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,466,MutableTimePeriod result = test.toMutableTimePeriod();
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,467,"assertEquals(test, result);"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,471,public void testToDurationMillis() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,575,imePeriod result = test.toDuration();
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,576,"ssertEquals(test.getDurationType(), result.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,577,"ssertEquals(test.isPrecise(), result.isPrecise());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,578,"ssertEquals(test.getTotalMillis(), result.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,473,"assertEquals(123L, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,475,"test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,476,try {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,477,test.toDurationMillis();
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,478,fail();
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,479,} catch (IllegalStateException ex) {}
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,581,ublic void testToMutableDuration() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,482,public void testToDuration() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,583,utableTimePeriod result = test.toMutableDuration();
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,584,"ssertEquals(test.getDurationType(), result.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,585,"ssertEquals(test.isPrecise(), result.isPrecise());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,586,"ssertEquals(test.getTotalMillis(), result.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,484,"assertEquals(new Duration(123L), test.toDuration());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,486,"test = new MutableTimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,487,try {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,488,test.toDuration();
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,489,fail();
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,490,} catch (IllegalStateException ex) {}
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,595,"ssertEquals(test.getTotalMillis(), copy.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,499,"assertEquals(test.toDurationMillis(), copy.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,604,"ssertEquals(test.getTotalMillis(), copy.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Basics.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java,508,"assertEquals(test.toDurationMillis(), copy.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,67,ublic class TestMutableDuration_Constructors extends TestCase {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,67,public class TestMutablePeriod_Constructors extends TestCase {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,108,eturn new TestSuite(TestMutableDuration_Constructors.class);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,108,return new TestSuite(TestMutablePeriod_Constructors.class);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,111,ublic TestMutableDuration_Constructors(String name) {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,111,public TestMutablePeriod_Constructors(String name) {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,151,"ssertEquals(0, test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,152,"ssertEquals(false, test.isTotalMillisBased());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,151,"assertEquals(0, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,171,"ssertEquals(0, test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,172,"ssertEquals(false, test.isTotalMillisBased());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,170,"assertEquals(0, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,187,"ssertEquals(0, test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,191,ublic void testConstructor_DurationType_boolean1() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,192,"utableTimePeriod test = new MutableTimePeriod(null, true);"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,193,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,194,"ssertEquals(0, test.getYears());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,195,"ssertEquals(0, test.getMonths());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,196,"ssertEquals(0, test.getWeeks());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,197,"ssertEquals(0, test.getDays());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,198,"ssertEquals(0, test.getHours());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,199,"ssertEquals(0, test.getMinutes());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,200,"ssertEquals(0, test.getSeconds());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,201,"ssertEquals(0, test.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,202,"ssertEquals(true, test.isPrecise());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,203,"ssertEquals(0L, test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,204,"ssertEquals(true, test.isTotalMillisBased());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,207,ublic void testConstructor_DurationType_boolean2() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,208,ong length = 4 * DateTimeConstants.MILLIS_PER_DAY +
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,209, * DateTimeConstants.MILLIS_PER_HOUR +
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,210, * DateTimeConstants.MILLIS_PER_MINUTE +
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,211, * DateTimeConstants.MILLIS_PER_SECOND + 8;
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,212,"utableTimePeriod test = new MutableTimePeriod(null, false);"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,213,"ssertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,214,"ssertEquals(0, test.getYears());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,215,"ssertEquals(0, test.getMonths());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,216,"ssertEquals(0, test.getWeeks());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,217,"ssertEquals(0, test.getDays());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,218,"ssertEquals(0, test.getHours());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,219,"ssertEquals(0, test.getMinutes());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,220,"ssertEquals(0, test.getSeconds());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,221,"ssertEquals(0, test.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,222,"ssertEquals(true, test.isPrecise());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,223,"ssertEquals(0L, test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,224,"ssertEquals(false, test.isTotalMillisBased());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,227,ublic void testConstructor_DurationType_boolean3() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,228,ry {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,229,"ew MutableTimePeriod(DurationType.getAllType(), true);"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,230,ail();
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,231, catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,185,"assertEquals(0, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,251,"ssertEquals(length, test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,252,"ssertEquals(false, test.isTotalMillisBased());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,205,"assertEquals(length, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,272,"ssertEquals(length, test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,273,"ssertEquals(false, test.isTotalMillisBased());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,225,"assertEquals(length, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,292,"ssertEquals(length, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,244,"assertEquals(length, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,311,"ssertEquals(length, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,263,"assertEquals(length, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,330,"ssertEquals(length - 8, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,282,"assertEquals(length - 8, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,351," * DateTimeConstants.MILLIS_PER_SECOND + 8, test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,352,"ssertEquals(false, test.isTotalMillisBased());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,303,"7 * DateTimeConstants.MILLIS_PER_SECOND + 8, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,372,est.getTotalMillis();
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,323,test.toDurationMillis();
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,375,"ssertEquals(false, test.isTotalMillisBased());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,395,est.getTotalMillis();
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,345,test.toDurationMillis();
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,398,"ssertEquals(false, test.isTotalMillisBased());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,415," * DateTimeConstants.MILLIS_PER_SECOND + 8, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,364,"7 * DateTimeConstants.MILLIS_PER_SECOND + 8, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,440,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,441,"ssertEquals(false, test.isTotalMillisBased());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,389,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,458,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,406,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,476,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,477,"ssertEquals(false, test.isTotalMillisBased());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,424,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,494,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,441,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,511,"ssertEquals(dt2.getMillis() - dt1.getMillis() - 1, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,458,"assertEquals(dt2.getMillis() - dt1.getMillis() - 1, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,529,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,530,"ssertEquals(false, test.isTotalMillisBased());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,476,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,547,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,493,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,564,"ssertEquals(dt2.getMillis() - TEST_TIME_NOW, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,510,"assertEquals(dt2.getMillis() - TEST_TIME_NOW, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,581,"ssertEquals(0L, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,527,"assertEquals(0L, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,599,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,600,"ssertEquals(false, test.isTotalMillisBased());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,545,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,617,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,562,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,634,"ssertEquals(dt2.getMillis() - dt1.getMillis() - 1, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,579,"assertEquals(dt2.getMillis() - dt1.getMillis() - 1, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,651,"ssertEquals(dt2.getMillis() - TEST_TIME_NOW, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,596,"assertEquals(dt2.getMillis() - TEST_TIME_NOW, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,668,"ssertEquals(0L, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,613,"assertEquals(0L, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,688,est.getTotalMillis();
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,633,test.toDurationMillis();
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,691,"ssertEquals(false, test.isTotalMillisBased());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,706,"ssertEquals(0, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,650,"assertEquals(0, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,722," * DateTimeConstants.MILLIS_PER_SECOND + 4, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,666,"3 * DateTimeConstants.MILLIS_PER_SECOND + 4, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,740,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,684,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,760,est.getTotalMillis();
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,704,test.toDurationMillis();
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,763,"ssertEquals(false, test.isTotalMillisBased());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,778,"ssertEquals(0, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,721,"assertEquals(0, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,794," * DateTimeConstants.MILLIS_PER_SECOND + 4, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,737,"3 * DateTimeConstants.MILLIS_PER_SECOND + 4, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,810," * DateTimeConstants.MILLIS_PER_SECOND + 4, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java,753,"3 * DateTimeConstants.MILLIS_PER_SECOND + 4, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,67,ublic class TestMutableDuration_Updates extends TestCase {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,67,public class TestMutablePeriod_Updates extends TestCase {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,108,eturn new TestSuite(TestMutableDuration_Updates.class);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,108,return new TestSuite(TestMutablePeriod_Updates.class);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,111,ublic TestMutableDuration_Updates(String name) {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,111,public TestMutablePeriod_Updates(String name) {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,383,ublic void testSetDuration_8ints1() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,383,public void testSetTimePeriod_8ints1() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,385,"est.setDuration(11, 12, 13, 14, 15, 16, 17, 18);"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,385,"test.setTimePeriod(11, 12, 13, 14, 15, 16, 17, 18);"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,396,ublic void testSetDuration_8ints2() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,396,public void testSetTimePeriod_8ints2() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,399,"est.setDuration(11, 12, 13, 14, 15, 16, 17, 18);"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,399,"test.setTimePeriod(11, 12, 13, 14, 15, 16, 17, 18);"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,410,"ssertEquals(100, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,410,"assertEquals(100, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,413,ublic void testSetDuration_8ints3() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,413,public void testSetTimePeriod_8ints3() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,415,"est.setDuration(0, 0, 0, 0, 0, 0, 0, 18);"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,415,"test.setTimePeriod(0, 0, 0, 0, 0, 0, 0, 18);"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,424,"ssertEquals(18, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,424,"assertEquals(18, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,427,ublic void testSetDuration_8ints4() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,427,public void testSetTimePeriod_8ints4() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,430,"est.setDuration(11, 12, 13, 14, 15, 16, 17, 18);"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,430,"test.setTimePeriod(11, 12, 13, 14, 15, 16, 17, 18);"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,443,ublic void testSetDuration_RD1() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,443,public void testSetTimePeriod_RP1() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,445,"est.setDuration(new MutableTimePeriod(11, 12, 13, 14, 15, 16, 17, 18));"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,445,"test.setTimePeriod(new MutableTimePeriod(11, 12, 13, 14, 15, 16, 17, 18));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,456,ublic void testSetDuration_RD2() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,456,public void testSetTimePeriod_RP2() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,459,"est.setDuration(new MutableTimePeriod(11, 12, 13, 14, 15, 16, 17, 18));"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,459,"test.setTimePeriod(new MutableTimePeriod(11, 12, 13, 14, 15, 16, 17, 18));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,470,"ssertEquals(100, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,470,"assertEquals(100, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,473,ublic void testSetDuration_RD3() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,473,public void testSetTimePeriod_RP3() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,475,"est.setDuration(new MutableTimePeriod(0, 0, 0, 0, 0, 0, 0, 18));"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,475,"test.setTimePeriod(new MutableTimePeriod(0, 0, 0, 0, 0, 0, 0, 18));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,484,"ssertEquals(18, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,484,"assertEquals(18, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,487,ublic void testSetDuration_RD4() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,487,public void testSetTimePeriod_RP4() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,490,"est.setDuration(new MutableTimePeriod(11, 12, 13, 14, 15, 16, 17, 18));"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,490,"test.setTimePeriod(new MutableTimePeriod(11, 12, 13, 14, 15, 16, 17, 18));"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,502,ublic void testSetDuration_RD5() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,502,public void testSetTimePeriod_RP5() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,504,est.setDuration(null);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,504,test.setTimePeriod((ReadableTimePeriod) null);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,516,ublic void testSetTotalMillis_long_long1() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,516,public void testSetTimePeriod_long_long1() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,520,"est.setTotalMillis(dt1.getMillis(), dt2.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,520,"test.setTimePeriod(dt1.getMillis(), dt2.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,531,ublic void testSetTotalMillis_long_long2() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,531,public void testSetTimePeriod_long_long2() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,535,"est.setTotalMillis(dt2.getMillis(), dt1.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,535,"test.setTimePeriod(dt2.getMillis(), dt1.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,546,ublic void testSetTotalMillis_long_long3() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,546,public void testSetTimePeriod_long_long3() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,549,"est.setTotalMillis(dt1.getMillis(), dt1.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,549,"test.setTimePeriod(dt1.getMillis(), dt1.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,560,ublic void testSetTotalMillis_long_long_NoYears() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,560,public void testSetTimePeriod_long_long_NoYears() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,564,"est.setTotalMillis(dt1.getMillis(), dt2.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,564,"test.setTimePeriod(dt1.getMillis(), dt2.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,575,ublic void testSetTotalMillis_long_long_NoMonths() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,575,public void testSetTimePeriod_long_long_NoMonths() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,579,"est.setTotalMillis(dt1.getMillis(), dt2.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,579,"test.setTimePeriod(dt1.getMillis(), dt2.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,590,ublic void testSetTotalMillis_long_long_NoWeeks() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,590,public void testSetTimePeriod_long_long_NoWeeks() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,594,"est.setTotalMillis(dt1.getMillis(), dt2.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,594,"test.setTimePeriod(dt1.getMillis(), dt2.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,605,ublic void testSetTotalMillis_long_long_NoDays() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,605,public void testSetTimePeriod_long_long_NoDays() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,609,"est.setTotalMillis(dt1.getMillis(), dt2.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,609,"test.setTimePeriod(dt1.getMillis(), dt2.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,620,ublic void testSetTotalMillis_long_long_NoHours() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,620,public void testSetTimePeriod_long_long_NoHours() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,624,"est.setTotalMillis(dt1.getMillis(), dt2.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,624,"test.setTimePeriod(dt1.getMillis(), dt2.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,635,ublic void testSetTotalMillis_long_long_NoMinutes() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,635,public void testSetTimePeriod_long_long_NoMinutes() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,639,"est.setTotalMillis(dt1.getMillis(), dt2.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,639,"test.setTimePeriod(dt1.getMillis(), dt2.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,650,ublic void testSetTotalMillis_long_long_NoSeconds() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,650,public void testSetTimePeriod_long_long_NoSeconds() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,654,"est.setTotalMillis(dt1.getMillis(), dt2.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,654,"test.setTimePeriod(dt1.getMillis(), dt2.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,665,ublic void testSetTotalMillis_long_long_NoMillis() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,665,public void testSetTimePeriod_long_long_NoMillis() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,669,"est.setTotalMillis(dt1.getMillis(), dt2.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,669,"test.setTimePeriod(dt1.getMillis(), dt2.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,681,ublic void testSetTotalMillis_long1() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,681,public void testSetTimePeriod_long1() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,683,est.setTotalMillis(100L);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,683,test.setTimePeriod(100L);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,694,ublic void testSetTotalMillis_long2() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,694,public void testSetTimePeriod_long2() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,696,est.setTotalMillis(
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,696,test.setTimePeriod(
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,711,ublic void testSetTotalMillis_long3() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,711,public void testSetTimePeriod_long3() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,713,est.setTotalMillis(
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,713,test.setTimePeriod(
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,728,ublic void testSetTotalMillis_long_NoYears() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,728,public void testSetTimePeriod_long_NoYears() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,735,est.setTotalMillis(ms);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,735,test.setTimePeriod(ms);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,744,"ssertEquals(ms, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,744,"assertEquals(ms, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,747,ublic void testSetTotalMillis_long_NoMonths() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,747,public void testSetTimePeriod_long_NoMonths() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,754,est.setTotalMillis(ms);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,754,test.setTimePeriod(ms);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,763,"ssertEquals(ms, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,763,"assertEquals(ms, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,766,ublic void testSetTotalMillis_long_NoWeeks() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,766,public void testSetTimePeriod_long_NoWeeks() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,773,est.setTotalMillis(ms);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,773,test.setTimePeriod(ms);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,782,"ssertEquals(ms, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,782,"assertEquals(ms, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,785,ublic void testSetTotalMillis_long_NoDays() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,785,public void testSetTimePeriod_long_NoDays() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,792,est.setTotalMillis(ms);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,792,test.setTimePeriod(ms);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,801,"ssertEquals(ms, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,801,"assertEquals(ms, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,804,ublic void testSetTotalMillis_long_NoHours() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,804,public void testSetTimePeriod_long_NoHours() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,811,est.setTotalMillis(ms);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,811,test.setTimePeriod(ms);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,820,"ssertEquals(ms, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,820,"assertEquals(ms, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,823,ublic void testSetTotalMillis_long_NoMinutes() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,823,public void testSetTimePeriod_long_NoMinutes() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,830,est.setTotalMillis(ms);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,830,test.setTimePeriod(ms);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,839,"ssertEquals(ms, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,839,"assertEquals(ms, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,842,ublic void testSetTotalMillis_long_NoSeconds() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,842,public void testSetTimePeriod_long_NoSeconds() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,849,est.setTotalMillis(ms);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,849,test.setTimePeriod(ms);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,858,"ssertEquals(ms, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,858,"assertEquals(ms, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,861,ublic void testSetTotalMillis_long_NoMillis() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,861,public void testSetTimePeriod_long_NoMillis() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,868,est.setTotalMillis(ms);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,868,test.setTimePeriod(ms);
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,877,"ssertEquals(ms - 8, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,877,"assertEquals(ms - 8, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,892,"ssertEquals(200L, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,892,"assertEquals(200L, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,911,"ssertEquals(ms + 100L, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,911,"assertEquals(ms + 100L, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,926,"ssertEquals(100L, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,926,"assertEquals(100L, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,938,ublic void testAdd_RD1() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,938,public void testAdd_RP1() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,949,"ssertEquals(200L, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,949,"assertEquals(200L, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,952,ublic void testAdd_RD2() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,952,public void testAdd_RP2() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,965,ublic void testAdd_RD3() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,965,public void testAdd_RP3() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,967,est.add(TimePeriod.ZERO);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,967,test.add(new TimePeriod(0L));
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,976,"ssertEquals(100L, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,976,"assertEquals(100L, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,979,ublic void testAdd_RD4() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,979,public void testAdd_RP4() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,987,ublic void testAdd_RD5() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,987,public void testAdd_RP5() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,995,ublic void testAdd_RD6() {
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,995,public void testAdd_RP6() {
False,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,997,est.add(null);
True,JodaTime/src/test/org/joda/time/TestMutableDuration_Updates.java,JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java,997,test.add((ReadableTimePeriod) null);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,10,* are met:
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,54,package org.joda.time;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,56,import java.io.ByteArrayInputStream;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,57,import java.io.ByteArrayOutputStream;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,58,import java.io.ObjectInputStream;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,59,import java.io.ObjectOutputStream;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,60,import java.util.Locale;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,61,import java.util.TimeZone;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,63,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,65,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,66,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,69,* This class is a Junit unit test for Duration.
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,71,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,73,public class TestPeriod_Basics extends TestCase {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,74,// Test in 2002/03 as time zones are more well known
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,75,// (before the late 90's they were all over the place)
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,77,"private static final DateTimeZone PARIS = DateTimeZone.getInstance(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,78,"private static final DateTimeZone LONDON = DateTimeZone.getInstance(""Europe/London"");"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,80,long y2002days = 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,81,366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 +
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,82,365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,83,366 + 365;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,84,long y2003days = 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,85,366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 +
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,86,365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,87,366 + 365 + 365;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,89,// 2002-06-09
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,90,private long TEST_TIME_NOW =
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,91,(y2002days + 31L + 28L + 31L + 30L + 31L + 9L -1L) * DateTimeConstants.MILLIS_PER_DAY;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,93,// 2002-04-05
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,94,private long TEST_TIME1 =
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,95,(y2002days + 31L + 28L + 31L + 5L -1L) * DateTimeConstants.MILLIS_PER_DAY
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,96,+ 12L * DateTimeConstants.MILLIS_PER_HOUR
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,97,+ 24L * DateTimeConstants.MILLIS_PER_MINUTE;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,99,// 2003-05-06
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,100,private long TEST_TIME2 =
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,101,(y2003days + 31L + 28L + 31L + 30L + 6L -1L) * DateTimeConstants.MILLIS_PER_DAY
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,102,+ 14L * DateTimeConstants.MILLIS_PER_HOUR
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,103,+ 28L * DateTimeConstants.MILLIS_PER_MINUTE;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,105,private DateTimeZone originalDateTimeZone = null;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,106,private TimeZone originalTimeZone = null;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,107,private Locale originalLocale = null;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,109,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,110,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,113,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,114,return new TestSuite(TestPeriod_Basics.class);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,117,public TestPeriod_Basics(String name) {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,118,super(name);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,121,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,122,DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,123,originalDateTimeZone = DateTimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,124,originalTimeZone = TimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,125,originalLocale = Locale.getDefault();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,126,DateTimeZone.setDefault(LONDON);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,127,"TimeZone.setDefault(TimeZone.getTimeZone(""Europe/London""));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,128,Locale.setDefault(Locale.UK);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,131,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,132,DateTimeUtils.setCurrentMillisSystem();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,133,DateTimeZone.setDefault(originalDateTimeZone);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,134,TimeZone.setDefault(originalTimeZone);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,135,Locale.setDefault(originalLocale);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,136,originalDateTimeZone = null;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,137,originalTimeZone = null;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,138,originalLocale = null;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,142,public void testTest() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,143,"assertEquals(""2002-06-09T00:00:00.000Z"", new Instant(TEST_TIME_NOW).toString());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,144,"assertEquals(""2002-04-05T12:24:00.000Z"", new Instant(TEST_TIME1).toString());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,145,"assertEquals(""2003-05-06T14:28:00.000Z"", new Instant(TEST_TIME2).toString());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,149,public void testGetDurationType() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,150,TimePeriod test = new TimePeriod(0L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,151,"assertEquals(DurationType.getAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,154,public void testGetIsPrecise() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,155,TimePeriod test = new TimePeriod(123L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,156,"assertEquals(true, test.isPrecise());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,157,"test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,158,"assertEquals(false, test.isPrecise());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,161,public void testGetMethods() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,162,TimePeriod test = new TimePeriod(0L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,163,"assertEquals(0, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,164,"assertEquals(0, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,165,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,166,"assertEquals(0, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,167,"assertEquals(0, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,168,"assertEquals(0, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,169,"assertEquals(0, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,170,"assertEquals(0, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,173,public void testEqualsHashCode() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,174,TimePeriod test1 = new TimePeriod(123L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,175,TimePeriod test2 = new TimePeriod(123L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,176,"assertEquals(true, test1.equals(test2));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,177,"assertEquals(true, test2.equals(test1));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,178,"assertEquals(true, test1.equals(test1));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,179,"assertEquals(true, test2.equals(test2));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,180,"assertEquals(true, test1.hashCode() == test2.hashCode());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,181,"assertEquals(true, test1.hashCode() == test1.hashCode());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,182,"assertEquals(true, test2.hashCode() == test2.hashCode());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,184,TimePeriod test3 = new TimePeriod(321L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,185,"assertEquals(false, test1.equals(test3));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,186,"assertEquals(false, test2.equals(test3));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,187,"assertEquals(false, test3.equals(test1));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,188,"assertEquals(false, test3.equals(test2));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,189,"assertEquals(false, test1.hashCode() == test3.hashCode());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,190,"assertEquals(false, test2.hashCode() == test3.hashCode());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,192,"assertEquals(false, test1.equals(""Hello""));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,193,"assertEquals(true, test1.equals(new MockPeriod(123L)));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,194,"assertEquals(false, test1.equals(new TimePeriod(123L, DurationType.getDayHourType())));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,197,class MockPeriod extends AbstractTimePeriod {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,198,public MockPeriod(long value) {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,199,"super(value, null);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,201,protected DurationType checkDurationType(DurationType type) {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,202,return DurationType.getAllType();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,207,public void testSerialization() throws Exception {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,208,TimePeriod test = new TimePeriod(123L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,210,ByteArrayOutputStream baos = new ByteArrayOutputStream();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,211,ObjectOutputStream oos = new ObjectOutputStream(baos);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,212,oos.writeObject(test);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,213,byte[] bytes = baos.toByteArray();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,214,oos.close();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,216,ByteArrayInputStream bais = new ByteArrayInputStream(bytes);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,217,ObjectInputStream ois = new ObjectInputStream(bais);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,218,TimePeriod result = (TimePeriod) ois.readObject();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,219,ois.close();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,221,"assertEquals(test, result);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,225,public void testAddTo1() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,226,long expected = TEST_TIME_NOW;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,227,"expected = ISOChronology.getInstance().years().add(expected, 1);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,228,"expected = ISOChronology.getInstance().months().add(expected, 2);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,229,"expected = ISOChronology.getInstance().weeks().add(expected, 3);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,230,"expected = ISOChronology.getInstance().days().add(expected, 4);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,231,"expected = ISOChronology.getInstance().hours().add(expected, 5);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,232,"expected = ISOChronology.getInstance().minutes().add(expected, 6);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,233,"expected = ISOChronology.getInstance().seconds().add(expected, 7);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,234,"expected = ISOChronology.getInstance().millis().add(expected, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,236,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,237,"long added = test.addTo(TEST_TIME_NOW, 1);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,238,"assertEquals(expected, added);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,241,public void testAddTo2() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,242,long expected = TEST_TIME_NOW;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,243,"expected = ISOChronology.getInstance().years().add(expected, -2);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,244,"expected = ISOChronology.getInstance().months().add(expected, -4);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,245,"expected = ISOChronology.getInstance().weeks().add(expected, -6);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,246,"expected = ISOChronology.getInstance().days().add(expected, -8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,247,"expected = ISOChronology.getInstance().hours().add(expected, -10);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,248,"expected = ISOChronology.getInstance().minutes().add(expected, -12);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,249,"expected = ISOChronology.getInstance().seconds().add(expected, -14);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,250,"expected = ISOChronology.getInstance().millis().add(expected, -16);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,252,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,253,"long added = test.addTo(TEST_TIME_NOW, -2);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,254,"assertEquals(expected, added);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,257,public void testAddTo3() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,258,long expected = TEST_TIME_NOW;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,259,"expected = ISOChronology.getInstanceUTC().years().add(expected, -2);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,260,"expected = ISOChronology.getInstanceUTC().months().add(expected, -4);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,261,"expected = ISOChronology.getInstanceUTC().weeks().add(expected, -6);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,262,"expected = ISOChronology.getInstanceUTC().days().add(expected, -8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,263,"expected = ISOChronology.getInstanceUTC().hours().add(expected, -10);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,264,"expected = ISOChronology.getInstanceUTC().minutes().add(expected, -12);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,265,"expected = ISOChronology.getInstanceUTC().seconds().add(expected, -14);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,266,"expected = ISOChronology.getInstanceUTC().millis().add(expected, -16);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,268,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,269,"long added = test.addTo(TEST_TIME_NOW, -2);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,270,"assertEquals(expected, added);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,273,public void testAddTo4() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,274,long expected = TEST_TIME_NOW;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,275,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,276,"long added = test.addTo(TEST_TIME_NOW, 0);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,277,"assertEquals(expected, added);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,280,public void testAddTo5() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,281,long expected = TEST_TIME_NOW + 100L;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,282,TimePeriod test = new TimePeriod(100L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,283,"long added = test.addTo(TEST_TIME_NOW, 1);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,284,"assertEquals(expected, added);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,288,public void testAddToWithChronology1() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,289,long expected = TEST_TIME_NOW;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,290,"expected = ISOChronology.getInstance().years().add(expected, 1);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,291,"expected = ISOChronology.getInstance().months().add(expected, 2);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,292,"expected = ISOChronology.getInstance().weeks().add(expected, 3);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,293,"expected = ISOChronology.getInstance().days().add(expected, 4);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,294,"expected = ISOChronology.getInstance().hours().add(expected, 5);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,295,"expected = ISOChronology.getInstance().minutes().add(expected, 6);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,296,"expected = ISOChronology.getInstance().seconds().add(expected, 7);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,297,"expected = ISOChronology.getInstance().millis().add(expected, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,299,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,300,"long added = test.addTo(TEST_TIME_NOW, 1, ISOChronology.getInstance());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,301,"assertEquals(expected, added);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,304,public void testAddToWithChronology2() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,305,long expected = TEST_TIME_NOW;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,306,"expected = ISOChronology.getInstance().years().add(expected, -2);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,307,"expected = ISOChronology.getInstance().months().add(expected, -4);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,308,"expected = ISOChronology.getInstance().weeks().add(expected, -6);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,309,"expected = ISOChronology.getInstance().days().add(expected, -8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,310,"expected = ISOChronology.getInstance().hours().add(expected, -10);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,311,"expected = ISOChronology.getInstance().minutes().add(expected, -12);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,312,"expected = ISOChronology.getInstance().seconds().add(expected, -14);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,313,"expected = ISOChronology.getInstance().millis().add(expected, -16);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,315,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,316,"long added = test.addTo(TEST_TIME_NOW, -2, ISOChronology.getInstance());  // local specified so use it"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,317,"assertEquals(expected, added);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,320,public void testAddToWithChronology3() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,321,long expected = TEST_TIME_NOW;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,322,"expected = ISOChronology.getInstanceUTC().years().add(expected, -2);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,323,"expected = ISOChronology.getInstanceUTC().months().add(expected, -4);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,324,"expected = ISOChronology.getInstanceUTC().weeks().add(expected, -6);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,325,"expected = ISOChronology.getInstanceUTC().days().add(expected, -8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,326,"expected = ISOChronology.getInstanceUTC().hours().add(expected, -10);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,327,"expected = ISOChronology.getInstanceUTC().minutes().add(expected, -12);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,328,"expected = ISOChronology.getInstanceUTC().seconds().add(expected, -14);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,329,"expected = ISOChronology.getInstanceUTC().millis().add(expected, -16);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,331,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,332,"long added = test.addTo(TEST_TIME_NOW, -2, null);  // no chrono specified so drop back to duration (UTC)"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,333,"assertEquals(expected, added);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,337,public void testAddToRI1() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,338,long expected = TEST_TIME_NOW;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,339,"expected = ISOChronology.getInstance().years().add(expected, 1);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,340,"expected = ISOChronology.getInstance().months().add(expected, 2);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,341,"expected = ISOChronology.getInstance().weeks().add(expected, 3);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,342,"expected = ISOChronology.getInstance().days().add(expected, 4);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,343,"expected = ISOChronology.getInstance().hours().add(expected, 5);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,344,"expected = ISOChronology.getInstance().minutes().add(expected, 6);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,345,"expected = ISOChronology.getInstance().seconds().add(expected, 7);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,346,"expected = ISOChronology.getInstance().millis().add(expected, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,348,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,349,"Instant added = test.addTo(new Instant(), 1);  // Instant has no time zone, uses duration's zone (local)"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,350,"assertEquals(expected, added.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,353,public void testAddToRI2() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,354,long expected = TEST_TIME_NOW;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,355,"expected = ISOChronology.getInstanceUTC().years().add(expected, -2);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,356,"expected = ISOChronology.getInstanceUTC().months().add(expected, -4);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,357,"expected = ISOChronology.getInstanceUTC().weeks().add(expected, -6);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,358,"expected = ISOChronology.getInstanceUTC().days().add(expected, -8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,359,"expected = ISOChronology.getInstanceUTC().hours().add(expected, -10);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,360,"expected = ISOChronology.getInstanceUTC().minutes().add(expected, -12);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,361,"expected = ISOChronology.getInstanceUTC().seconds().add(expected, -14);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,362,"expected = ISOChronology.getInstanceUTC().millis().add(expected, -16);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,364,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,365,"Instant added = test.addTo(new Instant(), -2);  // Instant has no time zone, uses duration's zone (UTC)"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,366,"assertEquals(expected, added.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,369,public void testAddToRI3() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,370,long expected = TEST_TIME_NOW;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,371,"expected = ISOChronology.getInstance().years().add(expected, -2);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,372,"expected = ISOChronology.getInstance().months().add(expected, -4);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,373,"expected = ISOChronology.getInstance().weeks().add(expected, -6);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,374,"expected = ISOChronology.getInstance().days().add(expected, -8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,375,"expected = ISOChronology.getInstance().hours().add(expected, -10);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,376,"expected = ISOChronology.getInstance().minutes().add(expected, -12);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,377,"expected = ISOChronology.getInstance().seconds().add(expected, -14);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,378,"expected = ISOChronology.getInstance().millis().add(expected, -16);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,380,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,381,"Instant added = test.addTo(new DateTime(), -2);  // DateTime has local time zone"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,382,"assertEquals(expected, added.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,385,public void testAddToRI4() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,386,long expected = TEST_TIME_NOW;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,387,"expected = ISOChronology.getInstanceUTC().years().add(expected, -2);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,388,"expected = ISOChronology.getInstanceUTC().months().add(expected, -4);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,389,"expected = ISOChronology.getInstanceUTC().weeks().add(expected, -6);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,390,"expected = ISOChronology.getInstanceUTC().days().add(expected, -8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,391,"expected = ISOChronology.getInstanceUTC().hours().add(expected, -10);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,392,"expected = ISOChronology.getInstanceUTC().minutes().add(expected, -12);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,393,"expected = ISOChronology.getInstanceUTC().seconds().add(expected, -14);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,394,"expected = ISOChronology.getInstanceUTC().millis().add(expected, -16);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,396,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,397,"Instant added = test.addTo(null, -2);  // null has no time zone, uses duration's zone (UTC)"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,398,"assertEquals(expected, added.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,402,public void testAddIntoRWI1() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,403,long expected = TEST_TIME_NOW;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,404,"expected = ISOChronology.getInstance().years().add(expected, 1);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,405,"expected = ISOChronology.getInstance().months().add(expected, 2);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,406,"expected = ISOChronology.getInstance().weeks().add(expected, 3);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,407,"expected = ISOChronology.getInstance().days().add(expected, 4);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,408,"expected = ISOChronology.getInstance().hours().add(expected, 5);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,409,"expected = ISOChronology.getInstance().minutes().add(expected, 6);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,410,"expected = ISOChronology.getInstance().seconds().add(expected, 7);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,411,"expected = ISOChronology.getInstance().millis().add(expected, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,413,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,414,MutableDateTime mdt = new MutableDateTime();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,415,"test.addInto(mdt, 1);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,416,"assertEquals(expected, mdt.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,419,public void testAddIntoRWI2() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,420,long expected = TEST_TIME_NOW;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,421,"expected = ISOChronology.getInstance().years().add(expected, -2);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,422,"expected = ISOChronology.getInstance().months().add(expected, -4);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,423,"expected = ISOChronology.getInstance().weeks().add(expected, -6);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,424,"expected = ISOChronology.getInstance().days().add(expected, -8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,425,"expected = ISOChronology.getInstance().hours().add(expected, -10);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,426,"expected = ISOChronology.getInstance().minutes().add(expected, -12);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,427,"expected = ISOChronology.getInstance().seconds().add(expected, -14);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,428,"expected = ISOChronology.getInstance().millis().add(expected, -16);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,430,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType(ISOChronology.getInstanceUTC()));"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,431,MutableDateTime mdt = new MutableDateTime();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,432,"test.addInto(mdt, -2);  // MutableDateTime has a chronology, use it"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,433,"assertEquals(expected, mdt.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,436,public void testAddIntoRWI3() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,437,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,438,try {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,439,"test.addInto(null, 1);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,440,fail();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,441,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,445,public void testToString() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,446,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,447,"assertEquals(""P1Y2M3W4DT5H6M7.008S"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,449,"test = new TimePeriod(0, 0, 0, 0, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,450,"assertEquals(""PT0S"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,452,test = new TimePeriod(12345L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,453,"assertEquals(""PT12.345S"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,457,public void testToTimePeriod() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,458,TimePeriod test = new TimePeriod(123L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,459,TimePeriod result = test.toTimePeriod();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,460,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,463,public void testToMutableTimePeriod() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,464,TimePeriod test = new TimePeriod(123L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,465,MutableTimePeriod result = test.toMutableTimePeriod();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,466,"assertEquals(test, result);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,470,public void testToDurationMillis() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,471,TimePeriod test = new TimePeriod(123L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,472,"assertEquals(123L, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,474,"test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,475,try {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,476,test.toDurationMillis();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,477,fail();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,478,} catch (IllegalStateException ex) {}
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,481,public void testToDuration() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,482,TimePeriod test = new TimePeriod(123L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,483,"assertEquals(new Duration(123L), test.toDuration());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,485,"test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,486,try {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,487,test.toDuration();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,488,fail();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,489,} catch (IllegalStateException ex) {}
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,493,public void testWithDurationTypeRetainDuration1() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,494,TimePeriod test = new TimePeriod(123L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,495,TimePeriod result = test.withDurationTypeRetainDuration(DurationType.getAllType());
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,496,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,499,public void testWithDurationTypeRetainDuration2() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,500,TimePeriod test = new TimePeriod(3123L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,501,TimePeriod result = test.withDurationTypeRetainDuration(DurationType.getDayHourType());
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,502,"assertEquals(3, result.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,503,"assertEquals(123, result.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,504,"assertEquals(3123L, result.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,505,"assertEquals(DurationType.getDayHourType(), result.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,508,public void testWithDurationTypeRetainDuration3() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,509,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,510,try {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,511,test.withDurationTypeRetainDuration(DurationType.getDayHourType());
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,512,fail();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,513,} catch (IllegalStateException ex) {}
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,516,public void testWithDurationTypeRetainDuration4() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,517,TimePeriod test = new TimePeriod(3123L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,518,TimePeriod result = test.withDurationTypeRetainDuration(null);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,519,"assertEquals(3, result.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,520,"assertEquals(123, result.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,521,"assertEquals(3123L, result.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,522,"assertEquals(DurationType.getAllType(), result.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,526,public void testWithDurationType1() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,527,TimePeriod test = new TimePeriod(123L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,528,TimePeriod result = test.withDurationType(DurationType.getAllType());
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,529,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,532,public void testWithDurationType2() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,533,TimePeriod test = new TimePeriod(3123L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,534,TimePeriod result = test.withDurationType(DurationType.getDayHourType());
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,535,"assertEquals(3, result.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,536,"assertEquals(123, result.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,537,"assertEquals(3123L, result.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,538,"assertEquals(DurationType.getDayHourType(), result.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,541,public void testWithDurationType3() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,542,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,543,try {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,544,test.withDurationType(DurationType.getDayHourType());
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,545,fail();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,546,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,549,public void testWithDurationType4() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,550,TimePeriod test = new TimePeriod(3123L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,551,TimePeriod result = test.withDurationType(null);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,552,"assertEquals(3, result.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,553,"assertEquals(123, result.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,554,"assertEquals(3123L, result.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,555,"assertEquals(DurationType.getAllType(), result.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,558,public void testWithDurationType5() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,559,"TimePeriod test = new TimePeriod(1, 2, 0, 4, 5, 6, 7, 8, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,560,TimePeriod result = test.withDurationType(DurationType.getYearMonthType());
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,561,"assertEquals(DurationType.getYearMonthType(), result.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,562,"assertEquals(1, result.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,563,"assertEquals(2, result.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,564,"assertEquals(0, result.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,565,"assertEquals(4, result.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,566,"assertEquals(5, result.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,567,"assertEquals(6, result.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,568,"assertEquals(7, result.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,569,"assertEquals(8, result.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,573,public void testWithFieldsNormalized1() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,574,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 61, 8, DurationType.getPreciseAllType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,575,TimePeriod result = test.withFieldsNormalized();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,576,"assertEquals(1, result.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,577,"assertEquals(2, result.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,578,"assertEquals(3, result.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,579,"assertEquals(4, result.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,580,"assertEquals(5, result.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,581,"assertEquals(7, result.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,582,"assertEquals(1, result.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,583,"assertEquals(8, result.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,586,public void testWithFieldsNormalized2() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,587,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 61, 8, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,588,try {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,589,test.withFieldsNormalized();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,590,fail();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,591,} catch (IllegalStateException ex) {}
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,595,public void testImmutable() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,596,MockChangeDuration test = new MockChangeDuration(111L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,597,test.testSetDuration_RD();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,598,"assertEquals(111L, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,600,test = new MockChangeDuration(111L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,601,test.testSetDuration_ints();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,602,"assertEquals(111L, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,604,test = new MockChangeDuration(111L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,605,test.testSetTotalMillis_1();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,606,"assertEquals(111L, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,608,test = new MockChangeDuration(111L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,609,test.testSetTotalMillis_2();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,610,"assertEquals(111L, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,612,test = new MockChangeDuration(111L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,613,test.testSetYears();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,614,"assertEquals(111L, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,616,test = new MockChangeDuration(111L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,617,test.testSetMonths();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,618,"assertEquals(111L, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,620,test = new MockChangeDuration(111L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,621,test.testSetWeeks();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,622,"assertEquals(111L, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,624,test = new MockChangeDuration(111L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,625,test.testSetDays();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,626,"assertEquals(111L, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,628,test = new MockChangeDuration(111L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,629,test.testSetHours();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,630,"assertEquals(111L, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,632,test = new MockChangeDuration(111L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,633,test.testSetMinutes();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,634,"assertEquals(111L, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,636,test = new MockChangeDuration(111L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,637,test.testSetSeconds();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,638,"assertEquals(111L, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,640,test = new MockChangeDuration(111L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,641,test.testSetMillis();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,642,"assertEquals(111L, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,644,test = new MockChangeDuration(111L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,645,test.testNormalize();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,646,"assertEquals(111L, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,649,static class MockChangeDuration extends TimePeriod {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,650,MockChangeDuration(long duration) {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,651,super(duration);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,653,public void testSetDuration_RD() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,654,setTimePeriod((ReadableDuration) null);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,656,public void testSetDuration_ints() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,657,"setTimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,659,public void testSetTotalMillis_1() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,660,setTimePeriod(123L);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,662,public void testSetTotalMillis_2() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,663,"setTimePeriod(123L, 321L);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,665,public void testSetYears() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,666,setYears(1);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,668,public void testSetMonths() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,669,setMonths(1);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,671,public void testSetWeeks() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,672,setWeeks(1);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,674,public void testSetDays() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,675,setDays(1);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,677,public void testSetHours() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,678,setHours(1);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,680,public void testSetMinutes() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,681,setMinutes(1);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,683,public void testSetSeconds() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,684,setSeconds(1);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,686,public void testSetMillis() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,687,setMillis(1);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,689,public void testNormalize() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,690,super.normalize();
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,67,ublic class TestMillisDuration_Constructors extends TestCase {
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,67,public class TestPeriod_Constructors extends TestCase {
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,108,eturn new TestSuite(TestMillisDuration_Constructors.class);
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,108,return new TestSuite(TestPeriod_Constructors.class);
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,111,ublic TestMillisDuration_Constructors(String name) {
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,111,public TestPeriod_Constructors(String name) {
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,137, Test constructor ()
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,139,ublic void testZERO() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,140,illisDuration test = MillisDuration.ZERO;
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,141,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,142,"ssertEquals(0, test.getYears());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,143,"ssertEquals(0, test.getMonths());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,144,"ssertEquals(0, test.getWeeks());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,145,"ssertEquals(0, test.getDays());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,146,"ssertEquals(0, test.getHours());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,147,"ssertEquals(0, test.getMinutes());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,148,"ssertEquals(0, test.getSeconds());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,149,"ssertEquals(0, test.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,150,"ssertEquals(true, test.isPrecise());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,151,"ssertEquals(0, test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,160,illisDuration test = new MillisDuration(length);
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,161,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,141,TimePeriod test = new TimePeriod(length);
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,142,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,171,"ssertEquals(length, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,152,"assertEquals(length, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,180,"illisDuration test = new MillisDuration(length, null);"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,181,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,161,"TimePeriod test = new TimePeriod(length, null);"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,162,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,191,"ssertEquals(length, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,172,"assertEquals(length, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,199,"illisDuration test = new MillisDuration(length, DurationType.getMillisType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,180,"TimePeriod test = new TimePeriod(length, DurationType.getMillisType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,210,"ssertEquals(length, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,191,"assertEquals(length, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,218,"illisDuration test = new MillisDuration(length, DurationType.getPreciseDayHourType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,219,"ssertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,199,"TimePeriod test = new TimePeriod(length, DurationType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,200,"assertEquals(DurationType.getDayHourType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,229,"ssertEquals(length, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,210,"assertEquals(length, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,237,"illisDuration test = new MillisDuration(length, DurationType.getPreciseAllType().withMillisRemoved());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,238,"ssertEquals(DurationType.getPreciseAllType().withMillisRemoved(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,218,"TimePeriod test = new TimePeriod(length, DurationType.getAllType().withMillisRemoved());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,219,"assertEquals(DurationType.getAllType().withMillisRemoved(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,248,"ssertEquals(length - 8, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,229,"assertEquals(length - 8, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,256,"illisDuration test = new MillisDuration(5, 6, 7, 8);"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,257,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,237,"TimePeriod test = new TimePeriod(5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,238,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,269," * DateTimeConstants.MILLIS_PER_SECOND + 8, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,250,"7 * DateTimeConstants.MILLIS_PER_SECOND + 8, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,277,"illisDuration test = new MillisDuration(1, 2, 3, 4, 5, 6, 7, 8);"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,278,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,258,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,259,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,287,"ssertEquals(true, test.isPrecise());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,288,ssertEquals(
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,289,365L + 2L * 30L + 3L * 7L + 4L) * DateTimeConstants.MILLIS_PER_DAY +
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,290, * DateTimeConstants.MILLIS_PER_HOUR + 6 * DateTimeConstants.MILLIS_PER_MINUTE +
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,291," * DateTimeConstants.MILLIS_PER_SECOND + 8, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,268,"assertEquals(false, test.isPrecise());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,269,try {
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,270,test.toDurationMillis();
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,271,fail();
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,272,} catch (IllegalStateException ex) {}
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,299,"illisDuration test = new MillisDuration(1, 2, 3, 4, 5, 6, 7, 8, null);"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,300,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,280,"TimePeriod test = new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, null);"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,281,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,309,"ssertEquals(true, test.isPrecise());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,310,ssertEquals(
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,311,365L + 2L * 30L + 3L * 7L + 4L) * DateTimeConstants.MILLIS_PER_DAY +
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,312, * DateTimeConstants.MILLIS_PER_HOUR + 6 * DateTimeConstants.MILLIS_PER_MINUTE +
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,313," * DateTimeConstants.MILLIS_PER_SECOND + 8, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,290,"assertEquals(false, test.isPrecise());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,291,try {
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,292,test.toDurationMillis();
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,293,fail();
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,294,} catch (IllegalStateException ex) {}
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,317,"illisDuration test = new MillisDuration(0, 0, 0, 0, 5, 6, 7, 8, DurationType.getPreciseDayHourType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,318,"ssertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,298,"TimePeriod test = new TimePeriod(0, 0, 0, 0, 5, 6, 7, 8, DurationType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,299,"assertEquals(DurationType.getDayHourType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,330," * DateTimeConstants.MILLIS_PER_SECOND + 8, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,311,"7 * DateTimeConstants.MILLIS_PER_SECOND + 8, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,335,"ew MillisDuration(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,316,"new TimePeriod(1, 2, 3, 4, 5, 6, 7, 8, DurationType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,344,"illisDuration test = new MillisDuration(dt1.getMillis(), dt2.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,345,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,325,"TimePeriod test = new TimePeriod(dt1.getMillis(), dt2.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,326,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,355,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,336,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,361,"illisDuration test = new MillisDuration(dt1.getMillis(), dt2.getMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,362,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,342,"TimePeriod test = new TimePeriod(dt1.getMillis(), dt2.getMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,343,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,372,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,353,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,379,"illisDuration test = new MillisDuration(dt1.getMillis(), dt2.getMillis(), null);"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,380,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,360,"TimePeriod test = new TimePeriod(dt1.getMillis(), dt2.getMillis(), null);"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,361,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,390,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,371,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,396,"illisDuration test = new MillisDuration(dt1.getMillis(), dt2.getMillis(), DurationType.getPreciseDayHourType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,397,"ssertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,377,"TimePeriod test = new TimePeriod(dt1.getMillis(), dt2.getMillis(), DurationType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,378,"assertEquals(DurationType.getDayHourType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,407,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,388,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,413,"illisDuration test = new MillisDuration(dt1.getMillis(), dt2.getMillis(), DurationType.getPreciseAllType().withMillisRemoved());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,414,"ssertEquals(DurationType.getPreciseAllType().withMillisRemoved(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,394,"TimePeriod test = new TimePeriod(dt1.getMillis(), dt2.getMillis(), DurationType.getAllType().withMillisRemoved());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,395,"assertEquals(DurationType.getAllType().withMillisRemoved(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,424,"ssertEquals(dt2.getMillis() - dt1.getMillis() - 1, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,405,"assertEquals(dt2.getMillis() - dt1.getMillis() - 1, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,431,"illisDuration test = new MillisDuration(dt1, dt2);"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,432,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,412,"TimePeriod test = new TimePeriod(dt1, dt2);"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,413,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,442,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,423,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,448,"illisDuration test = new MillisDuration(dt1, dt2);"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,449,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,429,"TimePeriod test = new TimePeriod(dt1, dt2);"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,430,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,459,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,440,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,465,"illisDuration test = new MillisDuration(dt1, dt2);"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,466,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,446,"TimePeriod test = new TimePeriod(dt1, dt2);"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,447,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,470,"ssertEquals(2, test.getDays());  // one more due to 2004 leap year and fixed 365 day years"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,451,"assertEquals(1, test.getDays());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,476,"ssertEquals(dt2.getMillis() - TEST_TIME_NOW, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,457,"assertEquals(dt2.getMillis() - TEST_TIME_NOW, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,482,"illisDuration test = new MillisDuration(dt1, dt2);"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,483,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,463,"TimePeriod test = new TimePeriod(dt1, dt2);"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,464,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,487,"ssertEquals(-2, test.getDays());  // one more due to 2004 leap year and fixed 365 day years"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,468,"assertEquals(-1, test.getDays());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,493,"ssertEquals(TEST_TIME_NOW - dt1.getMillis(), test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,474,"assertEquals(TEST_TIME_NOW - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,499,"illisDuration test = new MillisDuration(dt1, dt2);"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,500,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,480,"TimePeriod test = new TimePeriod(dt1, dt2);"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,481,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,510,"ssertEquals(0L, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,491,"assertEquals(0L, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,517,"illisDuration test = new MillisDuration(dt1, dt2, null);"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,518,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,498,"TimePeriod test = new TimePeriod(dt1, dt2, null);"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,499,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,528,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,509,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,534,"illisDuration test = new MillisDuration(dt1, dt2, DurationType.getPreciseDayHourType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,535,"ssertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,515,"TimePeriod test = new TimePeriod(dt1, dt2, DurationType.getDayHourType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,516,"assertEquals(DurationType.getDayHourType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,545,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,526,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,551,"illisDuration test = new MillisDuration(dt1, dt2, DurationType.getPreciseAllType().withMillisRemoved());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,552,"ssertEquals(DurationType.getPreciseAllType().withMillisRemoved(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,532,"TimePeriod test = new TimePeriod(dt1, dt2, DurationType.getAllType().withMillisRemoved());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,533,"assertEquals(DurationType.getAllType().withMillisRemoved(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,562,"ssertEquals(dt2.getMillis() - dt1.getMillis() - 1, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,543,"assertEquals(dt2.getMillis() - dt1.getMillis() - 1, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,568,"illisDuration test = new MillisDuration(dt1, dt2, DurationType.getPreciseAllType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,569,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,549,"TimePeriod test = new TimePeriod(dt1, dt2, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,550,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,573,"ssertEquals(2, test.getDays());  // one more due to 2004 leap year and fixed 365 day years"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,554,"assertEquals(1, test.getDays());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,579,"ssertEquals(dt2.getMillis() - TEST_TIME_NOW, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,560,"assertEquals(dt2.getMillis() - TEST_TIME_NOW, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,585,"illisDuration test = new MillisDuration(dt1, dt2, DurationType.getPreciseAllType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,586,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,566,"TimePeriod test = new TimePeriod(dt1, dt2, DurationType.getAllType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,567,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,596,"ssertEquals(0L, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,577,"assertEquals(0L, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,604,"illisDuration test = new MillisDuration(""P1Y2M3D"");"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,605,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,585,"TimePeriod test = new TimePeriod(""P1Y2M3D"");"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,586,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,614,"ssertEquals(true, test.isPrecise());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,615,ssertEquals(
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,616,"365L + 2L * 30L + 3L) * DateTimeConstants.MILLIS_PER_DAY, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,595,"assertEquals(false, test.isPrecise());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,596,try {
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,597,test.toDurationMillis();
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,598,fail();
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,599,} catch (IllegalStateException ex) {}
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,620,illisDuration test = new MillisDuration((Object) null);
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,621,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,603,TimePeriod test = new TimePeriod((Object) null);
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,604,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,631,"ssertEquals(0, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,614,"assertEquals(0, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,635,"illisDuration base = new MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getPreciseDayHourType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,636,illisDuration test = new MillisDuration(base);
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,637,"ssertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,618,"TimePeriod test = new TimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getDayHourType()));"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,619,"assertEquals(DurationType.getDayHourType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,648," * DateTimeConstants.MILLIS_PER_SECOND + 4, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,630,"3 * DateTimeConstants.MILLIS_PER_SECOND + 4, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,654,"illisDuration base = new MillisDuration(dt1, dt2);  // AllType and precise"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,655,illisDuration test = new MillisDuration(base);
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,656,"ssertEquals(DurationType.getPreciseAllType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,636,"TimePeriod base = new TimePeriod(dt1, dt2);  // AllType and precise"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,637,TimePeriod test = new TimePeriod(base);
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,638,"assertEquals(DurationType.getAllType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,666,"ssertEquals(dt2.getMillis() - dt1.getMillis(), test.getTotalMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,669,ublic void testConstructor_Object5() throws Throwable {
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,670,"illisDuration base = new MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getDayHourType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,671,ry {
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,672,ew MillisDuration(base);
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,673,ail();
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,674, catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,648,"assertEquals(dt2.getMillis() - dt1.getMillis(), test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,682,"illisDuration test = new MillisDuration(""P1Y2M3D"", DurationType.getPreciseYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,683,"ssertEquals(DurationType.getPreciseYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,656,"TimePeriod test = new TimePeriod(""P1Y2M3D"", DurationType.getYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,657,"assertEquals(DurationType.getYearMonthType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,692,"ssertEquals(true, test.isPrecise());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,693,ssertEquals(
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,694,"365L + 2L * 30L + 3L) * DateTimeConstants.MILLIS_PER_DAY, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,666,"assertEquals(false, test.isPrecise());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,667,try {
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,668,test.toDurationMillis();
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,669,fail();
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,670,} catch (IllegalStateException ex) {}
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,698,"illisDuration test = new MillisDuration((Object) null, DurationType.getPreciseYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,699,"ssertEquals(DurationType.getPreciseYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,674,"TimePeriod test = new TimePeriod((Object) null, DurationType.getYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,675,"assertEquals(DurationType.getYearMonthType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,709,"ssertEquals(0, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,685,"assertEquals(0, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,713,illisDuration test = new MillisDuration(
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,714,"ew MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getPreciseDayHourType()), DurationType.getPreciseYearMonthType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,715,"ssertEquals(DurationType.getPreciseYearMonthType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,689,"TimePeriod test = new TimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getDayHourType()), DurationType.getYearMonthType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,690,"assertEquals(DurationType.getYearMonthType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,726," * DateTimeConstants.MILLIS_PER_SECOND + 4, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,701,"3 * DateTimeConstants.MILLIS_PER_SECOND + 4, test.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,730,"illisDuration test = new MillisDuration(new MillisDuration(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getPreciseDayHourType()), null);"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,731,"ssertEquals(DurationType.getPreciseDayHourType(), test.getDurationType());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,705,"TimePeriod test = new TimePeriod(new TimePeriod(0, 0, 0, 0, 1, 2, 3, 4, DurationType.getDayHourType()), null);"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,706,"assertEquals(DurationType.getDayHourType(), test.getDurationType());"
False,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,742," * DateTimeConstants.MILLIS_PER_SECOND + 4, test.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/TestMillisDuration_Constructors.java,JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java,717,"3 * DateTimeConstants.MILLIS_PER_SECOND + 4, test.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestAll.java,JodaTime/src/test/org/joda/time/convert/TestAll.java,85,suite.addTest(TestReadablePeriodConverter.suite());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,77,import org.joda.time.Duration;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,78,import org.joda.time.ReadableTimePeriod;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,362,private static int DURATION_SIZE = 6;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,368,c = ConverterManager.getInstance().getDurationConverter(new Duration(123L));
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,369,"assertEquals(ReadableDuration.class, c.getSupportedType());"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,392,"ssertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,399,"assertEquals(DURATION_SIZE, ConverterManager.getInstance().getDurationConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,398,"ssertEquals(5, array.length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,405,"assertEquals(DURATION_SIZE, array.length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,404,ublic boolean isPrecise(Object object) {return false;}
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,406,"ublic void setInto(ReadWritableTimePeriod duration, Object object) {}"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,407,"ublic DurationType getDurationType(Object object, boolean tmm) {return null;}"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,414,"ssertEquals(6, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,418,"assertEquals(DURATION_SIZE + 1, ConverterManager.getInstance().getDurationConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,418,"ssertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,422,"assertEquals(DURATION_SIZE, ConverterManager.getInstance().getDurationConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,423,ublic boolean isPrecise(Object object) {return false;}
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,425,"ublic void setInto(ReadWritableTimePeriod duration, Object object) {}"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,426,"ublic DurationType getDurationType(Object object, boolean tmm) {return null;}"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,433,"ssertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,434,"assertEquals(DURATION_SIZE, ConverterManager.getInstance().getDurationConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,437,"ssertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,438,"assertEquals(DURATION_SIZE, ConverterManager.getInstance().getDurationConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,443,"ssertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,444,"assertEquals(DURATION_SIZE, ConverterManager.getInstance().getDurationConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,458,"ssertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,459,"assertEquals(DURATION_SIZE, ConverterManager.getInstance().getDurationConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,466,"ssertEquals(4, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,467,"assertEquals(DURATION_SIZE - 1, ConverterManager.getInstance().getDurationConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,470,"ssertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,471,"assertEquals(DURATION_SIZE, ConverterManager.getInstance().getDurationConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,475,ublic boolean isPrecise(Object object) {return false;}
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,477,"ublic void setInto(ReadWritableTimePeriod duration, Object object) {}"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,478,"ublic DurationType getDurationType(Object object, boolean tmm) {return null;}"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,483,"ssertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,481,"assertEquals(DURATION_SIZE, ConverterManager.getInstance().getDurationConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,489,"ssertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,487,"assertEquals(DURATION_SIZE, ConverterManager.getInstance().getDurationConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,504,"ssertEquals(5, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,502,"assertEquals(DURATION_SIZE, ConverterManager.getInstance().getDurationConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,507,private static int PERIOD_SIZE = 5;
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,509,public void testGetTimePeriodConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,510,TimePeriodConverter c = ConverterManager.getInstance().getTimePeriodConverter(new TimePeriod(DurationType.getMillisType()));
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,511,"assertEquals(ReadableTimePeriod.class, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,513,c = ConverterManager.getInstance().getTimePeriodConverter(new Duration(123L));
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,514,"assertEquals(ReadableDuration.class, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,516,"c = ConverterManager.getInstance().getTimePeriodConverter(new Interval(0L, 1000L));"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,517,"assertEquals(ReadableInterval.class, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,519,"c = ConverterManager.getInstance().getTimePeriodConverter("""");"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,520,"assertEquals(String.class, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,522,c = ConverterManager.getInstance().getTimePeriodConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,523,"assertEquals(null, c.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,525,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,526,ConverterManager.getInstance().getTimePeriodConverter(Boolean.TRUE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,527,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,528,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,531,public void testGetTimePeriodConverterRemovedNull() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,532,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,533,ConverterManager.getInstance().removeTimePeriodConverter(NullConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,534,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,535,ConverterManager.getInstance().getTimePeriodConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,536,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,537,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,538,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,539,ConverterManager.getInstance().addTimePeriodConverter(NullConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,541,"assertEquals(PERIOD_SIZE, ConverterManager.getInstance().getTimePeriodConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,545,public void testGetTimePeriodConverters() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,546,TimePeriodConverter[] array = ConverterManager.getInstance().getTimePeriodConverters();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,547,"assertEquals(PERIOD_SIZE, array.length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,551,public void testAddTimePeriodConverter1() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,552,TimePeriodConverter c = new TimePeriodConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,553,"public void setInto(ReadWritableTimePeriod duration, Object object) {}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,554,"public DurationType getDurationType(Object object, boolean tmm) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,555,public Class getSupportedType() {return Boolean.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,557,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,558,TimePeriodConverter removed = ConverterManager.getInstance().addTimePeriodConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,559,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,560,"assertEquals(Boolean.class, ConverterManager.getInstance().getTimePeriodConverter(Boolean.TRUE).getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,561,"assertEquals(PERIOD_SIZE + 1, ConverterManager.getInstance().getTimePeriodConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,562,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,563,ConverterManager.getInstance().removeTimePeriodConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,565,"assertEquals(PERIOD_SIZE, ConverterManager.getInstance().getTimePeriodConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,568,public void testAddTimePeriodConverter2() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,569,TimePeriodConverter c = new TimePeriodConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,570,"public void setInto(ReadWritableTimePeriod duration, Object object) {}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,571,"public DurationType getDurationType(Object object, boolean tmm) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,572,public Class getSupportedType() {return String.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,574,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,575,TimePeriodConverter removed = ConverterManager.getInstance().addTimePeriodConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,576,"assertEquals(StringConverter.INSTANCE, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,577,"assertEquals(String.class, ConverterManager.getInstance().getTimePeriodConverter("""").getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,578,"assertEquals(PERIOD_SIZE, ConverterManager.getInstance().getTimePeriodConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,579,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,580,ConverterManager.getInstance().addTimePeriodConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,582,"assertEquals(PERIOD_SIZE, ConverterManager.getInstance().getTimePeriodConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,585,public void testAddTimePeriodConverter3() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,586,TimePeriodConverter removed = ConverterManager.getInstance().addTimePeriodConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,587,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,588,"assertEquals(PERIOD_SIZE, ConverterManager.getInstance().getTimePeriodConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,591,public void testAddTimePeriodConverterSecurity() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,592,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,593,Policy.setPolicy(RESTRICT);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,594,System.setSecurityManager(new SecurityManager());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,595,ConverterManager.getInstance().addTimePeriodConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,596,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,597,} catch (SecurityException ex) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,598,// ok
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,599,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,600,System.setSecurityManager(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,601,Policy.setPolicy(ALLOW);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,603,"assertEquals(PERIOD_SIZE, ConverterManager.getInstance().getTimePeriodConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,607,public void testRemoveTimePeriodConverter1() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,608,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,609,TimePeriodConverter removed = ConverterManager.getInstance().removeTimePeriodConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,610,"assertEquals(StringConverter.INSTANCE, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,611,"assertEquals(PERIOD_SIZE - 1, ConverterManager.getInstance().getTimePeriodConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,612,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,613,ConverterManager.getInstance().addTimePeriodConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,615,"assertEquals(PERIOD_SIZE, ConverterManager.getInstance().getTimePeriodConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,618,public void testRemoveTimePeriodConverter2() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,619,TimePeriodConverter c = new TimePeriodConverter() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,620,"public void setInto(ReadWritableTimePeriod duration, Object object) {}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,621,"public DurationType getDurationType(Object object, boolean tmm) {return null;}"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,622,public Class getSupportedType() {return Boolean.class;}
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,624,TimePeriodConverter removed = ConverterManager.getInstance().removeTimePeriodConverter(c);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,625,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,626,"assertEquals(PERIOD_SIZE, ConverterManager.getInstance().getTimePeriodConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,629,public void testRemoveTimePeriodConverter3() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,630,TimePeriodConverter removed = ConverterManager.getInstance().removeTimePeriodConverter(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,631,"assertEquals(null, removed);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,632,"assertEquals(PERIOD_SIZE, ConverterManager.getInstance().getTimePeriodConverters().length);"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,635,public void testRemoveTimePeriodConverterSecurity() {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,636,try {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,637,Policy.setPolicy(RESTRICT);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,638,System.setSecurityManager(new SecurityManager());
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,639,ConverterManager.getInstance().removeTimePeriodConverter(StringConverter.INSTANCE);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,640,fail();
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,641,} catch (SecurityException ex) {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,642,// ok
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,643,} finally {
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,644,System.setSecurityManager(null);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,645,Policy.setPolicy(ALLOW);
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,647,"assertEquals(PERIOD_SIZE, ConverterManager.getInstance().getTimePeriodConverters().length);"
False,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,631,"ssertEquals(""ConverterManager[6 instant,5 duration,2 interval]"", ConverterManager.getInstance().toString());"
True,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,JodaTime/src/test/org/joda/time/convert/TestConverterManager.java,774,"assertEquals(""ConverterManager[6 instant,6 duration,5 period,2 interval]"", ConverterManager.getInstance().toString());"
False,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,161,ublic void testIsPrecise_Object() throws Exception {
False,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,162,"ssertEquals(true, LongConverter.INSTANCE.isPrecise(new Long(123L)));"
False,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,168,"ssertEquals(123L, m.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,165,"assertEquals(123L, m.toDurationMillis());"
False,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,178,ublic void testIsPrecise_Object() throws Exception {
False,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,179,"ssertEquals(true, NullConverter.INSTANCE.isPrecise(null));"
False,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,185,"ssertEquals(0L, m.getTotalMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,182,"assertEquals(0L, m.toDurationMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,64,import org.joda.time.DateTimeConstants;
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,65,mport org.joda.time.TimePeriod;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,66,import org.joda.time.Duration;
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,67,mport org.joda.time.MillisDuration;
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,124,"ssertEquals(123L, ReadableDurationConverter.INSTANCE.getDurationMillis(new TimePeriod(123L)));"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,125,ry {
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,126,"eadableDurationConverter.INSTANCE.getDurationMillis(new TimePeriod(1, 2, 0, 1, 0, 0, 0, 0));"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,127,ail();
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,128, catch (IllegalStateException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,124,"assertEquals(123L, ReadableDurationConverter.INSTANCE.getDurationMillis(new Duration(123L)));"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,132,"ssertEquals(DurationType.getMillisType(),"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,133,eadableDurationConverter.INSTANCE.getDurationType(
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,134,"ew TimePeriod(123L, DurationType.getMillisType()), false));"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,135,"ssertEquals(DurationType.getAllType(),"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,136,eadableDurationConverter.INSTANCE.getDurationType(
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,137,"ew TimePeriod(1, 2, 0, 1, 0, 0, 0, 0), false));"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,139,eadableDurationConverter.INSTANCE.getDurationType(
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,140,"ew MillisDuration(1, 2, 0, 1, 0, 0, 0, 0), true));"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,143,ublic void testIsPrecise_Object() throws Exception {
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,144,"ssertEquals(true, ReadableDurationConverter.INSTANCE.isPrecise(new TimePeriod(123L)));"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,145,"ssertEquals(false, ReadableDurationConverter.INSTANCE.isPrecise(new TimePeriod(1, 2, 0, 1, 0, 0, 0, 0)));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,130,"ReadableDurationConverter.INSTANCE.getDurationType(new Duration(123L), false));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,131,"assertEquals(DurationType.getPreciseAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,132,"ReadableDurationConverter.INSTANCE.getDurationType(new Duration(123L), true));"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,150,"eadableDurationConverter.INSTANCE.setInto(m, new TimePeriod(1, 2, 0, 3, 0, 0, 0, 0));"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,151,"ssertEquals(1, m.getYears());"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,152,"ssertEquals(2, m.getMonths());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,137,"ReadableDurationConverter.INSTANCE.setInto(m, new Duration("
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,138,3L * DateTimeConstants.MILLIS_PER_DAY +
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,139,4L * DateTimeConstants.MILLIS_PER_MINUTE + 5L
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,141,"assertEquals(0, m.getYears());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,142,"assertEquals(0, m.getMonths());"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,156,"ssertEquals(0, m.getMinutes());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,146,"assertEquals(4, m.getMinutes());"
False,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,158,"ssertEquals(0, m.getMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,148,"assertEquals(5, m.getMillis());"
False,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,124,"nterval i = new Interval(0L, 123L);"
True,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,124,"Interval i = new Interval(100L, 223L);"
False,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,129,"nterval i = new Interval(0L, 123L);"
True,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,130,"Interval i = new Interval(100L, 223L);"
False,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,136,ublic void testIsPrecise_Object() throws Exception {
False,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,137,"nterval i = new Interval(0L, 123L);"
False,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,138,"ssertEquals(true, ReadableIntervalConverter.INSTANCE.isPrecise(i));"
False,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,142,"nterval i = new Interval(0L, 123L);"
True,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java,138,"Interval i = new Interval(100L, 223L);"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,10,* are met:
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,54,package org.joda.time.convert;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,56,import java.lang.reflect.Constructor;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,57,import java.lang.reflect.Field;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,58,import java.lang.reflect.Modifier;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,60,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,61,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,63,import org.joda.time.Chronology;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,64,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,65,import org.joda.time.DurationType;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,66,import org.joda.time.MutableTimePeriod;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,67,import org.joda.time.ReadableTimePeriod;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,68,import org.joda.time.TimePeriod;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,69,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,70,import org.joda.time.chrono.JulianChronology;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,73,* This class is a Junit unit test for ReadableTimePeriodConverter.
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,75,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,77,public class TestReadablePeriodConverter extends TestCase {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,79,private static final DateTimeZone UTC = DateTimeZone.UTC;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,80,"private static final DateTimeZone PARIS = DateTimeZone.getInstance(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,81,private static final Chronology ISO = ISOChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,82,private static final Chronology JULIAN = JulianChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,83,private static final Chronology ISO_PARIS = ISOChronology.getInstance(PARIS);
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,85,private DateTimeZone zone = null;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,87,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,88,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,91,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,92,return new TestSuite(TestReadablePeriodConverter.class);
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,95,public TestReadablePeriodConverter(String name) {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,96,super(name);
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,100,public void testSingleton() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,101,Class cls = ReadableTimePeriodConverter.class;
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,102,"assertEquals(false, Modifier.isPublic(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,103,"assertEquals(false, Modifier.isProtected(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,104,"assertEquals(false, Modifier.isPrivate(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,106,Constructor con = cls.getDeclaredConstructor(null);
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,107,"assertEquals(1, cls.getDeclaredConstructors().length);"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,108,"assertEquals(true, Modifier.isProtected(con.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,110,"Field fld = cls.getDeclaredField(""INSTANCE"");"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,111,"assertEquals(false, Modifier.isPublic(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,112,"assertEquals(false, Modifier.isProtected(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,113,"assertEquals(false, Modifier.isPrivate(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,117,public void testSupportedType() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,118,"assertEquals(ReadableTimePeriod.class, ReadableTimePeriodConverter.INSTANCE.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,122,public void testGetTimePeriodMillis_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,123,"assertEquals(123L, ReadableTimePeriodConverter.INSTANCE.getDurationMillis(new TimePeriod(123L)));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,127,public void testGetDurationType_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,128,"assertEquals(DurationType.getAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,129,"ReadableTimePeriodConverter.INSTANCE.getDurationType(new TimePeriod(123L), false));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,130,"assertEquals(DurationType.getPreciseAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,131,"ReadableTimePeriodConverter.INSTANCE.getDurationType(new TimePeriod(123L), true));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,132,"assertEquals(DurationType.getPreciseAllType(),"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,133,"ReadableTimePeriodConverter.INSTANCE.getDurationType(new TimePeriod(123L, DurationType.getAllType()), true));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,134,"assertEquals(DurationType.getPreciseYearDayType(),"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,135,"ReadableTimePeriodConverter.INSTANCE.getDurationType(new TimePeriod(123L, DurationType.getPreciseYearDayType()), true));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,138,public void testSetInto_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,139,MutableTimePeriod m = new MutableTimePeriod(DurationType.getYearMonthType());
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,140,"ReadableTimePeriodConverter.INSTANCE.setInto(m, new TimePeriod(0, 0, 0, 3, 0, 4, 0, 5));"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,141,"assertEquals(0, m.getYears());"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,142,"assertEquals(0, m.getMonths());"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,143,"assertEquals(0, m.getWeeks());"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,144,"assertEquals(3, m.getDays());"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,145,"assertEquals(0, m.getHours());"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,146,"assertEquals(4, m.getMinutes());"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,147,"assertEquals(0, m.getSeconds());"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,148,"assertEquals(5, m.getMillis());"
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,152,public void testToString() {
True,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java,153,"assertEquals(""Converter[org.joda.time.ReadableTimePeriod]"", ReadableTimePeriodConverter.INSTANCE.toString());"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,66,import org.joda.time.DateTimeConstants;
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,317,ry {
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,318,"tringConverter.INSTANCE.getDurationMillis(""P2Y6M9D"");"
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,319,ail();
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,320, catch (UnsupportedOperationException ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,318,"long millis = StringConverter.INSTANCE.getDurationMillis(""P2Y6M9D"");"
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,319,long len = (2L * 365L + 6L * 30L + 9L) * DateTimeConstants.MILLIS_PER_DAY;
True,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,320,"assertEquals(len, millis);"
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,330,ublic void testIsPrecise_Object() throws Exception {
False,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,JodaTime/src/test/org/joda/time/convert/TestStringConverter.java,331,"ssertEquals(false, StringConverter.INSTANCE.isPrecise(""P2Y6M9D""));"
