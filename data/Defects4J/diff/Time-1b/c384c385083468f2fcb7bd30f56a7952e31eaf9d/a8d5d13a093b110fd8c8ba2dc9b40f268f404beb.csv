is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,814, @since 2.0
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,813,* @since 2.3
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,817,inal Calendar calendar = Calendar.getInstance(timeZone);
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,818,alendar.clear();
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,819,"alendar.set(getYear(), getMonthOfYear() - 1, getDayOfMonth(),"
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,820,"etHourOfDay(), getMinuteOfHour(), getSecondOfMinute());"
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,821,ate date = calendar.getTime();
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,822,ate.setTime(date.getTime() + getMillisOfSecond());
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,824,"eturn correctDstTransition(date, timeZone);"
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,816,final Calendar calendar = Calendar.getInstance(timeZone);
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,817,calendar.clear();
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,818,"calendar.set(getYear(), getMonthOfYear() - 1, getDayOfMonth(),"
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,819,"getHourOfDay(), getMinuteOfHour(), getSecondOfMinute());"
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,820,Date date = calendar.getTime();
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,821,date.setTime(date.getTime() + getMillisOfSecond());
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,822,"return correctDstTransition(date, timeZone);"
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,844,alendar calendar = Calendar.getInstance(timeZone);
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,845,alendar.setTime(date);
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,846,ocalDateTime check = LocalDateTime.fromCalendarFields(calendar);
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,847,f (check.isBefore(this)) {
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,848,/ DST gap
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,849,/ move forward in units of one minute until equal/after
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,850,hile (check.isBefore(this)) {
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,851,alendar.setTimeInMillis(calendar.getTimeInMillis() + 60000);
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,852,heck = LocalDateTime.fromCalendarFields(calendar);
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,854,/ move back in units of one second until date wrong
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,855,hile (check.isBefore(this) == false) {
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,856,alendar.setTimeInMillis(calendar.getTimeInMillis() - 1000);
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,857,heck = LocalDateTime.fromCalendarFields(calendar);
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,859,alendar.setTimeInMillis(calendar.getTimeInMillis() + 1000);
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,860, else if (check.equals(this)) {
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,861,/ check for DST overlap
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,862,inal Calendar earlier = Calendar.getInstance(timeZone);
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,863,arlier.setTimeInMillis(calendar.getTimeInMillis() - timeZone.getDSTSavings());
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,864,heck = LocalDateTime.fromCalendarFields(earlier);
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,865,f (check.equals(this)) {
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,866,alendar = earlier;
False,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,869,eturn calendar.getTime();
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,841,Calendar calendar = Calendar.getInstance(timeZone);
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,842,calendar.setTime(date);
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,843,LocalDateTime check = LocalDateTime.fromCalendarFields(calendar);
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,844,if (check.isBefore(this)) {
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,845,// DST gap
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,846,// move forward in units of one minute until equal/after
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,847,while (check.isBefore(this)) {
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,848,calendar.setTimeInMillis(calendar.getTimeInMillis() + 60000);
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,849,check = LocalDateTime.fromCalendarFields(calendar);
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,851,// move back in units of one second until date wrong
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,852,while (check.isBefore(this) == false) {
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,853,calendar.setTimeInMillis(calendar.getTimeInMillis() - 1000);
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,854,check = LocalDateTime.fromCalendarFields(calendar);
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,856,calendar.setTimeInMillis(calendar.getTimeInMillis() + 1000);
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,857,} else if (check.equals(this)) {
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,858,// check for DST overlap
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,859,final Calendar earlier = Calendar.getInstance(timeZone);
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,860,earlier.setTimeInMillis(calendar.getTimeInMillis() - timeZone.getDSTSavings());
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,861,check = LocalDateTime.fromCalendarFields(earlier);
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,862,if (check.equals(this)) {
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,863,calendar = earlier;
True,src/main/java/org/joda/time/LocalDateTime.java,src/main/java/org/joda/time/LocalDateTime.java,866,return calendar.getTime();
