is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,56,import java.io.Serializable;
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,63,import org.joda.time.DateTimeZone;
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,73,* Calculations on TimeOfDay are performed using a {@link Chronology}.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,74,* This chronology is set to be in the UTC time zone for all calculations.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,75,* <p>
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,93,ublic final class TimeOfDay implements PartialInstant {
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,98,"public final class TimeOfDay implements PartialInstant, Serializable {"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,100,/** Serialization version */
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,101,private static final long serialVersionUID = 3633353405803318660L;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,104,/ TODO: Is chronology needed here?
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,107,** The fields supported by this partial instant */
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,108,rivate final DateTimeField[] iFields;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,112,/ TODO serialize
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,122,* <p>
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,123,"* The constructor uses the default time zone, resulting in the local time"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,124,"* being initialised. Once the constructor is complete, all further calculations"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,125,* are performed without reference to a timezone (by switching to UTC).
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,134,* <p>
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,135,* The constructor uses the time zone of the chronology specified.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,136,"* Once the constructor is complete, all further calculations are performed"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,137,* without reference to a timezone (by switching to UTC).
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,148,* <p>
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,149,"* The constructor uses the default time zone, resulting in the local time"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,150,"* being initialised. Once the constructor is complete, all further calculations"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,151,* are performed without reference to a timezone (by switching to UTC).
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,162,* <p>
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,163,* The constructor uses the time zone of the chronology specified.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,164,"* Once the constructor is complete, all further calculations are performed"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,165,* without reference to a timezone (by switching to UTC).
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,156,Chronology = chronology;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,157,Fields = initFields(chronology);
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,158,Values = initValues(instant);
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,175,"iValues = initValues(instant, chronology);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,176,iChronology = chronology.withUTC();
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,178,Chronology = chronology;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,179,Fields = initFields(chronology);
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,180,Values = initValues(converter.getInstantMillis(instant));
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,196,"iValues = initValues(converter.getInstantMillis(instant), chronology);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,197,iChronology = chronology.withUTC();
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,207,* <p>
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,208,* The constructor uses the time zone of the chronology specified.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,209,"* Once the constructor is complete, all further calculations are performed"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,210,* without reference to a timezone (by switching to UTC).
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,202,Chronology = chronology;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,203,Fields = initFields(chronology);
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,204,"Values = initValues(converter.getInstantMillis(instant, chronology));"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,223,"iValues = initValues(converter.getInstantMillis(instant, chronology), chronology);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,224,iChronology = chronology.withUTC();
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,230,* <p>
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,231,* The constructor uses the no time zone initialising the fields as provided.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,232,"* Once the constructor is complete, all further calculations"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,233,* are performed without reference to a timezone (by switching to UTC).
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,246,* <p>
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,247,* The constructor uses the time zone of the chronology specified.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,248,"* Once the constructor is complete, all further calculations are performed"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,249,* without reference to a timezone (by switching to UTC).
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,236,Chronology = chronology;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,237,Fields = initFields(chronology);
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,265,iChronology = chronology.withUTC();
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,251,Fields = partial.iFields;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,256, Initialize the array of fields.
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,258, @param chrono  the chronology to use
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,260,rivate DateTimeField[] initFields(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,261,eturn new DateTimeField[] {
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,262,"hrono.hourOfDay(),"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,263,"hrono.minuteOfHour(),"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,264,"hrono.secondOfMinute(),"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,265,"hrono.millisOfSecond(),"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,284,* @param chrono  the chronology to use
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,274,rivate int[] initValues(long instant) {
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,286,"private int[] initValues(long instant, Chronology chrono) {"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,276,"Fields[0].get(instant),"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,277,"Fields[1].get(instant),"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,278,"Fields[2].get(instant),"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,279,"Fields[3].get(instant),"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,288,"chrono.hourOfDay().get(instant),"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,289,"chrono.minuteOfHour().get(instant),"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,290,"chrono.secondOfMinute().get(instant),"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,291,"chrono.millisOfSecond().get(instant),"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,291,eturn iFields[index];
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,303,switch (index) {
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,304,case HOUR_OF_DAY:
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,305,return iChronology.hourOfDay();
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,306,case MINUTE_OF_HOUR:
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,307,return iChronology.minuteOfHour();
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,308,case SECOND_OF_MINUTE:
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,309,return iChronology.secondOfMinute();
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,310,case MILLIS_OF_SECOND:
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,311,return iChronology.millisOfSecond();
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,312,default:
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,313,throw new IllegalArgumentException();
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,313,eturn (DateTimeField[]) iFields.clone();
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,336,return new DateTimeField[] {
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,337,"iChronology.hourOfDay(),"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,338,"iChronology.minuteOfHour(),"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,339,"iChronology.secondOfMinute(),"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,340,"iChronology.millisOfSecond(),"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,338,or (int i = 0; i < iFields.length; i++) {
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,339,f (iFields[i] == field) {
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,340,eturn iValues[i];
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,366,if (iChronology.hourOfDay() == field) {
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,367,return getValue(HOUR_OF_DAY);
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,369,if (iChronology.minuteOfHour() == field) {
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,370,return getValue(MINUTE_OF_HOUR);
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,372,if (iChronology.secondOfMinute() == field) {
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,373,return getValue(SECOND_OF_MINUTE);
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,375,if (iChronology.millisOfSecond() == field) {
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,376,return getValue(MILLIS_OF_SECOND);
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,353,or (int i = 0; i < iFields.length; i++) {
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,354,f (iFields[i] == field) {
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,355,eturn true;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,358,eturn false;
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,388,return
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,389,iChronology.hourOfDay() == field ||
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,390,iChronology.minuteOfHour() == field ||
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,391,iChronology.secondOfMinute() == field ||
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,392,iChronology.millisOfSecond() == field;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,372,ublic long resolve(long baseMillis) {
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,406,"public long resolve(long baseMillis, DateTimeZone zone) {"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,407,Chronology chrono = iChronology.withZone(zone);
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,374,or (int i = 0; i < iFields.length; i++) {
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,375,"illis = iFields[i].set(millis, iValues[i]);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,409,"millis = chrono.hourOfDay().set(millis, getValue(HOUR_OF_DAY));"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,410,"millis = chrono.minuteOfHour().set(millis, getValue(MINUTE_OF_HOUR));"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,411,"millis = chrono.secondOfMinute().set(millis, getValue(SECOND_OF_MINUTE));"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,412,"millis = chrono.millisOfSecond().set(millis, getValue(MILLIS_OF_SECOND));"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,492,"rrays.equals(iFields, other.iFields);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,528,iChronology == other.iChronology;
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,505,otal += getField(i).hashCode();
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,542,total += iChronology.hashCode();
