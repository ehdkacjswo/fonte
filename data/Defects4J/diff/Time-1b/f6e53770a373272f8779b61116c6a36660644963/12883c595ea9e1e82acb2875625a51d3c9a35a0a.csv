is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/time/field/TestAll.java,JodaTime/src/test/org/joda/time/field/TestAll.java,45,suite.addTest(TestFieldUtils.suite());
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,2,*  Copyright 2001-2005 Stephen Colebourne
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,4,"*  Licensed under the Apache License, Version 2.0 (the ""License"");"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,5,*  you may not use this file except in compliance with the License.
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,6,*  You may obtain a copy of the License at
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,10,"*  Unless required by applicable law or agreed to in writing, software"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,11,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,12,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,13,*  See the License for the specific language governing permissions and
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,14,*  limitations under the License.
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,16,package org.joda.time.field;
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,18,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,19,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,24,* @author Brian S O'Neill
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,26,public class TestFieldUtils extends TestCase {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,27,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,28,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,31,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,32,return new TestSuite(TestFieldUtils.class);
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,35,public TestFieldUtils(String name) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,36,super(name);
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,39,public void testSafeAddInt() {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,40,"assertEquals(0, FieldUtils.safeAdd(0, 0));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,42,"assertEquals(5, FieldUtils.safeAdd(2, 3));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,43,"assertEquals(-1, FieldUtils.safeAdd(2, -3));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,44,"assertEquals(1, FieldUtils.safeAdd(-2, 3));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,45,"assertEquals(-5, FieldUtils.safeAdd(-2, -3));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,47,"assertEquals(Integer.MAX_VALUE - 1, FieldUtils.safeAdd(Integer.MAX_VALUE, -1));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,48,"assertEquals(Integer.MIN_VALUE + 1, FieldUtils.safeAdd(Integer.MIN_VALUE, 1));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,50,"assertEquals(-1, FieldUtils.safeAdd(Integer.MIN_VALUE, Integer.MAX_VALUE));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,51,"assertEquals(-1, FieldUtils.safeAdd(Integer.MAX_VALUE, Integer.MIN_VALUE));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,53,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,54,"FieldUtils.safeAdd(Integer.MAX_VALUE, 1);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,55,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,56,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,59,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,60,"FieldUtils.safeAdd(Integer.MAX_VALUE, 100);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,61,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,62,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,65,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,66,"FieldUtils.safeAdd(Integer.MAX_VALUE, Integer.MAX_VALUE);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,67,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,68,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,71,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,72,"FieldUtils.safeAdd(Integer.MIN_VALUE, -1);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,73,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,74,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,77,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,78,"FieldUtils.safeAdd(Integer.MIN_VALUE, -100);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,79,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,80,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,83,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,84,"FieldUtils.safeAdd(Integer.MIN_VALUE, Integer.MIN_VALUE);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,85,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,86,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,90,public void testSafeAddLong() {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,91,"assertEquals(0L, FieldUtils.safeAdd(0L, 0L));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,93,"assertEquals(5L, FieldUtils.safeAdd(2L, 3L));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,94,"assertEquals(-1L, FieldUtils.safeAdd(2L, -3L));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,95,"assertEquals(1L, FieldUtils.safeAdd(-2L, 3L));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,96,"assertEquals(-5L, FieldUtils.safeAdd(-2L, -3L));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,98,"assertEquals(Long.MAX_VALUE - 1, FieldUtils.safeAdd(Long.MAX_VALUE, -1L));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,99,"assertEquals(Long.MIN_VALUE + 1, FieldUtils.safeAdd(Long.MIN_VALUE, 1L));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,101,"assertEquals(-1, FieldUtils.safeAdd(Long.MIN_VALUE, Long.MAX_VALUE));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,102,"assertEquals(-1, FieldUtils.safeAdd(Long.MAX_VALUE, Long.MIN_VALUE));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,104,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,105,"FieldUtils.safeAdd(Long.MAX_VALUE, 1L);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,106,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,107,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,110,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,111,"FieldUtils.safeAdd(Long.MAX_VALUE, 100L);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,112,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,113,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,116,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,117,"FieldUtils.safeAdd(Long.MAX_VALUE, Long.MAX_VALUE);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,118,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,119,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,122,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,123,"FieldUtils.safeAdd(Long.MIN_VALUE, -1L);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,124,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,125,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,128,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,129,"FieldUtils.safeAdd(Long.MIN_VALUE, -100L);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,130,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,131,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,134,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,135,"FieldUtils.safeAdd(Long.MIN_VALUE, Long.MIN_VALUE);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,136,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,137,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,141,public void testSafeSubtractLong() {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,142,"assertEquals(0L, FieldUtils.safeSubtract(0L, 0L));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,144,"assertEquals(-1L, FieldUtils.safeSubtract(2L, 3L));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,145,"assertEquals(5L, FieldUtils.safeSubtract(2L, -3L));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,146,"assertEquals(-5L, FieldUtils.safeSubtract(-2L, 3L));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,147,"assertEquals(1L, FieldUtils.safeSubtract(-2L, -3L));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,149,"assertEquals(Long.MAX_VALUE - 1, FieldUtils.safeSubtract(Long.MAX_VALUE, 1L));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,150,"assertEquals(Long.MIN_VALUE + 1, FieldUtils.safeSubtract(Long.MIN_VALUE, -1L));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,152,"assertEquals(0, FieldUtils.safeSubtract(Long.MIN_VALUE, Long.MIN_VALUE));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,153,"assertEquals(0, FieldUtils.safeSubtract(Long.MAX_VALUE, Long.MAX_VALUE));"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,155,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,156,"FieldUtils.safeSubtract(Long.MIN_VALUE, 1L);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,157,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,158,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,161,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,162,"FieldUtils.safeSubtract(Long.MIN_VALUE, 100L);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,163,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,164,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,167,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,168,"FieldUtils.safeSubtract(Long.MIN_VALUE, Long.MAX_VALUE);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,169,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,170,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,173,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,174,"FieldUtils.safeSubtract(Long.MAX_VALUE, -1L);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,175,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,176,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,179,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,180,"FieldUtils.safeSubtract(Long.MAX_VALUE, -100L);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,181,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,182,} catch (ArithmeticException e) {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,185,try {
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,186,"FieldUtils.safeSubtract(Long.MAX_VALUE, Long.MIN_VALUE);"
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,187,fail();
True,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,JodaTime/src/test/org/joda/time/field/TestFieldUtils.java,188,} catch (ArithmeticException e) {
