is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,10,* are met:
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,18,*    distribution.
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,54,package org.joda.test.time;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,56,import junit.framework.Assert;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,57,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,59,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,60,import org.joda.time.MutableDateTime;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,61,import org.joda.time.format.DateTimeParser;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,62,import org.joda.time.format.ISODateTimeFormat;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,65,* Unit test the parsing of ISO format datetimes
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,67,* @author Guy Allard
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,68,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,70,public class TestParseISO extends BulkTest {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,72,private static final int DEFAULT = 99999;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,75,* This is the main class for this test suite.
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,76,* @param args command line arguments.
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,78,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,79,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,83,* TestSuite suite() is a junit required method.
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,84,* @see org.joda.test.time.BulkTest
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,86,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,87,return BulkTest.makeSuite(TestParseISO.class);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,91,* TestConstructors constructor.
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,92,* @param name
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,94,public TestParseISO(String name) {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,95,super(name);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,98,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,99,super.setUp();
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,102,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,103,super.tearDown();
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,107,// Dates
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,109,public void testSpecCompleteDate() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,110,"new DMatcher(""5.2.1.1"", ""1999-10-20"", ""19991020"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,111,"19, 99, 10, 20, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,114,public void testSpecReducedPrecisionCYM() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,115,"new DMatcher(""5.2.1.2"", ""1999-10"", ""199910"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,116,"19, 99, 10, DEFAULT, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,118,public void testSpecReducedPrecisionCY() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,119,"new DMatcher(""5.2.1.2"", ""1999"", ""1999"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,120,"19, 99, DEFAULT, DEFAULT, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,122,public void testSpecReducedPrecisionC() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,123,"new DMatcher(""5.2.1.2"", ""20"", ""20"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,124,"20, DEFAULT, DEFAULT, DEFAULT, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,125,"new DMatcher(""5.2.1.2"", ""19"", ""19"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,126,"19, DEFAULT, DEFAULT, DEFAULT, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,129,public void testSpecTruncatedYMD() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,130,"new DMatcher(""5.2.1.3"", ""85-04-11"", ""850411"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,131,"DEFAULT, 85, 4, 11, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,133,public void testSpecTruncatedYM() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,134,"new DMatcher(""5.2.1.3"", ""-85-04"", ""-8504"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,135,"DEFAULT, 85, 4, DEFAULT, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,137,public void testSpecTruncatedY() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,138,"new DMatcher(""5.2.1.3"", ""-85"", ""-85"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,139,"DEFAULT, 85, DEFAULT, DEFAULT, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,141,public void testSpecTruncatedMD() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,142,"new DMatcher(""5.2.1.3"", ""--04-11"", ""--0411"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,143,"DEFAULT, DEFAULT, 4, 11, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,145,public void testSpecTruncatedM() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,146,"new DMatcher(""5.2.1.3"", ""--04"", ""--04"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,147,"DEFAULT, DEFAULT, 4, DEFAULT, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,149,public void testSpecTruncatedD() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,150,"new DMatcher(""5.2.1.3"", ""---11"", ""---11"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,151,"DEFAULT, DEFAULT, DEFAULT, 11, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,154,public void testSpecExpandedCYMD() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,155,"new DMatcher(""5.2.1.4"", ""+001985-04-11"", ""+0019850411"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,156,"19, 85, 4, 11, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,158,public void testSpecExpandedCYM() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,159,"new DMatcher(""5.2.1.4"", ""+001985-04"", ""+00198504"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,160,"19, 85, 4, DEFAULT, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,162,public void testSpecExpandedCY() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,163,"new DMatcher(""5.2.1.4"", ""+001985"", ""+001985"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,164,"19, 85, DEFAULT, DEFAULT, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,166,public void testSpecExpandedC() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,167,// Not supported - could only tell difference from CY if you knew
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,168,// number of digits representing year
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,169,"//        new DMatcher(""5.2.1.4"", ""+0019"", ""+0019"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,170,"//            19, DEFAULT, DEFAULT, DEFAULT, DEFAULT).assert();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,174,// Ordinal based date
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,176,public void testSpecOrdinalComplete() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,177,"new DMatcher(""5.2.2.1"", ""1985-101"", ""1985101"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,178,"19, 85, 4, 11, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,179,"new DMatcher(""5.2.2.1"", ""1985-021"", ""1985021"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,180,"19, 85, 1, 21, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,181,"new DMatcher(""5.2.2.1"", ""1985-006"", ""1985006"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,182,"19, 85, 1, 6, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,185,public void testSpecOrdinalTruncatedYD() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,186,"new DMatcher(""5.2.2.2"", ""85-101"", ""85101"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,187,"DEFAULT, 85, 4, 11, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,189,public void testSpecOrdinalTruncatedD() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,190,"new DMatcher(""5.2.2.2"", ""-101"", ""-101"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,191,"DEFAULT, DEFAULT, 4, 11, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,194,public void testSpecOrdinalExpandedYD() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,195,"new DMatcher(""5.2.2.3"", ""+001985-101"", ""+001985101"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,196,"19, 85, 4, 11, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,199,// Week based date
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,201,public void testSpecWeekComplete() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,202,"new DMatcher(""5.2.3.1"", ""1985-W15-1"", ""1985W151"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,203,"19, 85, 4, 8, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,204,"new DMatcher(""5.2.3.1"", ""1985-W15-2"", ""1985W152"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,205,"19, 85, 4, 9, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,206,"new DMatcher(""5.2.3.1"", ""1985-W15-3"", ""1985W153"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,207,"19, 85, 4, 10, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,208,"new DMatcher(""5.2.3.1"", ""1985-W15-4"", ""1985W154"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,209,"19, 85, 4, 11, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,210,"new DMatcher(""5.2.3.1"", ""1985-W15-5"", ""1985W155"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,211,"19, 85, 4, 12, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,212,"new DMatcher(""5.2.3.1"", ""1985-W15-6"", ""1985W156"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,213,"19, 85, 4, 13, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,214,"new DMatcher(""5.2.3.1"", ""1985-W15-7"", ""1985W157"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,215,"19, 85, 4, 14, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,218,public void testSpecWeekReducedPrecision() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,219,"// test date is Sunday, which should be left alone"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,220,"new DMatcher(""5.2.3.2"", ""1985-W15"", ""1985W15"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,221,"19, 85, 4, 14, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,224,public void testSpecWeekTruncatedYWD() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,225,"new DMatcher(""5.2.3.2"", ""85-W154"", ""85W154"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,226,"DEFAULT, 85, 4, 11, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,228,public void testSpecWeekTruncatedYW() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,229,"// test date is Sunday, which should be left alone"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,230,"new DMatcher(""5.2.3.2"", ""85-W15"", ""85W15"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,231,"DEFAULT, 85, 4, 14, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,233,public void testSpecWeekTruncatedDWD() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,234,// decade not supported
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,236,public void testSpecWeekTruncatedDW() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,237,// decade not supported
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,239,public void testSpecWeekTruncatedWD() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,240,"new DMatcher(""5.2.3.2"", ""-W154"", ""-W154"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,241,"DEFAULT, DEFAULT, 4, 11, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,243,public void testSpecWeekTruncatedW() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,244,"// test date is Sunday, which should be left alone"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,245,"new DMatcher(""5.2.3.2"", ""-W15"", ""-W15"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,246,"DEFAULT, DEFAULT, 4, 14, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,248,public void testSpecWeekTruncatedD() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,249,"// test date is Sunday 3rd Dec, thus relative Thursday is 30th Nov"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,250,"new DMatcher(""5.2.3.3"", ""-W-4"", ""-W-4"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,251,"DEFAULT, DEFAULT, 11, 30, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,253,public void testSpecWeekExpandedYWD() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,254,"// test date is Sunday 3rd Dec, thus relative Thursday is 30th Nov"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,255,"new DMatcher(""5.2.3.4"", ""+001985-W15-4"", ""+001985W154"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,256,"19, 85, 4, 11, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,260,// Times
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,262,public void testSpecTimeComplete() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,263,"new TMatcher(""5.3.1.1"", ""23:20:50"", ""232050"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,264,"23, 20, 50, 0, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,267,public void testSpecTimeReducedPrecisionHM() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,268,"new TMatcher(""5.3.1.2"", ""23:20"", ""2320"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,269,"23, 20, DEFAULT, DEFAULT, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,271,public void testSpecTimeReducedPrecisionH() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,272,"new TMatcher(""5.3.1.2"", ""23"", ""23"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,273,"23, DEFAULT, DEFAULT, DEFAULT, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,276,public void testSpecTimeFractionalHMS() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,277,"new TMatcher(""5.3.1.3"", ""23:20:50.607"", ""232050.607"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,278,"23, 20, 50, 607, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,279,"new TMatcher(""5.3.1.3"", ""23:20:50,607"", ""232050,607"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,280,"23, 20, 50, 607, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,282,public void testSpecTimeFractionalHM() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,283,"new TMatcher(""5.3.1.3"", ""23:20.4"", ""2320.4"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,284,"23, 20, 24, 0, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,285,"new TMatcher(""5.3.1.3"", ""23:20,4"", ""2320,4"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,286,"23, 20, 24, 0, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,288,public void testSpecTimeFractionalH() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,289,"new TMatcher(""5.3.1.3"", ""23.25"", ""23.25"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,290,"23, 15, 0, 0, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,291,"new TMatcher(""5.3.1.3"", ""23.25"", ""23,25"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,292,"23, 15, 0, 0, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,295,public void testSpecTimeTruncatedMS() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,296,"new TMatcher(""5.3.1.4"", ""-20:50"", ""-2050"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,297,"DEFAULT, 20, 50, 0, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,299,public void testSpecTimeTruncatedM() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,300,"new TMatcher(""5.3.1.4"", ""-20"", ""-20"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,301,"DEFAULT, 20, DEFAULT, DEFAULT, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,303,public void testSpecTimeTruncatedS() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,304,"new TMatcher(""5.3.1.4"", ""--50"", ""--50"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,305,"DEFAULT, DEFAULT, 50, 0, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,307,public void testSpecTimeTruncatedFractionMS() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,308,"new TMatcher(""5.3.1.4"", ""-20:50.607"", ""-2050.607"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,309,"DEFAULT, 20, 50, 607, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,311,public void testSpecTimeTruncatedFractionM() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,312,"new TMatcher(""5.3.1.4"", ""-20.4"", ""-20.4"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,313,"DEFAULT, 20, 24, 0, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,315,public void testSpecTimeTruncatedFractionS() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,316,"new TMatcher(""5.3.1.4"", ""--50.607"", ""--50.607"","
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,317,"DEFAULT, DEFAULT, 50, 607, DEFAULT).run();"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,324,* Perform test.
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,326,protected static abstract class Matcher extends Assert {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,327,"String spec, extended, basic;"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,328,"int century, yearOfCentury, monthOfYear, dayOfMonth, hour, min, sec, milli, zone;"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,329,MutableDateTime dt;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,331,"protected Matcher(String spec, String extended, String basic) {"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,332,this.spec = spec;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,333,this.extended = extended;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,334,this.basic = basic;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,337,protected abstract void run();
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,338,protected void assert() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,339,"String msg = ""\nSpec:   "" + spec + ""\nParsed: "" + extended + ""\nTo:     "" + dt;"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,340,"assertEquals(msg + ""\nCentury: "", century, dt.getCenturyOfEra());"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,341,"assertEquals(msg + ""\nYear: "", yearOfCentury, dt.getYearOfCentury());"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,342,"assertEquals(msg + ""\nMonth: "", monthOfYear, dt.getMonthOfYear());"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,343,"assertEquals(msg + ""\nDay: "", dayOfMonth, dt.getDayOfMonth());"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,344,"assertEquals(msg + ""\nHour: "", hour, dt.getHourOfDay());"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,345,"assertEquals(msg + ""\nMinute: "", min, dt.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,346,"assertEquals(msg + ""\nSecond: "", sec, dt.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,347,"assertEquals(msg + ""\nMilli: "", milli, dt.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,348,DateTimeZone z;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,349,if (zone == DEFAULT) {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,350,z = DateTimeZone.getDefault();
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,351,} else if (zone == 0) {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,352,z = DateTimeZone.UTC;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,353,} else {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,354,"String str = ""0"" + Math.abs(zone) + "":00"";"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,355,str = str.substring(str.length() - 4);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,356,"str = (zone < 0 ? ""-"" : ""+"") + str;"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,357,z = DateTimeZone.getInstance(str);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,359,"assertEquals(msg + ""\nZone: "", z, dt.getDateTimeZone());"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,361,protected void parse(DateTimeParser p) {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,362,"int result = p.parseInto(dt, extended, 0);"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,363,"assertTrue(""\nSpec:   "" + spec + ""\nParsed: "" + extended + ""\nTo:     """
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,364,"+ dt + ""\nParse failed at: "" + ~result,"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,365,result >= 0);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,368,protected static class DTMatcher extends Matcher {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,369,"protected DTMatcher(String spec, String extended, String basic,"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,370,"int century, int yearOfCentury, int monthOfYear, int dayOfMonth,"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,371,"int hour, int min, int sec, int milli, int zone) {"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,372,"super(spec, extended, basic);"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,373,this.century = (century == DEFAULT ? 19 : century);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,374,this.yearOfCentury = (yearOfCentury == DEFAULT ? 72 : yearOfCentury);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,375,this.monthOfYear = (monthOfYear == DEFAULT ? 12 : monthOfYear);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,376,this.dayOfMonth = (dayOfMonth == DEFAULT ? 3 : dayOfMonth);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,377,this.hour = (hour == DEFAULT ? 10 : hour);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,378,this.min = (min == DEFAULT ? 32 : min);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,379,this.sec = (sec == DEFAULT ? 40 : sec);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,380,this.milli = (milli == DEFAULT ? 205 : milli);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,381,this.zone = zone;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,383,protected void run() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,384,"dt = new MutableDateTime(1972, 12, 3, 10, 32, 40, 205);"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,385,parse(ISODateTimeFormat.getInstance().dateTimeParser());
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,386,super.assert();
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,389,protected static class DMatcher extends Matcher {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,390,"protected DMatcher(String spec, String extended, String basic,"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,391,"int century, int yearOfCentury, int monthOfYear, int dayOfMonth, int zone) {"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,392,"super(spec, extended, basic);"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,393,this.century = (century == DEFAULT ? 19 : century);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,394,this.yearOfCentury = (yearOfCentury == DEFAULT ? 72 : yearOfCentury);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,395,this.monthOfYear = (monthOfYear == DEFAULT ? 12 : monthOfYear);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,396,this.dayOfMonth = (dayOfMonth == DEFAULT ? 3 : dayOfMonth);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,397,this.hour = 10;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,398,this.min = 32;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,399,this.sec = 40;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,400,this.milli = 205;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,401,this.zone = zone;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,403,protected void run() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,404,"dt = new MutableDateTime(1972, 12, 3, 10, 32, 40, 205);"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,405,parse(ISODateTimeFormat.getInstance().dateParser());
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,406,super.assert();
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,408,"dt = new MutableDateTime(1972, 12, 3, 10, 32, 40, 205);"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,409,parse(ISODateTimeFormat.getInstance().dateTimeParser());
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,410,super.assert();
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,413,protected static class TMatcher extends Matcher {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,414,"protected TMatcher(String spec, String extended, String basic,"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,415,"int hour, int min, int sec, int milli, int zone) {"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,416,"super(spec, extended, basic);"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,417,this.century = 19;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,418,this.yearOfCentury = 72;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,419,this.monthOfYear = 12;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,420,this.dayOfMonth = 3;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,421,this.hour = (hour == DEFAULT ? 10 : hour);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,422,this.min = (min == DEFAULT ? 32 : min);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,423,this.sec = (sec == DEFAULT ? 40 : sec);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,424,this.milli = (milli == DEFAULT ? 205 : milli);
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,425,this.zone = zone;
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,427,protected void run() {
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,428,"dt = new MutableDateTime(1972, 12, 3, 10, 32, 40, 205);"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,429,parse(ISODateTimeFormat.getInstance().timeParser());
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,430,super.assert();
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,432,"extended = ""T"" + extended;"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,433,"dt = new MutableDateTime(1972, 12, 3, 10, 32, 40, 205);"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,434,parse(ISODateTimeFormat.getInstance().timeParser());
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,435,super.assert();
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,437,"dt = new MutableDateTime(1972, 12, 3, 10, 32, 40, 205);"
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,438,parse(ISODateTimeFormat.getInstance().dateTimeParser());
True,JodaTime/src/test/org/joda/test/time/TestParseISO.java,JodaTime/src/test/org/joda/test/time/TestParseISO.java,439,super.assert();
