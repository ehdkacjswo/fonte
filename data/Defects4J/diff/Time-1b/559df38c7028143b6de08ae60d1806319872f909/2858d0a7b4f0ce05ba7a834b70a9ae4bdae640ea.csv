is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,40," DayOfYear, HourOfDay, MinuteOfHour, SecondOfMinute and MillisOfSecond."
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,40,* DayOfYear and MillisOfDay.
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,85,** The index of the dayOfYear field in the field array */
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,86,rivate static final int DAY_OF_YEAR = 1;
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,85,/** The index of the monthOfYear field in the field array */
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,86,private static final int MONTH_OF_YEAR = 1;
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,87,/** The index of the dayOfMonth field in the field array */
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,88,private static final int DAY_OF_MONTH = 2;
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,88,rivate static final int MILLIS_OF_DAY = 2;
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,90,private static final int MILLIS_OF_DAY = 3;
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,414," The supported fields are Year, DayOfYear and MillisOfDay."
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,416,"* The supported fields are Year, MonthOfDay, DayOfMonth and MillisOfDay."
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,419,eturn 3;
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,421,return 4;
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,435,ase DAY_OF_YEAR:
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,436,eturn chrono.dayOfYear();
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,437,case MONTH_OF_YEAR:
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,438,return chrono.monthOfYear();
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,439,case DAY_OF_MONTH:
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,440,return chrono.dayOfMonth();
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,448," interface. The supported fields are Year, DayOfYear and MillisOfDay."
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,452,"* interface. The supported fields are Year, MonthOfDay, DayOfMonth and MillisOfDay."
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,458,ase DAY_OF_YEAR:
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,459,eturn getChronology().dayOfYear().get(getLocalMillis());
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,462,case MONTH_OF_YEAR:
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,463,return getChronology().monthOfYear().get(getLocalMillis());
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,464,case DAY_OF_MONTH:
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,465,return getChronology().dayOfMonth().get(getLocalMillis());
False,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,557,"eturn new DateTime(getLocalMillis(), chrono);"
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,563,return new DateTime(
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,564,"getYear(), getMonthOfYear(), getDayOfMonth(),"
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,565,"getHourOfDay(), getMinuteOfHour(),"
True,JodaTime/src/java/org/joda/time/LocalDateTime.java,JodaTime/src/java/org/joda/time/LocalDateTime.java,566,"getSecondOfMinute(), getMillisOfSecond(), chrono);"
True,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,64,suite.addTest(TestLocalDateTime_Basics.suite());
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,2,*  Copyright 2001-2006 Stephen Colebourne
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,4,"*  Licensed under the Apache License, Version 2.0 (the ""License"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,5,*  you may not use this file except in compliance with the License.
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,6,*  You may obtain a copy of the License at
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,10,"*  Unless required by applicable law or agreed to in writing, software"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,11,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,12,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,13,*  See the License for the specific language governing permissions and
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,14,*  limitations under the License.
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,16,package org.joda.time;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,18,import java.io.ByteArrayInputStream;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,19,import java.io.ByteArrayOutputStream;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,20,import java.io.ObjectInputStream;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,21,import java.io.ObjectOutputStream;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,22,import java.util.Arrays;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,23,import java.util.Date;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,24,import java.util.Locale;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,26,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,27,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,29,import org.joda.time.chrono.BuddhistChronology;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,30,import org.joda.time.chrono.CopticChronology;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,31,import org.joda.time.chrono.GJChronology;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,32,import org.joda.time.chrono.GregorianChronology;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,33,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,34,import org.joda.time.format.DateTimeFormat;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,35,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,38,* This class is a Junit unit test for LocalDate.
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,40,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,42,public class TestLocalDateTime_Basics extends TestCase {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,44,"private static final DateTimeZone PARIS = DateTimeZone.forID(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,45,"private static final DateTimeZone LONDON = DateTimeZone.forID(""Europe/London"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,46,"private static final DateTimeZone TOKYO = DateTimeZone.forID(""Asia/Tokyo"");"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,47,private static final int OFFSET = 1;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,48,private static final GJChronology GJ_UTC = GJChronology.getInstanceUTC();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,49,private static final Chronology COPTIC_PARIS = CopticChronology.getInstance(PARIS);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,50,private static final Chronology COPTIC_LONDON = CopticChronology.getInstance(LONDON);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,51,private static final Chronology COPTIC_TOKYO = CopticChronology.getInstance(TOKYO);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,52,private static final Chronology COPTIC_UTC = CopticChronology.getInstanceUTC();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,53,private static final Chronology ISO_PARIS = ISOChronology.getInstance(PARIS);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,54,private static final Chronology ISO_LONDON = ISOChronology.getInstance(LONDON);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,55,private static final Chronology ISO_TOKYO = ISOChronology.getInstance(TOKYO);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,56,private static final Chronology ISO_UTC = ISOChronology.getInstanceUTC();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,57,private static final Chronology GREGORIAN_UTC = GregorianChronology.getInstanceUTC();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,58,private static final Chronology BUDDHIST_PARIS = BuddhistChronology.getInstance(PARIS);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,59,private static final Chronology BUDDHIST_LONDON = BuddhistChronology.getInstance(LONDON);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,60,private static final Chronology BUDDHIST_TOKYO = BuddhistChronology.getInstance(TOKYO);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,61,private static final Chronology BUDDHIST_UTC = BuddhistChronology.getInstanceUTC();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,63,//    private long TEST_TIME1 =
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,64,//        (31L + 28L + 31L + 6L -1L) * DateTimeConstants.MILLIS_PER_DAY
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,65,//        + 12L * DateTimeConstants.MILLIS_PER_HOUR
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,66,//        + 24L * DateTimeConstants.MILLIS_PER_MINUTE;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,68,//    private long TEST_TIME2 =
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,69,//        (365L + 31L + 28L + 31L + 30L + 7L -1L) * DateTimeConstants.MILLIS_PER_DAY
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,70,//        + 14L * DateTimeConstants.MILLIS_PER_HOUR
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,71,//        + 28L * DateTimeConstants.MILLIS_PER_MINUTE;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,73,private int MILLIS_OF_DAY_UTC =
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,74,(int) (10L * DateTimeConstants.MILLIS_PER_HOUR
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,75,+ 20L * DateTimeConstants.MILLIS_PER_MINUTE
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,76,+ 30L * DateTimeConstants.MILLIS_PER_SECOND
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,77,+ 40L);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,79,private long TEST_TIME_NOW_UTC =
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,80,(31L + 28L + 31L + 30L + 31L + 9L -1L) * DateTimeConstants.MILLIS_PER_DAY + MILLIS_OF_DAY_UTC;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,82,private DateTimeZone zone = null;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,84,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,85,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,88,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,89,return new TestSuite(TestLocalDateTime_Basics.class);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,92,public TestLocalDateTime_Basics(String name) {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,93,super(name);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,96,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,97,DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW_UTC);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,98,zone = DateTimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,99,DateTimeZone.setDefault(LONDON);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,102,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,103,DateTimeUtils.setCurrentMillisSystem();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,104,DateTimeZone.setDefault(zone);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,105,zone = null;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,109,public void testGet_DateTimeFieldType() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,110,"LocalDateTime test = new LocalDateTime(1970, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,111,"assertEquals(1970, test.get(DateTimeFieldType.year()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,112,"assertEquals(6, test.get(DateTimeFieldType.monthOfYear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,113,"assertEquals(9, test.get(DateTimeFieldType.dayOfMonth()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,114,"assertEquals(2, test.get(DateTimeFieldType.dayOfWeek()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,115,"assertEquals(160, test.get(DateTimeFieldType.dayOfYear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,116,"assertEquals(24, test.get(DateTimeFieldType.weekOfWeekyear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,117,"assertEquals(1970, test.get(DateTimeFieldType.weekyear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,118,"assertEquals(10, test.get(DateTimeFieldType.hourOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,119,"assertEquals(20, test.get(DateTimeFieldType.minuteOfHour()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,120,"assertEquals(30, test.get(DateTimeFieldType.secondOfMinute()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,121,"assertEquals(40, test.get(DateTimeFieldType.millisOfSecond()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,122,"assertEquals(MILLIS_OF_DAY_UTC / 60000 , test.get(DateTimeFieldType.minuteOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,123,"assertEquals(MILLIS_OF_DAY_UTC / 1000 , test.get(DateTimeFieldType.secondOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,124,"assertEquals(MILLIS_OF_DAY_UTC , test.get(DateTimeFieldType.millisOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,125,"assertEquals(10, test.get(DateTimeFieldType.hourOfHalfday()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,126,"assertEquals(DateTimeConstants.AM, test.get(DateTimeFieldType.halfdayOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,128,"test = new LocalDateTime(1970, 6, 9, 12, 30);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,129,"assertEquals(0, test.get(DateTimeFieldType.hourOfHalfday()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,130,"assertEquals(12, test.get(DateTimeFieldType.clockhourOfHalfday()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,131,"assertEquals(12, test.get(DateTimeFieldType.clockhourOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,132,"assertEquals(DateTimeConstants.PM, test.get(DateTimeFieldType.halfdayOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,133,"test = new LocalDateTime(1970, 6, 9, 14, 30);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,134,"assertEquals(2, test.get(DateTimeFieldType.hourOfHalfday()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,135,"assertEquals(2, test.get(DateTimeFieldType.clockhourOfHalfday()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,136,"assertEquals(14, test.get(DateTimeFieldType.clockhourOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,137,"assertEquals(DateTimeConstants.PM, test.get(DateTimeFieldType.halfdayOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,138,"test = new LocalDateTime(1970, 6, 9, 0, 30);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,139,"assertEquals(0, test.get(DateTimeFieldType.hourOfHalfday()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,140,"assertEquals(12, test.get(DateTimeFieldType.clockhourOfHalfday()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,141,"assertEquals(24, test.get(DateTimeFieldType.clockhourOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,142,"assertEquals(DateTimeConstants.AM, test.get(DateTimeFieldType.halfdayOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,143,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,144,test.get(null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,145,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,146,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,149,public void testSize() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,150,LocalDateTime test = new LocalDateTime();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,151,"assertEquals(4, test.size());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,154,public void testGetFieldType_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,155,LocalDateTime test = new LocalDateTime(COPTIC_PARIS);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,156,"assertSame(DateTimeFieldType.year(), test.getFieldType(0));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,157,"assertSame(DateTimeFieldType.monthOfYear(), test.getFieldType(1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,158,"assertSame(DateTimeFieldType.dayOfMonth(), test.getFieldType(2));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,159,"assertSame(DateTimeFieldType.millisOfDay(), test.getFieldType(3));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,160,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,161,test.getFieldType(-1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,162,} catch (IndexOutOfBoundsException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,163,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,164,test.getFieldType(3);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,165,} catch (IndexOutOfBoundsException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,168,public void testGetFieldTypes() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,169,LocalDateTime test = new LocalDateTime(COPTIC_PARIS);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,170,DateTimeFieldType[] fields = test.getFieldTypes();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,171,"assertSame(DateTimeFieldType.year(), fields[0]);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,172,"assertSame(DateTimeFieldType.monthOfYear(), fields[1]);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,173,"assertSame(DateTimeFieldType.dayOfMonth(), fields[2]);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,174,"assertSame(DateTimeFieldType.millisOfDay(), fields[3]);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,175,"assertNotSame(test.getFieldTypes(), test.getFieldTypes());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,178,public void testGetField_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,179,LocalDateTime test = new LocalDateTime(COPTIC_PARIS);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,180,"assertSame(COPTIC_UTC.year(), test.getField(0));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,181,"assertSame(COPTIC_UTC.monthOfYear(), test.getField(1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,182,"assertSame(COPTIC_UTC.dayOfMonth(), test.getField(2));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,183,"assertSame(COPTIC_UTC.millisOfDay(), test.getField(3));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,184,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,185,test.getField(-1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,186,} catch (IndexOutOfBoundsException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,187,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,188,test.getField(3);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,189,} catch (IndexOutOfBoundsException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,192,public void testGetFields() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,193,LocalDateTime test = new LocalDateTime(COPTIC_PARIS);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,194,DateTimeField[] fields = test.getFields();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,195,"assertSame(COPTIC_UTC.year(), fields[0]);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,196,"assertSame(COPTIC_UTC.monthOfYear(), fields[1]);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,197,"assertSame(COPTIC_UTC.dayOfMonth(), fields[2]);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,198,"assertSame(COPTIC_UTC.millisOfDay(), fields[3]);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,199,"assertNotSame(test.getFields(), test.getFields());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,202,public void testGetValue_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,203,LocalDateTime test = new LocalDateTime(ISO_UTC);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,204,"assertEquals(1970, test.getValue(0));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,205,"assertEquals(6, test.getValue(1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,206,"assertEquals(9, test.getValue(2));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,207,"assertEquals(MILLIS_OF_DAY_UTC, test.getValue(3));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,208,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,209,test.getValue(-1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,210,} catch (IndexOutOfBoundsException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,211,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,212,test.getValue(3);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,213,} catch (IndexOutOfBoundsException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,216,public void testGetValues() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,217,LocalDateTime test = new LocalDateTime(ISO_UTC);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,218,int[] values = test.getValues();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,219,"assertEquals(1970, values[0]);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,220,"assertEquals(6, values[1]);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,221,"assertEquals(9, values[2]);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,222,"assertEquals(MILLIS_OF_DAY_UTC, values[3]);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,223,"assertNotSame(test.getValues(), test.getValues());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,226,public void testIsSupported_DateTimeFieldType() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,227,LocalDateTime test = new LocalDateTime();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,228,"assertEquals(true, test.isSupported(DateTimeFieldType.year()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,229,"assertEquals(true, test.isSupported(DateTimeFieldType.monthOfYear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,230,"assertEquals(true, test.isSupported(DateTimeFieldType.dayOfMonth()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,231,"assertEquals(true, test.isSupported(DateTimeFieldType.dayOfWeek()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,232,"assertEquals(true, test.isSupported(DateTimeFieldType.dayOfYear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,233,"assertEquals(true, test.isSupported(DateTimeFieldType.weekOfWeekyear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,234,"assertEquals(true, test.isSupported(DateTimeFieldType.weekyear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,235,"assertEquals(true, test.isSupported(DateTimeFieldType.yearOfCentury()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,236,"assertEquals(true, test.isSupported(DateTimeFieldType.yearOfEra()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,237,"assertEquals(true, test.isSupported(DateTimeFieldType.centuryOfEra()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,238,"assertEquals(true, test.isSupported(DateTimeFieldType.weekyearOfCentury()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,239,"assertEquals(true, test.isSupported(DateTimeFieldType.era()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,241,"assertEquals(true, test.isSupported(DateTimeFieldType.hourOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,242,"assertEquals(true, test.isSupported(DateTimeFieldType.minuteOfHour()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,243,"assertEquals(true, test.isSupported(DateTimeFieldType.secondOfMinute()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,244,"assertEquals(true, test.isSupported(DateTimeFieldType.millisOfSecond()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,245,"assertEquals(true, test.isSupported(DateTimeFieldType.minuteOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,246,"assertEquals(true, test.isSupported(DateTimeFieldType.secondOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,247,"assertEquals(true, test.isSupported(DateTimeFieldType.millisOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,248,"assertEquals(true, test.isSupported(DateTimeFieldType.hourOfHalfday()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,249,"assertEquals(true, test.isSupported(DateTimeFieldType.halfdayOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,250,"assertEquals(true, test.isSupported(DateTimeFieldType.clockhourOfHalfday()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,251,"assertEquals(true, test.isSupported(DateTimeFieldType.clockhourOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,253,"assertEquals(false, test.isSupported((DateTimeFieldType) null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,256,public void testIsSupported_DurationFieldType() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,257,LocalDateTime test = new LocalDateTime();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,258,"assertEquals(false, test.isSupported(DurationFieldType.eras()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,259,"assertEquals(true, test.isSupported(DurationFieldType.centuries()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,260,"assertEquals(true, test.isSupported(DurationFieldType.years()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,261,"assertEquals(true, test.isSupported(DurationFieldType.months()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,262,"assertEquals(true, test.isSupported(DurationFieldType.weekyears()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,263,"assertEquals(true, test.isSupported(DurationFieldType.weeks()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,264,"assertEquals(true, test.isSupported(DurationFieldType.days()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,266,"assertEquals(true, test.isSupported(DurationFieldType.hours()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,267,"assertEquals(true, test.isSupported(DurationFieldType.minutes()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,268,"assertEquals(true, test.isSupported(DurationFieldType.seconds()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,269,"assertEquals(true, test.isSupported(DurationFieldType.millis()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,270,"assertEquals(true, test.isSupported(DurationFieldType.halfdays()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,272,"assertEquals(false, test.isSupported((DurationFieldType) null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,275,public void testEqualsHashCode() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,276,"LocalDateTime test1 = new LocalDateTime(1970, 6, 9, 10, 20, 30, 40, COPTIC_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,277,"LocalDateTime test2 = new LocalDateTime(1970, 6, 9, 10, 20, 30, 40, COPTIC_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,278,"assertEquals(true, test1.equals(test2));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,279,"assertEquals(true, test2.equals(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,280,"assertEquals(true, test1.equals(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,281,"assertEquals(true, test2.equals(test2));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,282,"assertEquals(true, test1.hashCode() == test2.hashCode());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,283,"assertEquals(true, test1.hashCode() == test1.hashCode());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,284,"assertEquals(true, test2.hashCode() == test2.hashCode());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,286,"LocalDateTime test3 = new LocalDateTime(1971, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,287,"assertEquals(false, test1.equals(test3));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,288,"assertEquals(false, test2.equals(test3));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,289,"assertEquals(false, test3.equals(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,290,"assertEquals(false, test3.equals(test2));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,291,"assertEquals(false, test1.hashCode() == test3.hashCode());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,292,"assertEquals(false, test2.hashCode() == test3.hashCode());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,294,"assertEquals(false, test1.equals(""Hello""));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,295,"assertEquals(true, test1.equals(new MockInstant()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,296,"assertEquals(false, test1.equals(new YearMonthDay(1970, 6, 9, COPTIC_PARIS)));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,297,"assertEquals(false, test1.equals(MockPartial.EMPTY_INSTANCE));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,300,class MockInstant extends MockPartial {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,301,public Chronology getChronology() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,302,return COPTIC_UTC;
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,304,public DateTimeField[] getFields() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,305,return new DateTimeField[] {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,306,"COPTIC_UTC.year(),"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,307,"COPTIC_UTC.monthOfYear(),"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,308,"COPTIC_UTC.dayOfMonth(),"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,309,"COPTIC_UTC.millisOfDay(),"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,312,public int[] getValues() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,313,"return new int[] {1970, 6, 9, MILLIS_OF_DAY_UTC};"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,318,public void testCompareTo() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,319,"LocalDateTime test1 = new LocalDateTime(2005, 6, 2, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,320,"LocalDateTime test1a = new LocalDateTime(2005, 6, 2, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,321,"assertEquals(0, test1.compareTo(test1a));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,322,"assertEquals(0, test1a.compareTo(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,323,"assertEquals(0, test1.compareTo(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,324,"assertEquals(0, test1a.compareTo(test1a));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,326,"LocalDateTime test2 = new LocalDateTime(2005, 7, 2, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,327,"assertEquals(-1, test1.compareTo(test2));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,328,"assertEquals(+1, test2.compareTo(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,330,"LocalDateTime test3 = new LocalDateTime(2005, 7, 2, 10, 20, 30, 40, GREGORIAN_UTC);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,331,"assertEquals(-1, test1.compareTo(test3));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,332,"assertEquals(+1, test3.compareTo(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,333,"assertEquals(0, test3.compareTo(test2));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,335,DateTimeFieldType[] types = new DateTimeFieldType[] {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,336,"DateTimeFieldType.year(),"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,337,"DateTimeFieldType.monthOfYear(),"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,338,"DateTimeFieldType.dayOfMonth(),"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,339,"DateTimeFieldType.millisOfDay(),"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,341,"int[] values = new int[] {2005, 6, 2, MILLIS_OF_DAY_UTC};"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,342,"Partial p = new Partial(types, values);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,343,"assertEquals(0, test1.compareTo(p));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,344,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,345,test1.compareTo(null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,346,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,347,} catch (NullPointerException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,348,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,349,test1.compareTo(new Date());
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,350,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,351,} catch (ClassCastException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,352,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,353,test1.compareTo(new YearMonthDay());
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,354,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,355,} catch (ClassCastException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,356,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,357,test1.compareTo(new TimeOfDay());
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,358,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,359,} catch (ClassCastException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,360,Partial partial = new Partial()
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,361,".with(DateTimeFieldType.centuryOfEra(), 1)"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,362,".with(DateTimeFieldType.halfdayOfDay(), 0)"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,363,".with(DateTimeFieldType.dayOfMonth(), 9);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,364,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,365,"new LocalDateTime(1970, 6, 9, 10, 20, 30, 40).compareTo(partial);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,366,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,367,} catch (ClassCastException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,371,public void testIsEqual_LocalDateTime() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,372,"LocalDateTime test1 = new LocalDateTime(2005, 6, 2, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,373,"LocalDateTime test1a = new LocalDateTime(2005, 6, 2, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,374,"assertEquals(true, test1.isEqual(test1a));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,375,"assertEquals(true, test1a.isEqual(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,376,"assertEquals(true, test1.isEqual(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,377,"assertEquals(true, test1a.isEqual(test1a));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,379,"LocalDateTime test2 = new LocalDateTime(2005, 7, 2, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,380,"assertEquals(false, test1.isEqual(test2));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,381,"assertEquals(false, test2.isEqual(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,383,"LocalDateTime test3 = new LocalDateTime(2005, 7, 2, 10, 20, 30, 40, GREGORIAN_UTC);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,384,"assertEquals(false, test1.isEqual(test3));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,385,"assertEquals(false, test3.isEqual(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,386,"assertEquals(true, test3.isEqual(test2));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,388,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,389,"new LocalDateTime(2005, 7, 2, 10, 20, 30, 40).isEqual(null);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,390,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,391,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,395,public void testIsBefore_LocalDateTime() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,396,"LocalDateTime test1 = new LocalDateTime(2005, 6, 2, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,397,"LocalDateTime test1a = new LocalDateTime(2005, 6, 2, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,398,"assertEquals(false, test1.isBefore(test1a));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,399,"assertEquals(false, test1a.isBefore(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,400,"assertEquals(false, test1.isBefore(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,401,"assertEquals(false, test1a.isBefore(test1a));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,403,"LocalDateTime test2 = new LocalDateTime(2005, 7, 2, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,404,"assertEquals(true, test1.isBefore(test2));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,405,"assertEquals(false, test2.isBefore(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,407,"LocalDateTime test3 = new LocalDateTime(2005, 7, 2, 10, 20, 30, 40, GREGORIAN_UTC);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,408,"assertEquals(true, test1.isBefore(test3));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,409,"assertEquals(false, test3.isBefore(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,410,"assertEquals(false, test3.isBefore(test2));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,412,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,413,"new LocalDateTime(2005, 7, 2, 10, 20, 30, 40).isBefore(null);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,414,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,415,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,419,public void testIsAfter_LocalDateTime() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,420,"LocalDateTime test1 = new LocalDateTime(2005, 6, 2, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,421,"LocalDateTime test1a = new LocalDateTime(2005, 6, 2, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,422,"assertEquals(false, test1.isAfter(test1a));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,423,"assertEquals(false, test1a.isAfter(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,424,"assertEquals(false, test1.isAfter(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,425,"assertEquals(false, test1a.isAfter(test1a));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,427,"LocalDateTime test2 = new LocalDateTime(2005, 7, 2, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,428,"assertEquals(false, test1.isAfter(test2));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,429,"assertEquals(true, test2.isAfter(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,431,"LocalDateTime test3 = new LocalDateTime(2005, 7, 2, 10, 20, 30, 40, GREGORIAN_UTC);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,432,"assertEquals(false, test1.isAfter(test3));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,433,"assertEquals(true, test3.isAfter(test1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,434,"assertEquals(false, test3.isAfter(test2));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,436,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,437,"new LocalDateTime(2005, 7, 2, 10, 20, 30, 40).isAfter(null);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,438,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,439,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,443,public void testWithDate() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,444,"LocalDateTime test = new LocalDateTime(2004, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,445,"LocalDateTime result = test.withDate(2006, 2, 1);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,447,"check(test, 2004, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,448,"check(result, 2006, 2, 1, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,452,public void testWithTime() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,453,"LocalDateTime test = new LocalDateTime(2004, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,454,"LocalDateTime result = test.withTime(9, 8, 7, 6);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,456,"check(test, 2004, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,457,"check(result, 2004, 6, 9, 9, 8, 7, 6);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,461,public void testWithField_DateTimeFieldType_int_1() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,462,"LocalDateTime test = new LocalDateTime(2004, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,463,"LocalDateTime result = test.withField(DateTimeFieldType.year(), 2006);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,465,"assertEquals(new LocalDateTime(2004, 6, 9, 10, 20, 30, 40), test);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,466,"assertEquals(new LocalDateTime(2006, 6, 9, 10, 20, 30, 40), result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,469,public void testWithField_DateTimeFieldType_int_2() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,470,"LocalDateTime test = new LocalDateTime(2004, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,471,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,472,"test.withField(null, 6);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,473,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,474,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,477,public void testWithField_DateTimeFieldType_int_3() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,478,"LocalDateTime test = new LocalDateTime(2004, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,479,"LocalDateTime result = test.withField(DateTimeFieldType.year(), 2004);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,480,"assertEquals(new LocalDateTime(2004, 6, 9, 10, 20, 30, 40), test);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,481,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,485,public void testWithFieldAdded_DurationFieldType_int_1() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,486,"LocalDateTime test = new LocalDateTime(2004, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,487,"LocalDateTime result = test.withFieldAdded(DurationFieldType.years(), 6);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,489,"assertEquals(new LocalDateTime(2004, 6, 9, 10, 20, 30, 40), test);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,490,"assertEquals(new LocalDateTime(2010, 6, 9, 10, 20, 30, 40), result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,493,public void testWithFieldAdded_DurationFieldType_int_2() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,494,"LocalDateTime test = new LocalDateTime(2004, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,495,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,496,"test.withFieldAdded(null, 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,497,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,498,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,501,public void testWithFieldAdded_DurationFieldType_int_3() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,502,"LocalDateTime test = new LocalDateTime(2004, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,503,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,504,"test.withFieldAdded(null, 6);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,505,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,506,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,509,public void testWithFieldAdded_DurationFieldType_int_4() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,510,"LocalDateTime test = new LocalDateTime(2004, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,511,"LocalDateTime result = test.withFieldAdded(DurationFieldType.years(), 0);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,512,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,516,public void testPlus_RP() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,517,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,518,"LocalDateTime result = test.plus(new Period(1, 2, 3, 4, 29, 6, 7, 8));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,519,"LocalDateTime expected = new LocalDateTime(2003, 7, 29, 15, 26, 37, 48, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,520,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,522,result = test.plus((ReadablePeriod) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,523,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,526,public void testPlusYears_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,527,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,528,LocalDateTime result = test.plusYears(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,529,"LocalDateTime expected = new LocalDateTime(2003, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,530,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,532,result = test.plusYears(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,533,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,536,public void testPlusMonths_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,537,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,538,LocalDateTime result = test.plusMonths(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,539,"LocalDateTime expected = new LocalDateTime(2002, 6, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,540,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,542,result = test.plusMonths(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,543,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,546,public void testPlusWeeks_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,547,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,548,LocalDateTime result = test.plusWeeks(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,549,"LocalDateTime expected = new LocalDateTime(2002, 5, 10, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,550,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,552,result = test.plusWeeks(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,553,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,556,public void testPlusDays_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,557,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,558,LocalDateTime result = test.plusDays(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,559,"LocalDateTime expected = new LocalDateTime(2002, 5, 4, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,560,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,562,result = test.plusDays(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,563,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,566,public void testPlusHours_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,567,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,568,LocalDateTime result = test.plusHours(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,569,"LocalDateTime expected = new LocalDateTime(2002, 5, 3, 11, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,570,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,572,result = test.plusHours(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,573,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,576,public void testPlusMinutes_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,577,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,578,LocalDateTime result = test.plusMinutes(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,579,"LocalDateTime expected = new LocalDateTime(2002, 5, 3, 10, 21, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,580,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,582,result = test.plusMinutes(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,583,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,586,public void testPlusSeconds_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,587,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,588,LocalDateTime result = test.plusSeconds(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,589,"LocalDateTime expected = new LocalDateTime(2002, 5, 3, 10, 20, 31, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,590,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,592,result = test.plusSeconds(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,593,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,596,public void testPlusMillis_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,597,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,598,LocalDateTime result = test.plusMillis(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,599,"LocalDateTime expected = new LocalDateTime(2002, 5, 3, 10, 20, 30, 41, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,600,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,602,result = test.plusMillis(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,603,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,607,public void testMinus_RP() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,608,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,609,"LocalDateTime result = test.minus(new Period(1, 1, 1, 1, 1, 1, 1, 1));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,611,"LocalDateTime expected = new LocalDateTime(2001, 3, 26, 9, 19, 29, 39, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,612,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,614,result = test.minus((ReadablePeriod) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,615,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,618,public void testMinusYears_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,619,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,620,LocalDateTime result = test.minusYears(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,621,"LocalDateTime expected = new LocalDateTime(2001, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,622,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,624,result = test.minusYears(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,625,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,628,public void testMinusMonths_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,629,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,630,LocalDateTime result = test.minusMonths(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,631,"LocalDateTime expected = new LocalDateTime(2002, 4, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,632,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,634,result = test.minusMonths(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,635,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,638,public void testMinusWeeks_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,639,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,640,LocalDateTime result = test.minusWeeks(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,641,"LocalDateTime expected = new LocalDateTime(2002, 4, 26, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,642,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,644,result = test.minusWeeks(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,645,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,648,public void testMinusDays_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,649,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,650,LocalDateTime result = test.minusDays(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,651,"LocalDateTime expected = new LocalDateTime(2002, 5, 2, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,652,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,654,result = test.minusDays(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,655,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,658,public void testMinusHours_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,659,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,660,LocalDateTime result = test.minusHours(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,661,"LocalDateTime expected = new LocalDateTime(2002, 5, 3, 9, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,662,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,664,result = test.minusHours(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,665,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,668,public void testMinusMinutes_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,669,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,670,LocalDateTime result = test.minusMinutes(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,671,"LocalDateTime expected = new LocalDateTime(2002, 5, 3, 10, 19, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,672,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,674,result = test.minusMinutes(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,675,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,678,public void testMinusSeconds_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,679,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,680,LocalDateTime result = test.minusSeconds(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,681,"LocalDateTime expected = new LocalDateTime(2002, 5, 3, 10, 20, 29, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,682,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,684,result = test.minusSeconds(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,685,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,688,public void testMinusMillis_int() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,689,"LocalDateTime test = new LocalDateTime(2002, 5, 3, 10, 20, 30, 40, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,690,LocalDateTime result = test.minusMillis(1);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,691,"LocalDateTime expected = new LocalDateTime(2002, 5, 3, 10, 20, 30, 39, BUDDHIST_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,692,"assertEquals(expected, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,694,result = test.minusMillis(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,695,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,699,public void testGetters() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,700,"LocalDateTime test = new LocalDateTime(1970, 6, 9, 10, 20, 30, 40, GJ_UTC);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,701,"assertEquals(1970, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,702,"assertEquals(6, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,703,"assertEquals(9, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,704,"assertEquals(160, test.getDayOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,705,"assertEquals(2, test.getDayOfWeek());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,706,"assertEquals(24, test.getWeekOfWeekyear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,707,"assertEquals(1970, test.getWeekyear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,708,"assertEquals(70, test.getYearOfCentury());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,709,"assertEquals(20, test.getCenturyOfEra());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,710,"assertEquals(1970, test.getYearOfEra());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,711,"assertEquals(DateTimeConstants.AD, test.getEra());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,712,"assertEquals(10, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,713,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,714,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,715,"assertEquals(40, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,719,public void testWithers() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,720,"LocalDateTime test = new LocalDateTime(1970, 6, 9, 10, 20, 30, 40, GJ_UTC);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,721,"check(test.withYear(2000), 2000, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,722,"check(test.withMonthOfYear(2), 1970, 2, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,723,"check(test.withDayOfMonth(2), 1970, 6, 2, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,724,"check(test.withDayOfYear(6), 1970, 1, 6, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,725,"check(test.withDayOfWeek(6), 1970, 6, 13, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,726,"check(test.withWeekOfWeekyear(6), 1970, 2, 3, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,727,"check(test.withWeekyear(1971), 1971, 6, 15, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,728,"check(test.withYearOfCentury(60), 1960, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,729,"check(test.withCenturyOfEra(21), 2070, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,730,"check(test.withYearOfEra(1066), 1066, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,731,"check(test.withEra(DateTimeConstants.BC), -1970, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,732,"check(test.withHourOfDay(6), 1970, 6, 9, 6, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,733,"check(test.withMinuteOfHour(6), 1970, 6, 9, 10, 6, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,734,"check(test.withSecondOfMinute(6), 1970, 6, 9, 10, 20, 6, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,735,"check(test.withMillisOfSecond(6), 1970, 6, 9, 10, 20, 30, 6);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,736,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,737,test.withMonthOfYear(0);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,738,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,739,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,740,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,741,test.withMonthOfYear(13);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,742,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,743,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,747,public void testToDateTime() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,748,"LocalDateTime base = new LocalDateTime(2005, 6, 9, 6, 7, 8, 9, COPTIC_PARIS); // PARIS irrelevant"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,750,DateTime test = base.toDateTime();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,751,"check(base, 2005, 6, 9, 6, 7, 8, 9);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,752,"DateTime expected = new DateTime(2005, 6, 9, 6, 7, 8, 9, COPTIC_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,753,"assertEquals(expected, test);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,757,public void testToDateTime_Zone() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,758,"LocalDateTime base = new LocalDateTime(2005, 6, 9, 6, 7, 8, 9, COPTIC_PARIS); // PARIS irrelevant"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,760,DateTime test = base.toDateTime(TOKYO);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,761,"check(base, 2005, 6, 9, 6, 7, 8, 9);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,762,"DateTime expected = new DateTime(2005, 6, 9, 6, 7, 8, 9, COPTIC_TOKYO);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,763,"assertEquals(expected, test);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,766,public void testToDateTime_nullZone() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,767,"LocalDateTime base = new LocalDateTime(2005, 6, 9, 6, 7, 8, 9, COPTIC_PARIS); // PARIS irrelevant"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,769,DateTime test = base.toDateTime((DateTimeZone) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,770,"check(base, 2005, 6, 9, 6, 7, 8, 9);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,771,"DateTime expected = new DateTime(2005, 6, 9, 6, 7, 8, 9, COPTIC_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,772,"assertEquals(expected, test);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,776,public void testToLocalDate() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,777,"LocalDateTime base = new LocalDateTime(2005, 6, 9, 6, 7, 8, 9, COPTIC_PARIS); // PARIS irrelevant"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,778,"LocalDate expected = new LocalDate(2005, 6, 9, COPTIC_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,779,"assertEquals(expected,base.toLocalDate());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,782,public void testToLocalTime() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,783,"LocalDateTime base = new LocalDateTime(2005, 6, 9, 6, 7, 8, 9, COPTIC_PARIS); // PARIS irrelevant"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,784,"LocalTime expected = new LocalTime(6, 7, 8, 9, COPTIC_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,785,"assertEquals(expected,base.toLocalTime());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,789,public void testToDateTime_RI() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,790,"LocalDateTime base = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40, COPTIC_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,791,"DateTime dt = new DateTime(2002, 1, 3, 4, 5, 6, 7, BUDDHIST_TOKYO);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,793,DateTime test = base.toDateTime(dt);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,794,"check(base, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,795,"DateTime expected = new DateTime(2005, 6, 9, 10, 20, 30, 40, BUDDHIST_TOKYO);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,796,"assertEquals(expected, test);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,799,public void testToDateTime_nullRI() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,800,"LocalDateTime base = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40, COPTIC_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,802,DateTime test = base.toDateTime((ReadableInstant) null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,803,"check(base, 2005, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,804,"DateTime expected = new DateTime(2005, 6, 9, 10, 20, 30, 40, ISO_LONDON);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,805,"assertEquals(expected, test);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,809,public void testProperty() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,810,"LocalDateTime test = new LocalDateTime(2005, 6, 9, 10, 20, 30, 40, GJ_UTC);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,811,"assertEquals(test.year(), test.property(DateTimeFieldType.year()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,812,"assertEquals(test.monthOfYear(), test.property(DateTimeFieldType.monthOfYear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,813,"assertEquals(test.dayOfMonth(), test.property(DateTimeFieldType.dayOfMonth()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,814,"assertEquals(test.dayOfWeek(), test.property(DateTimeFieldType.dayOfWeek()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,815,"assertEquals(test.dayOfYear(), test.property(DateTimeFieldType.dayOfYear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,816,"assertEquals(test.weekOfWeekyear(), test.property(DateTimeFieldType.weekOfWeekyear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,817,"assertEquals(test.weekyear(), test.property(DateTimeFieldType.weekyear()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,818,"assertEquals(test.yearOfCentury(), test.property(DateTimeFieldType.yearOfCentury()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,819,"assertEquals(test.yearOfEra(), test.property(DateTimeFieldType.yearOfEra()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,820,"assertEquals(test.centuryOfEra(), test.property(DateTimeFieldType.centuryOfEra()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,821,"assertEquals(test.era(), test.property(DateTimeFieldType.era()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,822,"assertEquals(test.hourOfDay(), test.property(DateTimeFieldType.hourOfDay()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,823,"assertEquals(test.minuteOfHour(), test.property(DateTimeFieldType.minuteOfHour()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,824,"assertEquals(test.secondOfMinute(), test.property(DateTimeFieldType.secondOfMinute()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,825,"assertEquals(test.millisOfSecond(), test.property(DateTimeFieldType.millisOfSecond()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,827,try {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,828,test.property(null);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,829,fail();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,830,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,831,"assertEquals(test, test.property(DateTimeFieldType.minuteOfDay()).getLocalDateTime());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,835,public void testSerialization() throws Exception {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,836,"LocalDateTime test = new LocalDateTime(1972, 6, 9, 10, 20, 30, 40, COPTIC_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,838,ByteArrayOutputStream baos = new ByteArrayOutputStream();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,839,ObjectOutputStream oos = new ObjectOutputStream(baos);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,840,oos.writeObject(test);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,841,byte[] bytes = baos.toByteArray();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,842,oos.close();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,844,ByteArrayInputStream bais = new ByteArrayInputStream(bytes);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,845,ObjectInputStream ois = new ObjectInputStream(bais);
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,846,LocalDateTime result = (LocalDateTime) ois.readObject();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,847,ois.close();
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,849,"assertEquals(test, result);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,850,"assertTrue(Arrays.equals(test.getValues(), result.getValues()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,851,"assertTrue(Arrays.equals(test.getFields(), result.getFields()));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,852,"assertEquals(test.getChronology(), result.getChronology());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,856,public void testToString() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,857,"LocalDateTime test = new LocalDateTime(2002, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,858,"assertEquals(""2002-06-09T10:20:30.040"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,862,public void testToString_String() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,863,"LocalDateTime test = new LocalDateTime(2002, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,864,"assertEquals(""2002 10"", test.toString(""yyyy HH""));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,865,"assertEquals(""2002-06-09T10:20:30.040"", test.toString((String) null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,869,public void testToString_String_Locale() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,870,"LocalDateTime test = new LocalDateTime(1970, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,871,"assertEquals(""Tue 9/6"", test.toString(""EEE d/M"", Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,872,"assertEquals(""mar. 9/6"", test.toString(""EEE d/M"", Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,873,"assertEquals(""1970-06-09T10:20:30.040"", test.toString(null, Locale.ENGLISH));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,874,"assertEquals(""Tue 9/6"", test.toString(""EEE d/M"", null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,875,"assertEquals(""1970-06-09T10:20:30.040"", test.toString(null, null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,879,public void testToString_DTFormatter() {
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,880,"LocalDateTime test = new LocalDateTime(2002, 6, 9, 10, 20, 30, 40);"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,881,"assertEquals(""2002 10"", test.toString(DateTimeFormat.forPattern(""yyyy HH"")));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,882,"assertEquals(""2002-06-09T10:20:30.040"", test.toString((DateTimeFormatter) null));"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,886,"private void check(LocalDateTime test, int year, int month, int day, int hour, int min, int sec, int mil) {"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,887,"assertEquals(year, test.getYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,888,"assertEquals(month, test.getMonthOfYear());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,889,"assertEquals(day, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,890,"assertEquals(hour, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,891,"assertEquals(min, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,892,"assertEquals(sec, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java,893,"assertEquals(mil, test.getMillisOfSecond());"
