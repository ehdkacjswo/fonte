is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,281, @param year The year to use.
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,282," @return 366 if a leap year, otherwise 365."
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,283,* @return 366
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,285,int getDaysInYearMax() {
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,286,return 366;
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,290,* Get the number of days in the year.
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,292,* @param year  the year to use
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,293,"* @return 366 if a leap year, otherwise 365"
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,290, @param year  the year to use.
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,291, @return number of weeks in the year.
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,302,* @param year  the year to use
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,303,* @return number of weeks in the year
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,301, @param year  the year to use.
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,314,* @param year  the year to use
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,338,/ month
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,339,f (month > 1) {
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,340,"illis += getTotalMillisByYearMonth(year, month - 1);"
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,351,"millis += getTotalMillisByYearMonth(year, month);"
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,355,/ month
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,356,f (month > 1) {
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,357,"illis += getTotalMillisByYearMonth(year, month - 1);"
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,359,/ day
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,365,"millis += getTotalMillisByYearMonth(year, month);"
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,451,f (month > 1) {
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,452,"ateMillis += getTotalMillisByYearMonth(year, month - 1);"
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,457,"dateMillis += getTotalMillisByYearMonth(year, month);"
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,628, Gets the total number of millis elapsed in this year at the end
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,629, of the specified month.
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,632,* Gets the total number of millis elapsed in this year at the start
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,633,"* of the specified month, such as zero for month 1."
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,633, @return the elapsed millis
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,637,* @return the elapsed millis at the start of the month
False,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,64,eturn 366;
True,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,64,return iChronology.getDaysInYearMax();
False,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,77,eturn 366;
True,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,77,return iChronology.getDaysInYearMax();
False,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,88,eturn 366;
True,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,88,return iChronology.getDaysInYearMax();
False,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,92,eturn value > 365 ? getMaximumValue(instant) : 365;
True,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,92,int maxLessOne = iChronology.getDaysInYearMax() - 1;
True,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,93,return value > maxLessOne ? getMaximumValue(instant) : maxLessOne;
False,JodaTime/src/java/org/joda/time/chrono/BasicFixedMonthChronology.java,JodaTime/src/java/org/joda/time/chrono/BasicFixedMonthChronology.java,112,eturn (month * MILLIS_PER_MONTH);
True,JodaTime/src/java/org/joda/time/chrono/BasicFixedMonthChronology.java,JodaTime/src/java/org/joda/time/chrono/BasicFixedMonthChronology.java,112,return ((month - 1) * MILLIS_PER_MONTH);
False,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,20,mport org.joda.time.DateTimeFieldType;
False,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,21,mport org.joda.time.field.FieldUtils;
False,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,60,or (int i=0; i<12; i++) {
True,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,58,for (int i = 0; i < 11; i++) {
False,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,64,IN_TOTAL_MILLIS_BY_MONTH_ARRAY[i] = minSum;
True,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,62,MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[i + 1] = minSum;
False,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,69,AX_TOTAL_MILLIS_BY_MONTH_ARRAY[i] = maxSum;
True,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java,67,MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[i + 1] = maxSum;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,2,*  Copyright 2001-2005 Stephen Colebourne
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,4,"*  Licensed under the Apache License, Version 2.0 (the ""License"");"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,5,*  you may not use this file except in compliance with the License.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,6,*  You may obtain a copy of the License at
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,10,"*  Unless required by applicable law or agreed to in writing, software"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,11,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,12,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,13,*  See the License for the specific language governing permissions and
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,14,*  limitations under the License.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,16,package org.joda.time.chrono;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,18,import org.joda.time.DateTimeConstants;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,19,import org.joda.time.DateTimeFieldType;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,20,import org.joda.time.DurationField;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,21,import org.joda.time.field.FieldUtils;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,22,import org.joda.time.field.ImpreciseDateTimeField;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,25,* Provides time calculations for the month of the year component of time.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,26,* <p>
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,27,* This implementation assumes 12 months at present.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,29,* @author Guy Allard
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,30,* @author Stephen Colebourne
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,31,* @author Brian S O'Neill
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,32,* @since 1.0
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,34,class BasicMonthOfYearDateTimeField extends ImpreciseDateTimeField {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,36,/** Serialization version */
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,37,private static final long serialVersionUID = -8258715387168736L;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,39,private static final int MIN = DateTimeConstants.JANUARY;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,40,private static final int MAX = DateTimeConstants.DECEMBER;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,42,private final BaseGJChronology iChronology;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,43,private final int iLeapMonth;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,46,* Restricted constructor.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,48,* @param the dayOfYear that is the leap day
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,50,"BasicMonthOfYearDateTimeField(BaseGJChronology chronology, int leapMonth) {"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,51,"super(DateTimeFieldType.monthOfYear(), chronology.getAverageMillisPerMonth());"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,52,iChronology = chronology;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,53,iLeapMonth = leapMonth;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,57,public boolean isLenient() {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,58,return false;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,63,* Get the Month component of the specified time instant.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,65,* @see org.joda.time.DateTimeField#get(long)
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,66,* @see org.joda.time.ReadableDateTime#getMonthOfYear()
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,67,* @param instant  the time instant in millis to query.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,68,* @return the month extracted from the input.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,70,public int get(long instant) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,71,return iChronology.getMonthOfYear(instant);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,76,* Add the specified month to the specified time instant.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,77,* The amount added may be negative.<p>
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,78,* If the new month has less total days than the specified
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,79,"* day of the month, this value is coerced to the nearest"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,80,* sane value. e.g.<p>
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,81,* 07-31 - (1 month) = 06-30<p>
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,82,* 03-31 - (1 month) = 02-28 or 02-29 depending<p>
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,84,* @see org.joda.time.DateTimeField#add
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,85,* @see org.joda.time.ReadWritableDateTime#addMonths(int)
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,86,* @param instant  the time instant in millis to update.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,87,* @param months  the months to add (can be negative).
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,88,* @return the updated time instant.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,90,"public long add(long instant, int months) {"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,91,if (months == 0) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,92,return instant; // the easy case
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,95,// Save time part first.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,97,long timePart = iChronology.getMillisOfDay(instant);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,100,// Get this year and month.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,102,int thisYear = iChronology.getYear(instant);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,103,"int thisMonth = iChronology.getMonthOfYear(instant, thisYear);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,106,// Do not refactor without careful consideration.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,107,// Order of calculation is important.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,109,int yearToUse;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,110,"// Initially, monthToUse is zero-based"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,111,int monthToUse = thisMonth - 1 + months;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,112,if (monthToUse >= 0) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,113,yearToUse = thisYear + (monthToUse / MAX);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,114,monthToUse = (monthToUse % MAX) + 1;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,115,} else {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,116,yearToUse = thisYear + (monthToUse / MAX) - 1;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,117,monthToUse = Math.abs(monthToUse);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,118,int remMonthToUse = monthToUse % MAX;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,119,// Take care of the boundary condition
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,120,if (remMonthToUse == 0) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,121,remMonthToUse = MAX;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,123,monthToUse = MAX - remMonthToUse + 1;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,124,// Take care of the boundary condition
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,125,if (monthToUse == 1) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,126,yearToUse += 1;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,129,// End of do not refactor.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,133,// Quietly force DOM to nearest sane value.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,135,"int dayToUse = iChronology.getDayOfMonth(instant, thisYear, thisMonth);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,136,"int maxDay = iChronology.getDaysInYearMonth(yearToUse, monthToUse);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,137,if (dayToUse > maxDay) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,138,dayToUse = maxDay;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,141,"// get proper date part, and return result"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,143,long datePart =
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,144,"iChronology.getYearMonthDayMillis(yearToUse, monthToUse, dayToUse);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,145,return datePart + timePart;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,149,"public long add(long instant, long months) {"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,150,int i_months = (int)months;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,151,if (i_months == months) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,152,"return add(instant, i_months);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,155,"// Copied from add(long, int) and modified slightly:"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,157,long timePart = iChronology.getMillisOfDay(instant);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,159,int thisYear = iChronology.getYear(instant);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,160,"int thisMonth = iChronology.getMonthOfYear(instant, thisYear);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,162,long yearToUse;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,163,long monthToUse = thisMonth - 1 + months;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,164,if (monthToUse >= 0) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,165,yearToUse = thisYear + (monthToUse / MAX);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,166,monthToUse = (monthToUse % MAX) + 1;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,167,} else {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,168,yearToUse = thisYear + (monthToUse / MAX) - 1;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,169,monthToUse = Math.abs(monthToUse);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,170,int remMonthToUse = (int)(monthToUse % MAX);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,171,if (remMonthToUse == 0) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,172,remMonthToUse = MAX;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,174,monthToUse = MAX - remMonthToUse + 1;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,175,if (monthToUse == 1) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,176,yearToUse += 1;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,180,if (yearToUse < iChronology.getMinYear() ||
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,181,yearToUse > iChronology.getMaxYear()) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,183,throw new IllegalArgumentException
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,184,"(""Magnitude of add amount is too large: "" + months);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,187,int i_yearToUse = (int)yearToUse;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,188,int i_monthToUse = (int)monthToUse;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,190,"int dayToUse = iChronology.getDayOfMonth(instant, thisYear, thisMonth);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,191,"int maxDay = iChronology.getDaysInYearMonth(i_yearToUse, i_monthToUse);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,192,if (dayToUse > maxDay) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,193,dayToUse = maxDay;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,196,long datePart =
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,197,"iChronology.getYearMonthDayMillis(i_yearToUse, i_monthToUse, dayToUse);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,198,return datePart + timePart;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,203,* Add to the Month component of the specified time instant
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,204,* wrapping around within that component if necessary.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,206,* @see org.joda.time.DateTimeField#addWrapField
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,207,* @param instant  the time instant in millis to update.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,208,* @param months  the months to add (can be negative).
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,209,* @return the updated time instant.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,211,"public long addWrapField(long instant, int months) {"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,212,"return set(instant, FieldUtils.getWrappedValue(get(instant), months, MIN, MAX));"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,216,"public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,217,if (minuendInstant < subtrahendInstant) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,218,"return -getDifference(subtrahendInstant, minuendInstant);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,221,int minuendYear = iChronology.getYear(minuendInstant);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,222,"int minuendMonth = iChronology.getMonthOfYear(minuendInstant, minuendYear);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,223,int subtrahendYear = iChronology.getYear(subtrahendInstant);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,224,"int subtrahendMonth = iChronology.getMonthOfYear(subtrahendInstant, subtrahendYear);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,226,long difference = (minuendYear - subtrahendYear) * 12L + minuendMonth - subtrahendMonth;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,228,"// Before adjusting for remainder, account for special case of add"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,229,// where the day-of-month is forced to the nearest sane value.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,230,int minuendDom = iChronology.getDayOfMonth
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,231,"(minuendInstant, minuendYear, minuendMonth);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,232,"if (minuendDom == iChronology.getDaysInYearMonth(minuendYear, minuendMonth)) {"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,233,// Last day of the minuend month...
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,234,int subtrahendDom = iChronology.getDayOfMonth
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,235,"(subtrahendInstant, subtrahendYear, subtrahendMonth);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,236,if (subtrahendDom > minuendDom) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,237,// ...and day of subtrahend month is larger.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,238,"// Note: This works fine, but it ideally shouldn't invoke other"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,239,// fields from within a field.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,240,"subtrahendInstant = iChronology.dayOfMonth().set(subtrahendInstant, minuendDom);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,244,// Inlined remainder method to avoid duplicate calls.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,245,long minuendRem = minuendInstant
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,246,"- iChronology.getYearMonthMillis(minuendYear, minuendMonth);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,247,long subtrahendRem = subtrahendInstant
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,248,"- iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,250,if (minuendRem < subtrahendRem) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,251,difference--;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,254,return difference;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,259,* Set the Month component of the specified time instant.<p>
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,260,* If the new month has less total days than the specified
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,261,"* day of the month, this value is coerced to the nearest"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,262,* sane value. e.g.<p>
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,263,* 07-31 to month 6 = 06-30<p>
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,264,* 03-31 to month 2 = 02-28 or 02-29 depending<p>
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,266,* @param instant  the time instant in millis to update.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,267,"* @param month  the month (1,12) to update the time to."
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,268,* @return the updated time instant.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,269,* @throws IllegalArgumentException  if month is invalid
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,271,"public long set(long instant, int month) {"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,272,"FieldUtils.verifyValueBounds(this, month, MIN, MAX);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,274,int thisYear = iChronology.getYear(instant);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,276,"int thisDom = iChronology.getDayOfMonth(instant, thisYear);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,277,"int maxDom = iChronology.getDaysInYearMonth(thisYear, month);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,278,if (thisDom > maxDom) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,279,// Quietly force DOM to nearest sane value.
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,280,thisDom = maxDom;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,282,// Return newly calculated millis value
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,283,"return iChronology.getYearMonthDayMillis(thisYear, month, thisDom) +"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,284,iChronology.getMillisOfDay(instant);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,288,public DurationField getRangeDurationField() {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,289,return iChronology.years();
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,293,public boolean isLeap(long instant) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,294,int thisYear = iChronology.getYear(instant);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,295,if (iChronology.isLeapYear(thisYear)) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,296,"return (iChronology.getMonthOfYear(instant, thisYear) == iLeapMonth);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,298,return false;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,302,public int getLeapAmount(long instant) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,303,return isLeap(instant) ? 1 : 0;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,307,public DurationField getLeapDurationField() {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,308,return iChronology.days();
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,312,public int getMinimumValue() {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,313,return MIN;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,317,public int getMaximumValue() {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,318,return MAX;
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,322,public long roundFloor(long instant) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,323,int year = iChronology.getYear(instant);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,324,"int month = iChronology.getMonthOfYear(instant, year);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,325,"return iChronology.getYearMonthMillis(year, month);"
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,329,public long remainder(long instant) {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,330,return instant - roundFloor(instant);
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,335,* Serialization singleton
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,337,private Object readResolve() {
True,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,338,return iChronology.monthOfYear();
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,20,mport org.joda.time.DateTimeConstants;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,21,mport org.joda.time.DateTimeFieldType;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,22,mport org.joda.time.DurationField;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,23,mport org.joda.time.field.FieldUtils;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,24,mport org.joda.time.field.ImpreciseDateTimeField;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,34,inal class GJMonthOfYearDateTimeField extends ImpreciseDateTimeField {
True,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,28,final class GJMonthOfYearDateTimeField extends BasicMonthOfYearDateTimeField {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,39,rivate static final int MIN = DateTimeConstants.JANUARY;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,40,rivate static final int MAX = DateTimeConstants.DECEMBER;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,42,rivate final BaseGJChronology iChronology;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,48,"uper(DateTimeFieldType.monthOfYear(), chronology.getAverageMillisPerMonth());"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,49,Chronology = chronology;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,52,ublic boolean isLenient() {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,53,eturn false;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,57, Get the Month component of the specified time instant.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,59, @see org.joda.time.DateTimeField#get(long)
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,60, @see org.joda.time.ReadableDateTime#getMonthOfYear()
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,61, @param instant  the time instant in millis to query.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,62, @return the month extracted from the input.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,64,ublic int get(long instant) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,65,eturn iChronology.getMonthOfYear(instant);
True,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,37,"super(chronology, 2);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,77, Add the specified month to the specified time instant.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,78, The amount added may be negative.<p>
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,79, If the new month has less total days than the specified
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,80," day of the month, this value is coerced to the nearest"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,81, sane value. e.g.<p>
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,82, 07-31 - (1 month) = 06-30<p>
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,83, 03-31 - (1 month) = 02-28 or 02-29 depending<p>
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,85, @see org.joda.time.DateTimeField#add
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,86, @see org.joda.time.ReadWritableDateTime#addMonths(int)
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,87, @param instant  the time instant in millis to update.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,88, @param months  the months to add (can be negative).
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,89, @return the updated time instant.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,91,"ublic long add(long instant, int months) {"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,92,f (months == 0) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,93,eturn instant; // the easy case
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,96,/ Save time part first.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,98,ong timePart = iChronology.getMillisOfDay(instant);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,101,/ Get this year and month.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,103,nt thisYear = iChronology.getYear(instant);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,104,"nt thisMonth = iChronology.getMonthOfYear(instant, thisYear);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,107,/ Do not refactor without careful consideration.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,108,/ Order of calculation is important.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,110,nt yearToUse;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,111,"/ Initially, monthToUse is zero-based"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,112,nt monthToUse = thisMonth - 1 + months;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,113,f (monthToUse >= 0) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,114,earToUse = thisYear + (monthToUse / MAX);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,115,onthToUse = (monthToUse % MAX) + 1;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,116, else {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,117,earToUse = thisYear + (monthToUse / MAX) - 1;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,118,onthToUse = Math.abs(monthToUse);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,119,nt remMonthToUse = monthToUse % MAX;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,120,/ Take care of the boundary condition
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,121,f (remMonthToUse == 0) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,122,emMonthToUse = MAX;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,124,onthToUse = MAX - remMonthToUse + 1;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,125,/ Take care of the boundary condition
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,126,f (monthToUse == 1) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,127,earToUse += 1;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,130,/ End of do not refactor.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,134,/ Quietly force DOM to nearest sane value.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,136,"nt dayToUse = iChronology.getDayOfMonth(instant, thisYear, thisMonth);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,137,"nt maxDay = iChronology.getDaysInYearMonth(yearToUse, monthToUse);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,138,f (dayToUse > maxDay) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,139,ayToUse = maxDay;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,142,"/ get proper date part, and return result"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,144,ong datePart =
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,145,"Chronology.getYearMonthDayMillis(yearToUse, monthToUse, dayToUse);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,146,eturn datePart + timePart;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,149,"ublic long add(long instant, long months) {"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,150,nt i_months = (int)months;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,151,f (i_months == months) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,152,"eturn add(instant, i_months);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,155,"/ Copied from add(long, int) and modified slightly:"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,157,ong timePart = iChronology.getMillisOfDay(instant);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,159,nt thisYear = iChronology.getYear(instant);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,160,"nt thisMonth = iChronology.getMonthOfYear(instant, thisYear);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,162,ong yearToUse;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,163,ong monthToUse = thisMonth - 1 + months;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,164,f (monthToUse >= 0) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,165,earToUse = thisYear + (monthToUse / MAX);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,166,onthToUse = (monthToUse % MAX) + 1;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,167, else {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,168,earToUse = thisYear + (monthToUse / MAX) - 1;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,169,onthToUse = Math.abs(monthToUse);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,170,nt remMonthToUse = (int)(monthToUse % MAX);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,171,f (remMonthToUse == 0) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,172,emMonthToUse = MAX;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,174,onthToUse = MAX - remMonthToUse + 1;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,175,f (monthToUse == 1) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,176,earToUse += 1;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,180,f (yearToUse < iChronology.getMinYear() ||
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,181,earToUse > iChronology.getMaxYear()) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,183,hrow new IllegalArgumentException
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,184,"""Magnitude of add amount is too large: "" + months);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,187,nt i_yearToUse = (int)yearToUse;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,188,nt i_monthToUse = (int)monthToUse;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,190,"nt dayToUse = iChronology.getDayOfMonth(instant, thisYear, thisMonth);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,191,"nt maxDay = iChronology.getDaysInYearMonth(i_yearToUse, i_monthToUse);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,192,f (dayToUse > maxDay) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,193,ayToUse = maxDay;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,196,ong datePart =
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,197,"Chronology.getYearMonthDayMillis(i_yearToUse, i_monthToUse, dayToUse);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,198,eturn datePart + timePart;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,202, Add to the Month component of the specified time instant
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,203, wrapping around within that component if necessary.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,205, @see org.joda.time.DateTimeField#addWrapField
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,206, @param instant  the time instant in millis to update.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,207, @param months  the months to add (can be negative).
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,208, @return the updated time instant.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,210,"ublic long addWrapField(long instant, int months) {"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,211,"eturn set(instant, FieldUtils.getWrappedValue(get(instant), months, MIN, MAX));"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,214,"ublic long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,215,f (minuendInstant < subtrahendInstant) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,216,"eturn -getDifference(subtrahendInstant, minuendInstant);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,219,nt minuendYear = iChronology.getYear(minuendInstant);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,220,"nt minuendMonth = iChronology.getMonthOfYear(minuendInstant, minuendYear);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,221,nt subtrahendYear = iChronology.getYear(subtrahendInstant);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,222,"nt subtrahendMonth = iChronology.getMonthOfYear(subtrahendInstant, subtrahendYear);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,224,ong difference = (minuendYear - subtrahendYear) * 12L + minuendMonth - subtrahendMonth;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,226,"/ Before adjusting for remainder, account for special case of add"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,227,/ where the day-of-month is forced to the nearest sane value.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,228,nt minuendDom = iChronology.getDayOfMonth
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,229,"minuendInstant, minuendYear, minuendMonth);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,230,"f (minuendDom == iChronology.getDaysInYearMonth(minuendYear, minuendMonth)) {"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,231,/ Last day of the minuend month...
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,232,nt subtrahendDom = iChronology.getDayOfMonth
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,233,"subtrahendInstant, subtrahendYear, subtrahendMonth);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,234,f (subtrahendDom > minuendDom) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,235,/ ...and day of subtrahend month is larger.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,236,"/ Note: This works fine, but it ideally shouldn't invoke other"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,237,/ fields from within a field.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,238,"ubtrahendInstant = iChronology.dayOfMonth().set(subtrahendInstant, minuendDom);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,242,/ Inlined remainder method to avoid duplicate calls.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,243,ong minuendRem = minuendInstant
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,244," iChronology.getYearMonthMillis(minuendYear, minuendMonth);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,245,ong subtrahendRem = subtrahendInstant
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,246," iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,248,f (minuendRem < subtrahendRem) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,249,ifference--;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,252,eturn difference;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,256, Set the Month component of the specified time instant.<p>
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,257, If the new month has less total days than the specified
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,258," day of the month, this value is coerced to the nearest"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,259, sane value. e.g.<p>
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,260, 07-31 to month 6 = 06-30<p>
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,261, 03-31 to month 2 = 02-28 or 02-29 depending<p>
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,263, @param instant  the time instant in millis to update.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,264," @param month  the month (1,12) to update the time to."
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,265, @return the updated time instant.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,266, @throws IllegalArgumentException  if month is invalid
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,268,"ublic long set(long instant, int month) {"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,269,"ieldUtils.verifyValueBounds(this, month, MIN, MAX);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,271,nt thisYear = iChronology.getYear(instant);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,273,"nt thisDom = iChronology.getDayOfMonth(instant, thisYear);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,274,"nt maxDom = iChronology.getDaysInYearMonth(thisYear, month);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,275,f (thisDom > maxDom) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,276,/ Quietly force DOM to nearest sane value.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,277,hisDom = maxDom;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,279,/ Return newly calculated millis value
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,280,"eturn iChronology.getYearMonthDayMillis(thisYear, month, thisDom) +"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,281,Chronology.getMillisOfDay(instant);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,285, Convert the specified text and locale into a value.
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,287, @param text  the text to convert
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,288, @param locale  the locale to convert using
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,289, @return the value extracted from the text
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,290, @throws IllegalArgumentException if the text is invalid
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,296,ublic DurationField getRangeDurationField() {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,297,eturn iChronology.years();
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,300,ublic boolean isLeap(long instant) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,301,nt thisYear = iChronology.getYear(instant);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,302,"nt thisMonth = iChronology.getMonthOfYear(instant, thisYear);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,303,f (thisMonth != 2) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,304,eturn false;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,305, else {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,306,"eturn 29 == iChronology.getDaysInYearMonth(thisYear, thisMonth);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,310,ublic int getLeapAmount(long instant) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,311,eturn isLeap(instant) ? 1 : 0;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,314,ublic DurationField getLeapDurationField() {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,315,eturn iChronology.days();
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,318,ublic int getMinimumValue() {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,319,eturn MIN;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,322,ublic int getMaximumValue() {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,323,eturn MAX;
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,334,ublic long roundFloor(long instant) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,335,nt year = iChronology.getYear(instant);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,336,"nt month = iChronology.getMonthOfYear(instant, year);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,337,"eturn iChronology.getYearMonthMillis(year, month);"
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,340,ublic long remainder(long instant) {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,341,eturn instant - roundFloor(instant);
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,345, Serialization singleton
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,347,rivate Object readResolve() {
False,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,348,eturn iChronology.monthOfYear();
