is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,20,mport org.joda.time.DateTimeField;
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,20,import org.joda.time.DateTimeConstants;
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,33, @since 1.0
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,33,* @author Stephen Colebourne
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,34,"* @since 1.2, refactored from CopticEraDateTimeField"
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,35,inal class CopticEraDateTimeField extends BaseDateTimeField {
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,37,** Serialization version */
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,38,rivate static final long serialVersionUID = 4090856468123006167L;
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,36,final class BasicSingleEraDateTimeField extends BaseDateTimeField {
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,41, Singleton instance
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,39,"* Value of the era, which will be the same as DateTimeConstants.CE."
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,43,tatic final DateTimeField INSTANCE = new CopticEraDateTimeField();
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,41,private static final int ERA_VALUE = DateTimeConstants.CE;
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,46, Restricted constructor
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,43,* Text value of the era.
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,48,rivate CopticEraDateTimeField() {
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,49,uper(DateTimeFieldType.era());
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,45,private final String iEraText;
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,53, Serialization singleton
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,48,* Restricted constructor.
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,55,rivate Object readResolve() {
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,56,eturn INSTANCE;
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,50,BasicSingleEraDateTimeField(String text) {
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,51,super(DateTimeFieldType.era());
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,52,iEraText = text;
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,55,/** @inheritDoc */
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,64, Get the Era component of the specified time instant.
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,66, @param instant  the time instant in millis to query.
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,67, @return the era extracted from the input.
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,60,/** @inheritDoc */
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,70,eturn CopticChronology.AM;
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,62,return ERA_VALUE;
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,74, Set the Era component of the specified time instant.
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,76, @param instant  the time instant in millis to update.
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,77, @param era  the era (CopticChronology.AM) to update the time to.
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,78, @return the updated time instant.
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,79, @throws IllegalArgumentException  if era is invalid.
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,65,/** @inheritDoc */
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,82,"ieldUtils.verifyValueBounds(this, era, getMinimumValue(), getMaximumValue());"
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,67,"FieldUtils.verifyValueBounds(this, era, ERA_VALUE, ERA_VALUE);"
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,88," @see org.joda.time.DateTimeField#set(long, String, Locale)"
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,71,/** @inheritDoc */
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,91,"f (""AM"".equals(text) == false) {"
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,73,"if (iEraText.equals(text) == false && ""1"".equals(text) == false) {"
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,79,/** @inheritDoc */
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,84,/** @inheritDoc */
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,89,/** @inheritDoc */
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,94,/** @inheritDoc */
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,99,/** @inheritDoc */
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,104,/** @inheritDoc */
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,109,/** @inheritDoc */
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,114,/** @inheritDoc */
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,126,eturn CopticChronology.AM;
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,116,return ERA_VALUE;
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,119,/** @inheritDoc */
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,130,eturn CopticChronology.AM;
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,121,return ERA_VALUE;
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,124,/** @inheritDoc */
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,134,"eturn ""AM"";"
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,126,return iEraText;
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,129,/** @inheritDoc */
False,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,138,eturn 2;
True,JodaTime/src/java/org/joda/time/chrono/CopticEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,131,return iEraText.length();
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,64,/** A singleton era field. */
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,65,"private static final DateTimeField ERA_FIELD = new BasicSingleEraDateTimeField(""BE"");"
False,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,210,ields.era = ThaiBuddhistEraDateTimeField.INSTANCE;
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,213,fields.era = ERA_FIELD;
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,24,import org.joda.time.DateTimeField;
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,67,/** A singleton era field. */
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,68,"private static final DateTimeField ERA_FIELD = new BasicSingleEraDateTimeField(""AM"");"
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,72,/ The lowest year that can be fully supported.
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,76,/** The lowest year that can be fully supported. */
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,75,/ The highest year that can be fully supported. Although
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,76,"/ calculateFirstDayOfYearMillis can go higher without overflowing, the"
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,77,/ getYear method overflows when it adds the approximate millis at the
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,78,/ epoch.
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,80,* The highest year that can be fully supported.
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,81,* Although calculateFirstDayOfYearMillis can go higher without
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,82,"* overflowing, the getYear method overflows when it adds the"
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,83,* approximate millis at the epoch.
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,87,/** Singleton 30 day month field used to build the monthOfYear field. */
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,359,ields.year = new BasicYearDateTimeField(this);
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,360,ields.years = fields.year.getDurationField();
False,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,366,ields.era = CopticEraDateTimeField.INSTANCE;
True,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,JodaTime/src/java/org/joda/time/chrono/CopticChronology.java,370,fields.era = ERA_FIELD;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,2,  Copyright 2001-2005 Stephen Colebourne
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,4,"  Licensed under the Apache License, Version 2.0 (the ""License"");"
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,5,  you may not use this file except in compliance with the License.
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,6,  You may obtain a copy of the License at
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,10,"  Unless required by applicable law or agreed to in writing, software"
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,11,"  distributed under the License is distributed on an ""AS IS"" BASIS,"
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,12,"  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,13,  See the License for the specific language governing permissions and
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,14,  limitations under the License.
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,16,ackage org.joda.time.chrono;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,18,mport java.util.Locale;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,20,mport org.joda.time.DateTimeField;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,21,mport org.joda.time.DateTimeFieldType;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,22,mport org.joda.time.DurationField;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,23,mport org.joda.time.DurationFieldType;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,24,mport org.joda.time.IllegalFieldValueException;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,25,mport org.joda.time.field.BaseDateTimeField;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,26,mport org.joda.time.field.FieldUtils;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,27,mport org.joda.time.field.UnsupportedDurationField;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,30, Provides time calculations for the buddhist era component of time.
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,32, @author Stephen Colebourne
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,33, @author Brian S O'Neill
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,34, @since 1.0
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,36,inal class ThaiBuddhistEraDateTimeField extends BaseDateTimeField {
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,38,** Serialization version */
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,39,rivate static final long serialVersionUID = -9175876774456816364L;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,42, Singleton instance
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,44,tatic final DateTimeField INSTANCE = new ThaiBuddhistEraDateTimeField();
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,47, Restricted constructor
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,49,rivate ThaiBuddhistEraDateTimeField() {
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,50,uper(DateTimeFieldType.era());
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,54, Serialization singleton
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,56,rivate Object readResolve() {
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,57,eturn INSTANCE;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,60,ublic boolean isLenient() {
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,61,eturn false;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,65, Get the Era component of the specified time instant.
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,67, @param instant  the time instant in millis to query.
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,68, @return the era extracted from the input.
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,70,ublic int get(long instant) {
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,71,eturn BuddhistChronology.BE;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,75, Set the Era component of the specified time instant.
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,77, @param instant  the time instant in millis to update.
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,78, @param era  the era (BuddhistChronology.BE) to update the time to.
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,79, @return the updated time instant.
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,80, @throws IllegalArgumentException  if era is invalid.
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,82,"ublic long set(long instant, int era) {"
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,83,"ieldUtils.verifyValueBounds(this, era, getMinimumValue(), getMaximumValue());"
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,85,eturn instant;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,89," @see org.joda.time.DateTimeField#set(long, String, Locale)"
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,91,"ublic long set(long instant, String text, Locale locale) {"
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,92,"f (""BE"".equals(text) == false) {"
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,93,"hrow new IllegalFieldValueException(DateTimeFieldType.era(), text);"
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,95,eturn instant;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,98,ublic long roundFloor(long instant) {
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,99,eturn Long.MIN_VALUE;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,102,ublic long roundCeiling(long instant) {
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,103,eturn Long.MAX_VALUE;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,106,ublic long roundHalfFloor(long instant) {
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,107,eturn Long.MIN_VALUE;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,110,ublic long roundHalfCeiling(long instant) {
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,111,eturn Long.MIN_VALUE;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,114,ublic long roundHalfEven(long instant) {
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,115,eturn Long.MIN_VALUE;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,118,ublic DurationField getDurationField() {
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,119,eturn UnsupportedDurationField.getInstance(DurationFieldType.eras());
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,122,ublic DurationField getRangeDurationField() {
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,123,eturn null;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,126,ublic int getMinimumValue() {
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,127,eturn BuddhistChronology.BE;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,130,ublic int getMaximumValue() {
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,131,eturn BuddhistChronology.BE;
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,134,"ublic String getAsText(int fieldValue, Locale locale) {"
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,135,"eturn ""BE"";"
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,138,ublic int getMaximumTextLength(Locale locale) {
False,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/ThaiBuddhistEraDateTimeField.java,139,eturn 2;
