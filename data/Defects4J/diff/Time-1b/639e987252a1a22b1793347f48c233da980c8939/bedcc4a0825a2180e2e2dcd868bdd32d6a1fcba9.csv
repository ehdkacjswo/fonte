is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,55,tatic {
False,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,56,ateTimeZone.setDefault(LONDON);
False,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,59,rivate static final ISOChronology ISO_DEFAULT = ISOChronology.getInstance();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,55,// the default time zone is set to LONDON in setUp()
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,56,// we have to hard code LONDON here (instead of ISOChronology.getInstance() etc.)
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,57,// as TestAll sets up a different time zone for better all-round testing
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,58,private static final ISOChronology ISO_DEFAULT = ISOChronology.getInstance(LONDON);
False,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,61,rivate static final GJChronology GJ_DEFAULT = GJChronology.getInstance();
False,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,62,rivate static final GregorianChronology GREGORIAN_DEFAULT = GregorianChronology.getInstance();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,60,private static final GJChronology GJ_DEFAULT = GJChronology.getInstance(LONDON);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,61,private static final GregorianChronology GREGORIAN_DEFAULT = GregorianChronology.getInstance(LONDON);
False,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,64,rivate static final BuddhistChronology BUDDHIST_DEFAULT = BuddhistChronology.getInstance();
False,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,65,rivate static final CopticChronology COPTIC_DEFAULT = CopticChronology.getInstance();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,63,private static final BuddhistChronology BUDDHIST_DEFAULT = BuddhistChronology.getInstance(LONDON);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,64,private static final CopticChronology COPTIC_DEFAULT = CopticChronology.getInstance(LONDON);
False,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,55,tatic {
False,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,56,ateTimeZone.setDefault(LONDON);
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,55,// the default time zone is set to LONDON in setUp()
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,56,// we have to hard code LONDON here (instead of ISOChronology.getInstance() etc.)
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,57,// as TestAll sets up a different time zone for better all-round testing
False,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,60,rivate static final ISOChronology ISO_DEFAULT = ISOChronology.getInstance();
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,59,private static final ISOChronology ISO_DEFAULT = ISOChronology.getInstance(LONDON);
False,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,62,rivate static final GJChronology GJ_DEFAULT = GJChronology.getInstance();
False,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,63,rivate static final GregorianChronology GREGORIAN_DEFAULT = GregorianChronology.getInstance();
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,61,private static final GJChronology GJ_DEFAULT = GJChronology.getInstance(LONDON);
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,62,private static final GregorianChronology GREGORIAN_DEFAULT = GregorianChronology.getInstance(LONDON);
False,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,66,rivate static final BuddhistChronology BUDDHIST_DEFAULT = BuddhistChronology.getInstance();
False,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,67,rivate static final CopticChronology COPTIC_DEFAULT = CopticChronology.getInstance();
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,65,private static final BuddhistChronology BUDDHIST_DEFAULT = BuddhistChronology.getInstance(LONDON);
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,66,private static final CopticChronology COPTIC_DEFAULT = CopticChronology.getInstance(LONDON);
