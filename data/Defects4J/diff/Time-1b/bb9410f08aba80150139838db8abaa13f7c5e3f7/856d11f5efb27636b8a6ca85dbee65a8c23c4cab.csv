is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,21,import java.io.FileNotFoundException;
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,133,"oadAndCompare(test, ""Instant.dat"", false);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,134,"loadAndCompare(test, ""Instant"", false);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,139,"oadAndCompare(test, ""DateTime.dat"", false);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,140,"loadAndCompare(test, ""DateTime"", false);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,145,"oadAndCompare(test, ""DateTimeProperty.dat"", false);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,146,"loadAndCompare(test, ""DateTimeProperty"", false);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,151,"oadAndCompare(test, ""MutableDateTime.dat"", false);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,152,"loadAndCompare(test, ""MutableDateTime"", false);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,157,"oadAndCompare(test, ""MutableDateTimeProperty.dat"", false);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,158,"loadAndCompare(test, ""MutableDateTimeProperty"", false);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,163,"oadAndCompare(test, ""DateMidnight.dat"", false);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,164,"loadAndCompare(test, ""DateMidnight"", false);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,169,"oadAndCompare(test, ""DateMidnightProperty.dat"", false);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,170,"loadAndCompare(test, ""DateMidnightProperty"", false);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,175,"oadAndCompare(test, ""LocalDate.dat"", false);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,176,"loadAndCompare(test, ""LocalDate"", false);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,177,"inlineCompare(test, false);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,180,public void testSerializedLocalDateBuddhist() throws Exception {
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,181,LocalDate test = new LocalDate(BuddhistChronology.getInstanceUTC());
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,182,"loadAndCompare(test, ""LocalDateBuddhist"", false);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,181,"oadAndCompare(test, ""LocalTime.dat"", false);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,188,"loadAndCompare(test, ""LocalTime"", false);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,187,"oadAndCompare(test, ""LocalDateTime.dat"", false);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,194,"loadAndCompare(test, ""LocalDateTime"", false);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,193,"oadAndCompare(test, ""YearMonthDay.dat"", false);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,200,"loadAndCompare(test, ""YearMonthDay"", false);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,199,"oadAndCompare(test, ""TimeOfDay.dat"", false);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,206,"loadAndCompare(test, ""TimeOfDay"", false);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,205,"oadAndCompare(test, ""DateTimeZoneUTC.dat"", true);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,212,"loadAndCompare(test, ""DateTimeZoneUTC"", true);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,213,"oadAndCompare(test, ""DateTimeZone.dat"", true);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,220,"loadAndCompare(test, ""DateTimeZone"", true);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,219,"oadAndCompare(test, ""CopticChronology.dat"", true);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,226,"loadAndCompare(test, ""CopticChronology"", true);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,225,"oadAndCompare(test, ""ISOChronology.dat"", true);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,232,"loadAndCompare(test, ""ISOChronology"", true);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,231,"oadAndCompare(test, ""GJChronology.dat"", true);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,238,"loadAndCompare(test, ""GJChronology"", true);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,237,"oadAndCompare(test, ""GJChronologyChangedInternals.dat"", true);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,244,"loadAndCompare(test, ""GJChronologyChangedInternals"", true);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,243,"oadAndCompare(test, ""GregorianChronology.dat"", true);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,250,"loadAndCompare(test, ""GregorianChronology"", true);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,249,"oadAndCompare(test, ""JulianChronology.dat"", true);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,256,"loadAndCompare(test, ""JulianChronology"", true);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,255,"oadAndCompare(test, ""BuddhistChronology.dat"", true);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,262,"loadAndCompare(test, ""BuddhistChronology"", true);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,261,"oadAndCompare(test, ""PeriodType.dat"", false);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,268,"loadAndCompare(test, ""PeriodType"", false);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,267,"oadAndCompare(test, ""DateTimeFieldType.dat"", true);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,274,"loadAndCompare(test, ""DateTimeFieldType"", true);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,275,"oadAndCompare(test, ""UnsupportedDateTimeField.dat"", true);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,282,"loadAndCompare(test, ""UnsupportedDateTimeField"", true);"
False,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,280,"ileInputStream fis = new FileInputStream(""src/test/resources/"" + filename);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,287,"FileInputStream fis = new FileInputStream(""src/test/resources/"" + filename + "".dat"");"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,297,try {
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,298,"fis = new FileInputStream(""src/test/resources/"" + filename + ""2.dat"");"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,299,ois = new ObjectInputStream(fis);
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,300,obj = ois.readObject();
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,301,ois.close();
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,302,if (same) {
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,303,"assertSame(test, obj);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,304,} else {
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,305,"assertEquals(test, obj);"
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,307,} catch (FileNotFoundException ex) {
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,308,// ignore
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,356,//    public void testStoreSerializedLocalDateBuddhist() throws Exception {
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,357,//        LocalDate test = new LocalDate(BuddhistChronology.getInstanceUTC());
True,JodaTime/src/test/java/org/joda/time/TestSerialization.java,JodaTime/src/test/java/org/joda/time/TestSerialization.java,358,"//        store(test, ""LocalDateBuddhist.dat"");"
