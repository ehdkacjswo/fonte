is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,422,* Get the minimum value for this field evaluated at the specified time.
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,424,* @param instant  the partial instant to query
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,425,"* @return the minimum value for this field, in the units of the field"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,427,public abstract int getMinimumValue(PartialInstant instant);
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,446,* Get the maximum value for this field evaluated at the specified time.
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,448,* @param instant  the partial instant to query
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,449,"* @return the maximum value for this field, in the units of the field"
True,JodaTime/src/java/org/joda/time/DateTimeField.java,JodaTime/src/java/org/joda/time/DateTimeField.java,451,public abstract int getMaximumValue(PartialInstant instant);
True,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,438,* Gets the maximum days in the specified month.
True,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,440,* @param month  the month
True,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,441,* @return the max days
True,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,443,final int getDaysInMonthMax(int month) {
True,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,JodaTime/src/java/org/joda/time/chrono/AbstractGJChronology.java,444,return MAX_DAYS_PER_MONTH_ARRAY[month - 1];
True,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,58,import org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,103,public int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,104,if (instant.isSupported(iChronology.monthOfYear())) {
True,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,105,int month = instant.get(iChronology.monthOfYear());
True,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,106,if (month <= 12) {
True,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,107,return 30;
True,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,109,if (instant.isSupported(iChronology.year())) {
True,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,110,int year = instant.get(iChronology.year());
True,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,111,return iChronology.isLeapYear(year) ? 6 : 5;
True,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,113,return 6;
True,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/CopticDayOfMonthDateTimeField.java,115,return 30;
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,58,import org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,110,public int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,111,if (instant.isSupported(iChronology.monthOfYear())) {
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,112,int month = instant.get(iChronology.monthOfYear());
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,113,if (instant.isSupported(iChronology.year())) {
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,114,int year = instant.get(iChronology.year());
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,115,"return iChronology.getDaysInYearMonth(year, month);"
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,117,return iChronology.getDaysInMonthMax(month);
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfMonthDateTimeField.java,119,return 31;
False,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,56,mport org.joda.time.DateTimeConstants;
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,58,import org.joda.time.partial.PartialInstant;
False,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,105,nt thisYear = iChronology.getYear(instant);
False,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,106,eturn iChronology.getDaysInYear(thisYear);
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,105,int year = iChronology.getYear(instant);
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,106,return iChronology.getDaysInYear(year);
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,109,public int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,110,if (instant.isSupported(iChronology.year())) {
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,111,int year = instant.get(iChronology.year());
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,112,return iChronology.getDaysInYear(year);
True,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJDayOfYearDateTimeField.java,114,return 366;
False,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,57,mport org.joda.time.DateTimeField;
True,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,59,import org.joda.time.partial.PartialInstant;
False,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,125,nt thisYear = iChronology.getWeekyear(instant);
False,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,126,eturn iChronology.getWeeksInYear(thisYear);
True,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,125,int weekyear = iChronology.getWeekyear(instant);
True,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,126,return iChronology.getWeeksInYear(weekyear);
True,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,129,public int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,130,if (instant.isSupported(iChronology.weekyear())) {
True,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,131,int weekyear = instant.get(iChronology.weekyear());
True,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,132,return iChronology.getWeeksInYear(weekyear);
True,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,JodaTime/src/java/org/joda/time/chrono/GJWeekOfWeekyearDateTimeField.java,134,return 53;
False,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,367,"ieldUtils.verifyValueBounds(this, value, getMinimumValue(), getMaximumValue());"
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,367,"FieldUtils.verifyValueBounds(this, value, getMinimumValue(instant), getMaximumValue(instant));"
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,474,* Get the minimum value for this field evaluated at the specified time.
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,475,* <p>
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,476,* This implementation returns the same as {@link #getMinimumValue()}.
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,478,* @param instant  the partial instant to query
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,479,"* @return the minimum value for this field, in the units of the field"
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,481,public int getMinimumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,482,return getMinimumValue();
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,506,* Get the maximum value for this field evaluated at the specified time.
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,507,* <p>
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,508,* This implementation returns the same as {@link #getMaximumValue()}.
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,510,* @param instant  the partial instant to query
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,511,"* @return the maximum value for this field, in the units of the field"
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,513,public int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java,514,return getMaximumValue();
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,228,public int getMinimumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,229,return iField.getMinimumValue(instant);
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,240,public int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java,241,return iField.getMaximumValue(instant);
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,58,import org.joda.time.partial.PartialInstant;
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,153,* Always returns 1.
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,155,* @return the minimum value of 1
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,157,public int getMinimumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,158,return 1;
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,182,"* Get the maximum value for the field, which is one more than the wrapped"
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,183,* field's maximum value.
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,185,* @return the maximum value
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,187,public int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,JodaTime/src/java/org/joda/time/field/NonZeroDateTimeField.java,188,return getWrappedField().getMaximumValue(instant) + 1;
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,324,* Always throws UnsupportedOperationException
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,326,* @throws UnsupportedOperationException
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,328,public int getMinimumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,329,throw unsupported();
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,351,* Always throws UnsupportedOperationException
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,353,* @throws UnsupportedOperationException
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,355,public int getMaximumValue(PartialInstant instant) {
True,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java,356,throw unsupported();
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,178,/ TODO
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,180,/     * Gets the minimum value for the field ignoring the current time.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,182,/     * @return the minimum value
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,183,/     * @see DateTimeField#getMinimumValue
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,185,/    public int getMinimumValueOverall() {
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,186,/        return getField().getMinimumValue();
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,190,/     * Gets the minimum value for the field.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,192,/     * @return the minimum value
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,193,/     * @see DateTimeField#getMinimumValue
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,195,/    public int getMinimumValue() {
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,196,"/        return getField().getMinimumValue(getPartialInstant(), get());"
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,200,/     * Gets the maximum value for the field ignoring the current time.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,202,/     * @return the maximum value
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,203,/     * @see DateTimeField#getMaximumValue
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,205,/    public int getMaximumValueOverall() {
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,206,/        return getField().getMaximumValue();
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,210,/     * Gets the maximum value for the field.
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,212,/     * @return the maximum value
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,213,/     * @see DateTimeField#getMaximumValue
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,215,/    public int getMaximumValue() {
False,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,216,"/        return getField().getMaximumValue(getPartialInstant(), get());"
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,179,* Gets the minimum value for the field ignoring the current time.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,181,* @return the minimum value
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,182,* @see DateTimeField#getMinimumValue
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,184,public int getMinimumValueOverall() {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,185,return getField().getMinimumValue();
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,189,* Gets the minimum value for this field given the current field values.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,191,* @return the minimum value
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,192,* @see DateTimeField#getMinimumValue
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,194,public int getMinimumValue() {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,195,return getField().getMinimumValue(getPartialInstant());
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,199,* Gets the maximum value for the field ignoring the current time.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,201,* @return the maximum value
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,202,* @see DateTimeField#getMaximumValue
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,204,public int getMaximumValueOverall() {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,205,return getField().getMaximumValue();
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,209,* Gets the maximum value for this field given the current field values.
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,211,* @return the maximum value
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,212,* @see DateTimeField#getMaximumValue
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,214,public int getMaximumValue() {
True,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/partial/AbstractPartialFieldProperty.java,215,return getField().getMaximumValue(getPartialInstant());
False,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,340,ublic void testProperty() {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,340,public void testPropertyGet() {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,355,"assertEquals(0, test.hourOfDay().getMinimumValue());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,356,"assertEquals(0, test.hourOfDay().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,357,"assertEquals(23, test.hourOfDay().getMaximumValue());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,358,"assertEquals(23, test.hourOfDay().getMaximumValueOverall());"
