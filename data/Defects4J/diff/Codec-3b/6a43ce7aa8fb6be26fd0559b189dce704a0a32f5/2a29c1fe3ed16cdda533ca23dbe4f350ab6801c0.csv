is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,129, else if (offset < 0 || len < 0 || offset + len < 0) {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,129,} else if (offset < 0 || len < 0) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,118, else if (offset < 0 || len < 0 || offset + len < 0) {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,118,} else if (offset < 0 || len < 0) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,313,try {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,314,"in.read(buf, 0, -1);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,315,"fail(""Expected Base64InputStream.read(buf, 0, -1) to throw IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,316,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,317,// Expected
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,327,try {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,328,"in.read(buf, buf.length - 1, 2);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,329,"fail(""Base64InputStream.read(buf, buf.length - 1, 2) throws IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,330,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,331,// Expected
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,37,"private static final String STRING_FIXTURE = ""Hello World"";"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,39,"private static final String UTF_8_NAME = ""UTF-8"";"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,68,"yte[] encoded = ""SGVsbG8gV29ybGQ=\r\n"".getBytes(""UTF-8"");"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,69,"yte[] decoded = ""Hello World"".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,72,"byte[] encoded = ""SGVsbG8gV29ybGQ=\r\n"".getBytes(UTF_8_NAME);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,73,byte[] decoded = STRING_FIXTURE.getBytes(UTF_8_NAME);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,73,"ncoded = ""AA==\r\n"".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,77,"encoded = ""AA==\r\n"".getBytes(UTF_8_NAME);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,78,"ncoded = Base64TestData.ENCODED.getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,82,encoded = Base64TestData.ENCODED.getBytes(UTF_8_NAME);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,84,"ncoded = singleLine.getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,88,encoded = singleLine.getBytes(UTF_8_NAME);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,105,"yte[] encoded = ""SGVsbG8gV29ybGQ=\r\n"".getBytes(""UTF-8"");"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,106,"yte[] decoded = ""Hello World"".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,109,"byte[] encoded = ""SGVsbG8gV29ybGQ=\r\n"".getBytes(UTF_8_NAME);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,110,byte[] decoded = STRING_FIXTURE.getBytes(UTF_8_NAME);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,115,"ncoded = Base64TestData.ENCODED.getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,119,encoded = Base64TestData.ENCODED.getBytes(UTF_8_NAME);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,121,"ncoded = singleLine.getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,125,encoded = singleLine.getBytes(UTF_8_NAME);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,160,"ssertTrue(""Streaming base64 encode"", Arrays.equals(output, encoded));"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,164,"assertTrue(""Streaming chunked base64 encode"", Arrays.equals(output, encoded));"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,168,"ssertTrue(""Streaming base64 decode"", Arrays.equals(output, decoded));"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,172,"assertTrue(""Streaming chunked base64 decode"", Arrays.equals(output, decoded));"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,181,"ssertTrue(""Streaming base64 wrap-wrap-wrap!"", Arrays.equals(output, decoded));"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,185,"assertTrue(""Streaming chunked base64 wrap-wrap-wrap!"", Arrays.equals(output, decoded));"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,212,"ssertTrue(""Streaming base64 encode"", Arrays.equals(output, encoded));"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,216,"assertTrue(""Streaming byte-by-byte base64 encode"", Arrays.equals(output, encoded));"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,222,"ssertTrue(""Streaming base64 decode"", Arrays.equals(output, decoded));"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,226,"assertTrue(""Streaming byte-by-byte base64 decode"", Arrays.equals(output, decoded));"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,228,// Now let's try decode with tonnes of flushes.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,229,byteOut = new ByteArrayOutputStream();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,230,"out = new Base64OutputStream(byteOut, false);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,231,for (int i = 0; i < encoded.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,232,out.write(encoded[i]);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,233,out.flush();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,235,out.close();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,236,output = byteOut.toByteArray();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,237,"assertTrue(""Streaming byte-by-byte flush() base64 decode"", Arrays.equals(output, decoded));"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,237,"ssertTrue(""Streaming base64 wrap-wrap-wrap!"", Arrays.equals(output, decoded));"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,252,"assertTrue(""Streaming byte-by-byte base64 wrap-wrap-wrap!"", Arrays.equals(output, decoded));"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,252,"ut.write(buf, -1, 0);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,253,"ail(""Expected Base64OutputStream.write(buf, -1, 0) to throw a IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,267,"out.write(buf, -1, 1);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,268,"fail(""Expected Base64OutputStream.write(buf, -1, 1) to throw a IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,269,} catch (IndexOutOfBoundsException ioobe) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,270,// Expected
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,273,try {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,274,"out.write(buf, 1, -1);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,275,"fail(""Expected Base64OutputStream.write(buf, 1, -1) to throw a IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,287,try {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,288,"out.write(buf, buf.length - 1, 2);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,289,"fail(""Expected Base64OutputStream.write(buf, buf.length - 1, 2) to throw a IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,290,} catch (IndexOutOfBoundsException ioobe) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,291,// Expected
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,844,"assertFalse(""url-safe i="" + i + "" no '='"", Base64TestData.bytesContain(encoded, (byte) '='));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,845,"assertFalse(""url-safe i="" + i + "" no '\\'"", Base64TestData.bytesContain(encoded, (byte) '\\'));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,846,"assertFalse(""url-safe i="" + i + "" no '+'"", Base64TestData.bytesContain(encoded, (byte) '+'));"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,168,"ublic static byte[][] randomData(int size, boolean urlSafe) {"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,168,"static byte[][] randomData(int size, boolean urlSafe) {"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,177,* Tests the supplied byte[] array to see if it contains the specified byte c.
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,179,* @param bytes byte[] array to test
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,180,* @param c byte to look for
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,181,"* @return true if bytes contains c, false otherwise"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,183,"static boolean bytesContain(byte[] bytes, byte c) {"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,184,for (int i = 0; i < bytes.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,185,if (bytes[i] == c) { return true; }
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,187,return false;
