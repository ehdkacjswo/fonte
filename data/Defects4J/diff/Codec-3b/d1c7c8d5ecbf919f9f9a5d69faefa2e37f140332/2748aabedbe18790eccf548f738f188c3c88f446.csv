is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,19,import java.io.UnsupportedEncodingException;
True,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,148,"public void testDecodeInvalidContent() throws UnsupportedEncodingException, DecoderException {"
True,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,149,String ch_msg = constructString(SWISS_GERMAN_STUFF_UNICODE);
True,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,150,URLCodec urlCodec = new URLCodec();
True,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,151,"byte[] input = ch_msg.getBytes(""ISO-8859-1"");"
True,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,152,byte[] output = urlCodec.decode(input);
True,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,153,"assertEquals(input.length, output.length);"
True,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,154,for (int i = 0; i < input.length; i++) {
True,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,155,"assertEquals(input[i], output[i]);"
True,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,157,this.validateState(urlCodec);
