is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,29,* @since 1.4
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,37,"private static final String STRING_FIXTURE = ""Hello World"";"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,39,"private static final String UTF_8_NAME = ""UTF-8"";"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,39, @param name Name of the test case
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,44,* @param name
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,45,*            Name of the test case
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,46, Test the Base64InputStream implementation against empty input.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,48, @throws Exception for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,52,* Tests the Base64InputStream implementation against empty input.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,54,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,55,*             for some failure scenarios.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,58, Test the Base64InputStream implementation.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,60, @throws Exception for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,65,* Tests the Base64InputStream implementation.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,67,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,68,*             for some failure scenarios.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,62,ublic void testBase64InputStreamByteByByte() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,70,public void testBase64InputStreamByChunk() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,64,"yte[] encoded = ""SGVsbG8gV29ybGQ=\r\n"".getBytes(""UTF-8"");"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,65,"yte[] decoded = ""Hello World"".getBytes(""UTF-8"");"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,66,"estByteByByte(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,72,"byte[] encoded = ""SGVsbG8gV29ybGQ=\r\n"".getBytes(UTF_8_NAME);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,73,byte[] decoded = STRING_FIXTURE.getBytes(UTF_8_NAME);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,74,"testByChunk(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,69,"ncoded = ""AA==\r\n"".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,77,"encoded = ""AA==\r\n"".getBytes(UTF_8_NAME);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,71,"estByteByByte(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,79,"testByChunk(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,74,"ncoded = Base64TestData.ENCODED.getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,82,encoded = Base64TestData.ENCODED.getBytes(UTF_8_NAME);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,76,"estByteByByte(encoded, decoded, 64, LF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,84,"testByChunk(encoded, decoded, 64, LF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,80,"ncoded = singleLine.getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,88,encoded = singleLine.getBytes(UTF_8_NAME);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,82,"estByteByByte(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,90,"testByChunk(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,92,// test random data of sizes 0 thru 150
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,93,for (int i = 0; i <= 150; i++) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,94,"byte[][] randomData = Base64TestData.randomData(i, false);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,95,encoded = randomData[1];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,96,decoded = randomData[0];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,97,"testByChunk(encoded, decoded, 0, LF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,86, Test the Base64InputStream implementation.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,88, @throws Exception for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,102,* Tests the Base64InputStream implementation.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,104,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,105,*             for some failure scenarios.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,90,ublic void testBase64InputStreamByChunk() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,107,public void testBase64InputStreamByteByByte() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,92,"yte[] encoded = ""SGVsbG8gV29ybGQ=\r\n"".getBytes(""UTF-8"");"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,93,"yte[] decoded = ""Hello World"".getBytes(""UTF-8"");"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,94,"estByChunk(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,109,"byte[] encoded = ""SGVsbG8gV29ybGQ=\r\n"".getBytes(UTF_8_NAME);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,110,byte[] decoded = STRING_FIXTURE.getBytes(UTF_8_NAME);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,111,"testByteByByte(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,97,"ncoded = ""AA==\r\n"".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,114,"encoded = ""AA==\r\n"".getBytes(UTF_8_NAME);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,99,"estByChunk(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,116,"testByteByByte(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,102,"ncoded = Base64TestData.ENCODED.getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,119,encoded = Base64TestData.ENCODED.getBytes(UTF_8_NAME);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,104,"estByChunk(encoded, decoded, 64, LF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,121,"testByteByByte(encoded, decoded, 64, LF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,108,"ncoded = singleLine.getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,125,encoded = singleLine.getBytes(UTF_8_NAME);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,110,"estByChunk(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,127,"testByteByByte(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,129,// test random data of sizes 0 thru 150
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,130,for (int i = 0; i <= 150; i++) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,131,"byte[][] randomData = Base64TestData.randomData(i, false);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,132,encoded = randomData[1];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,133,decoded = randomData[0];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,134,"testByteByByte(encoded, decoded, 0, LF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,115, Test method does three tests on the supplied data:
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,116, 1. encoded ---[DECODE]--> decoded
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,117, 2. decoded ---[ENCODE]--> encoded
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,118, 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,139,* Tests method does three tests on the supplied data: 1. encoded ---[DECODE]--> decoded 2. decoded ---[ENCODE]-->
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,140,* encoded 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,120," By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,121, Base64InputStream wraps itself in encode and decode mode
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,142,"* By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the Base64InputStream wraps itself in encode and decode mode"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,124, @param encoded   base64 encoded data
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,125," @param decoded   the data from above, but decoded"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,126, @param chunkSize chunk size (line-length) of the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,127, @param seperator Line separator in the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,128, @throws Exception Usually signifies a bug in the Base64 commons-codec implementation.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,145,* @param encoded
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,146,*            base64 encoded data
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,147,* @param decoded
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,148,"*            the data from above, but decoded"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,149,* @param chunkSize
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,150,*            chunk size (line-length) of the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,151,* @param seperator
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,152,*            Line separator in the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,153,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,154,*             Usually signifies a bug in the Base64 commons-codec implementation.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,130,rivate void testByteByByte(
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,131,"yte[] encoded, byte[] decoded, int chunkSize, byte[] seperator"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,132, throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,156,"private void testByChunk(byte[] encoded, byte[] decoded, int chunkSize, byte[] seperator) throws Exception {"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,137,yte[] output = new byte[encoded.length];
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,138,or (int i = 0; i < output.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,139,utput[i] = (byte) in.read();
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,161,byte[] output = Base64TestData.streamToBytes(in);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,149,utput = new byte[decoded.length];
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,150,or (int i = 0; i < output.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,151,utput[i] = (byte) in.read();
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,170,output = Base64TestData.streamToBytes(in);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,158,/ I always wanted to do this!  (wrap encoder with decoder etc etc).
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,176,// I always wanted to do this! (wrap encoder with decoder etc etc).
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,164,utput = new byte[decoded.length];
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,165,or (int i = 0; i < output.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,166,utput[i] = (byte) in.read();
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,182,output = Base64TestData.streamToBytes(in);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,175, Test method does three tests on the supplied data:
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,176, 1. encoded ---[DECODE]--> decoded
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,177, 2. decoded ---[ENCODE]--> encoded
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,178, 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,190,* Tests method does three tests on the supplied data: 1. encoded ---[DECODE]--> decoded 2. decoded ---[ENCODE]-->
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,191,* encoded 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,180," By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,181, Base64InputStream wraps itself in encode and decode mode
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,193,"* By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the Base64InputStream wraps itself in encode and decode mode"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,184, @param encoded   base64 encoded data
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,185," @param decoded   the data from above, but decoded"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,186, @param chunkSize chunk size (line-length) of the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,187, @param seperator Line separator in the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,188, @throws Exception Usually signifies a bug in the Base64 commons-codec implementation.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,196,* @param encoded
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,197,*            base64 encoded data
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,198,* @param decoded
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,199,"*            the data from above, but decoded"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,200,* @param chunkSize
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,201,*            chunk size (line-length) of the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,202,* @param seperator
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,203,*            Line separator in the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,204,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,205,*             Usually signifies a bug in the Base64 commons-codec implementation.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,190,rivate void testByChunk(
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,191,"yte[] encoded, byte[] decoded, int chunkSize, byte[] seperator"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,192, throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,207,"private void testByteByByte(byte[] encoded, byte[] decoded, int chunkSize, byte[] seperator) throws Exception {"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,197,yte[] output = Base64TestData.streamToBytes(in);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,212,byte[] output = new byte[encoded.length];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,213,for (int i = 0; i < output.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,214,output[i] = (byte) in.read();
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,206,utput = Base64TestData.streamToBytes(in);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,224,output = new byte[decoded.length];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,225,for (int i = 0; i < output.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,226,output[i] = (byte) in.read();
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,212,/ I always wanted to do this!  (wrap encoder with decoder etc etc).
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,233,// I always wanted to do this! (wrap encoder with decoder etc etc).
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,218,utput = Base64TestData.streamToBytes(in);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,239,output = new byte[decoded.length];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,240,for (int i = 0; i < output.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,241,output[i] = (byte) in.read();
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,250,* Tests markSupported.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,252,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,254,public void testMarkSupported() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,255,byte[] decoded = STRING_FIXTURE.getBytes(UTF_8_NAME);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,256,ByteArrayInputStream bin = new ByteArrayInputStream(decoded);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,257,"Base64InputStream in = new Base64InputStream(bin, true, 4, new byte[]{0, 0, 0});"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,258,// Always returns false for now.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,259,"assertFalse(""Base64InputStream.markSupported() is false"", in.markSupported());"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,263,* Tests read returning 0
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,265,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,267,public void testRead0() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,268,byte[] decoded = STRING_FIXTURE.getBytes(UTF_8_NAME);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,269,byte[] buf = new byte[1024];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,270,int bytesRead = 0;
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,271,ByteArrayInputStream bin = new ByteArrayInputStream(decoded);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,272,"Base64InputStream in = new Base64InputStream(bin, true, 4, new byte[]{0, 0, 0});"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,273,"bytesRead = in.read(buf, 0, 0);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,274,"assertEquals(""Base64InputStream.read(buf, 0, 0) returns 0"", 0, bytesRead);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,278,* Tests read with null.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,280,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,281,*             for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,283,public void testReadNull() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,284,byte[] decoded = STRING_FIXTURE.getBytes(UTF_8_NAME);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,285,ByteArrayInputStream bin = new ByteArrayInputStream(decoded);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,286,"Base64InputStream in = new Base64InputStream(bin, true, 4, new byte[]{0, 0, 0});"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,287,try {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,288,"in.read(null, 0, 0);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,289,"fail(""Base64InputStream.read(null, 0, 0) to throw a NullPointerException"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,290,} catch (NullPointerException e) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,291,// Expected
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,296,* Tests read throwing IndexOutOfBoundsException
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,298,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,300,public void testReadOutOfBounds() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,301,byte[] decoded = STRING_FIXTURE.getBytes(UTF_8_NAME);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,302,byte[] buf = new byte[1024];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,303,ByteArrayInputStream bin = new ByteArrayInputStream(decoded);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,304,"Base64InputStream in = new Base64InputStream(bin, true, 4, new byte[]{0, 0, 0});"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,306,try {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,307,"in.read(buf, -1, 0);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,308,"fail(""Expected Base64InputStream.read(buf, -1, 0) to throw IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,309,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,310,// Expected
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,313,try {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,314,"in.read(buf, buf.length + 1, 0);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,315,"fail(""Base64InputStream.read(buf, buf.length + 1, 0) throws IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,316,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,317,// Expected
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,29,* @since 1.4
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,39, @param name Name of the test case
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,40,* @param name
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,41,*            Name of the test case
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,48, @throws Exception for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,50,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,51,*             for some failure scenarios.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,60, @throws Exception for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,63,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,64,*             for some failure scenarios.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,62,ublic void testBase64OutputStreamByteByByte() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,66,public void testBase64OutputStreamByChunk() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,66,"estByteByByte(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,70,"testByChunk(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,71,"estByteByByte(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,75,"testByChunk(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,76,"estByteByByte(encoded, decoded, 64, LF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,80,"testByChunk(encoded, decoded, 64, LF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,82,"estByteByByte(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,86,"testByChunk(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,88,// test random data of sizes 0 thru 150
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,89,for (int i = 0; i <= 150; i++) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,90,"byte[][] randomData = Base64TestData.randomData(i, false);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,91,encoded = randomData[1];
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,92,decoded = randomData[0];
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,93,"testByChunk(encoded, decoded, 0, LF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,88, @throws Exception for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,100,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,101,*             for some failure scenarios.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,90,ublic void testBase64OutputStreamByChunk() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,103,public void testBase64OutputStreamByteByByte() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,94,"estByChunk(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,107,"testByteByByte(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,99,"estByChunk(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,112,"testByteByByte(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,104,"estByChunk(encoded, decoded, 64, LF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,117,"testByteByByte(encoded, decoded, 64, LF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,110,"estByChunk(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,123,"testByteByByte(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,125,// test random data of sizes 0 thru 150
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,126,for (int i = 0; i <= 150; i++) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,127,"byte[][] randomData = Base64TestData.randomData(i, false);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,128,encoded = randomData[1];
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,129,decoded = randomData[0];
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,130,"testByteByByte(encoded, decoded, 0, LF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,115, Test method does three tests on the supplied data:
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,116, 1. encoded ---[DECODE]--> decoded
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,117, 2. decoded ---[ENCODE]--> encoded
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,118, 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,135,* Test method does three tests on the supplied data: 1. encoded ---[DECODE]--> decoded 2. decoded ---[ENCODE]-->
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,136,* encoded 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,120," By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,121, Base64OutputStream wraps itself in encode and decode mode
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,122, over and over again.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,124, @param encoded   base64 encoded data
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,125," @param decoded   the data from above, but decoded"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,126, @param chunkSize chunk size (line-length) of the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,127, @param seperator Line separator in the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,128, @throws Exception Usually signifies a bug in the Base64 commons-codec implementation.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,138,"* By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the Base64OutputStream wraps itself in encode and decode"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,139,* mode over and over again.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,141,* @param encoded
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,142,*            base64 encoded data
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,143,* @param decoded
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,144,"*            the data from above, but decoded"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,145,* @param chunkSize
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,146,*            chunk size (line-length) of the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,147,* @param seperator
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,148,*            Line separator in the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,149,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,150,*             Usually signifies a bug in the Base64 commons-codec implementation.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,130,rivate void testByteByByte(
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,131,"yte[] encoded, byte[] decoded, int chunkSize, byte[] seperator"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,132, throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,152,"private void testByChunk(byte[] encoded, byte[] decoded, int chunkSize, byte[] seperator) throws Exception {"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,137,or (int i = 0; i < decoded.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,138,ut.write(decoded[i]);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,157,out.write(decoded);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,147,or (int i = 0; i < encoded.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,148,ut.write(encoded[i]);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,165,out.write(encoded);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,154,/ I always wanted to do this!  (wrap encoder with decoder etc etc).
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,170,// I always wanted to do this! (wrap encoder with decoder etc etc).
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,161,or (int i = 0; i < decoded.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,162,ut.write(decoded[i]);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,177,out.write(decoded);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,171, Test method does three tests on the supplied data:
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,172, 1. encoded ---[DECODE]--> decoded
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,173, 2. decoded ---[ENCODE]--> encoded
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,174, 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,185,* Test method does three tests on the supplied data: 1. encoded ---[DECODE]--> decoded 2. decoded ---[ENCODE]-->
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,186,* encoded 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,176," By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,177, Base64OutputStream wraps itself in encode and decode mode
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,178, over and over again.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,180, @param encoded   base64 encoded data
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,181," @param decoded   the data from above, but decoded"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,182, @param chunkSize chunk size (line-length) of the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,183, @param seperator Line separator in the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,184, @throws Exception Usually signifies a bug in the Base64 commons-codec implementation.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,188,"* By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the Base64OutputStream wraps itself in encode and decode"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,189,* mode over and over again.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,191,* @param encoded
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,192,*            base64 encoded data
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,193,* @param decoded
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,194,"*            the data from above, but decoded"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,195,* @param chunkSize
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,196,*            chunk size (line-length) of the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,197,* @param seperator
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,198,*            Line separator in the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,199,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,200,*             Usually signifies a bug in the Base64 commons-codec implementation.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,186,rivate void testByChunk(
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,187,"yte[] encoded, byte[] decoded, int chunkSize, byte[] seperator"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,188, throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,202,"private void testByteByByte(byte[] encoded, byte[] decoded, int chunkSize, byte[] seperator) throws Exception {"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,193,ut.write(decoded);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,207,for (int i = 0; i < decoded.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,208,out.write(decoded[i]);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,201,ut.write(encoded);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,217,for (int i = 0; i < encoded.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,218,out.write(encoded[i]);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,206,/ I always wanted to do this!  (wrap encoder with decoder etc etc).
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,224,// I always wanted to do this! (wrap encoder with decoder etc etc).
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,213,ut.write(decoded);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,231,for (int i = 0; i < decoded.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,232,out.write(decoded[i]);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,241,* Tests Base64OutputStream.write for expected IndexOutOfBoundsException conditions.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,243,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,244,*             for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,246,public void testWriteOutOfBounds() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,247,byte[] buf = new byte[1024];
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,248,ByteArrayOutputStream bout = new ByteArrayOutputStream();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,249,Base64OutputStream out = new Base64OutputStream(bout);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,251,try {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,252,"out.write(buf, -1, 0);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,253,"fail(""Expected Base64OutputStream.write(buf, -1, 0) to throw a IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,254,} catch (IndexOutOfBoundsException ioobe) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,255,// Expected
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,258,try {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,259,"out.write(buf, buf.length + 1, 0);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,260,"fail(""Expected Base64OutputStream.write(buf, buf.length + 1, 0) to throw a IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,261,} catch (IndexOutOfBoundsException ioobe) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,262,// Expected
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,267,* Tests Base64OutputStream.write(null).
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,269,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,270,*             for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,272,public void testWriteToNullCoverage() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,273,ByteArrayOutputStream bout = new ByteArrayOutputStream();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,274,Base64OutputStream out = new Base64OutputStream(bout);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,275,try {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,276,"out.write(null, 0, 0);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,277,"fail(""Expcted Base64OutputStream.write(null) to throw a NullPointerException"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,278,} catch (NullPointerException e) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,279,// Expected
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,726, catch (IllegalArgumentException ignored){
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,726,} catch (IllegalArgumentException ignored) {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,727,// Expected
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,732, catch (IllegalArgumentException ignored){
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,732,} catch (IllegalArgumentException ignored) {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,733,// Expected
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,738, catch (IllegalArgumentException ignored){
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,738,} catch (IllegalArgumentException ignored) {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,739,// Expected
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,745, catch (IllegalArgumentException ignored){
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,745,} catch (IllegalArgumentException ignored) {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,746,// Expected
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,834,"* Tests url-safe Base64 against random data, sizes 0 to 150."
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,836,public void testUrlSafe() {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,837,// test random data of sizes 0 thru 150
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,838,for (int i = 0; i <= 150; i++) {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,839,"byte[][] randomData = Base64TestData.randomData(i, true);"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,840,byte[] encoded = randomData[1];
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,841,byte[] decoded = randomData[0];
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,842,byte[] result = Base64.decodeBase64(encoded);
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,843,"assertTrue(""url-safe i="" + i, Arrays.equals(decoded, result));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,849,* Tests isUrlSafe.
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,851,public void testIsUrlSafe() {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,852,Base64 base64Standard = new Base64(false);
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,853,Base64 base64URLSafe = new Base64(true);
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,855,"assertFalse(""Base64.isUrlSafe=false"", base64Standard.isUrlSafe());"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,856,"assertTrue(""Base64.isUrlSafe=true"", base64URLSafe.isUrlSafe());"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,858,"byte[] whiteSpace = {' ', '\n', '\r', '\t'};"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,859,"assertTrue(""Base64.isArrayByteBase64(whiteSpace)=true"", Base64.isArrayByteBase64(whiteSpace));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,869,"assertEquals(""empty base64 encode"", null, Base64.encodeBase64(null));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,874,"assertEquals(""empty base64 encode"", null, Base64.decodeBase64(null));"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,22,import java.util.Random;
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,24, This random data was encoded by OpenSSL.  Java had nothing to do with it.
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,25, This data helps us test interop between Commons-Codec and OpenSSL.  Notice
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,26, that OpenSSL creates 64 character lines instead of the 76 of Commons-Codec.
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,25,* This random data was encoded by OpenSSL. Java had nothing to do with it. This data helps us test interop between
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,26,* Commons-Codec and OpenSSL. Notice that OpenSSL creates 64 character lines instead of the 76 of Commons-Codec.
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,30,* @since 1.4
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,162,* Returns an encoded and decoded copy of the same random data.
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,164,* @param size amount of random data to generate and encode
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,165,* @param urlSafe true if encoding be urlSafe
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,166,"* @return two byte[] arrays:  [0] = decoded, [1] = encoded"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,168,"public static byte[][] randomData(int size, boolean urlSafe) {"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,169,Random r = new Random();
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,170,byte[] decoded = new byte[size];
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,171,r.nextBytes(decoded);
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,172,byte[] encoded = urlSafe ? Base64.encodeBase64URLSafe(decoded) : Base64.encodeBase64(decoded);
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,173,"return new byte[][] {decoded, encoded};"
