is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,5,* reserved.
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,9,* are met:
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,17,*    distribution.
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,19,"* 3. The end-user documentation included with the redistribution,"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,20,"*    if any, must include the following acknowledgment:"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,23,"*    Alternately, this acknowledgment may appear in the software itself,"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,24,*    if and wherever such third-party acknowledgments normally appear.
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,26,"* 4. The names ""Apache"" and ""Apache Software Foundation"" and"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,27,"*    ""Apache Commons"" must not be used to endorse or promote products"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,28,*    derived from this software without prior written permission. For
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,29,"*    written permission, please contact apache@apache.org."
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,31,"* 5. Products derived from this software may not be called ""Apache"","
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,32,"*    ""Apache Commons"", nor may ""Apache"" appear in their name, without"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,33,*    prior written permission of the Apache Software Foundation.
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,54,package org.apache.commons.codec;
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,57,* A StringDecoder is a decoder which expects a String as
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,58,* a method parameter and one that produces a String as the
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,59,* output of the decoding process.
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,61,* @author tobrien@transolutions.net
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,62,* @version $Revision: 1.1 $
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,64,public interface StringDecoder extends Decoder {
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,67,* Decode a String and produce a String.
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,69,* @param pString a String to encode
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,71,* @return the encoded String
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,73,* @throws DecoderException thrown if there is
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,74,*  an error conidition during the Encoding process.
True,src/java/org/apache/commons/codec/StringDecoder.java,src/java/org/apache/commons/codec/StringDecoder.java,76,String decode(String pString) throws DecoderException;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/java/org/apache/commons/codec/net/URLCodec.java,v 1.1 2003/07/11 16:53:28 tobrien Exp $"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,3,* $Revision: 1.1 $
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,4,* $Date: 2003/07/11 16:53:28 $
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,10,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,11,* reserved.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,15,* are met:
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,23,*    distribution.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,61,package org.apache.commons.codec.net;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,63,import java.io.ByteArrayOutputStream;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,64,import java.io.UnsupportedEncodingException;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,65,import java.util.BitSet;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,67,import org.apache.commons.codec.BinaryDecoder;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,68,import org.apache.commons.codec.BinaryEncoder;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,69,import org.apache.commons.codec.EncoderException;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,70,import org.apache.commons.codec.DecoderException;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,71,import org.apache.commons.codec.StringDecoder;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,72,import org.apache.commons.codec.StringEncoder;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,75,"* URLCodec implements 'www-form-urlencoded' encoding scheme,"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,76,* also misleadingly known as URL encoding.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,77,* For more detailed information please refer to
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,78,"* <a href=""http://www.w3.org/TR/html4/interact/forms.html#h-17.13.4.1"">"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,79,* Chapter 17.13.4 'Form content types'</a> of the
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,80,"* <a href=""http://www.w3.org/TR/html4/"">HTML 4.01 Specification<a>"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,82,* <p>
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,83,* This codec is meant to be a replacement for standard Java classes
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,84,* {@link java.net.URLEncoder} and {@link java.net.URLDecoder}
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,85,"* on older Java platforms, as these classes in Java versions below"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,86,* 1.4 rely on the platform's default charset encoding.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,87,* </p>
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,89,"* @author <a href=""mailto:oleg@ural.ru"">Oleg Kalnichevski</a>"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,92,public class URLCodec
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,93,"implements BinaryEncoder, BinaryDecoder,"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,94,"StringEncoder, StringDecoder"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,98,* BitSet of www-form-url safe characters.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,100,protected static final BitSet WWW_FORM_URL = new BitSet(256);
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,102,// Static initializer for www_form_url
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,103,static {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,104,// alpha characters
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,105,for (int i = 'a'; i <= 'z'; i++) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,106,WWW_FORM_URL.set(i);
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,108,for (int i = 'A'; i <= 'Z'; i++) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,109,WWW_FORM_URL.set(i);
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,111,// numeric characters
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,112,for (int i = '0'; i <= '9'; i++) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,113,WWW_FORM_URL.set(i);
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,115,// special chars
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,116,WWW_FORM_URL.set('-');
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,117,WWW_FORM_URL.set('_');
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,118,WWW_FORM_URL.set('.');
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,119,WWW_FORM_URL.set('*');
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,120,// blank to be replaced with +
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,121,WWW_FORM_URL.set(' ');
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,126,* Default constructor
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,128,public URLCodec() {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,129,super();
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,133,* Converts an array of bytes into an array of URL safe 7-bit
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,134,* characters. Unsafe characters are escaped.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,136,* @param urlsafe bitset of characters deemed URL safe
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,137,* @param pArray array of bytes to convert to URL safe characters
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,138,* @return array of bytes containing URL safe characters
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,139,* @throws EncoderException Thrown if URL encoding is unsuccessful
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,141,"public static final byte[] urlencode(BitSet urlsafe, byte[] pArray)"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,142,throws EncoderException
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,144,if (pArray == null) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,145,return null;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,147,if (urlsafe == null) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,148,urlsafe = WWW_FORM_URL;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,151,ByteArrayOutputStream buffer = new ByteArrayOutputStream();
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,152,for (int i = 0; i < pArray.length; i++) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,153,int b = pArray[i];
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,154,if (urlsafe.get(b)) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,155,if (b == ' ') {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,156,b = '+';
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,158,buffer.write(b);
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,159,} else {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,160,buffer.write('%');
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,161,char hex1 = Character.toUpperCase(
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,162,"Character.forDigit((b >> 4) & 0xF, 16));"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,163,char hex2 = Character.toUpperCase(
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,164,"Character.forDigit(b & 0xF, 16));"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,165,buffer.write((int)hex1);
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,166,buffer.write((int)hex2);
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,169,return buffer.toByteArray();
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,174,* Converts an array of URL safe 7-bit characters into an array of
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,175,* original bytes. Escaped characters are converted back to their
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,176,* original representation.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,178,* @param pArray array of URL safe characters
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,179,* @return array of original bytes
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,180,* @throws DecoderException Thrown if URL decoding is unsuccessful
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,182,public static final byte[] urldecode(byte[] pArray)
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,183,throws DecoderException
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,185,if (pArray == null) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,186,return null;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,188,ByteArrayOutputStream buffer = new ByteArrayOutputStream();
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,189,for (int i = 0; i < pArray.length; i++) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,190,int b = pArray[i];
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,191,if (b == '+') {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,192,buffer.write(' ');
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,193,} else if (b == '%') {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,194,try {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,195,"int u = Character.digit((char)pArray[++i], 16);"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,196,"int l = Character.digit((char)pArray[++i], 16);"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,197,if (u == -1 || l == -1) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,198,"throw new DecoderException(""Invalid URL encoding"");"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,200,buffer.write((char)((u << 4) + l));
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,201,} catch(ArrayIndexOutOfBoundsException e) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,202,"throw new DecoderException(""Invalid URL encoding"");"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,204,} else {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,205,buffer.write(b);
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,208,return buffer.toByteArray();
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,213,* Converts an array of bytes into an array of URL safe 7-bit
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,214,* characters. Unsafe characters are escaped.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,216,* @param pArray array of bytes to convert to URL safe characters
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,217,* @return array of bytes containing URL safe characters
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,218,* @throws EncoderException Thrown if URL encoding is unsuccessful
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,220,public byte[] encode(byte[] pArray) throws EncoderException {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,221,"return urlencode(WWW_FORM_URL, pArray);"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,226,* Converts an array of URL safe 7-bit characters into an array of
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,227,* original bytes. Escaped characters are converted back to their
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,228,* original representation.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,230,* @param pArray array of URL safe characters
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,231,* @return array of original bytes
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,232,* @throws DecoderException Thrown if URL decoding is unsuccessful
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,234,public byte[] decode(byte[] pArray) throws DecoderException {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,235,return urldecode(pArray);
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,240,* Converts a string into its URL safe form using the specified
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,241,* character set. Unsafe characters are escaped.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,243,* @param pString string to convert to a URL safe form
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,244,* @return URL safe string
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,245,* @throws EncoderException Thrown if URL encoding is unsuccessful
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,246,* @throws UnsupportedEncodingException Thrown if charset is not
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,247,*                                      supported
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,249,"public String encode(String pString, String charset)"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,250,"throws EncoderException, UnsupportedEncodingException"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,252,if (pString == null) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,253,return null;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,255,"return new String(encode(pString.getBytes(charset)), ""US-ASCII"");"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,260,* Converts a string into its URL safe form. Unsafe characters are
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,261,* escaped.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,263,* @param pString string to convert to a URL safe form
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,264,* @return URL safe string
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,265,* @throws EncoderException Thrown if URL encoding is unsuccessful
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,267,public String encode(String pString) throws EncoderException {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,268,if (pString == null) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,269,return null;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,271,try {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,272,"return new String(encode(pString.getBytes()), ""US-ASCII"");"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,273,} catch(UnsupportedEncodingException e) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,274,throw new EncoderException(e.getMessage());
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,280,* Converts a URL safe string into its original form using the
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,281,* specified character set. Escaped characters are converted back
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,282,* to their original representation.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,284,* @param pString URL safe string to convert into its original form
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,285,* @return original string
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,286,* @throws DecoderException Thrown if URL decoding is unsuccessful
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,287,* @throws UnsupportedEncodingException Thrown if charset is not
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,288,*                                      supported
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,290,"public String decode(String pString, String charset)"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,291,"throws DecoderException, UnsupportedEncodingException"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,293,if (pString == null) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,294,return null;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,296,"return new String(decode(pString.getBytes(""US-ASCII"")), charset);"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,301,* Converts a URL safe string into its original form. Escaped
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,302,* characters are converted back to their original representation.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,304,* @param pString URL safe string to convert into its original form
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,305,* @return original string
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,306,* @throws DecoderException Thrown if URL decoding is unsuccessful
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,308,public String decode(String pString) throws DecoderException {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,309,if (pString == null) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,310,return null;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,312,try {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,313,"return new String(decode(pString.getBytes(""US-ASCII"")));"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,314,} catch(UnsupportedEncodingException e) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,315,throw new DecoderException(e.getMessage());
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,321,* Converts an object into its URL safe form. Unsafe characters are
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,322,* escaped.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,324,* @param pObject string to convert to a URL safe form
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,325,* @return URL safe object
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,326,* @throws EncoderException Thrown if URL encoding is not
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,327,*                          applicable to objects of this type or
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,328,*                          if encoding is unsuccessful
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,330,public Object encode(Object pObject) throws EncoderException {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,331,if (pObject == null) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,332,return null;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,333,} else if (pObject instanceof byte[]) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,334,return encode((byte[])pObject);
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,335,} else if (pObject instanceof String) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,336,return encode((String)pObject);
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,337,} else {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,338,"throw new EncoderException(""Objects of type "" +"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,339,"pObject.getClass().getName() + "" cannot be URL encoded"");"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,345,* Converts a URL safe object into its original form. Escaped
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,346,* characters are converted back to their original representation.
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,348,* @param pObject URL safe object to convert into its original form
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,349,* @return original object
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,350,* @throws DecoderException Thrown if URL decoding is not
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,351,*                          applicable to objects of this type
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,352,*                          if decoding is unsuccessful
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,354,public Object decode(Object pObject) throws DecoderException {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,355,if (pObject == null) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,356,return null;
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,357,} else if (pObject instanceof byte[]) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,358,return decode((byte[])pObject);
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,359,} else if (pObject instanceof String) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,360,return decode((String)pObject);
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,361,} else {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,362,"throw new DecoderException(""Objects of type "" +"
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,363,"pObject.getClass().getName() + "" cannot be URL decoded"");"
