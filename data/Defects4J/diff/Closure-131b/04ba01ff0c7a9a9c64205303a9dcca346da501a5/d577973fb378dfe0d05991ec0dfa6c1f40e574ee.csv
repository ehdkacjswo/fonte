is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,138, given position (i.e. a \n has been inserted there). All mappings in
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,139, the source maps after that position will be renormalized as needed.
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,138,"* given position, i.e. a \n has been inserted there. Or that a cut has"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,139,"* been undone, i.e. a previously inserted \n has been removed."
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,140,* All mappings in the source maps after that position will be renormalized
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,141,* as needed.
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,141,"oid reportLineCut(int lineIndex, int charIndex) {"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,143,"void reportLineCut(int lineIndex, int charIndex, boolean insertion) {"
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,144,"apping.start = convertPosition(mapping.start, lineIndex, charIndex);"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,146,"mapping.start = convertPosition(mapping.start, lineIndex, charIndex,"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,147,insertion);
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,147,"apping.end = convertPosition(mapping.end, lineIndex, charIndex);"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,150,"mapping.end = convertPosition(mapping.end, lineIndex, charIndex,"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,151,insertion);
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,155, of a newline at the given line and character position.
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,159,* or removal of a newline at the given line and character position.
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,165,"* @param insertion True if a newline was inserted, false if a newline was"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,166,*     removed.
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,169,* @throws IllegalStateException if an attempt to reverse a line cut is
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,170,*     made on a previous line rather than the current line.
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,165,nt characterPosition) {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,173,"int characterPosition, boolean insertion) {"
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,168,f (originalLine == lineIndex && originalChar >= characterPosition) {
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,169,"/ If the position falls on the line itself, then normalize it"
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,170,/ if it falls at or after the place the newline was inserted.
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,171,eturn new FilePosition(
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,172,"riginalLine + 1, originalChar - characterPosition);"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,176,if (insertion) {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,177,if (originalLine == lineIndex && originalChar >= characterPosition) {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,178,"// If the position falls on the line itself, then normalize it"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,179,// if it falls at or after the place the newline was inserted.
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,180,return new FilePosition(
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,181,"originalLine + 1, originalChar - characterPosition);"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,182,} else {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,183,return position;
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,174,eturn position;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,186,if (originalLine == lineIndex) {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,187,return new FilePosition(
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,188,"originalLine - 1, originalChar + characterPosition);"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,189,} else if (originalLine > lineIndex) {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,190,"// Not supported, can only undo a cut on the most recent line. To"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,191,// do this on a previous lines would require reevaluating the cut
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,192,// positions on all subsequent lines.
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,193,throw new IllegalStateException(
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,194,"""Cannot undo line cut on a previous line."");"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,195,} else {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,196,return position;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,416,private final boolean preferLineBreakAtEndOfFile;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,419,private int prevCutPosition = 0;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,420,private int prevLineStartPosition = 0;
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,405,"rivate CompactCodePrinter(boolean lineBreak, int lineLengthThreshold,"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,431,"private CompactCodePrinter(boolean lineBreak,"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,432,"boolean preferLineBreakAtEndOfFile, int lineLengthThreshold,"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,436,this.preferLineBreakAtEndOfFile = preferLineBreakAtEndOfFile;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,454,prevCutPosition = code.length();
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,455,prevLineStartPosition = lineStartPosition;
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,467,"eportLineCut(lineIndex, position - lineStartPosition);"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,497,prevCutPosition = position;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,498,"reportLineCut(lineIndex, position - lineStartPosition, true);"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,513,@Override
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,514,void endFile() {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,515,super.endFile();
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,516,if (!preferLineBreakAtEndOfFile) {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,517,return;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,519,if (lineLength > lineLengthThreshold / 2) {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,520,// Add an extra break at end of file.
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,521,"append("";"");"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,522,startNewLine();
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,523,} else if (prevCutPosition > 0) {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,524,// Shift the previous break to end of file.
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,525,for (int i = prevCutPosition; i < code.length() - 1; i++) {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,526,"code.setCharAt(i, code.charAt(i+1));"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,528,code.setLength(code.length() - 1);
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,529,lineStartPosition = prevLineStartPosition;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,530,lineLength = code.length() - lineStartPosition;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,531,"reportLineCut(lineIndex, prevCutPosition, false);"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,532,lineIndex--;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,533,prevCutPosition = 0;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,534,prevLineStartPosition = 0;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,535,"append("";"");"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,536,startNewLine();
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,537,} else {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,538,// A small file with no line breaks. We do nothing in this case to
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,539,// avoid excessive line breaks. It's not ideal if a lot of these pile
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,540,"// up, but that is reasonably unlikely."
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,550,private boolean preferLineBreakAtEndOfFile = false;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,588,* Sets whether line breaking is preferred at end of file. This is useful
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,589,"* if JS serving code needs a place to insert code, such as script tags,"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,590,* without interfering with source maps.
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,591,"* @param lineBreakAtEnd If true, prefer line breaking at end of file."
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,593,Builder setPreferLineBreakAtEndOfFile(boolean lineBreakAtEnd) {
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,594,this.preferLineBreakAtEndOfFile = lineBreakAtEnd;
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,595,return this;
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,595,"eturn toSource(root, outputFormat, lineBreak, lineLengthThreshold,"
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,596,"ourceMap, sourceMapDetailLevel, outputCharset, tagAsStrict);"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,670,"return toSource(root, outputFormat, lineBreak, preferLineBreakAtEndOfFile,"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,671,"lineLengthThreshold, sourceMap, sourceMapDetailLevel, outputCharset,"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,672,tagAsStrict);
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,610,"oolean lineBreak,  int lineLengthThreshold,"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,686,"boolean lineBreak,  boolean preferEndOfFileBreak,"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,687,"int lineLengthThreshold,"
False,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,621,"ineBreak, lineLengthThreshold,"
True,src/com/google/javascript/jscomp/CodePrinter.java,src/com/google/javascript/jscomp/CodePrinter.java,698,"lineBreak, preferEndOfFileBreak, lineLengthThreshold,"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1667,builder.setPreferLineBreakAtEndOfFile(options.preferLineBreakAtEndOfFile);
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,654,/** Prefer line breaks at end of file */
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,655,public boolean preferLineBreakAtEndOfFile;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,890,preferLineBreakAtEndOfFile = false;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1790,public void setPreferLineBreakAtEndOfFile(boolean lineBreakAtEnd) {
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1791,this.preferLineBreakAtEndOfFile = lineBreakAtEnd;
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,82,"String parsePrint(String js, boolean prettyprint, boolean lineBreak,"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,83,"boolean preferLineBreakAtEof, int lineThreshold) {"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,84,"return new CodePrinter.Builder(parse(js, true)).setPrettyPrint(prettyprint)"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,85,.setLineLengthThreshold(lineThreshold).setLineBreak(lineBreak)
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,86,.setPreferLineBreakAtEndOfFile(preferLineBreakAtEof)
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,87,.build();
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,474,public void testPreferLineBreakAtEndOfFile() {
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,475,"// short final line, no previous break, do nothing"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,476,assertLineBreakAtEndOfFile(
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,477,"""\""1234567890\"";"","
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,478,"""\""1234567890\"""","
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,479,"""\""1234567890\"""");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,481,"// short final line, shift previous break to end"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,482,assertLineBreakAtEndOfFile(
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,483,"""\""123456789012345678901234567890\"";\""1234567890\"""","
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,484,"""\""123456789012345678901234567890\"";\n\""1234567890\"""","
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,485,"""\""123456789012345678901234567890\"";\""1234567890\"";\n"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,487,"// long final line, no previous break, add a break at end"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,488,assertLineBreakAtEndOfFile(
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,489,"""\""1234567890\"";\""12345678901234567890\"";"","
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,490,"""\""1234567890\"";\""12345678901234567890\"""","
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,491,"""\""1234567890\"";\""12345678901234567890\"";\n"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,493,"// long final line, previous break, add a break at end"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,494,assertLineBreakAtEndOfFile(
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,495,"""\""123456789012345678901234567890\"";\""12345678901234567890\"";"","
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,496,"""\""123456789012345678901234567890\"";\n\""12345678901234567890\"""","
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,497,"""\""123456789012345678901234567890\"";\n\""12345678901234567890\"";\n"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,500,"private void assertLineBreakAtEndOfFile(String js,"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,501,"String expectedWithoutBreakAtEnd, String expectedWithBreakAtEnd) {"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,502,"assertEquals(expectedWithoutBreakAtEnd,"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,503,"parsePrint(js, false, false, false, 30));"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,504,"assertEquals(expectedWithBreakAtEnd,"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,505,"parsePrint(js, false, false, true, 30));"
