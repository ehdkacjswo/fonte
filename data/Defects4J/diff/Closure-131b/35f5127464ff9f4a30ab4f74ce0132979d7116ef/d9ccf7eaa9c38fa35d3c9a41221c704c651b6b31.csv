is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,172,f (lValue.isQualifiedName()) {
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,173,f (lValue.getType() == Token.GETPROP) {
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,174,"/ We have an assignment of the form ""a.b = ...""."
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,175,SType lValueType = lValue.getJSType();
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,176,f (lValueType != null && lValueType.isConstructor()) {
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,177,"/ If a.b is a constructor, then everything in this function"
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,178,"/ belongs to the ""a.b"" type."
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,179,eturn (lValueType.toMaybeFunctionType()).getInstanceType();
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,180, else {
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,181,"/ If a.b is not a constructor, then treat this as a method"
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,182,"/ of whatever type is on ""a""."
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,183,eturn normalizeClassType(lValue.getFirstChild().getJSType());
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,172,if (NodeUtil.isGet(lValue)) {
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,173,"// We have an assignment of the form ""a.b = ...""."
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,174,JSType lValueType = lValue.getJSType();
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,175,if (lValueType != null && lValueType.isNominalConstructor()) {
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,176,"// If a.b is a constructor, then everything in this function"
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,177,"// belongs to the ""a.b"" type."
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,178,return (lValueType.toMaybeFunctionType()).getInstanceType();
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,186,"/ We have an assignment of the form ""a = ..."", so pull the"
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,187,"/ type off the ""a""."
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,188,eturn normalizeClassType(lValue.getJSType());
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,180,"// If a.b is not a constructor, then treat this as a method"
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,181,"// of whatever type is on ""a""."
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,182,return normalizeClassType(lValue.getFirstChild().getJSType());
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,184,} else {
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,185,"// We have an assignment of the form ""a = ..."", so pull the"
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,186,"// type off the ""a""."
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,187,return normalizeClassType(lValue.getJSType());
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,206, else if (type.isConstructor()) {
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,204,} else if (type.isNominalConstructor()) {
True,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,356,public void testPrivateAccessForProperties4() {
True,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,357,testSame(new String[] {
True,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,358,"""/** @constructor */ function Foo() {}"" +"
True,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,359,"""/** @private */ Foo.prototype.bar_ = function() {};"","
True,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,test/com/google/javascript/jscomp/CheckAccessControlsTest.java,360,"""Foo.prototype['baz'] = function() { (new Foo()).bar_(); };"""
