is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,244,boolean hasUnknownParamsOrReturn() {
True,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,245,if (parameters != null) {
True,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,246,for (Node paramNode = parameters.getFirstChild();
True,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,247,paramNode != null; paramNode = paramNode.getNext()) {
True,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,248,JSType type = paramNode.getJSType();
True,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,249,if (type == null || type.isUnknownType()) {
True,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,250,return true;
True,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,254,return returnType == null || returnType.isUnknownType();
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,464,/ and the NoObject type at the bottom of the lattice.
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,464,// and the LEAST_FUNCTION_TYPE type at the bottom of the lattice.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,473,/ approach of using the universal constructor and the AnyObject as
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,474,/ the supremum and infinum of all function types.
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,473,// approach of getting things right at the top and the bottom of the
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,474,// lattice.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,480,"/ If this is a normal function, look to see if the arguments are equal."
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,481,"/ If they are, we can just take the least supertype (or greatest"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,482,/ subtype) of the return types.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,483,f (isOrdinaryFunction() && that.isOrdinaryFunction() &&
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,484,hat instanceof FunctionType) {
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,485,unctionType other = (FunctionType) that;
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,486,f (call.hasEqualParameters(other.call) &&
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,487,"sEquivalent(typeOfThis, other.typeOfThis)) {"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,488,SType newReturnType = leastSuper ?
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,489,all.returnType.getLeastSupertype(other.call.returnType) :
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,490,all.returnType.getGreatestSubtype(other.call.returnType);
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,491,eturn cloneWithNewReturnType(
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,492,"ewReturnType,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,493,all.returnTypeInferred || other.call.returnTypeInferred);
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,480,FunctionType other = null;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,481,if (that instanceof FunctionType) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,482,other = (FunctionType) that;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,485,"// If these are ordinary functions, then merge them."
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,486,// Don't do this if any of the params/return
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,487,"// values are unknown, because then there will be cycles in"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,488,// their local lattice and they will merge in weird ways.
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,489,if (other != null &&
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,490,isOrdinaryFunction() && that.isOrdinaryFunction() &&
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,491,!this.call.hasUnknownParamsOrReturn() &&
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,492,!other.call.hasUnknownParamsOrReturn()) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,494,// Check for the degenerate case.
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,495,if (this.isSubtype(that)) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,496,return leastSuper ? that : this;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,497,} else if (that.isSubtype(this)) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,498,return leastSuper ? this : that;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,501,// Merge the two functions component-wise.
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,502,"FunctionType merged = tryMergeFunctionPiecewise(other, leastSuper);"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,503,if (merged != null) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,504,return merged;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,508,// The function instance type is a special case
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,509,// that lives above the rest of the lattice.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,505,eturn leastSuper ?
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,506,egistry.getNativeType(JSTypeNative.U2U_CONSTRUCTOR_TYPE) :
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,507,egistry.getNativeType(JSTypeNative.NO_OBJECT_TYPE);
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,518,"// In theory, we should be using the GREATEST_FUNCTION_TYPE as the"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,519,"// greatest function. In practice, we don't because it's way too"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,520,"// broad. The greatest function takes var_args None parameters, which"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,521,// means that all parameters register a type warning.
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,523,"// Instead, we use the U2U ctor type, which has unknown type args."
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,524,FunctionType greatestFn =
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,525,registry.getNativeFunctionType(JSTypeNative.U2U_CONSTRUCTOR_TYPE);
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,526,FunctionType leastFn =
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,527,registry.getNativeFunctionType(JSTypeNative.LEAST_FUNCTION_TYPE);
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,528,return leastSuper ? greatestFn : leastFn;
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,515,"unctionType cloneWithNewReturnType(JSType newReturnType, boolean inferred) {"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,537,* Try to get the sup/inf of two functions by looking at the
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,538,* piecewise components.
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,540,private FunctionType tryMergeFunctionPiecewise(
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,541,"FunctionType other, boolean leastSuper) {"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,542,Node newParamsNode = null;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,543,if (call.hasEqualParameters(other.call)) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,544,newParamsNode = call.parameters;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,545,} else {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,546,"// If the parameters are not equal, don't try to merge them."
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,547,"// Someday, we should try to merge the individual params."
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,548,return null;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,551,JSType newReturnType = leastSuper ?
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,552,call.returnType.getLeastSupertype(other.call.returnType) :
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,553,call.returnType.getGreatestSubtype(other.call.returnType);
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,555,ObjectType newTypeOfThis = null;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,556,"if (isEquivalent(typeOfThis, other.typeOfThis)) {"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,557,newTypeOfThis = typeOfThis;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,558,} else {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,559,JSType maybeNewTypeOfThis = leastSuper ?
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,560,typeOfThis.getLeastSupertype(other.typeOfThis) :
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,561,typeOfThis.getGreatestSubtype(other.typeOfThis);
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,562,if (maybeNewTypeOfThis instanceof ObjectType) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,563,newTypeOfThis = (ObjectType) maybeNewTypeOfThis;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,564,} else {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,565,newTypeOfThis = leastSuper ?
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,566,registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE) :
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,567,registry.getNativeObjectType(JSTypeNative.NO_OBJECT_TYPE);
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,571,boolean newReturnTypeInferred =
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,572,call.returnTypeInferred || other.call.returnTypeInferred;
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,517,"egistry, null, source,"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,575,"registry, null, null,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,519,"egistry, call.parameters, newReturnType, inferred),"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,520,"ypeOfThis, null, false, false);"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,577,"registry, newParamsNode, newReturnType, newReturnTypeInferred),"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,578,"newTypeOfThis, null, false, false);"
False,src/com/google/javascript/rhino/jstype/JSTypeNative.java,src/com/google/javascript/rhino/jstype/JSTypeNative.java,142,/ TODO(nicksantos): Fix up these types so that they fit into the
False,src/com/google/javascript/rhino/jstype/JSTypeNative.java,src/com/google/javascript/rhino/jstype/JSTypeNative.java,143,"/ type lattice properly. Right now, they're broken."
False,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,85,"Expected: "" + b + ""\n"" +"
False,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,86,"Actual  : "" + a,"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,85,"""Expected: "" + a + ""\n"" +"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,86,"""Actual  : "" + b,"
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,3, ***** BEGIN LICENSE BLOCK *****
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,4, Version: MPL 1.1/GPL 2.0
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,6, The contents of this file are subject to the Mozilla Public License Version
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,7," 1.1 (the ""License""); you may not use this file except in compliance with"
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,8, the License. You may obtain a copy of the License at
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,9, http://www.mozilla.org/MPL/
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,11," Software distributed under the License is distributed on an ""AS IS"" basis,"
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,12," WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,13, for the specific language governing rights and limitations under the
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,14, License.
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,16," The Original Code is Rhino code, released"
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,17," May 6, 1999."
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,19, The Initial Developer of the Original Code is
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,20, Netscape Communications Corporation.
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,21, Portions created by the Initial Developer are Copyright (C) 1997-1999
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,22, the Initial Developer. All Rights Reserved.
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,24, Contributor(s):
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,25,   Nick Santos
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,27," Alternatively, the contents of this file may be used under the terms of"
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,28," the GNU General Public License Version 2 or later (the ""GPL""), in which"
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,29, case the provisions of the GPL are applicable instead of those above. If
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,30, you wish to allow use of your version of this file only under the terms of
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,31, the GPL and not to allow others to use your version of this file under the
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,32," MPL, indicate your decision by deleting the provisions above and replacing"
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,33, them with the notice and other provisions required by the GPL. If you do
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,34," not delete the provisions above, a recipient may use your version of this"
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,35, file under either the MPL or the GPL.
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,37, ***** END LICENSE BLOCK ***** */
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,39,ackage com.google.javascript.rhino;
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,41,mport com.google.javascript.rhino.jstype.BooleanLiteralSetTest;
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,42,mport com.google.javascript.rhino.jstype.FunctionParamBuilderTest;
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,43,mport com.google.javascript.rhino.jstype.JSTypeRegistryTest;
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,44,mport com.google.javascript.rhino.jstype.JSTypeTest;
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,45,mport com.google.javascript.rhino.jstype.TernaryValueTest;
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,46,mport com.google.javascript.rhino.jstype.UnionTypeBuilderTest;
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,48,mport junit.framework.Test;
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,49,mport junit.framework.TestSuite;
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,51,mport java.util.logging.Level;
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,52,mport java.util.logging.Logger;
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,54,ublic class AllTests {
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,55,ublic static Test suite() throws Exception {
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,56,/ suspend logging
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,57,"ogger.getLogger(""com.google"").setLevel(Level.OFF);"
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,59,/ The testing framework is lame and doesn't work in third_party.
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,60,/ Manually load the classes.
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,61,estSuite suite = new TestSuite();
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,63,uite.addTestSuite(JSDocInfoTest.class);
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,64,uite.addTestSuite(NodeTest.class);
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,65,uite.addTestSuite(ParserTest.class);
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,66,uite.addTestSuite(TokenStreamTest.class);
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,68,uite.addTestSuite(BooleanLiteralSetTest.class);
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,69,uite.addTestSuite(FunctionParamBuilderTest.class);
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,70,uite.addTestSuite(JSTypeRegistryTest.class);
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,71,uite.addTestSuite(JSTypeTest.class);
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,72,uite.addTestSuite(TernaryValueTest.class);
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,73,uite.addTestSuite(UnionTypeBuilderTest.class);
False,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,75,eturn suite;
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,77,public void testSupAndInfOfReturnTypesWithDifferentParams() {
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,78,FunctionType retString = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,79,.withParamsNode(registry.createParameters(NUMBER_TYPE))
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,80,.withInferredReturnType(STRING_TYPE).build();
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,81,FunctionType retNumber = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,82,.withParamsNode(registry.createParameters())
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,83,.withReturnType(NUMBER_TYPE).build();
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,85,assertLeastSupertype(
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,86,"""Function"", retString, retNumber);"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,87,assertGreatestSubtype(
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,88,"""function (...[*]): None"", retString, retNumber);"
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,88,"NoObject"", retString, retNumber);"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,102,"""function (...[*]): None"", retString, retNumber);"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,107,.withParamsNode(registry.createParameters())
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,111,.withParamsNode(registry.createParameters())
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,100,"Function"", retString, retNumber);"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,116,"""function (this:Object): (number|string)"", retString, retNumber);"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,117,assertGreatestSubtype(
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,118,"""function (this:Date): None"", retString, retNumber);"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,121,public void testSupAndInfWithDifferentThisTypes2() {
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,122,FunctionType retString = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,123,.withParamsNode(registry.createParameters())
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,124,.withTypeOfThis(ARRAY_TYPE)
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,125,.withReturnType(STRING_TYPE).build();
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,126,FunctionType retNumber = new FunctionBuilder(registry)
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,127,.withParamsNode(registry.createParameters())
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,128,.withTypeOfThis(DATE_TYPE)
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,129,.withReturnType(NUMBER_TYPE).build();
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,131,assertLeastSupertype(
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,132,"""function (this:Object): (number|string)"", retString, retNumber);"
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,102,"NoObject"", retString, retNumber);"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,134,"""function (this:NoObject): None"", retString, retNumber);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2799,"O_OBJECT_TYPE, typeA.getGreatestSubtype(typeB));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2799,"LEAST_FUNCTION_TYPE, typeA.getGreatestSubtype(typeB));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2844,"O_OBJECT_TYPE, typeA.getGreatestSubtype(typeB));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2844,"LEAST_FUNCTION_TYPE, typeA.getGreatestSubtype(typeB));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4272,"LEAST_FUNCTION_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4273,"GREATEST_FUNCTION_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4662,"registry.getNativeType(JSTypeNative.GREATEST_FUNCTION_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4664,"registry.getNativeType(JSTypeNative.LEAST_FUNCTION_TYPE),"
