is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2015,* Checks the contents of this builder against another to see if they
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2016,* contain the same character content ignoring case.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2018,"* @param other  the object to check, null returns false"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2019,* @return true if the builders contain the same characters in the same order
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2021,public boolean equalsIgnoreCase(StrBuilder other) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2022,if (this == other) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2023,return true;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2025,if (this.size != other.size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2026,return false;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2028,char thisBuf[] = this.buffer;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2029,char otherBuf[] = other.buffer;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2030,for (int i = size - 1; i >= 0; i--) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2031,char c1 = thisBuf[i];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2032,char c2 = otherBuf[i];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2033,if (c1 != c2 && Character.toUpperCase(c1) != Character.toUpperCase(c2)) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2034,return false;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2037,return true;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2041,* Checks the contents of this builder against another to see if they
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2042,* contain the same character content.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2044,"* @param other  the object to check, null returns false"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2045,* @return true if the builders contain the same characters in the same order
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2047,public boolean equals(StrBuilder other) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2048,if (this == other) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2049,return true;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2051,if (this.size != other.size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2052,return false;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2054,char thisBuf[] = this.buffer;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2055,char otherBuf[] = other.buffer;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2056,for (int i = size - 1; i >= 0; i--) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2057,if (thisBuf[i] != otherBuf[i]) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2058,return false;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2061,return true;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2065,* Checks the contents of this builder against another to see if they
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2066,* contain the same character content.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2068,"* @param obj  the object to check, null returns false"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2069,* @return true if the builders contain the same characters in the same order
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2071,public boolean equals(Object obj) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2072,if (obj instanceof StrBuilder) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2073,return equals((StrBuilder) obj);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2075,return false;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2079,* Gets a suitable hash code for this builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2081,* @return a hash code
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2083,public int hashCode() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2084,char buf[] = buffer;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2085,int hash = 0;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2086,for (int i = size - 1; i >= 0; i--) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2087,hash = 31 * hash + buf[i];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2089,return hash;
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1592,public void testEqualsIgnoreCase() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1593,StrBuilder sb1 = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1594,StrBuilder sb2 = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1595,"assertEquals(true, sb1.equalsIgnoreCase(sb2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1597,"sb1.append(""abc"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1598,"assertEquals(false, sb1.equalsIgnoreCase(sb2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1600,"sb2.append(""ABC"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1601,"assertEquals(true, sb1.equalsIgnoreCase(sb2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1603,"sb2.clear().append(""abc"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1604,"assertEquals(true, sb1.equalsIgnoreCase(sb2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1606,"sb2.clear().append(""aBc"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1607,"assertEquals(true, sb1.equalsIgnoreCase(sb2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1611,public void testEquals() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1612,StrBuilder sb1 = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1613,StrBuilder sb2 = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1614,"assertEquals(true, sb1.equals((StrBuilder) sb2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1615,"assertEquals(true, sb1.equals((Object) sb2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1617,"sb1.append(""abc"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1618,"assertEquals(false, sb1.equals((StrBuilder) sb2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1619,"assertEquals(false, sb1.equals((Object) sb2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1621,"sb2.append(""ABC"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1622,"assertEquals(false, sb1.equals((StrBuilder) sb2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1623,"assertEquals(false, sb1.equals((Object) sb2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1625,"sb2.clear().append(""abc"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1626,"assertEquals(true, sb1.equals((StrBuilder) sb2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1627,"assertEquals(true, sb1.equals((Object) sb2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1629,"assertEquals(false, sb1.equals(new Integer(1)));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1630,"assertEquals(false, sb1.equals(""abc""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1634,public void testHashCode() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1635,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1636,int hc1a = sb.hashCode();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1637,int hc1b = sb.hashCode();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1638,"assertEquals(0, hc1a);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1639,"assertEquals(hc1a, hc1b);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1641,"sb.append(""abc"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1642,int hc2a = sb.hashCode();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1643,int hc2b = sb.hashCode();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1644,"assertEquals(true, hc2a != 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1645,"assertEquals(hc2a, hc2b);"
