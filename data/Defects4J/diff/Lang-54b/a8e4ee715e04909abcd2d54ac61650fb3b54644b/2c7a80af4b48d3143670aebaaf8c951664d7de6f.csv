is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,2,* Copyright 2004 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,14,* limitations under the License.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,16,package org.apache.commons.lang.mutable;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,18,import java.io.Serializable;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,21,* A mutable <code>int</code>.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,23,* @since 2.1
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,24,"* @version $Id: MutableInt.java,v 1.1 2004/07/05 22:15:33 scolebourne Exp $"
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,26,public class MutableInt extends Number
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,27,"implements Comparable, Mutable, Serializable {"
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,29,/** Serialization lock. */
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,30,private static final long serialVersionUID = 512176391864L;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,32,/** The mutable value. */
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,33,private int value;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,36,* Constructs a new MutableInt with the default value of zero.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,38,public MutableInt() {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,39,super();
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,43,* Constructs a new MutableInt with the specified value.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,45,* @param value a value.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,47,public MutableInt(int value) {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,48,super();
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,49,this.value = value;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,53,public Object getValue() {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,54,return new Integer(this.value);
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,57,public void setValue(int value) {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,58,this.value = value;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,61,public void setValue(Object value) {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,62,setValue(((Number) value).intValue());
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,66,public int intValue() {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,67,return value;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,70,public long longValue() {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,71,return (long) value;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,74,public float floatValue() {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,75,return (float) value;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,78,public double doubleValue() {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,79,return (double) value;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,84,* Checks if this object equals the specified object.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,85,* <p>
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,86,* The object must be a MutableInt with the same value to be equal.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,88,* @param obj  the object to compare to
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,89,* @return true if equal
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,91,public boolean equals(Object obj) {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,92,if (obj instanceof MutableInt) {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,93,return (value == ((MutableInt) obj).value);
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,95,return false;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,99,* Returns a suitable hashcode for this mutable.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,101,* @return a suitable hashcode
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,103,public int hashCode() {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,104,return value;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,108,* Compares this mutable to another in ascending order.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,110,* @param obj  the mutable to compare to
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,111,"* @return negative if this is less, zero if equal, positive if greater"
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,113,public int compareTo(Object obj) {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,114,MutableInt other = (MutableInt) obj;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,115,int anotherVal = other.value;
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,116,return (value < anotherVal ? -1 : (value == anotherVal ? 0 : 1));
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,120,* Returns the String value of this mutable.
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,122,* @return the mutable value as a string
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,124,public String toString() {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,125,return String.valueOf(value);
