is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,84,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,84,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,94,ouble error = handler.getMaximalError();
True,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,94,double error = handler.getMaximalValueError();
True,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,99,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,112,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,113,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,118,ssertTrue(handler.getMaximalError() < 4.0e-12);
True,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,119,assertTrue(handler.getMaximalValueError() < 4.0e-12);
True,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,120,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,129,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,131,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,135,ssertTrue(handler.getMaximalError() > 0.005);
True,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,137,assertTrue(handler.getMaximalValueError() > 0.005);
True,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,138,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,66,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,66,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,149,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,149,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,164,ssertTrue(handler.getMaximalError() < (0.7 * scalAbsoluteTolerance));
True,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,164,assertTrue(handler.getMaximalValueError() < (0.7 * scalAbsoluteTolerance));
True,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,165,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,186,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,187,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,197,ssertTrue(handler.getMaximalError() < 5.0e-6);
True,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,198,assertTrue(handler.getMaximalValueError() < 5.0e-6);
True,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,199,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,81,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,81,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,108,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,108,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,117,ssertTrue(handler.getMaximalError() < (1.3 * scalAbsoluteTolerance));
True,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,117,assertTrue(handler.getMaximalValueError() < (1.3 * scalAbsoluteTolerance));
True,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,118,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,139,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,140,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,150,ssertTrue(handler.getMaximalError() < 5.0e-8);
True,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,151,assertTrue(handler.getMaximalValueError() < 5.0e-8);
True,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,152,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,62,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,62,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,73,ouble error = handler.getMaximalError();
True,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,73,double error = handler.getMaximalValueError();
True,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,78,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,92,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,93,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,99,ssertTrue(handler.getMaximalError() < 1.0e-3);
True,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,100,assertTrue(handler.getMaximalValueError() < 1.0e-3);
True,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,101,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,111,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,113,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,118,ssertTrue(handler.getMaximalError() > 0.2);
True,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,120,assertTrue(handler.getMaximalValueError() > 0.2);
True,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,121,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,64,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,64,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,74,ouble error = handler.getMaximalError();
True,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,74,double error = handler.getMaximalValueError();
True,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,79,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,92,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,94,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,98,ssertTrue(handler.getMaximalError() < 4.0e-12);
True,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,100,assertTrue(handler.getMaximalValueError() < 4.0e-12);
True,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,101,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,110,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,113,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,116,ssertTrue(handler.getMaximalError() > 0.005);
True,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,119,assertTrue(handler.getMaximalValueError() > 0.005);
True,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,120,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,80,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,80,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,107,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,107,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,116,ouble ratio =  handler.getMaximalError() / absTolerance;
True,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,116,double ratio =  handler.getMaximalValueError() / absTolerance;
True,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,119,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,159,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,160,"TestProblemHandler handler = new TestProblemHandler(pb, integrator);"
False,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,164,eturn handler.getMaximalError();
True,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,165,return handler.getMaximalValueError();
False,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,179,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,180,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,190,ssertTrue(handler.getMaximalError() < 5.0e-8);
True,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,191,assertTrue(handler.getMaximalValueError() < 5.0e-8);
True,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,192,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,88,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,88,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,115,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,115,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,124,ssertTrue(handler.getMaximalError() < (1.3 * scalAbsoluteTolerance));
True,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,124,assertTrue(handler.getMaximalValueError() < (1.3 * scalAbsoluteTolerance));
True,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,125,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,146,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,147,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,157,ssertTrue(handler.getMaximalError() < 1.0e-7);
True,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,158,assertTrue(handler.getMaximalValueError() < 1.0e-7);
True,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,159,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,61,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,61,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,72,ouble error = handler.getMaximalError();
True,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,72,double error = handler.getMaximalValueError();
True,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,77,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,90,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,92,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,97,ssertTrue(handler.getMaximalError() < 1.0e-6);
True,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,99,assertTrue(handler.getMaximalValueError() < 1.0e-6);
True,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,100,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,109,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,112,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,116,ssertTrue(handler.getMaximalError() > 0.05);
True,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,119,assertTrue(handler.getMaximalValueError() > 0.05);
True,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,120,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,34,** Maximal error encountered during the integration. */
False,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,35,rivate double maxError;
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,34,/** Maximal errors encountered during the integration. */
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,35,private double maxValueError;
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,36,private double maxTimeError;
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,44,/** ODE solver used. */
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,45,private FirstOrderIntegrator integrator;
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,47,/** Expected start for step. */
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,48,private double expectedStepStart;
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,53,* @param integrator ODE solver used
False,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,47,ublic TestProblemHandler(TestProblemAbstract problem) {
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,55,"public TestProblemHandler(TestProblemAbstract problem, FirstOrderIntegrator integrator) {"
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,57,this.integrator = integrator;
False,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,57,axError  = 0;
False,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,58,astError = 0;
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,66,maxValueError = 0;
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,67,maxTimeError  = 0;
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,68,lastError     = 0;
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,69,expectedStepStart = problem.getInitialTime();
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,76,double start = integrator.getCurrentStepStart();
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,77,"maxTimeError = Math.max(maxTimeError, Math.abs(start - expectedStepStart));"
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,78,expectedStepStart = start + integrator.getCurrentSignedStepsize();
False,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,93,f (error > maxError) {
False,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,94,axError = error;
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,108,if (error > maxValueError) {
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,109,maxValueError = error;
False,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,102, Get the maximal error encountered during integration.
False,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,103, @return maximal error
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,117,* Get the maximal value error encountered during integration.
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,118,* @return maximal value error
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,120,public double getMaximalValueError() {
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,121,return maxValueError;
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,125,* Get the maximal time error encountered during integration.
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,126,* @return maximal time error
False,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,105,ublic double getMaximalError() {
False,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,106,eturn maxError;
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,128,public double getMaximalTimeError() {
True,src/test/org/apache/commons/math/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,129,return maxTimeError;
False,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,64,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,64,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,74,ouble error = handler.getMaximalError();
True,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,74,double error = handler.getMaximalValueError();
True,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,79,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,92,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,94,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,98,ssertTrue(handler.getMaximalError() < 4.0e-12);
True,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,100,assertTrue(handler.getMaximalValueError() < 4.0e-12);
True,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,101,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
False,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,110,estProblemHandler handler = new TestProblemHandler(pb);
True,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,113,"TestProblemHandler handler = new TestProblemHandler(pb, integ);"
False,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,116,ssertTrue(handler.getMaximalError() > 0.005);
True,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,119,assertTrue(handler.getMaximalValueError() > 0.005);
True,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,120,"assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
