is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,23,import org.apache.commons.math.util.MathUtils;
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,460,"eturn add(new BigFraction(bg, BigInteger.ONE));"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,461,"return new BigFraction(numerator.add(denominator.multiply(bg)), denominator);"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,465,* <p>
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,466,"* Adds the value of this fraction to the passed <tt>integer</tt>, returning"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,467,* the result in reduced form.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,468,* </p>
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,470,* @param i
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,471,*            the <tt>integer</tt> to add.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,472,* @return a <code>BigFraction</code> instance with the resulting values.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,474,public BigFraction add(final int i) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,475,return add(BigInteger.valueOf(i));
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,479,* <p>
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,480,"* Adds the value of this fraction to the passed <tt>long</tt>, returning"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,481,* the result in reduced form.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,482,* </p>
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,484,* @param l
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,485,*            the <tt>long</tt> to add.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,486,* @return a <code>BigFraction</code> instance with the resulting values.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,488,public BigFraction add(final long l) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,489,return add(BigInteger.valueOf(l));
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,495, <p>
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,496," Adds the value of this fraction to the passed <tt>integer</tt>, returning"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,497, the result in reduced form.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,498, </p>
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,500, @param i
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,501,            the <tt>integer</tt> to add.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,502, @return a <code>BigFraction</code> instance with the resulting values.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,504,ublic BigFraction add(final int i) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,505,"eturn add(new BigFraction(i, 1));"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,509, <p>
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,510," Adds the value of this fraction to the passed <tt>long</tt>, returning"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,511, the result in reduced form.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,512, </p>
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,514, @param l
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,515,            the <tt>long</tt> to add.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,516, @return a <code>BigFraction</code> instance with the resulting values.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,518,ublic BigFraction add(final long l) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,519,"eturn add(new BigFraction(l, 1L));"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,606,ublic BigFraction divide(final BigInteger bg) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,607,"eturn divide(new BigFraction(bg, BigInteger.ONE));"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,611, <p>
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,612," Divide the value of this fraction by another, returning the result in"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,613, reduced form.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,614, </p>
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,616, @param fraction
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,617,"            the fraction to divide by, must not be <code>null</code>."
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,618, @return a {@link BigFraction} instance with the resulting values.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,619, @throws NullPointerException
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,620,             if the fraction is <code>null</code>.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,624,ublic BigFraction divide(final BigFraction fraction) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,625,f (BigInteger.ZERO.equals(fraction.numerator)) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,609,public BigFraction divide(final BigInteger bg) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,610,if (BigInteger.ZERO.equals(bg)) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,629,eturn multiply(fraction.reciprocal());
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,613,"return new BigFraction(numerator, denominator.multiply(bg));"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,625,* @throws ArithmeticException
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,626,*             if the fraction to divide by is zero.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,643,"eturn divide(new BigFraction(i, 1));"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,629,return divide(BigInteger.valueOf(i));
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,641,* @throws ArithmeticException
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,642,*             if the fraction to divide by is zero.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,657,"eturn divide(new BigFraction(l, 1L));"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,645,return divide(BigInteger.valueOf(l));
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,649,* <p>
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,650,"* Divide the value of this fraction by another, returning the result in"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,651,* reduced form.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,652,* </p>
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,654,* @param fraction
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,655,"*            the fraction to divide by, must not be <code>null</code>."
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,656,* @return a {@link BigFraction} instance with the resulting values.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,657,* @throws NullPointerException
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,658,*             if the fraction is <code>null</code>.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,659,* @throws ArithmeticException
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,660,*             if the fraction to divide by is zero.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,662,public BigFraction divide(final BigFraction fraction) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,663,if (BigInteger.ZERO.equals(fraction.numerator)) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,664,"throw MathRuntimeException.createArithmeticException(""denominator must be different from 0"");"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,667,return multiply(fraction.reciprocal());
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,842, <p>
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,843," Multiplies the value of this fraction by another, returning the result in"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,844, reduced form.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,845, </p>
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,847, @param fraction
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,848,"            the fraction to multiply by, must not be <code>null</code>."
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,849, @return a {@link BigFraction} instance with the resulting values.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,850, @throws NullPointerException
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,851,             if the fraction is <code>null</code>.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,853,ublic BigFraction multiply(final BigFraction fraction) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,854,igFraction ret = ZERO;
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,856,f (getNumeratorAsInt() != 0 && fraction.getNumeratorAsInt() != 0) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,857,"et = new BigFraction(numerator.multiply(fraction.numerator), denominator.multiply(fraction.denominator));"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,860,eturn ret;
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,874,"eturn multiply(new BigFraction(i, 1));"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,862,return multiply(BigInteger.valueOf(i));
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,888,"eturn multiply(new BigFraction(l, 1L));"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,876,return multiply(BigInteger.valueOf(l));
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,880,* <p>
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,881,"* Multiplies the value of this fraction by another, returning the result in"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,882,* reduced form.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,883,* </p>
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,885,* @param fraction
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,886,"*            the fraction to multiply by, must not be <code>null</code>."
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,887,* @return a {@link BigFraction} instance with the resulting values.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,888,* @throws NullPointerException
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,889,*             if the fraction is <code>null</code>.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,891,public BigFraction multiply(final BigFraction fraction) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,892,BigFraction ret = ZERO;
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,894,if (getNumeratorAsInt() != 0 && fraction.getNumeratorAsInt() != 0) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,895,"ret = new BigFraction(numerator.multiply(fraction.numerator), denominator.multiply(fraction.denominator));"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,898,return ret;
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,917, Returns a <code>BigFraction</code> whose value is
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,927,* Returns a <tt>integer</tt> whose value is
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,922,            exponent to which this <code>BigFraction</code> is to be raised.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,923, @return <tt>this<sup>exponent</sup></tt> as a <code>BigFraction</code>.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,932,*            exponent to which this <code>BigInteger</code> is to be
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,933,*            raised.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,934,* @return <tt>this<sup>exponent</sup></tt>.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,925,ublic BigFraction pow(final BigInteger exponent) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,926,igFraction ret = this;
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,927,f (!BigInteger.ONE.equals(exponent)) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,928,et = ONE;
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,929,f (!BigInteger.ZERO.equals(exponent)) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,930,or (BigInteger bg = BigInteger.ONE; bg.compareTo(exponent) < 0; bg = bg.add(BigInteger.ONE)) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,931,et = ret.multiply(this);
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,936,public BigFraction pow(final int exponent) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,937,if (exponent < 0) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,938,"return new BigFraction(denominator.pow(-exponent), numerator.pow(-exponent));"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,936,eturn ret;
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,940,"return new BigFraction(numerator.pow(exponent), denominator.pow(exponent));"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,947, @return <tt>this<sup>exponent</sup></tt>.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,951,* @return <tt>this<sup>exponent</sup></tt> as a <code>BigFraction</code>.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,949,ublic double pow(final BigFraction exponent) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,950,"eturn Math.pow(numerator.doubleValue(), exponent.doubleValue()) / Math.pow(denominator.doubleValue(), exponent.doubleValue());"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,953,public BigFraction pow(final long exponent) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,954,if (exponent < 0) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,955,"return new BigFraction(MathUtils.pow(denominator, -exponent),"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,956,"MathUtils.pow(numerator,   -exponent));"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,958,"return new BigFraction(MathUtils.pow(numerator,   exponent),"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,959,"MathUtils.pow(denominator, exponent));"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,955, Returns a <tt>integer</tt> whose value is
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,964,* Returns a <code>BigFraction</code> whose value is
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,960,            exponent to which this <code>BigInteger</code> is to be
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,961,            raised.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,962, @return <tt>this<sup>exponent</sup></tt>.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,969,*            exponent to which this <code>BigFraction</code> is to be raised.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,970,* @return <tt>this<sup>exponent</sup></tt> as a <code>BigFraction</code>.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,964,ublic BigFraction pow(final int exponent) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,965,eturn pow(BigInteger.valueOf(exponent));
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,972,public BigFraction pow(final BigInteger exponent) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,973,if (exponent.compareTo(BigInteger.ZERO) < 0) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,974,final BigInteger eNeg = exponent.negate();
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,975,"return new BigFraction(MathUtils.pow(denominator, eNeg),"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,976,"MathUtils.pow(numerator,   eNeg));"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,978,"return new BigFraction(MathUtils.pow(numerator,   exponent),"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,979,"MathUtils.pow(denominator, exponent));"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,970, Returns a <code>BigFraction</code> whose value is
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,984,* Returns a <code>double</code> whose value is
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,976, @return <tt>this<sup>exponent</sup></tt> as a <code>BigFraction</code>.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,990,* @return <tt>this<sup>exponent</sup></tt>.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,978,ublic BigFraction pow(final long exponent) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,979,eturn pow(BigInteger.valueOf(exponent));
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,992,public double pow(final double exponent) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,993,"return Math.pow(numerator.doubleValue(),   exponent) /"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,994,"Math.pow(denominator.doubleValue(), exponent);"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1020,"eturn subtract(new BigFraction(bg, BigInteger.valueOf(1)));"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1035,"return new BigFraction(numerator.subtract(denominator.multiply(bg)), denominator);"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1039,* <p>
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1040,"* Subtracts the value of an <tt>integer</tt> from the value of this one,"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1041,* returning the result in reduced form.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1042,* </p>
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1044,* @param i
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1045,*            the <tt>integer</tt> to subtract.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1046,* @return a <code>BigFraction</code> instance with the resulting values.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1048,public BigFraction subtract(final int i) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1049,return subtract(BigInteger.valueOf(i));
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1053,* <p>
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1054,"* Subtracts the value of an <tt>integer</tt> from the value of this one,"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1055,* returning the result in reduced form.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1056,* </p>
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1058,* @param l
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1059,*            the <tt>long</tt> to subtract.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1060,"* @return a <code>BigFraction</code> instance with the resulting values, or"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1061,*         this object if the <tt>long</tt> is zero.
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1063,public BigFraction subtract(final long l) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1064,return subtract(BigInteger.valueOf(l));
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1055, <p>
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1056," Subtracts the value of an <tt>integer</tt> from the value of this one,"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1057, returning the result in reduced form.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1058, </p>
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1060, @param i
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1061,            the <tt>integer</tt> to subtract.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1062, @return a <code>BigFraction</code> instance with the resulting values.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1064,ublic BigFraction subtract(final int i) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1065,"eturn subtract(new BigFraction(i, 1));"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1069, <p>
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1070," Subtracts the value of an <tt>integer</tt> from the value of this one,"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1071, returning the result in reduced form.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1072, </p>
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1074, @param l
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1075,            the <tt>long</tt> to subtract.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1076," @return a <code>BigFraction</code> instance with the resulting values, or"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1077,         this object if the <tt>long</tt> is zero.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1079,ublic BigFraction subtract(final long l) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1080,"eturn subtract(new BigFraction(l, 1L));"
True,src/test/org/apache/commons/math/fraction/BigFractionTest.java,src/test/org/apache/commons/math/fraction/BigFractionTest.java,541,public void testPow() {
True,src/test/org/apache/commons/math/fraction/BigFractionTest.java,src/test/org/apache/commons/math/fraction/BigFractionTest.java,542,"assertEquals(new BigFraction(8192, 1594323), new BigFraction(2, 3).pow(13));"
True,src/test/org/apache/commons/math/fraction/BigFractionTest.java,src/test/org/apache/commons/math/fraction/BigFractionTest.java,543,"assertEquals(new BigFraction(8192, 1594323), new BigFraction(2, 3).pow(13l));"
True,src/test/org/apache/commons/math/fraction/BigFractionTest.java,src/test/org/apache/commons/math/fraction/BigFractionTest.java,544,"assertEquals(new BigFraction(8192, 1594323), new BigFraction(2, 3).pow(BigInteger.valueOf(13l)));"
True,src/test/org/apache/commons/math/fraction/BigFractionTest.java,src/test/org/apache/commons/math/fraction/BigFractionTest.java,545,"assertEquals(BigFraction.ONE, new BigFraction(2, 3).pow(0));"
True,src/test/org/apache/commons/math/fraction/BigFractionTest.java,src/test/org/apache/commons/math/fraction/BigFractionTest.java,546,"assertEquals(BigFraction.ONE, new BigFraction(2, 3).pow(0l));"
True,src/test/org/apache/commons/math/fraction/BigFractionTest.java,src/test/org/apache/commons/math/fraction/BigFractionTest.java,547,"assertEquals(BigFraction.ONE, new BigFraction(2, 3).pow(BigInteger.valueOf(0l)));"
True,src/test/org/apache/commons/math/fraction/BigFractionTest.java,src/test/org/apache/commons/math/fraction/BigFractionTest.java,548,"assertEquals(new BigFraction(1594323, 8192), new BigFraction(2, 3).pow(-13));"
True,src/test/org/apache/commons/math/fraction/BigFractionTest.java,src/test/org/apache/commons/math/fraction/BigFractionTest.java,549,"assertEquals(new BigFraction(1594323, 8192), new BigFraction(2, 3).pow(-13l));"
True,src/test/org/apache/commons/math/fraction/BigFractionTest.java,src/test/org/apache/commons/math/fraction/BigFractionTest.java,550,"assertEquals(new BigFraction(1594323, 8192), new BigFraction(2, 3).pow(BigInteger.valueOf(-13l)));"
