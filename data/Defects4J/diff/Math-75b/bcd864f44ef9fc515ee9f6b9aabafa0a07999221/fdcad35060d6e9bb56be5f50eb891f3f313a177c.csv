is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,31,"ublic class BigFraction extends Number implements Comparable<BigFraction>, Cloneable {"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,31,public class BigFraction extends Number implements Comparable<BigFraction> {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,577, <p>
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,578, Clones this object. The result {@link BigFraction} isn't reduced and is
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,579, exactly the same as the original.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,580, </p>
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,582, @return an exact copy of this {@link BigFraction}.
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,583, @see java.lang.Object#clone()
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,585,Override
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,586,ublic BigFraction clone() {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,587,/ don't need to clone numerator and denominator because the object is
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,588,/ immutable
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,589,igFraction clone = null;
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,591,ry {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,592,lone = (BigFraction) super.clone();
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,593, catch (CloneNotSupportedException e) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,594,.printStackTrace();
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,597,eturn clone;
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1061,igFraction ret = null;
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1064,et = clone();
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1065, else {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1066,igInteger num = null;
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1067,igInteger den = null;
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1038,return this;
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1069,f (denominator.equals(fraction.denominator)) {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1070,um = numerator.subtract(fraction.numerator);
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1071,en = denominator;
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1072, else {
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1073,um = (numerator.multiply(fraction.denominator)).subtract((fraction.numerator).multiply(denominator));
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1074,en = denominator.multiply(fraction.denominator);
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1076,"et = new BigFraction(num, den);"
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1041,BigInteger num = null;
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1042,BigInteger den = null;
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1043,if (denominator.equals(fraction.denominator)) {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1044,num = numerator.subtract(fraction.numerator);
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1045,den = denominator;
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1046,} else {
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1047,num = (numerator.multiply(fraction.denominator)).subtract((fraction.numerator).multiply(denominator));
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1048,den = denominator.multiply(fraction.denominator);
True,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1050,"return new BigFraction(num, den);"
False,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,1079,eturn ret;
